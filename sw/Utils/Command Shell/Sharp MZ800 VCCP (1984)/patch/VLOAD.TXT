	MACRO-80 3.44	09-Dec-81	PAGE	1


                                	.z80
                                	.list
  0000'                         	aseg
                                	org	100h
                                
  B000                          VCPMLOC	EQU	0B000h	; location of patch routines to use regular cp/m bdos
  2400                          vPROGLEN	EQU	2400h	; length of VCCP program 
                                
  0100    21 010F               start:  ld	hl,mstart+1	; copy prog to 4000
  0103    11 B000               	ld	de,VCPMLOC
  0106    01 013D               	ld	bc,mend-main
  0109    ED B0                 	ldir
  010B    C3 B000               	jp	main
                                	
  010E    00                    mstart: nop
                                	
                                	.phase	VCPMLOC
                                
                                ; these are the patches for VCCP.COM from Personal CP/M system disk for Sharp MZ-800.
                                ; MZ-800 has no character mode, only hi res scren 640x200 at $8000
                                ; in/out pagen in/out VRAM in main memory. 
                                
                                ; The patches allows to send the windows frames as ascii chars + - | \ instead of
                                ; drawind them as bitmap. Also the windows are cleared overwritting spaces al required
                                ; positions instead of zeroing the vram bitmap.
                                ; Help screen windows 'saves' the bitmap olverlaped by window, and then restores it.
                                ; on a regular text terminal this is not possible. So help screens returns to main 
                                ; menu once closed (instead of resuming menu command execution)
                                
                                ; the only dependance on Persona-CP/M is the use of BDOS function 113 to turno on/off
                                ; the cursor. 
                                
  B000    21 0400               main:	ld	hl,VPROG+1
  B003    11 0100               	ld	de,0100h	; where the VCCP prog is to be loaded
  B006    01 2400               	ld 	bc,VPROGLEN	; length of VCCP program
  B009    ED B0                 	ldir                    ; put VCCP prog at its original location
  B00B    CD B011               	call	patch		; patch original VCCP prog to call new routines 
  B00E    C3 0100               	jp	0100h		; start of VCCP prog
                                	
  B011                          patch:
  B011    21 B120               	ld	hl,rebuild	; after "<< press a key to continue >>" message
  B014    22 1AA1               	ld	(1aa0h+1),hl	; go to rebuild screen
                                	
  B017    21 B0C9               	ld 	hl,prtvl	; patch 
  B01A    22 0F4F               	ld	(0f4eh+1),hl	; print '|'
                                
  B01D    21 B0C0               	ld 	hl,prtpl	; patch 
  B020    22 0F2A               	ld	(0f29h+1),hl	; print '+'
                                
  B023    21 B0D2               	ld 	hl,prthl	; patch 
  B026    22 0F35               	ld	(0f34h+1),hl	; print '-'
                                
  B029    21 B0DD               	ld 	hl,prtvl2	; patch 
  B02C    22 0F3E               	ld	(0f3dh+1),hl	; print '\'
                                
  B02F    3E C3                 	ld	a,0c3h		; JP opcode
	MACRO-80 3.44	09-Dec-81	PAGE	1-1


  B031    32 0E0B               	ld	(0e0bh),a	; patch 
  B034    21 B06B               	ld 	hl,clrrect	; clear rectangle
  B037    22 0E0C               	ld	(0e0bh+1),hl
                                	
  B03A    3E C9                 	ld	a,0c9h		; RET opcode
  B03C    32 0E2E               	ld	(0e2eh),a	; patch copy VRAM to RAM
  B03F    32 0E26               	ld	(0e26h),a	; patch copy RAM to VRAM
                                	
  B042    21 0000               	ld	hl, 0000	; NOP NOP opcode
  B045    22 0F8D               	ld	(0f8dh),hl	; patch out ($cd),a
  B048    22 0F92               	ld	(0f92h),hl	; patch out ($cc),a
                                
  B04B    C9                    	ret
                                
                                
  B04C                          vramtorc:			; convert vram address
                                				; HL=$8000 + 80*8*col0 + row0
                                				; to col0 row0
                                				; uses regs DE, BC, A
                                
  B04C    AF                    	xor 	a		; clear carry
  B04D    11 8000               	ld 	de,8000h	; remove bit 15 from hl
  B050    ED 52                 	sbc	hl,de	
  B052    11 0280               	ld 	de,640		; 80*8	
  B055    06 00                 	ld	b,0
  B057    AF                    clr1:	xor	a		; decrement 80*8 until negative
  B058    ED 52                 	sbc	hl,de		; count how many times in b
  B05A    DA B061               	jp 	c,clr2		; b is the row number
  B05D    04                    	inc	b
  B05E    C3 B057               	jp	clr1
  B061    19                    clr2:	add	hl,de		; restore hl to last non-negative value
  B062    78                    	ld	a,b
  B063    32 B11D               	ld 	(row0),a
  B066    7D                    	ld	a,l
  B067    32 B11C               	ld	(col0),a 	; save params
  B06A    C9                    	ret
                                
                                
  B06B                          clrrect:			; clear a rectangle in text screen
                                				; starting at col0,row0, for wi columns, he rows
                                				; entry: HL=$8000 + 80*8*col0 + row0
                                				;        BC=wi*256 + he*8
                                	; get parameters
  B06B    78                    	ld 	a,b
  B06C    32 B11E               	ld 	(wi),a		; save wi columns to clear
  B06F    79                    	ld 	a,c
  B070    CB 3F                 	srl 	a		; shift right 3 times -> div by 8
  B072    CB 3F                 	srl 	a
  B074    CB 3F                 	srl 	a
  B076    32 B11F               	ld 	(he),a		; save he lines to clear
  B079    CD B04C               	call	vramtorc
                                	; save cursor pos
  B07C    21 B114               	ld	hl,cur_save	
  B07F    CD 0D2C               	call	0d2ch		; print on console zero-terminated string at [HL]
                                	; locate cursor at col0,row2
  B082    3A B11C               	ld	a,(col0)	; put col0 in cursor location esc sequence
	MACRO-80 3.44	09-Dec-81	PAGE	1-2


  B085    C6 20                 	add	a,32
  B087    32 B10E               	ld	(cur_loc+3),a	
  B08A    3A B11D               clr3:	ld	a,(row0)	; put row0 in cursor location esc sequence
  B08D    C6 20                 	add	a,32
  B08F    32 B10D               	ld	(cur_loc+2),a	
  B092    21 B10B               	ld	hl,cur_loc	; ESC = y+32 x+32 to set the cursor location
  B095    CD 0D2C               	call	0d2ch		; print on console zero-terminated string at [HL]
                                	; clear one row for wi columns
  B098    3A B11F               	ld	a,(he)	
  B09B    4F                    	ld	c,a		; c=number of rows to clear
  B09C    3A B11E                	ld	a,(wi)
  B09F    47                    	ld	b,a		; b=number of columns to clear
  B0A0    C5                    clr4:	push 	bc
  B0A1    21 B110               	ld	hl, space
  B0A4    CD 0D2C               	call	0d2ch		; print on console zero-terminated string at [HL]
  B0A7    C1                    	pop	bc
  B0A8    10 F6                 	djnz	clr4
                                	; advance to next row
  B0AA    3A B11D               	ld 	a,(row0)
  B0AD    3C                    	inc	a
  B0AE    32 B11D               	ld 	(row0),a
  B0B1    0D                    	dec	c
  B0B2    79                    	ld	a,c
  B0B3    32 B11F               	ld 	(he),a
  B0B6    C2 B08A               	jp	nz,clr3
                                	; restore cursor pos
  B0B9    21 B118               	ld	hl,cur_restore
  B0BC    CD 0D2C               	call	0d2ch		; print on console zero-terminated string at [HL]
  B0BF    C9                    	ret
                                
                                				; print at DE=vram position the char '+'
  B0C0    CD 0DCF               prtpl:	call    0dcfh		; save registers
  B0C3    EB                    	ex	de,hl		; convert position in vram bitmap (from DE)
  B0C4    3E 2B                 	ld	a,'+'
  B0C6    C3 B0E8               	jp	prtchr
                                
  B0C9    CD 0DCF               prtvl:	call    0dcfh		; save registers
  B0CC    EB                    	ex	de,hl		; convert position in vram bitmap (from DE)
  B0CD    3E 7C                 	ld	a,'|'
  B0CF    C3 B0E8               	jp	prtchr
                                
                                				; print at DE=vram position the char '-'
  B0D2    CD 0DCF               prthl:	call    0dcfh		; save registers
  B0D5    3E 2D                 	ld	a,'-'
  B0D7    32 B112               	ld	(prtchar),a	; save char to print
  B0DA    C3 B104               	jp	prt2
                                
  B0DD    CD 0DCF               prtvl2:	call    0dcfh		; save registers
  B0E0    3E 5C                 	ld	a,'\'
  B0E2    32 B112               	ld	(prtchar),a	; save char to print
  B0E5    C3 B104               	jp	prt2
                                
  B0E8    32 B112               prtchr:	ld	(prtchar),a	; save char to print
  B0EB    CD B04C               	call	vramtorc	; to row0 col0
  B0EE    3A B11C               	ld	a,(col0)	; put col0 in cursor location esc sequence
  B0F1    C6 20                 	add	a,32
	MACRO-80 3.44	09-Dec-81	PAGE	1-3


  B0F3    32 B10E               	ld	(cur_loc+3),a	
  B0F6    3A B11D               	ld	a,(row0)	; put row0 in cursor location esc sequence
  B0F9    C6 20                 	add	a,32
  B0FB    32 B10D               	ld	(cur_loc+2),a	
  B0FE    21 B10B               prtcxy:	ld	hl,cur_loc	; ESC = y+32 x+32 to set the cursor location
  B101    CD 0D2C               	call	0d2ch		; print on console zero-terminated string at [HL]
  B104    21 B112               prt2:	ld	hl,prtchar
  B107    CD 0D2C               	call	0d2ch		; print on console zero-terminated string at [HL]
  B10A    C9                    	ret	
                                	
  B10B    1B 3D 20 20           cur_loc:	DB 27,'=',32,32,0
  B10F    00                    
  B110    20 00                 space:		DB 32,0
  B112    00 00                 prtchar:        DB 0,0
  B114    1B 5B 73 00           cur_save:	DB 27,'[','s',0 
  B118    1B 5B 75 00           cur_restore:	DB 27,'[','u',0 
  B11C    00                    col0:		DB 0
  B11D    00                    row0:		DB 0
  B11E    00                    wi:		DB 0
  B11F    00                    he:		DB 0		
                                
                                		
  B120                          rebuild:			; rebuild main screen		
  B120    3E 20                 	ld	a,' ';
  B122    32 B112               	ld	(prtchar),a	; save char to print
  B125    3E 64                 	ld	a,32+68		; cursor at colum 68
  B127    32 B10E               	ld 	(cur_loc+3),a	
  B12A    3E 20                 	ld	a,32+0		; cursor at row 0
  B12C    32 B10D               	ld 	(cur_loc+2),a	
  B12F    CD B0FE               	call	prtcxy		; prt char at given pos 
  B132    3E 2F                 	ld	a,32+15		; cursor at row 15
  B134    32 B10D               	ld 	(cur_loc+2),a	
  B137    CD B0FE               	call	prtcxy		; prt char at given pos 
  B13A    C3 1095               	jp	1095h		; rebuild screen
                                
  B13D    00                    mend:	nop
                                	.dephase
  024D    00                    	nop 		; the addr of this instr should be < than the ORG just below
                                	ORG	03FFh	; the origial VCCP prog .com goes to addr 0400h
  03FF    00                    VPROG:		nop
                                   
                                   END 
	MACRO-80 3.44	09-Dec-81	PAGE	S


Macros:

Symbols:
B057 	CLR1            B061 	CLR2            B08A 	CLR3            
B0A0 	CLR4            B06B 	CLRRECT         B11C 	COL0            
B10B 	CUR_LOC         B118 	CUR_RESTORE     B114 	CUR_SAVE        
B11F 	HE              B000 	MAIN            B13D 	MEND            
010E 	MSTART          B011 	PATCH           B104 	PRT2            
B112 	PRTCHAR         B0E8 	PRTCHR          B0FE 	PRTCXY          
B0D2 	PRTHL           B0C0 	PRTPL           B0C9 	PRTVL           
B0DD 	PRTVL2          B120 	REBUILD         B11D 	ROW0            
B110 	SPACE           0100 	START           B000 	VCPMLOC         
03FF 	VPROG           2400 	VPROGLEN        B04C 	VRAMTORC        
B11E 	WI              



No Fatal error(s)


    B000 	MAIN            B13D 	MEND            
010E 	MSTART          B011 	PATCH           B104 	PRT2         