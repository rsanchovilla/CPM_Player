-- TUTOR2.CLI tutorial on making your own commands
-- called by MENU.CLI
WRITE TUTORIAL 2 - Making your own commands with CLIP
WRITE
WRITE CLIP replaces the submit feature of CP/M with a
WRITE much more powerful structure called MACROS.
WRITE
WRITE To begin let's design a command called DUP to duplicate
WRITE files.  This command will prompt the user for the names of the
WRITE files to be duplicated.
WRITE
WRITE In file DUP.CLI we place the following set of CLIP commands:
WRITE
TYPE DUP.CLI
WRITE
WRITE This set of commands will be invoked whenever the user types
WRITE DUP to CLIP.
WRITE
READ/1/P [Type return to continue]
WRITE
WRITE Here is how the new command DUP looks to the user.  Try it by
WRITE duplicating DUP.CLI to the file named XYZ.CLI.  
WRITE
DUP
WRITE
WRITE Now we will use the DUP command again.  This time, however, we
WRITE will turn tracing on so that you may see the internal commands
WRITE being processed by CLIP.
WRITE
TRACE/I/E
DUP
TRACE
WRITE
READ/1/P [Type return to continue]
WRITE
WRITE Now let's make our simple example a little more complicated by
WRITE adding some smarts to the command file.  We will change DUP so
WRITE that we may provide the file names on the command line or have
WRITE DUP prompt us if we forget.
WRITE
WRITE The file NEWDUP.CLI contains the following commands:
WRITE
TYPE NEWDUP.CLI
WRITE
READ/1/P [Type return to continue]
WRITE
WRITE If we type in the filenames ourselves then we will not get prompted.
WRITE Tracing will be turned on again for only lines that are executed.
WRITE
TRACE/E
NEWDUP XYZ.CLÉ DUP.CLI
TRACE
WRITE
READ/1/P [Type return to continue]
WRITE
WRITE This tutorial has shown you some of the most basic points of MACROS.
WRITE Please refer to the manual for the more advanced features.
WRITE
 return to continue]
WRITE
WRITE If we type in the filenames ourselves then we will not get prompted.
WRITE Tracing will be t