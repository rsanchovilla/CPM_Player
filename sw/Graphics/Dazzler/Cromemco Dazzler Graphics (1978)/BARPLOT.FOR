	PROGRAM BARPLT
C
C    THIS PROGRAM WILL DEMONSTRATE THE GRAPHICS-FORTRAN INTERFACE
C    OF THE DGR PACKAGE.  ALL SUBROUTINES ARE CALLED ILLUSTRATING
C    THE WAY IN WHICH PARAMETERS ARE PASSED FROM FORTRAN TO THE
C    MACHINE LANGUAGE ROUTINES.
C
C    COPYRIGHT (C) 1978, CROMEMCO, INC.
C
C    NOTE THE BYTE VARIABLES BELOW.  SEVERAL OF
C    THE GRAPHICS SUBROUTINES REQUIRE SINGLE-BYTE
C    PARAMETERS.  IF THE PARAMETER PASSED IS NOT
C    SINGLE-BYTE, ONLY THE LEAST SIGNIFICANT BYTE
C    WILL BE USED
C
	BYTE XLABEL(15), YLABEL(15)
	BYTE CONTRL, TENTHS, INDAT
	INTEGER ANSWER
	INTEGER X, Y, XPLOT, YPLOT, XLEFT, XRIGHT
C
C    THIS FLAG ALLOWS LOOPING TO REPLOT LABELS AND
C    PORTIONS OF THE AXES.  IT IS UPDATED AS EACH
C    SEGMENT IS COMPLETED.  EACH SEGMENT IS TERMINATED
C    BY AN AFFIRMATIVE ANSWER TO THE 'FINISHED?' MESSAGE
  90	N=0
C
C    START OF LOOP.  NOTE THAT INITG$ MAY BE CALLED
C    EACH TIME THROUGH THE LOOP.  THE PARAMETER VALUE
C    OF 0 WILL CAUSE THE PICTURE BUFFERS TO BE PLACED
C    NEAR THE TOP OF THE CDOS USER AREA
 100	CALL INITG$(0)
C
C    CLEAR PICTURE BUFFER #1
	CALL PAGE$
C
C    THE NEXT THREE INSTRUCTIONS WILL PLOT THE X-Y AXES
	CALL LINE$(0,255)
	CALL CURSR$(0,0)
	CALL LINE$(255,0)
	IF(N.NE.0) GOTO 130
	WRITE(3,110)
 110	FORMAT(' INPUT AN X-AXIS LABEL ( <15 CHAR.): ')
	READ(3,120) XLABEL
 120	FORMAT(15A1)
C
C    POSITION THE CURSOR AND PLOT THE STRING JUST ENTERED
 130	CALL CURSR$(90,15)
C
C    STRIN$ IS CALLED WITH TWO PARAMETERS WHICH MUST BE IN
C    THE ORDER SHOWN.  THE FIRST IS THE LENGTH OF THE
C    STRING IN BYTES; IT MAY BE LESS THAN THE VALUE FOR
C    WHICH THE STRING IS DIMENSIONED BUT MAY NOT BE GREATER
C    THAN THE LENGTH OF THE STRING.  THE SECOND PARAMETER
C    IS THE NAME OF THE VARIABLE CONTAINING THE STRING
	CALL STRIN$(15,XLABEL)
	IF(N.NE.0) GOTO 150
	WRITE(3,140)
 140	FORMAT('+INPUT A Y-AXIS LABEL ( <15 CHAR.): ')
	READ(3,120) YLABEL
C
C    POSITION THE CURSOR AND PLOT THE Y-AXIS LABEL
 150	CALL CURSR$(15,240)
	CALL STRIN$(15,YLABEL)
	IF(N.NE.0) GOTO 160
	CALL FINISH(ANSWER)
	IF (ANSWER) GOTO 100
	N=1
 160	IF(N.NE.1) GOTO 230
 170	WRITE(3,180)
 180	FORMAT(' INPUT X-MIN (ABS(X)<10000.0000): ')
	READ(3,190) XMIN
 190	FORMAT(F9.4)
	WRITE(3,200)
 200	FORMAT('+INPUT X-MAX (XMIN<XMAX<10000.0000): ')
	READ(3,190) XMAX
	IF(XMAX.EQ.XMIN) GOTO 170
C
C    CALCULATE THE X-AXIS SCALING FACTOR
	XSCALE=256/(XMAX-XMIN)
	WRITE(3,210)
 210	FORMAT('+NUMBER OF X-UNITS PER DIVISION? ')
	READ(3,190) XUNIT
	IF(XUNIT.NE.0) GOTO 220
	XUNIT=1
C
C    CALCULATE THE SPACING OF X-AXIS TIC-MARKS
 220	XTIC=XUNIT*XSCALE
C
C    THE FOLLOWING DO-LOOP WILL CALCULATE AND PLOT
C    THE X-AXIS TIC-MARKS AT THE SPACING JUST COMPUTED
	NUMBX=INT(((XMAX-XMIN)/XUNIT)+0.5)
 230	X=0
	DO 240 I=1,NUMBX
	X=X+XTIC
	Y=2
C
C    POSITION THE CURSOR AND PLOT A DOT
	CALL CURSR$(X,Y)
 240	CALL DOT$
	IF(N.NE.1) GOTO 250
	CALL FINISH(ANSWER)
	IF (ANSWER) GOTO 100
	N=2
 250	IF(N.NE.2) GOTO 310
 260	WRITE(3,270)
 270	FORMAT(' INPUT Y-MIN (ABS(Y)<10000.0000): ')
	READ(3,190) YMIN
	WRITE(3,280)
 280	FORMAT('+INPUT Y-MAX (YMIN<YMAX<10000.0000): ')
	READ(3,190) YMAX
	IF(YMAX.EQ.YMIN) GOTO 260
C
C    CALCULATE THE Y-AXIS SCALING FACTOR
	YSCALE=256/(YMAX-YMIN)
	WRITE(3,290)
 290	FORMAT('+NUMBER OF Y-UNITS PER DIVISION? ')
	READ(3,190) YUNIT
	IF(YUNIT.NE.0) GOTO 300
	YUNIT=1
C
C    CALCULATE THE SPACING OF Y-AXIS TIC-MARKS
 300	YTIC=YUNIT*YSCALE
C
C    THE FOLLOWING DO-LOOP WILL CALCULATE AND PLOT
C    THE Y-AXIS TIC-MARKS AT THE SPACING JUST COMPUTED
	NUMBY=INT(((YMAX-YMIN)/YUNIT)+0.5)
 310	Y=0
	DO 320 I=1,NUMBY
	Y=Y+YTIC
	X=2
C
C    POSITION THE CURSOR AND PLOT A DOT
	CALL CURSR$(X,Y)
 320	CALL DOT$
	IF(N.NE.2) GOTO 330
	CALL FINISH(ANSWER)
	IF (ANSWER) GOTO 100
	N=3
C
C    PAUSE$ REQUIRES A SINGLE PARAMETER OF THE
C    NUMBER OF TENTHS OF A SECOND DELAY DESIRED
	TENTHS=10
	CALL PAUSE$(TENTHS)
C
C    CONTRL IS USED TO PASS SCREEN AND COLOR
C    CONTROL CHARACTERS TO CHAR$
330	CONTRL=6
C
C    SELECT PICTURE BUFFER #2
	CALL CHAR$(CONTRL)
C
C    CLEAR THIS SECOND BUFFER
	CALL PAGE$
	CONTRL=3
C
C    SELECT 64 X 64 RESOLUTION IN COLOR MODE
	CALL CHAR$(CONTRL)
 340	WRITE(3,350)
 350	FORMAT(//' COLORS TO CHOOSE FROM: R Y G B M C W')
	WRITE(3,370)
	WRITE(3,371)
 370	FORMAT(' INPUT COLOR (C) AND X-Y COORDINATE')
 371	FORMAT(' PAIRS (X,Y) [ CR TO TERMINATE ]: '/)
 390	WRITE(3,400)
 400	FORMAT('+C : ')
C
C    READ A VALUE FOR COLOR FROM THE CONSOLE
	READ(3,410) ICOLOR
 410	FORMAT(A1)
	WRITE(3,411)
 411	FORMAT('+X,Y: ')
C
C    READ AN (X,Y) COORDINATE PAIR FROM THE CONSOLE
	READ(3,420) XVAL, YVAL
 420	FORMAT(2F9.4)
C
C    IF CARRIAGE RETURN OR (0,0) IS ENTERED, GO ON TO DISPLAY PORTION
	IF(XVAL.EQ.0.AND.YVAL.EQ.0) GOTO 430
C
C    IF COLOR IS OMITTED OR INCORRECT, RED IS CHOSEN AUTOMATICALLY
	CONTRL=17
	IF(ICOLOR.EQ.'G' .OR. ICOLOR.EQ.'g') CONTRL=18
	IF(ICOLOR.EQ.'Y' .OR. ICOLOR.EQ.'y') CONTRL=19
	IF(ICOLOR.EQ.'B' .OR. ICOLOR.EQ.'b') CONTRL=20
	IF(ICOLOR.EQ.'M' .OR. ICOLOR.EQ.'m') CONTRL=21
	IF(ICOLOR.EQ.'C' .OR. ICOLOR.EQ.'c') CONTRL=22
	IF(ICOLOR.EQ.'W' .OR. ICOLOR.EQ.'w') CONTRL=23
C
C    SET THE SCREEN TO THE SELECTED COLOR AS DETERMINED ABOVE
	CALL CHAR$(CONTRL)
C
C    SCALE THE X-Y VALUES TO FALL WITHIN THE GRAPHICS RANGE OF 0-255
	XPLOT=XSCALE*(XVAL-XMIN)
	YPLOT=YSCALE*(YVAL-YMIN)
C
C    DON'T ALLOW THE PLOTTING TO EXCEED THE RANGE OF THE SCREEN
	XLEFT=MAX0(XPLOT-4,0)
	XRIGHT=MIN0(XPLOT+4,255)
	YPLOT=MIN0(YPLOT,255)
C
C    POSITION THE CURSOR AT THE LOWER LEFT-HAND CORNER OF THE "BAR"
	CALL CURSR$(XLEFT,0)
C
C    PLOT THE AREA DEFINED BY THE PREVIOUS CURSOR AND
C    THE UPPER RIGHT-HAND CORNER OF THE DESIRED "BAR"
	CALL AREA$(XRIGHT,YPLOT)
C
C    LOOP FOR THE NEXT SET OF COORDINATES
	GOTO 390
 430	WRITE(3,440)
 440	FORMAT(' PRESS ANY KEY TO ABORT: ')
	INDAT=0
C
C    DISPLAY PICTURE BUFFER #1 IN 128 X 128 BLACK/WHITE MODE
 450	CALL ANIMT$
	CONTRL=3
	CALL CHAR$(CONTRL)
C
C    DISPLAY PICTURE BUFFER #2 IN 64 X 64 COLOR MODE
	CALL ANIMT$
	CONTRL=0
	CALL CHAR$(CONTRL)
C
C    CHECK FOR ANY CHARACTER FROM THE CONSOLE EXCEPT CR AND LF
	INDAT=INP(1).AND.127
	IF (INDAT.EQ.0.OR.INDAT.EQ.13.OR.INDAT.EQ.10) GOTO 450
	WRITE(3,460)
 460	FORMAT('0YOU MAY PLOT ANOTHER BARGRAPH IF YOU WISH'/)
	CALL FINISH (ANSWER)
	IF (ANSWER.EQ.1) GOTO 90
	CONTRL=7
C
C    DAZZLER MUST BE TURNED OFF BEFORE ACCESSING THE DISK
	CALL CHAR$(CONTRL)
	END
C
C    SUBROUTINE TO ASK USER WHETHER THE CURRENT
C    STAGE OF INPUT HAS BEEN FINISHED
	SUBROUTINE FINISH(ANSWER)
	INTEGER ANSWER
	WRITE(3,1000)
 1000	FORMAT('+FINISHED (Y/N)? ')
	READ(3,1010) I
 1010	FORMAT(A1)
C
C    ANSWER=0 IF THE RESPONSE IS YES AND 1 IF THE RESPONSE IS NO
	ANSWER=0
	IF (I.EQ.'N' .OR. I.EQ.'n') ANSWER=1
	RETURN
	END
