	TITLE	DEMONSTRATION FOR DAZZLER GRAPHICS - Z80 INTERFACE
	NAME	GDEMO
;
;	DEFINITION OF GRAPHICS PACKAGE ENTRY POINTS
;
	EXTRN	INITG,PAGE,CURSOR,DOT,LINE,CHAR,ANIMAT
	EXTRN	CYCLE,PAUSE,AREA,STRING
;
;	DEFINITION OF STANDARD COLORS, RESOLUTIONS, AND TIMES FOR PAUSE
;
BLACK:	EQU	10H
RED:	EQU	11H
GREEN:	EQU	12H
YELLOW:	EQU	13H
BLUE:	EQU	14H
MAGENTA:EQU	15H
CYAN:	EQU	16H
WHITE:	EQU	17H
;
MAXR:	EQU	0		;MAXIMUM RESOLUTION
MAXC:	EQU	1		;MAXIMUM COLOR CHOICE
R128:	EQU	2		;128 x 128 RESOLUTION
R64:	EQU	3		;64 x 64 COLOR RESOLUTION
R64BW:	EQU	4		;64 x 64 B/W RESOLUTION
;
;	(THE FOLLOWING ASSUME THE 4MHZ. CPU CLOCK)
;
SEC.:	EQU	10		;10 * 0.1SEC. = 1SEC.
QUARTR:	EQU	SEC./4		;QUARTER-SECOND PAUSE
HALF:	EQU	SEC./2		;HALF-SECOND PAUSE
ONE:	EQU	1*SEC.		;ONE SECOND PAUSE
TWO:	EQU	2*SEC.		;TWO SECONDS PAUSE
FIVE:	EQU	5*SEC.		;FIVE SECONDS PAUSE
TEN:	EQU	10*SEC.		;TEN SECONDS PAUSE
;
;	SOME OTHER REQUIRED VALUES
;
CR:	EQU	0DH		;CARRIAGE RETURN
LF:	EQU	0AH		;LINE FEED
CTRLC:	EQU	3H		;CONTROL-C KEY CODE
CTRLS:	EQU	13H		;CONTROL-S KEY CODE
CDOS:	EQU	5		;SYSTEM CALL LOCATION
WBOOT:	EQU	0		;WARM BOOT LOCATION
RDA:	EQU	40H		;RECEIVER-DATA-AVAILABLE
CSTAT:	EQU	0		;CONSOLE STATUS PORT
CDATA:	EQU	1		;CONSOLE DATA PORT
PNTBUF:	EQU	9		;PRINT BUFFERED LINE
TOGDAZ:	EQU	7		;TOGGLE DAZZLER OFF/ON
;
;	THE PROGRAM BEGINS HERE
;
GDEMO:	LD	SP,STACK	;SET STACK POINTER
	LD	C,PNTBUF	;PRINT-BUFFERED-LINE
	LD	DE,MESSG1	;POINT TO SING-ON MESSAGE
	CALL	CDOS		;DO SYSTEM CALL
BEGIN:	LD	SP,STACK	;DO IT AGAIN FOR SAFETY
	LD	HL,0		;TELLS INITG TO LOCATE PICTURE
				;  BUFFER AT TOP OF CDOS USER AREA
	CALL	INITG		;INITIALIZE THE GRAPHICS PACKAGE
	LD	(MAXCD),HL	;STORE DISPLAY PARAMS. FOR FUTURE USE
	CALL	PAGE		;CLEAR PICTURE BUFFER #1
;
;DEMO #1:  HIGH RESOLUTION LINE DEMO
;
DEM1:	LD	A,R64		;SET SCREEN FOR
	CALL	CHAR		;  64 x 64 MODE
	LD	HL,2C94H	;POSITION CURSOR PRIOR
	CALL	CURSOR		;  TO WRITING LOGO
	LD	HL,STRIN0	;WRITE "CROMEMCO"
	CALL	STRING
	LD	HL,3C74H	;POINT TO START
	CALL	CURSOR		;  OF NEXT WORD
	LD	HL,STRIN1	;WRITE THE WORD
	CALL	STRING		;  "DAZZLER"
	LD	HL,3454H	;POINT TO START
	CALL	CURSOR		;  OF LAST WORD
	LD	HL,STRIN2	;"GRAPHICS" - THEN MAXR MODE
	CALL	STRING
	CALL	CONINP		;CHECK FOR CONTROL-CHARACTERS
	LD	A,ONE		;LET PEOPLE READ IT
	CALL	PAUSE		;  FOR 1 SECOND
	LD	BC,00FFH	;EXTREMES OF DISPLAY
	LD	D,B		;D = CURRENT STEP
DEM11:	CALL	CONINP		;CHECK FOR CONTROL-CHARACTERS
	LD	A,C		;GET C INTO ACCUMULATOR
	SUB	D		;SUBTRACT D FROM A
	LD	E,A		;E = MAXIMUM-CURRENT STEP
	LD	H,D		;STARTING POINT
	LD	L,B		;  IS (D,0)
	CALL	CURSOR		;MOVE CURSOR THERE
	LD	H,C		;GET X
	LD	L,D		;GET Y
	CALL	LINE		;DRAW LINE TO (255,D)
	LD	H,E		;GET X
	LD	L,C		;GET Y
	CALL	LINE		;DRAW LINE TO (255-D,255)
	LD	H,B		;GET X
	LD	L,E		;GET Y
	CALL	LINE		;DRAW LINE TO (0,255-D)
	LD	H,D		;AND FINALLY,
	LD	L,B		;  DRAW LINE
	CALL	LINE		;  BACK TO (D,0)
	LD	A,(MAXRD)	;DETERMINE NEXT D
	AND	07H		;WIDTH OF A POINT
	JR	NZ,DEM12	;MAKE SURE AT LEAST ONE
	INC	A
DEM12:	RLA			;MOVE 8 DISPLAY POINTS
	RLA			;\	
	RLA			; \	
	ADD	D		;  D = D+(RES*8)
	LD	D,A		; /
	JR	NC,DEM11	;IF D.LE.255, MORE TO GO
	LD	A,ONE		;PAUSE FOR 1 SECOND
	CALL	PAUSE		;  BEFORE CYCLING
	LD	A,R128		;128 x 128 COLOR MODE
	CALL	CHAR
	CALL	CYCLE		;SHOW OFF IN ALL COLORS
	CALL	CONINP		;CHECK FOR CONTROL-CHARACTERS
	LD	A,ONE		;LET PEOPLE WATCH
	CALL	PAUSE		;  FOR 1 MORE SECOND
DEM13:	LD	A,BLACK		;PREPARE TO DO BLANKING
	CALL	CHAR		;SET FOR NO COLOR
	LD	A,(MAXRD)	;DETERMINE WIDTH
	AND	07H		;  OF A POINT OR A LINE
	JR	NZ,DEM14	;MAKE SURE IT'S
	INC	A		;  AT LEAST ONE
DEM14:	LD	E,A		;SAVE VALUE IN E-REG.
	LD	L,C		;C = MAXIMUM DISPLAY VALUE
	LD	H,B		;B = MINIMUM DISPLAY VALUE
	CALL	CURSOR		;PUT CURSOR THERE
DEM15:	CALL	CONINP		;CHECK FOR CONTROL-CHARACTERS
	LD	L,C		;GET Y = MAX
	LD	H,C		;GET X = MAX
	CALL	LINE		;DRAW LINE TO UP.-RT. CORNER
	LD	L,B		;GET Y = MIN
	LD	H,C		;GET X = MAX
	CALL	LINE		;DRAW LINE TO LOW-RT. CORNER
	LD	L,B		;GET Y = MIN
	LD	H,B		;GET X = MIN
	CALL	LINE		;DRAW LINE TO LOW-LEFT CORNER
	LD	A,C		;\
	SUB	E		; C (OR MAX) = CURRENT(C)-DECREMENT(E)
	LD	C,A		;/
	LD	L,C		;GET NEW Y = NEW MAX
	LD	H,B		;GET X = MIN
	CALL	LINE		;DRAW LINE TO UP.-LEFT CORNER
	LD	A,B		;\
	ADD	E		; B (OR MIN) = CURRENT(B)+INCREMENT(E)
	LD	B,A		;/
	CP	29H		;CHECK HOW MUCH HAS BEEN BLANKED
	JR	C,DEM15		;LOOP UNTIL DONE
	CALL	CONINP		;CHECK FOR CONTROL-CHARACTERS
	LD	A,HALF		;PAUSE FOR 1 SECOND
	CALL	PAUSE		;  TO ALLOW VIEWING
	LD	L,B		;GET Y = CURRENT MIN
	LD	H,C		;GET X = CURRENT MAX
	CALL	AREA		;BLANK-FILL REMAINING AREA
;
;DEMO #2:  SHOW OFF CHARACTER SET
;
	CALL	PAGE		;CLEAR THE BUFFER AGAIN
	LD	A,R64		;USE BIG CHARACTERS
	CALL	CHAR
	LD	C,7		;INITIALIZE COLOR COUNTER
DEM2:	LD	A,BLACK		;START OUT WHITE
	ADD	C
	CALL	CHAR
	LD	B,' '		;1ST CHARACTER IS A SPACE
	LD	HL,08E8H	;POINT TO UPPER LEFT CORNER
DEM20:	CALL	CURSOR		;POSITION CHARACTER
	LD	A,B		;  AND DISPLAY IT
	CALL	CHAR
	LD	A,20H		;MOVE OVER TO NEXT POSITION
	ADD	H
	LD	H,A
	JR	NC,DEM21	;PAST END OF LINE?
	LD	A,L		;MOVE DOWN TO NEXT LINE
	SUB	20H
	LD	L,A
	JR	C,DEM22		;DONE IF OFF THE BOTTOM
DEM21:	INC	B		;NEXT CHARACTER
	JR	DEM20
;
DEM22:	CALL	CONINP		;CHECK FOR CONTROL-CHARACTERS
	LD	A,ONE		;LOOK AT IT A BIT
	CALL	PAUSE
	DEC	C		;TRY A NEW COLOR
	JR	NZ,DEM2		;GO UNTIL NO COLOR (BLACK)
	CALL	PAGE		;CLEAR BUFFER AGAIN
	LD	HL,4DC0H	;MUST BE IN R64 AT THIS POINT
	CALL	CURSOR		;POSITION CURSOR FOR WRITING
	LD	HL,STRIN6	;"LARGE" - THEN SHIFT TO MAXR
	CALL	STRING
	LD	HL,5080H	;POINT TO SPACE
	CALL	CURSOR		;  FOR NEXT TWO WORDS
	LD	HL,STRIN7	;"AND SMALL" - AND SHIFT TO R128
	CALL	STRING
	LD	HL,4D40H	;POSITION CURSOR
	CALL	CURSOR		;  FOR LAST WORD
	LD	HL,STRIN8	;"CHARACTERS"
	CALL	STRING
	CALL	CONINP		;CHECK FOR CONTROL-CHARACTERS
	LD	A,TWO		;LET THAT SOAK IN BRIEFLY
	CALL	PAUSE
	CALL	PAGE		;CLEAR BUFFER FOR NEXT DEMO
;
;DEMO #3:  FULL COLOR CONTROL
;
	LD	A,R64		;LARGE LABELS
	CALL	CHAR
	LD	HL,5C98H
	CALL	CURSOR
	LD	HL,STRIN3	;"FULL" AND SELECT COLOR
	CALL	STRING
	LD	A,(MAXCD)	;COLOR CHOICE AVAILABLE?
	AND	70H		;IS IT 2 OR MORE?
	LD	C,BLACK+1	;ASSUME NOT
	JR	Z,DEM3X		;CORRECT ASSUMPTION
	LD	C,WHITE		;ASSUME 8 COLORS
	AND	40H		;MORE THAN 8?
	JR	Z,DEM3X1	;NO
	LD	C,BLACK+15	;GO FOR 16 COLORS
DEM3X1:	LD	HL,5074H
	CALL	CURSOR
	LD	A,(MAXCD)	;COLOR OR MONOCHROME?
	BIT	7,A		;CHECK THE BIT
	JR	NZ,DEM3X2	;JUMP TO DO COLOR
	LD	HL,STRI4B	;"TONAL" IN B/W
	JR	DEM3X3
DEM3X2:	LD	HL,STRIN4	;"COLOR" IN COLOR
DEM3X3:	CALL	STRING
DEM3X:	LD	HL,3C50H
	CALL	CURSOR
	LD	HL,STRIN5	;"CONTROL" IN WHITE
	CALL	STRING
	LD	D,0		;INITIALIZE COUNTER
	LD	A,MAXC		;MAXIMUM COLORS (GRAY SHADES)
	CALL	CHAR
DEM30:	LD	E,C		;START OUT WHITE
DEM3:	CALL	CONINP		;CHECK FOR CONTROL-CHARACTERS
	LD	H,0FFH		;FROM TOP RIGHT SIDE
	LD	A,D		;WHICH STEP
	AND	3FH		;NORMALIZE TO 64
	RLA			;  AND SCALE BACK
	RLA			;  TO 256
	LD	L,A
	CALL	CURSOR
	LD	HL,0		;DRAW LINE TO LOWER
	CALL	LINE		;  LEFT-HAND CORNER
	LD	L,0FFH		;UP TO TOP EDGE
	LD	H,A		;GET X POSITION
	CALL	LINE		;DRAW THE LINE
	INC	D		;NEXT STEP
	JR	Z,DEM4		;ALL DONE AFTER 256 STEPS
	LD	A,D		;WHAT STEP ARE WE ON?
	CP	40H
	JR	C,DEM31		;FULL COLOR, SLOW SPEED
	JR	Z,DEM32		;SHIFT TO R64
	CP	80H
	JR	C,DEM31		;R64, SLOW SPEED
	JR	Z,DEM33		;BACK TO FULL COLOR
	CP	0C0H
	JR	C,DEM34		;FULL COLOR, FULL SPEED
	JR	Z,DEM35		;SHIFT TO ERASE
	JR	DEM3		;FULL SPEED ERASE
;
DEM31:	LD	A,QUARTR	;SLIGHT PAUSE
	CALL	PAUSE
DEM34:	DEC	E
	LD	A,E		;BLACK YET?
	CP	BLACK
	JR	NZ,DEM37	;NO
	LD	E,C		;START OVER
DEM37:	LD	A,E		;NEW COLOR
DEM38:	CALL	CHAR		;  OR (MAYBE) MODE
	JR	DEM3
;
DEM32:	LD	A,R64		;SHIFT TO 64 x 64
	CALL	CHAR
	LD	A,R64BW		;TRY SOMETHING SPECIAL!
DEM36:	PUSH	AF		;SAVE VALUE IN A
	CALL	CONINP		;CHECK FOR CONTROL-CHARACTERS
	LD	A,TWO		;PAUSE BETWEEN MODE CHANGES
	CALL	PAUSE
	CALL	PAGE		;CLEAR SCREEN
	POP	AF		;RESTORE VALUE IN A
	CALL	CHAR		;AND FINALLY, CHANGE MODE
	JR	DEM30
;
DEM33:	LD	A,MAXC		;SHIFT TO MAXIMUM COLORS
	JR	DEM36
DEM35:	LD	A,BLACK		;TIME TO ERASE SCREEN
	JR	DEM38
;
;DEMO #4:  ANIMATION
;
DEM4:	LD	A,R64		;BIG CHARACTERS
	CALL	CHAR
	CALL	PAGE		;CLEAR PICTURE BUFFER #1
	LD	HL,2880H	;POSITION TITLE
	CALL	CURSOR
	LD	HL,STRIN9	;"ANIMATION"
	CALL	STRING
	CALL	ANIMAT		;SWITCH BUFFERS
	CALL	PAGE		;CLEAR PICTURE BUFFER #2
	LD	HL,2880H	;PUT TITLE THERE, TOO
	CALL	CURSOR
	LD	HL,STRIN9
	CALL	STRING
	LD	A,R128		;NEED SOME RESOLUTION
	CALL	CHAR
	LD	A,ONE		;LET THIS SINK IN BRIEFLY
	CALL	PAUSE
	LD	HL,12H		;NEED SOME TERRA FIRMA
	CALL	CURSOR
	LD	H,0FFH
	CALL	LINE
	CALL	ANIMAT		;PUT IN BOTH BUFFERS
	CALL	CURSOR
	LD	H,0
	CALL	LINE		;BACK TO (0,0)
	LD	B,10H		;STARTING POSITION
DEM40:	CALL	CONINP		;CHECK FOR CONTROL-CHARACTERS
	CALL	PERSON		;DRAW NEW FRAME
	CALL	ANIMAT		;FLIP TO OTHER BUFFER
	LD	A,BLACK		;ERASE OLD FIGURE
	CALL	CHAR
	LD	A,(MAXRD)	;DOUBLE BUFFERED?
	BIT	7,A		;TEST BIT
	JR	Z,DEM41		;DON'T BACK UP TO ERASE
	DEC	B		;BACK TO PREVIOUS FRAME
DEM41:	CALL	PERSON		;ALL GONE
	LD	A,WHITE		;BACK TO WHITE
	CALL	CHAR		;VISIBLE AGAIN
	LD	A,(MAXRD)	;DID WE DECREMENT BEFORE?
	BIT	7,A		;CHECK THE ANIMATION BIT
	JR	Z,DEM42		;NO, SO DON'T DOUBLE-INCREMENT
	INC	B		;ADVANCE TO NEXT FRAME
DEM42:	INC	B
	LD	A,B
	CP	0F0H		;DONE YET?
	JR	C,DEM40		;KEEP ON TRUCKING
	JP	BEGIN		;START ALL OVER AGAIN
;
;SUBROUTINE TO DRAW A LITTLE PERSON
;
PERSON:	LD	A,B		;X IS IN B: 0-255
	AND	0FH
	SUB	8		;ARM SWING [AS]
	LD	C,A		;C = AS
	RLCA			;MULTIPLY TIMES 2
	LD	D,A		;  FOR LEG SWING [LS]
	LD	A,B		;FIND FIXED LEG
	AND	0F0H
	ADD	8		;R=[X AND 0F0H]+8
	LD	E,A		;E = R
	LD	A,B		;L = X+LS
	ADD	D
	LD	D,A		;D = L
	LD	A,B
	INC	A		;A = X+1
	DEC	B		;B = X-1
;READY TO DRAW EVERYTHING BUT THE HEAD
	LD	L,20		;START WITH THE LEGS
	LD	H,E
	CALL	CURSOR		;(R,20) >> BEGIN HERE
	LD	H,A
	LD	L,36
	CALL	LINE		;(X+1,36) >> RIGHT LEG
	LD	H,B
	CALL	LINE		;(X-1,36) >> HIPS
	LD	H,D
	LD	L,20
	CALL	LINE		;(L,20) >> LEFT LEG
	LD	L,37		;LEFT SIDE OF BODY
	LD	H,A
	CALL	CURSOR		;(X+1,37) >> STARTING POINT
	LD	L,48
	CALL	LINE		;(X+1,48) >> LEFT OF BODY
	LD	L,38
	SUB	C
	LD	H,A
	CALL	LINE		;(X+1-AS,38) >> LEFT ARM
	LD	A,B		;SAME FOR RIGHT SIDE
	LD	H,A
	LD	L,37
	CALL	CURSOR		;(X-1,37) >> STARTING POINT
	LD	L,48
	CALL	LINE		;(X-1,48) >> RIGHT OF BODY
	LD	L,38
	ADD	C
	LD	H,A
	CALL	LINE		;(X-1+AS,38) >> RIGHT ARM
	INC	B		;FINALLY DO THE HEAD
	LD	L,48
	LD	H,B		;NOTE THAT B IS BACK
				;  TO ORIGINAL VALUE = X
	CALL	CURSOR		;STARTING POINT
	LD	L,52
	CALL	LINE		;(X,52) >> NECK
	LD	A,B
	SUB	2
	LD	H,A
	CALL	LINE		;(X-2,52)
	LD	L,56
	CALL	LINE		;(X-2,56)
	LD	A,B
	ADD	2
	LD	H,A
	CALL	LINE		;(X+2,56)
	LD	L,52
	CALL	LINE		;(X+2,52)
	LD	H,B
	CALL	LINE		;(X,52) >> END OF HEAD
	LD	L,54
	ADD	2
	LD	H,A
	CALL	CURSOR		;(X+4,54)
	CALL	DOT		;DRAW THE NOSE!
	RET	
;
;SUBROUTINE TO SAMPLE CONSOLE FOR CONTROL-CHARACTERS
;
CONINP:	CALL	CONSTAT		;GET CONSOLE STATUS
	RET	Z		;RETURN TO MAIN PROGRAM
	CALL	CONDATA		;CHECK THE CHARACTER
	CP	CTRLS		;CHECK FOR CONTROL-S
	RET	NZ		;RETURN TO MAIN IF NEITHER
CONLOOP:CALL	CONSTAT		;CHECK FOR ANOTHER CHARACTER
	JR	Z,CONLOOP	;LOOP UNTIL READY
CONDATA:IN	A,CDATA		;GET THE CHARACTER
	AND	7FH		;STRIP PARITY BIT
	CP	CTRLC		;CHECK FOR CONTROL-C
	JR	Z,DAZOFF	;EXIT IF TRUE
	RET			;RETURN IF NEITHER
;
CONSTAT:IN	A,CSTAT		;GET CONSOLE STATUS
	AND	RDA		;CHECK RDA BIT
	RET			;RETURN WITH Z FLAG
;
DAZOFF:	LD	A,TOGDAZ	;SPECIAL CONTROL CHARACTER
	CALL	CHAR		;  TO TURN OFF/ON DAZZLER
	JP	WBOOT		;RETURN TO CDOS
;
;STRING DEFINITIONS
;
STRIN0:	DM	WHITE,'CROMEMCO'
STRIN1:	DM	'DAZZLER'
STRIN2:	DM	'GRAPHICS',MAXR
STRIN3:	DM	WHITE,'FULL'
STRIN4:	DM	RED,'C',YELLOW,'O',GREEN,'L',CYAN,'O',BLUE,'R'
STRI4B:	DM	RED,'T',GREEN,'O',YELLOW,'N',BLUE,'A',MAGENTA,'L'
STRIN5:	DM	WHITE,'CONTROL'
STRIN6:	DM	WHITE,'LARGE',MAXR
STRIN7:	DM	'AND SMALL',R128
STRIN8:	DM	'CHARACTERS'
STRIN9:	DM	WHITE,'ANIMATION'
MESSG1:	DB	'DAZZLER GRAPHICS DEMO PROGRAM FOR Z80 INTERFACE',CR,LF
	DB	'PRESS CTRL-S TO STOP/START DEMO',CR,LF
	DB	'PRESS CTRL-C TO ABORT$'
;
;VARIABLE STORAGE AREA
;
MAXCD:	DEFS	1		;MAXC DISPLAY DESCRIPTOR
MAXRD:	DEFS	1		;MAXR DISPLAY DESCRIPTOR
	DEFS	80H		;STACK AREA
STACK:	EQU	$
	END	GDEMO
