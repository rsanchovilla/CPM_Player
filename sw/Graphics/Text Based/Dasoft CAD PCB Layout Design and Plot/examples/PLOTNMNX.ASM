;*************************************************************************
;	PLOTTER CONTROL SUBROUTINES FOR MAGIC DA SYSTEM
;	   COPYRIGHT 1981  DASOFT DESIGN SYSTEMS, INC.
;	THESE PROGRAMS ARE PROTECTED BY LICENSING AGREEMENTS
;	AND CANNOT BE USED OR DUPLICATED WITHOUT WRITTEN
;	PERMISSION FROM DASOFT.


;	SOME MAGIC DEFINED LOCATIONS USED:


VERS	EQU	0032H	; 
REV	EQU	0034H	; 
EDIT	EQU	0064H	; 
	            
WBOOT	EQU	0000H	; WARM BOOT ADDRESS
TYPEF	EQU	0002H	; BDOS PRINT COMMAND NUMBER
BDOS	EQU	0005H	; ADDRESS  OF BDOS JUMP POINT
BUFF	EQU	0080H	; ADDRESS OF DISK INPUT BUFFER
DMA	EQU	001AH	; SET DMA ADDRESS FUNCT NUMB
READF	EQU	0014H	; DISK READ FUNCTION
WRITEF	EQU	0015H	; WRITE FILE TO DISK NUM
OPENS	EQU	000FH	; OPEN FILE FUNCT NUMBER
CLOSES	EQU	0010H	; CLOSE  FILE FUNCT NUMBER
                   
FCB	EQU	005CH	; FILE CONTROL BLOCK ADRS
FCBDN	EQU	005CH	; FCB DISK NAME
FCBFN	EQU	005DH	; FILE NAME
FCBFT	EQU	0065H	; FILE TYPE
FCBEX	EQU	0068H	; CURRENT EXTENT NUMBER
FCBRC	EQU	006BH	; EXTENT RECORD COUNT (0-128)
FCBCR	EQU	007CH	; CURRENT (NEXT) RECORD NUMBER
FCBR0	EQU	007DH	; LSB OF 16 BIT RANDOM RECORD ADDRESS
FCBR1	EQU	007EH	; MSB OF 16 BIT RANDOM RECORD ADDRESS
FCBR2	EQU	007FH	; RECORD OVERFLOW FLAG
                    
TOPPTR	EQU	0006H	; WAS (AD00H) STACK START 48K
                   
CLEAD	EQU	0001H	; CURSOR POSITIONING STRING CODE
P3LINES	EQU	0003H	; PRINT THREE LINES
CONTMSG	EQU	000BH	; CONTINUE MESSAGE CODE
CLS	EQU	000CH	; CLEAR SCREEN CODE
IVON	EQU	000EH	; INVERSE ON CODE
IVOFF	EQU	000FH	; INVERSE OFF CODE
                   
CR	EQU	000DH	; RETURN CHARACTER
LF	EQU	000AH	; LINE FEED CHARACTER
BEEP	EQU	0007H	; BEL CHARACTER
TAB	EQU	0009H	; TAB CHARACTER
BS	EQU	0008H	; BACK SPACE
ESC	EQU	001BH	; ESCAPE
EOM	EQU	00EEH	; END OF MESSAGE MARKER (OVERLAY FILE)
EOF	EQU	00FFH	; END OF FILE MARKER    (OVERLAY FILE)
MSCNT	EQU	00F9H	; 1 MSEC SOFTWARE DELAY CONSTANT
                   
RDRL	EQU	0103H	; LOADER KERNAL OR TEST PROG
CLEARS	EQU	0108H	; CLEAR SCREEN ROUTINE
PSTRNG	EQU	010EH	; PRINT AN ASCII STRING
INCHNE	EQU	011DH	; ROUTINE TO READ CONSOLE NO ECHO
DUMP	EQU	014DH	; BLOCK MOVE ROUTINE


;	      ***** REV 1.5 ******


;	
	ORG 1800H


;	JUMP TABLE ENTRY POINTS FOR EXTERNAL ENTRY

;	PINIT AND CHGPPR, CHGPEN, MAY NEED TO BE CHAGED BY USER

PINIT	JMP	INIT		; INITIALIZE OUTPUT PORT
PHOME	JMP	HOME		; HOME THE PLOTTER TO 0,0
VECTOR	JMP	MOVE		; MOVE THE PEN
CHGPPR	JMP	CHGPR		; CHANGE PAPER COMMAND
CHGPEN	JMP	CHGPN		; CHANGE PEN COMMAND

TBLAD	DS	4		; PLOTTER COORDINATE TABLE

YASIGN	DB	1		; SIGN OF Y CORRECTION 0=+
YADJUST	DB	153		; MAGNITUDE OF Y CORRECTION
XASIGN	DB	0		; SIGN OF CORRECTION 0=+
XADJUST	DB	83		; NUMBER OF GRIDS BEFRE CORRECTION X
SLOW	DB	0		; FLAG FOR DRAWING SLOW LINES

FDELAY	DW	0310H		; NORMAL 4MHZ DELAY FACTOR
SDELAY	DW	0500H		; SUPER SLOW DRAW FACTOR

SECND	DB	20H		; RAMP FACTOR
PORT	DB	02H		; PORT NUMBER FOR OUTPUT
PCTL	DB	0BH		; CONTROLL PORT NUMBER
CTLCODE	DB	80H		; CONTROL CODE FOR 8255


;	****** HOME PLOTTER COMMAND **********************
;	FOR THE MAURO ENGINEERING PROAC, HOME IS ACCOMPLISHED
;	BY RUNNING THE PLOTTER INTO THE NEGATIVE STOPS.
;	THATS RIGHT.  THE PLOTTER USES 4 BYTES, X MAGNITUDE,
;	XSIGN, Y MAGNITUDE, Y SIGN, SET TO NEGATIVE MAX X,Y
;	DESTROYS A, NO ENTRY OR EXIT PARAMETERS

HOME	CALL	INIT		; RESET SERIAL PORT AND FORCE "R"
	CALL	READY		; TEST FOR "R"
	MVI 	B,'H'		; GET "H"
	CALL	SOUT		; OUPUT IT
	MVI	B,0DH		; CARRIAGE RETURN
	CALL	SOUT		; OUTPUT ITŠ	CALL 	NOTRDY		; TEST FOR "B"
	RET			; RETURN

READY	IN	23H		; IN STATUS
	ANI	01H		; MASK
	JZ	READY		; LOOP

READY1	IN 	21H		; IN DATA
	ANI	7FH		; MASK MSB
	CPI	'R'		; TEST FOR "R"
	JNZ	READY		; LOOP

	RET			; RETURN

SOUT	IN 	23H		; IN STATUS
	ANI	04H		; MASK IT
	JZ	SOUT		; LOOP

	MOV	A,B		; DATA IN ACC
	OUT	21H		; OUTPUT IT
	RET			; RETURN



;	********* CHANGE PAPER ROUTINE ********************
;	SOME PLOTTERS CAN CHANGE THEIR OWN PAPER, WHICH IS WHY
;	THERE  IS A USER ROUTINE FOR THIS. FOR THE MAURO PROAC,
;	IT  IS UNDER 'MANUAL' CONTROL.  THIS UTILITY SENDS 25
;	'CONTROL-G' OR BELLS TO THE CONSOLE WITH A MESSAGE.

PPRMSG	DB	0DH,0AH,'PLEASE CHANGE PLOTTER PAPER THEN HIT ANY KEY$'

BELLS	EQU	BEEP

CHGPR	LXI	D,PPRMSG		; PRINT MESSAGE
	CALL	PSTRNG		; CALL PRINT ROUTINE

DOBELLS	MVI	E,BELLS
	MVI	C,02		; CPM PRINT CHARACTER FUNCTION
	CALL	BDOS
	CALL 	INIT		; INIT SERIAL PORT
	CALL	READY
	MVI	B,'C'
	CALL	SOUT
	MVI	B,0DH
	CALL	SOUT
	CALL	NOTRDY
	CALL	READY
	MVI	B,'Y'
	CALL	SOUT
	MVI	B,'1'
	CALL	SOUT
	MVI	B,'6'
	CALL	SOUT
	MVI	B,0DH
	CALL	SOUT
	CALL	NOTRDY
	CALL	READY		; TEST FOR "R"Š	MVI	B,'X'		; SET PEN DELAY
	CALL	SOUT
	MVI	B,'1'		; 1000
	CALL 	SOUT
	MVI	B,'0'
	CALL	SOUT
	MVI	B,'0'
	CALL 	SOUT
	MVI	B,'0'
	CALL	SOUT
	MVI	B,0DH		; "CR"
	CALL	SOUT
	CALL 	NOTRDY		; WAIT FOR "B"
	CALL 	READY
	CALL	INCHNE		; WAIT FOR ANSWER
	MVI	B,'M'		; MOVE 15" TO EMBOSS PAPER EDGES
	CALL 	SOUT
	MVI	B,'3'
	CALL 	SOUT
	MVI	B,'0'
	CALL	SOUT
	MVI	B,'0'
	CALL	SOUT
	MVI	B,'0'
	CALL	SOUT		; #3000 15"
	MVI	B,','
	CALL	SOUT
	MVI	B,0DH		; CR
	CALL	SOUT
	CALL 	NOTRDY
	CALL	READY
	MVI	B,'H'		; HOME
	CALL 	SOUT
	MVI	B,0DH
	CALL	SOUT
	CALL	NOTRDY
	RET			; FINISHED


;	********* CHANGE PEN ROUTINE *****************
;	AGAIN, SOME PLOTTEERS CAN CHANGE THEIR OWN PEN
;	**CONTACT DASOFT FOR MORE INFORMATION.

PNMSG1	DB	0AH,0DH,'PLEASE CHANGE PEN THEN HIT ANY KEY'
	DB	0AH,0DH,'       NEW PEN SIZE IS....$'
PNMSG2	DB	'000$'
PNMSG3	DB	'0$'
PNMSG4	DB	'1$'
PNMSG5	DB	'4$'


;	THE PEN SIZE IS SENT IN THE ACCUMULATOR ON CALL, NO
;	OTHER INPUTS, NO OUPUTS.

CHGPN	PUSH	PSW		; SAVE PEN NUMBERŠ
	LXI	D,PNMSG1	; PRINT MAIN MESSGE
	CALL	PSTRNG

	POP	PSW		; GET BACK PEN NUMBER
	CPI	0
	JZ	PEN0

	CPI	1
	JZ	PEN1

	CPI	2
	JZ	PEN2

PEN3	LXI	D,PNMSG5

DB2	CALL	PSTRNG		; PRINT PIN NUMBER
        MVI     E,BELLS
        MVI     C,02
        CALL    BDOS
        CALL    INCHNE
        RET

PEN2	LXI	D,PNMSG4
	JMP	DB2		; PRINT NUMBER AND RING CHIMES

PEN1	LXI	D,PNMSG3
	JMP	DB2

PEN0	LXI	D,PNMSG2
	JMP	DB2		; THE END


;	********** PLOTTER CONTROL ROUTINES *****************
;	MAURO ENGINEERING ROUTINES FOR THEIR PLOTTER

TBLAT	DS	4		; DATA TABLE THAT CAN BE CHANGED
CHARTBL	DS	4		; DECIMAL CHARACTER TABLE

TDATA	DW	TBLAT		; BINARY DATA POINTER
CON1	DW	03E8H		; 1000
CON2	DW	0064H		; 100
CON3	DW	000AH		; 10
CON4	DW	0001H		; 1
TCON	DW	CON1		; CONSTANT POINTER
TCHAR	DW	CHARTBL		; CHARACTER POINTER
TDATA1	DW	0000H		; DATA POINTER STORAGE
TCON1	DW	0000H		; CONSTANT POINTER STORAGE
TCHAR1	DW	0000H		; CHARACTER POINTER STORAGE

MOVE	LDA	TBLAD		; TEST FOR ZERO LENGTH VECTOR
	ANI	0FFH
	JNZ	MOVE2

	LDA	TBLAD+1
	ANI	0FH
	JNZ	MOVE2

	LDA	TBLAD+2
	ANI	0FFH
	JNZ	MOVE2

	LDA	TBLAD+3
	ANI	0FH
	JNZ	MOVE2

	RET			; IF ZERO RETURN

MOVE2	CALL	READY		; TEST FOR "R"
	LDA	TBLAD		; TRANSFER DATA TO 2ND TABLEŠ	STA 	TBLAT

	LDA 	TBLAD+1
	STA	TBLAT+1

	LDA	TBLAD+2
	STA	TBLAT+2

	LDA	TBLAD+3
	STA	TBLAT+3

	LDA	TBLAT+1		; GET YMSB
	ANI	20H		; TEST FOR MOVE OR TRAW
	JZ	MOVE1

	MVI	B,'D'		; DRAW "D"
	CALL	SOUT		; OUTPUT IT
	JMP	XVECT

MOVE1	MVI	B,'M'		; MOVE "M"
	CALL	SOUT		; OUTPUT IT

XVECT	LDA	TBLAT+1		; XMSB
	ANI	10H		; TEST SIGN (DASOFT SIGN)
	JZ	XVECT1

	MVI	B,'-'		; MINUS
	CALL	SOUT		; OUTPUT IT

XVECT1	LDA	TBLAT+1		; GET X MSB
	ANI	0FH		; MASK DATA
	STA	TBLAT+1

	LHLD	TDATA		; SET DATA POINTER
	SHLD	TDATA1

	CALL	DEC		; CONVERT TO DECIMAL
	CALL	OUT4		; OUTPUT 4 ASCII BYTES

	MVI	B,','		; COMMA
	CALL	SOUT		; OUTPUT IT

YVECT	LDA	TBLAT+3		; YMSB
	ANI	10H		; TEST FOR SIGN
	JZ	YVECT1

	MVI	B,'-'		; SET MINUS
	CALL	SOUT		; OUTPUT IT

YVECT1	LDA	TBLAT+3		; YMSB
	ANI	0FH		; MASK DATA
	STA 	TBLAT+3

	LHLD	TDATA		; SET DATA POINTER
	INX	H
	INX	H
	SHLD	TDATA1

	CALL	DEC		; CONVERT TO DECIMAL
	CALL	OUT4		; OUTPUT 4 ASCII BYTES



	MVI	B,0DH
	CALL	SOUT		; OUTPUT "CR"

NOTRDY	IN	23H
	ANI	01H
	JZ	NOTRDYŠ
NOTRDY1	IN	21H
	ANI	7FH
	CPI	'B'
	JNZ	NOTRDY

	RET			; RETURN (THATS ALL)

;	BINARY TO DECIMAL CONVERSION ROUTINE 4 DIGIT


DEC	LHLD 	TCON		; INIT CONSTANT POINTER
	SHLD 	TCON1		; STORE IT

	LHLD 	TCHAR		; INIT CHARACTER POINTER
	SHLD 	TCHAR1		; STORE IT

DEC1	MVI	E,00H		; CLEAR CHARACTER 
	LHLD	TCON1		; GET SUBTRACT CONSTANT
	MOV	C,M		; GET LSB TO C
	INX	H
	MOV 	B,M		; GET MSB TO B
	LHLD 	TDATA1		; GET BINARY DATA

DEC2	MOV	A,M
	SUB	C		; SUB LSB
	MOV	M,A
	INX	H
	MOV	A,M
	SBB	B		; SUB MSB
	MOV	M,A
	DCX	H		; POINT TO DATA LSB AGAIN
	JC	DEC3		; FORM ASCII CHARACTER

	INR	E		; INCREMENT CHARACTER
	JMP	DEC2		; LOOP

DEC3	LHLD	TCON1		; GET CONSTANT TO ADD BACK ON
	MOV	C,M		; GET LSB TO C
	INX	H
	MOV	B,M		; GET MSB TO B

	LHLD 	TDATA1		; GET BINARY DATA POINTER
	MOV	A,M		; ADD CONSTANT BACK TO BINARY
	ADD	C
	MOV	M,A
	INX	H
	MOV 	A,M
	ADC	B
	MOV	M,A
	MVI	A,30H		; CREATE ASCII CHARACTER
	ADD	E

 	LHLD	TCHAR1		; GET CHARACTER POINTER
	MOV	M,A		; STORE CHARACTER IN TABLE
	INX	H		; SET POINTER TO NEXT 
	SHLD 	TCHAR1		; STORE IT

	LHLD	TCON1		; GET CONSTANT POINTER
	MOV	A,M
	CPI	01H		; TEST FOR LAST TIME
	RZ			; DONE RETURN

	INX	H		; CONSTANT POINTER TO NEXTŠ	INX	H
	SHLD	TCON1		; STORE IT

	JMP	DEC1		; LOOP

OUT4	LHLD	TCHAR		; GET CHAACTER TABLE POINTER
	MVI	D,03H		; ZERO COUNTER
	MVI	E,04H		; CHARACTER COUNTER

OUT41	MOV	A,M		; GET CHARACTER
	CPI 	30H		; TEST FOR "0"
	JNZ	OUT42		; NOT "0" GOTO OUTPUT

	INX	H
	DCR	E
	DCR	D
	JNZ	OUT41

OUT42	MOV	B,M		; GET CHARACTER
	CALL	SOUT		; OUTPUT IT
	INX	H
	DCR	E
	RZ			; DONE

	JMP	OUT42		; NEXT ONE




;	******* PLOTTER PORT INITIALIZE ROUTINE ***************
;	FOR ZILOG DART

	OUT	05H		; CHAN B
	MVI	A,04H		; 9600 BAUD
	OUT	05H
	MVI	A,18H		; RESET DART
	OUT	03H		; CHAN B
	MVI	A,14H		; REG 4, RESET INT
	OUT	03H
	MVI	A,84H		; 32X CLOCK,1 STOP BIT
	OUT	03H
	MVI	A,03H		; REG 3
	OUT	03H
	MVI	A,0C1H		; 8 BITS, ENABLE RCVRE
	OUT 	03H
	MVI	A,05H		; REG 5
	OUT	03H
	MVI	A,0EAH		; DTR, 8 BITS, RTS, TX ENABLE
	OUT	03H

INIT	MVI	B,0DH		; OUT "CR" TO GET "R"
	CALL	SOUT		; OUTPUT IT
	CALL 	NOTRDY		; CHECK FOR "B"
	RET			; RETURN




	END
