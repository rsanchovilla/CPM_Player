;***********************************************************************
;	PLOTTER CONTROL SUBROUTINES FOR MAGIC DA SYSTEM
;	   COPYRIGHT 1981  DASOFT DESIGN SYSTEMS, INC.
;	THESE PROGRAMS ARE PROTECTED BY LICENSING AGREEMENTS
;	AND CANNOT BE USED OR DUPLICATED WITHOUT WRITTEN
;	PERMISSION FROM DASOFT.


;	SOME MAGIC DEFINED LOCATIONS USED:


VERS	EQU	0032H	; 
REV	EQU	0034H	; 
EDIT	EQU	0064H	; 
	            
WBOOT	EQU	0000H	; WARM BOOT ADDRESS
TYPEF	EQU	0002H	; BDOS PRINT COMMAND NUMBER
BDOS	EQU	0005H	; ADDRESS  OF BDOS JUMP POINT
BUFF	EQU	0080H	; ADDRESS OF DISK INPUT BUFFER
DMA	EQU	001AH	; SET DMA ADDRESS FUNCT NUMB
READF	EQU	0014H	; DISK READ FUNCTION
WRITEF	EQU	0015H	; WRITE FILE TO DISK NUM
OPENS	EQU	000FH	; OPEN FILE FUNCT NUMBER
CLOSES	EQU	0010H	; CLOSE  FILE FUNCT NUMBER
                   
FCB	EQU	005CH	; FILE CONTROL BLOCK ADRS
FCBDN	EQU	005CH	; FCB DISK NAME
FCBFN	EQU	005DH	; FILE NAME
FCBFT	EQU	0065H	; FILE TYPE
FCBEX	EQU	0068H	; CURRENT EXTENT NUMBER
FCBRC	EQU	006BH	; EXTENT RECORD COUNT (0-128)
FCBCR	EQU	007CH	; CURRENT (NEXT) RECORD NUMBER
FCBR0	EQU	007DH	; LSB OF 16 BIT RANDOM RECORD ADDRESS
FCBR1	EQU	007EH	; MSB OF 16 BIT RANDOM RECORD ADDRESS
FCBR2	EQU	007FH	; RECORD OVERFLOW FLAG
                    
TOPPTR	EQU	0006H	; WAS (AD00H) STACK START 48K
                   
CLEAD	EQU	0001H	; CURSOR POSITIONING STRING CODE
P3LINES	EQU	0003H	; PRINT THREE LINES
CONTMSG	EQU	000BH	; CONTINUE MESSAGE CODE
CLS	EQU	000CH	; CLEAR SCREEN CODE
IVON	EQU	000EH	; INVERSE ON CODE
IVOFF	EQU	000FH	; INVERSE OFF CODE
                   
CR	EQU	000DH	; RETURN CHARACTER
LF	EQU	000AH	; LINE FEED CHARACTER
BEEP	EQU	0007H	; BEL CHARACTER
TAB	EQU	0009H	; TAB CHARACTER
BS	EQU	0008H	; BACK SPACE
ESC	EQU	001BH	; ESCAPE
EOM	EQU	00EEH	; END OF MESSAGE MARKER (OVERLAY FILE)
EOF	EQU	00FFH	; END OF FILE MARKER    (OVERLAY FILE)
MSCNT	EQU	00F9H	; 1 MSEC SOFTWARE DELAY CONSTANT
                   
RDRL	EQU	0103H	; LOADER KERNAL OR TEST PROG
CLEARS	EQU	0108H	; CLEAR SCREEN ROUTINE
PSTRNG	EQU	010EH	; PRINT AN ASCII STRING
INCHNE	EQU	011DH	; ROUTINE TO READ CONSOLE NO ECHO
DUMP	EQU	014DH	; BLOCK MOVE ROUTINE


;	      ***** REV 1.5 ******



	ORG 1800H


;	JUMP TABLE ENTRY POINTS FOR EXTERNAL ENTRY

;	PINIT AND CHGPPR, CHGPEN, MAY NEED TO BE CHAGED BY USER

PINIT	JMP	INIT		; INITIALIZE OUTPUT PORT
PHOME	JMP	HOME		; HOME THE PLOTTER TO 0,0
VECTOR	JMP	MOVE		; MOVE THE PEN
CHGPPR	JMP	CHGPR		; CHANGE PAPER COMMAND
CHGPEN	JMP	CHGPN		; CHANGE PEN COMMAND

TBLAD	DS	4		; PLOTTER COORDINATE TABLE

YASIGN	DB	1		; SIGN OF Y CORRECTION 0=+
YADJUST	DB	153		; MAGNITUDE OF Y CORRECTION
XASIGN	DB	0		; SIGN OF CORRECTION 0=+
XADJUST	DB	83		; NUMBER OF GRIDS BEFRE CORRECTION X
SLOW	DB	0		; FLAG FOR DRAWING SLOW LINES
FDELAY	DW	0310H		; NORMAL 4MHZ DELAY FACTOR
SDELAY	DW	0500H		; SUPER SLOW DRAW FACTOR
SECND	DB	20H		; RAMP FACTOR
PORT	DB	02H		; PORT NUMBER FOR OUTPUT
PCTL	DB	0BH		; CONTROLL PORT NUMBER
CTLCODE	DB	80H		; CONTROL CODE FOR 8255


;	****** HOME PLOTTER COMMAND **********************
;	FOR THE MAURO ENGINEERING PROAC, HOME IS ACCOMPLISHED
;	BY RUNNING THE PLOTTER INTO THE NEGATIVE STOPS.
;	THATS RIGHT.  THE PLOTTER USES 4 BYTES, X MAGNITUDE,
;	XSIGN, Y MAGNITUDE, Y SIGN, SET TO NEGATIVE MAX X,Y
;	DESTROYS A, NO ENTRY OR EXIT PARAMETERS

HOME	XRA	A
	STA	TBLAD		; ZERO X LSD  MAG
	STA	TBLAD+2		; ZERO Y LSD MAG

	MVI	A,1FH		; MAX NEGATIVE MAG
	STA	TBLAD+1		; NEGATIVE X
	STA	TBLAD+3		; NEGATIVE Y

	CALL	VECTOR		; MOVE PLOTTER

;	NOW MOVE IT AWAY JUST A BIT

	XRA	A		; ZERO A
	STA	TBLAD+1
	STA	TBLAD+3		; PEN UP, POSITIVE, LOW MAGNITUDE

	MVI	A,10
	STA	TBLAD+2

	MVI	A,100
	STA	TBLAD+4		; 10 *(.005 IN) AWAY FROM HOME

	CALL	VECTOR
	RET


;	********* CHANGE PAPER ROUTINE ********************
;	SOME PLOTTERS CAN CHANGE THEIR OWN PAPER, WHICH IS WHY
;	THERE  IS A USER ROUTINE FOR THIS. FOR THE MAURO PROAC,
;	IT  IS UNDER 'MANUAL' CONTROL.  THIS UTILITY SENDS 25
;	'CONTROL-G' OR BELLS TO THE CONSOLE WITH A MESSAGE.

PPRMSG	DB	0DH,0AH,'PLEASE CHANGE PLOTTER PAPER THEN HIT ANY KEY$'

BELLS	EQU	BEEP

CHGPR	LXI	D,PPRMSG	; PRINT MESSAGE
	CALL	PSTRNG		; CALL PRINT ROUTINE

DOBELLS	MVI	E,BELLS
	MVI	C,02		; CPM PRINT CHARACTER FUNCTION
	CALL	BDOS
	CALL	INCHNE		; WAIT FOR ANSWER
	RET			; FINISHED


;	********* CHANGE PEN ROUTINE *****************
;	AGAIN, SOME PLOTTEERS CAN CHANGE THEIR OWN PEN
;	**CONTACT DASOFT FOR MORE INFORMATION.

PNMSG1	DB	0AH,0DH,'PLEASE CHANGE PEN THEN HIT ANY KEY'
	DB	0AH,0DH,'       NEW PEN SIZE IS....$'
PNMSG2	DB	'000$'
PNMSG3	DB	'0$'
PNMSG4	DB	'1$'
PNMSG5	DB	'4$'


;	THE PEN SIZE IS SENT IN THE ACCUMULATOR ON CALL, NO
;	OTHER INPUTS, NO OUPUTS.

CHGPN	PUSH	PSW		; SAVE PEN NUMBER
	LXI	D,PNMSG1		; PRINT MAIN MESSGE
	CALL	PSTRNG
	POP	PSW		; GET BACK PEN NUMBER

	CPI	0
	JZ	PEN0

	CPI	1
	JZ	PEN1

	CPI	2
	JZ	PEN2

PEN3	LXI	D,PNMSG5

DB2	CALL	PSTRNG		; PRINT PIN NUMBER
	JMP	DOBELLS

PEN2	LXI	D,PNMSG4
	JMP	DB2		; PRINT NUMBER AND RING CHIMES

PEN1	LXI	D,PNMSG3
	JMP	DB2

PEN0	LXI	D,PNMSG2
	JMP	DB2		; THE END


;	********** PLOTTER CONTROL ROUTINES *****************
;	MAURO ENGINEERING ROUTINES FOR THEIR PLOTTER
;	SEE YOUR PROAC BOOK FOR MORE INFORMATION

;	THIS ROUTINE MUST BE CHANGED IF YOU COMPUTE AT 2MHZ!!!

PSTAT	DB	0
HIGH	DW	0000
LOW	DW	0000
HMINL	DW	0000
SAVEB	DB	0	
BIGCD	DB	0
SMCD	DB	0
CDE	DS	4
DELY	DW	0
HALFD	DB	0
SECON	DB	0
SIX	DB	0
ENDRP	DW	0		; TEMP LOCATIONS NEEDED

MOVE	MVI	B,0CH
	LXI	H,HIGH
	MVI	A,0

ST1	MOV	M,A
	INX	H
	DCR	B
	JNZ	ST1

;	*INITIALIZE RAMP
;	IF THE SLOW BIT IS SET, THE SLOW DELAY IS USED **IF THE PEN IS
;	DOWN, THUS ONLY THE ACTUAL LINE DRAWS GO SLOW

	LDA	SLOW
	ORA	A
	JZ	FAST

	LDA	TBLAD+1		; GET THE BYTE WITH THE PEN BIT
	ANI	20H		; TEST THE PEN BIT
	JZ	FAST		; IF ZERO, DO IT FAST

	LDA	SDELAY		; GET FIRST PLOTTER DELAY BYTE
	STA	DELY

	LDA	SDELAY+1
	STA	DELY+1
	JMP	NEXT

FAST	LDA	FDELAY
	STA	DELY

	LDA	FDELAY+1
	STA	DELY+1		; FAST OR SLOW INITIALIZED

NEXT	LDA	SECND
	STA	SECON

	MVI	A,07H
	STA	SIX
	LXI	H,TBLAD+1

TESTP	MVI	B,0
	MOV	A,M
	ANI	20H
	JZ	TESTS

PENDN	MVI	B,10H

TESTS	LXI	H,PSTAT
	MOV	A,M
	CMP	B
	JZ	TESTT

	MOV	M,B
	CALL	PENCG

TESTT	LXI	H,CDE+2
	MOV	M,B
	LXI	H,CDE+3
	MOV	M,B
	LXI	H,TBLAD+1
	MOV	A,M
	ANI	10H
	JNZ	YP

YN	MOV	A,B
	ORI	01H
	MOV	B,A
	JMP	TESYS

YP	MOV	A,B
	ORI	02H
	MOV	B,A

TESYS	INX	H
	INX	H
	MOV	A,M
	ANI	10H
	JNZ	XP

XN	MOV	A,B
	ORI	08H
	MOV	B,A
	JMP	PLOT

XP	MOV	A,B
	ORI	04H
	MOV	B,A

;	START COMPARISON BETWEEN X AND Y

PLOT	MOV	A,B
	STA	SAVEB

	LXI	H,TBLAD
	MOV	C,M
	INX	H
	MOV	A,M

	ANI	0FH
	MOV	B,A
	INX	H

	MOV	E,M
	INX	H

	MOV	A,M
	ANI 	0FH
	MOV	D,A
	MOV	A,C
	SUB	E
	MOV	A,B
	SBB	D
	JNC	XBIG

YBIG	LXI	H,BIGCD
	MVI	A,0CH
	MOV	M,A

	LXI	H,SMCD
	MVI	A,03H
	MOV	M,A

	PUSH	D
	PUSH	B

	POP	D
	POP	B
	JMP	MULT2

XBIG	LXI	H,BIGCD
	MVI	A,03H
	MOV	M,A

	LXI	H,SMCD
	MVI	A,0CH
	MOV	M,A

MULT2	MVI	H,02H

MULTX	ORA	A
	MOV	A,C
	RAL
	MOV	C,A
	MOV	A,B
	RAL
	MOV	B,A
	ORA	A
	MOV	A,E
	RAL
	MOV	E,A
	MOV	A,D
	RAL
	MOV	D,A
	MOV	A,H
	SUI	01H
	JZ	SVHIG

	MOV	H,A
	JMP	MULTX

SVHIG	LXI	H,HIGH
	MOV	M,B
	INX	H

	MOV	M,C
	INX	D

;	SET UP RAMP

	LXI	H,HIGH
	MOV	A,M
	CPI	0
	JNZ	HD1

	INX	H
	MOV	A,M
	CPI	3CH
	JNC	HD1

;	HIGH RAMP

	ORA	A
	RAR

	LXI	H,HALFD
	MOV	M,A
	LXI	H,ENDRP
	MOV	M,A
	INX	H
	MVI	M,0
	JMP	ITER

HD1	LXI	H,HALFD
	MVI	M,1EH
	LXI	H,HIGH+1
	MOV	A,M
	LXI	H,HALFD
	SUB	M

	STA	ENDRP
	LXI	H,HIGH
	MOV	A,M
	SBI	0
	STA	ENDRP+1

;	SET CODE TO OUTPUT BIGGEST

ITER	LXI	H,CDE
	MVI	M,0
	MOV	A,M

	LXI	H,BIGCD
	ORA	M
	LXI	H,CDE
	MOV	M,A

;	ADD AND COMPARE

	LXI	H,LOW+1
	MOV	A,M
	ADD	E
	MOV	M,A
	DCX	H

	MOV	A,M
	ADC	D
	MOV	M,A

	LXI	H,HIGH+1
	MOV	A,M
	LXI	H,LOW+1
	SUB	M
	LXI	H,HMINL+1
	MOV	M,A
	LXI	H,HIGH
	MOV	A,M
	LXI	H,LOW
	SBB	M
	LXI	H,HMINL
	MOV	M,A
	JNC	CONT

;	OUTPUT SMALL ALSO AN INVERRT H MINUS L (SIC)

	MVI	A,0
	LXI	H,HMINL+1
	SUB	M
	LXI	H,LOW+1
	MOV	M,A
	LXI	H,HMINL
	MVI	A,0
	SBB	M
	LXI	H,LOW
	MOV	M,A
	LXI	H,SMCD
	MOV	A,M
	LXI	H,CDE
	ORA	M
	MOV	M,A

;	OUTPUT ROUTINES

CONT	MOV	A,B
	CPI	0
	JNZ	CONT1

	MOV	A,C

C1	CPI	0
	JNZ	CONT1

	LXI	H,CDE+3
	MOV	A,M
	ORI	60H
	ANI	50H
	XRI	0FFH

PLACE1	OUT	0AH		; OUT TO PORT
	RET

CONT1	DCX	B

DELAY	LHLD	DELY

D1	DCR	L
	JNZ	D1

	DCR	H
	JNZ	D1

	LXI	H,CDE+3
	MOV	A,M
	ORI	60H
	ANI	50H
	XRI	0FFH

PLACE2	OUT 	0AH

;	CK FOR RAMP START

	MOV	A,C
	LXI	H,ENDRP
	SUB	M
	MOV	A,B
	INX	H
	SBB	M
	JC	ADDCK

SUBX	LXI	H,DELY
	MOV	A,M
	LXI	H,SECON
	SUB	M
	STA	DELY
	JNC	SUB1

	LXI	H,DELY+1
	DCR	M

SUB1	LXI	H,SIX
	DCR	M
	JNZ	CONT2

	LXI	H,SECON
	MOV	A,M
	ORA	A
	RAR
	MOV	M,A

DC1	LXI	H,SIX
	MVI	M,07H
	JMP	CONT2

ADDCK	MOV	A,B
	CPI	0
	JNZ	CONT2

	MOV	A,C
	LXI	H,HALFD
	CMP	M
	JNC	CONT2

	LXI	H,DELY
	MOV	A,M
	LXI	H,SECON
	ADD	M
	STA	DELY
	JNC	ADD1

	LXI	H,DELY+1
	INR	M

ADD1	LXI	H,SIX
	DCR	M
	JNZ	CONT2

	LXI	H,SECON
	MOV	A,M
	ORA	A
	RAL
	MOV	M,A

DC2	JMP	DC1

CONT2	LXI	H,CDE
	MOV	A,M

	LXI	H,SAVEB
	ANA	M

	LXI	H,CDE+2
	ORA	M

	LXI	H,CDE+3
	MOV	M,A
	ORI	40H
	XRI	0FFH

PLACE3	OUT	0AH
	JMP	ITER

PENCG	MOV	A,B
	ORI	60H
	ANI	50H
	XRI 	0FFH

PLACE4	OUT 	0AH
	MVI	C,0FFH
	MVI	D,0FH

PC1	DCR	C
	JNZ	PC1

	DCR	D
	JNZ	PC1

	MOV	A,B
	ORI	60H
	ANI	40H
	XRI 	0FFH

PLACE5	OUT	0AH
	RET


;	DAS ENDE!




;	******* PLOTTER PORT INITIALIZE ROUTINE ***************
;	 FOR 8255, ALL OUTPUTS , CODE IS 80 H

;	FIRST SET THE PORT NUMBERS IN

INIT	LDA	PORT		; GET THE PORT NUMBER
	STA	PLACE1+1
	STA	PLACE2+1
	STA	PLACE3+1
	STA	PLACE4+1
	STA	PLACE5+1	; NOW CODE MODIFIED

	LDA	PCTL
	CPI	0FFH		; FLAG FOR NO INITIALIZE
	RZ

	STA	PLACE6+1

INIT2	LDA	CTLCODE

PLACE6	OUT	0BH		; SEND TO 8255 CONTROL PORT
	RET





	END
