	SUBTTL	Common file for BASIC interpreter
	.SALL	

CONTO	SET	15			;CHARACTER TO SUPRESS OUTPUT (USUALLY CONTROL-O)
DBLTRN	SET	0			;FOR DOUBLE PRECISION TRANSCENDENTALS
	IF2	

	.PRINTX	/EXTENDED/


	.PRINTX	/LPT/

	.PRINTX	/CPM DISK/


	.PRINTX	/Z80/

	.PRINTX	/FAST/

	.PRINTX	/5.0 FEATURES/

	.PRINTX	/ANSI COMPATIBLE/
	ENDIF

CLMWID	SET	14			;MAKE COMMA COLUMNS FOURTEEN CHARACTERS
DATPSC	SET	128			;NUMBER OF DATA BYTES IN DISK SECTOR
LINLN	SET	80			;TERMINAL LINE LENGTH 
LPTLEN	SET	132
BUFLEN	SET	255			;LONG LINES
NAMLEN	SET	40			;MAXIMUM LENGTH NAME -- 3 TO 127

NUMLEV	SET	0*20+19+2*5		;NUMBER OF STACK LEVELS RESERVED
					;BY AN EXPLICIT CALL TO GETSTK

STRSIZ	SET	4

STRSIZ	SET	3
NUMTMP	SET	3			;NUMBER OF STRING TEMPORARIES

NUMTMP	SET	10

MD.RND	SET	3			;THE MODE NUMBER FOR RANDOM FILES
MD.SQI	SET	1			;THE MODE NUMBER FOR SEQUENTIAL INPUT FILES
					;NEVER WRITTEN INTO A FILE
MD.SQO	SET	2			;THE MODE FOR SEQUENTIAL OUTPUT FILES
					;AND PROGRAM FILES
CPMWRM	SET	0			;CP/M WARM BOOT ADDR
CPMENT	SET	CPMWRM+5		;CP/M BDOS CALL ADDR
	CSEG	
TRUROM	SET	0
	PAGE
	TITLE	BIPRTU	BASIC Interpreter PRINT USING Driver/WHG
	SUBTTL	PRINT USING DRIVER
;
; COME HERE AFTER THE "USING" CLAUSE IN A PRINT STATEMENT
; IS RECOGNIZED. THE IDEA IS TO SCAN THE USING STRING UNTIL
; THE VALUE LIST IS EXHAUSTED, FINDING STRING AND NUMERIC
; FIELDS TO PRINT VALUES OUT OF THE LIST IN,
; AND JUST OUTPUTING ANY CHARACTERS THAT AREN'T PART OF
; A PRINT FIELD.
;
	EXTRN	CHRGTR,SYNCHR
	EXTRN	CHKSTR,CRDO,FACLO,FCERR,FRETM2,FRMCHK,FRMEVL
	EXTRN	OUTDO,PUFOUT,SNERR,STROUT,STRPRT,USFLG
	EXTRN	LEFTUS
	PUBLIC	PRINUS
CSTRNG	SET	134O
CURNCY	SET	44O			;USE DOLLAR SIGN AS DEFAULT

PRINUS:	CALL	FRMCHK			;EVALUATE THE "USING" STRING
	CALL	CHKSTR			;MAKE SURE IT IS A STRING
	CALL	SYNCHR
	DB	73O			;MUST BE DELIMITED BY A SEMI-COLON
	XCHG				;[D,E]=TEXT POINTER
	LHLD	FACLO			;GET POINTER TO "USING" STRING DESCRIPTOR
	JMP	INIUS			;DONT POP OFF OR LOOK AT USFLG
REUSST:	LDA	USFLG			;DID WE PRINT OUT A VALUE LAST SCAN?
	ORA	A			;SET CC'S
	JZ	FCERR3			;NO, GIVE ERROR
	POP	D			;[D,E]=POINTER TO "USING" STRING DESCRIPTOR
	XCHG				;[D,E]=TEXT POINTER
INIUS:	PUSH	H			;SAVE THE POINTER TO "USING" STRING DESCRIPTOR
	XRA	A			;INITIALLY INDICATE THERE ARE MORE
					;VALUES IN THE VALUE LIST
	STA	USFLG			;RESET THE FLAG THAT SAYS VALUES PRINTED
	CMP	D			;TURN THE ZERO FLAG OFF
					;TO INDICATE THE VALUE LIST HASN'T ENDED
	PUSH	PSW			;SAVE FLAG INDICATING WHETHER THE VALUE
					;LIST HAS ENDED
	PUSH	D			;SAVE THE TEXT POINTER INTO THE VALUE LIST
	MOV	B,M			;[B]=LENGTH OF THE "USING" STRING
	ORA	B			;SEE IF ITS ZERO
FCERR3:	JZ	FCERR			;IF SO, "ILLEGAL FUNCTION CALL"
	INX	H			;[H,L]=POINTER AT THE "USING" STRING'S
	MOV	C,M			;DATA
	INX	H
	MOV	H,M
	MOV	L,C
	JMP	PRCCHR			;GO INTO THE LOOP TO SCAN
					;THE "USING" STRING
BGSTRF:	MOV	E,B			;SAVE THE "USING" STRING CHARACTER COUNT
	PUSH	H			;SAVE THE POINTER INTO THE "USING" STRING
	MVI	C,2			;THE \\ STRING FIELD HAS 2 PLUS
					;NUMBER OF ENCLOSED SPACES WIDTH
LPSTRF:	MOV	A,M			;GET THE NEXT CHARACTER
	INX	H			;ADVANCE THE POINTER AT THE "USING" STRING
					;DATA
	CPI	CSTRNG			;THE FIELD TERMINATOR?
	JZ	ISSTRF			;GO EVALUATE A STRING AND PRINT
	CPI	' '			;A FIELD EXTENDER?
	JNZ	NOSTRF			;IF NOT, ITS NOT A STRING FIELD
	INR	C			;INCREMENT THE FIELD WIDTH
					;SEE IF THERE ARE MORE CHARACTERS
	DCR	B
	JNZ	LPSTRF			;KEEP SCANNING FOR THE FIELD TERMINATOR
;
; SINCE  STRING FIELD WASN'T FOUND, THE "USING" STRING 
; CHARACTER COUNT AND THE POINTER INTO IT'S DATA MUST
; BE RESTORED AND THE "\" PRINTED
;
NOSTRF:	POP	H			;RESTORE THE POINTER INTO "USING" STRING'S DATA
	MOV	B,E			;RESTORE THE "USING" STRING CHARACTER COUNT
	MVI	A,CSTRNG		;RESTORE THE CHARACTER
;
; HERE TO PRINT THE CHARACTER IN [A] SINCE IT WASN'T PART OF ANY FIELD
;
NEWUCH:	CALL	PLSPRT			;IF A "+" CAME BEFORE THIS CHARACTER
					;MAKE SURE IT GETS PRINTED
	CALL	OUTDO			;PRINT THE CHARACTER THAT WASN'T
					;PART OF A FIELD
PRCCHR:	XRA	A			;SET [D,E]=0 SO IF WE DISPATCH
	MOV	E,A			;SOME FLAGS ARE ALREADY ZEROED
	MOV	D,A			;DON'T PRINT "+" TWICE
PLSFIN:	CALL	PLSPRT			;ALLOW FOR MULTIPLE PLUSES
					;IN A ROW
	MOV	D,A			;SET "+" FLAG
	MOV	A,M			;GET A NEW CHARACTER
	INX	H
	CPI	'!'			;CHECK FOR A SINGLE CHARACTER
	JZ	SMSTRF			;STRING FIELD
	CPI	'#'			;CHECK FOR THE START OF A NUMERIC FIELD 
	JZ	NUMNUM			;GO SCAN IT
	CPI	'&'			;SEE IF ITS A VARIABLE LENGTH STRING FIELD
	JZ	VARSTR			;GO PRINT ENTIRE STRING
	DCR	B			;ALL THE OTHER POSSIBILITIES
					;REQUIRE AT LEAST 2 CHARACTERS
	JZ	REUSIN			;IF THE VALUE LIST IS NOT EXHAUSTED
					;GO REUSE "USING" STRING
	CPI	'+'			;A LEADING "+" ?
	MVI	A,8			;SETUP [D] WITH THE PLUS-FLAG ON IN
	JZ	PLSFIN			;CASE A NUMERIC FIELD STARTS
	DCX	H			;POINTER HAS ALREADY BEEN INCREMENTED
	MOV	A,M			;GET BACK THE CURRENT CHARACTER
	INX	H			;REINCREMENT THE POINTER
	CPI	'.'			;NUMERIC FIELD WITH TRAILING DIGITS
	JZ	DOTNUM			;IF SO GO SCAN WITH [E]=
					;NUMBER OF DIGITS BEFORE THE "."=0
	CPI	'_'			;CHECK FOR LITERAL CHARACTER DECLARATION
	JZ	LITCHR
	CPI	CSTRNG			;CHECK FOR A BIG STRING FIELD STARTER
	JZ	BGSTRF			;GO SEE IF IT REALLY IS A STRING FIELD
	CMP	M			;SEE IF THE NEXT CHARACTER MATCHES THE
					;CURRENT ONE
	JNZ	NEWUCH			;IF NOT, CAN'T HAVE $$ OR ** SO ALL THE
					;POSSIBILITIES ARE EXHAUSTED
	CPI	CURNCY			;IS IT $$ ?
	JZ	DOLRNM			;GO SET UP THE FLAG BIT
	CPI	'*'			;IS IT ** ?
	JNZ	NEWUCH			;IF NOT, ITS NOT PART
					;OF A FIELD SINCE ALL THE POSSIBILITIES
					;HAVE BEEN TRIED
	MOV	A,B			;SEE IF THE "USING" STRING IS LONG
	INX	H			;CHECK FOR $
	CPI	2			;ENOUGH FOR THE SPECIAL CASE OF
	JC	NOTSPC			; **$
	MOV	A,M
	CPI	CURNCY			;IS THE NEXT CHARACTER $ ?
NOTSPC:	MVI	A,32			;SET THE ASTERISK BIT
	JNZ	SPCNUM			;IF IT NOT THE SPECIAL CASE, DON'T
					;SET THE DOLLAR SIGN FLAG
	DCR	B			;DECREMENT THE "USING" STRING CHARACTER COUNT
					;TO TAKE THE $ INTO CONSIDERATION
	INR	E			;INCREMENT THE FIELD WIDTH FOR THE
					;FLOATING DOLLAR SIGN
	DB	376Q			;"CPI" OVER THE NEXT BYTE
					;MVI SI,  IN 8086
DOLRNM:	XRA	A			;CLEAR [A]
	ADI	16			;SET BIT FOR FLOATING DOLLAR SIGN FLAG
	INX	H			;POINT BEYOND THE SPECIAL CHARACTERS
SPCNUM:	INR	E			;SINCE TWO CHARACTERS SPECIFY
					;THE FIELD SIZE, INITIALIZE [E]=1
	ADD	D			;PUT NEW FLAG BITS IN [A]
	MOV	D,A			;INTO [D]. THE PLUS FLAG MAY HAVE
					;ALREADY BEEN SET
NUMNUM:	INR	E			;INCREMENT THE NUMBER OF DIGITS BEFORE
					;THE DECIMAL POINT
	MVI	C,0			;SET THE NUMBER OF DIGITS AFTER
					;THE DECIMAL POINT = 0
	DCR	B			;SEE IF THERE ARE MORE CHARACTERS
	JZ	ENDNUS			;IF NOT, WE ARE DONE SCANNING THIS
					;NUMERIC FIELD
	MOV	A,M			;GET THE NEW CHARACTER
	INX	H			;ADVANCE THE POINTER AT THE "USING" STRING DATA
	CPI	'.'			;DO WE HAVE TRAILING DIGITS?
	JZ	AFTDOT			;IF SO, USE SPECIAL SCAN LOOP
	CPI	'#'			;MORE LEADING DIGITS ?
	JZ	NUMNUM			;INCREMENT THE COUNT AND KEEP SCANNING
	CPI	54O			;DOES HE WANT A COMMA
					;EVERY THREE DIGITS?
	JNZ	FINNUM			;NO MORE LEADING DIGITS, CHECK FOR ^^^
	MOV	A,D			;TURN ON THE COMMA BIT
	ORI	64
	MOV	D,A
	JMP	NUMNUM			;GO SCAN SOME MORE
;
; HERE WHEN A "." IS SEEN IN THE "USING" STRING
; IT STARTS A NUMERIC FIELD IF AND ONLY IF
; IT IS FOLLOWED BY A "#"
;
DOTNUM:	MOV	A,M			;GET THE CHARACTER THAT FOLLOWS
	CPI	'#'			;IS THIS A NUMERIC FIELD?
	MVI	A,'.'			;IF NOT, GO BACK AND PRINT "."
	JNZ	NEWUCH
	MVI	C,1			;INITIALIZE THE NUMBER OF
					;DIGITS AFTER THE DECIMAL POINT
	INX	H
AFTDOT:	INR	C			;INCREMENT THE NUMBER OF DIGITS
					;AFTER THE DECIMAL POINT
	DCR	B			;SEE IF THE "USING" STRING HAS MORE
	JZ	ENDNUS			;CHARACTERS, AND IF NOT, STOP SCANNING
	MOV	A,M			;GET THE NEXT CHARACTER
	INX	H
	CPI	'#'			;MORE DIGITS AFTER THE DECIMAL POINT?
	JZ	AFTDOT			;IF SO, INCREMENT THE COUNT AND KEEP
					;SCANNING
;
; CHECK FOR THE "^^^^" THAT INDICATES SCIENTIFIC NOTATION
;
FINNUM:	PUSH	D			;SAVE [D]=FLAGS AND [E]=LEADING DIGITS
	LXI	D,NOTSCI		;PLACE TO GO IF ITS NOT SCIENTIFIC
	PUSH	D			;NOTATION
	MOV	D,H			;REMEMBER [H,L] IN CASE
	MOV	E,L			;ITS NOT SCIENTIFIC NOTATION
	CPI	'^'			;IS THE FIRST CHARACTER "^" ?
	RNZ	
	CMP	M			;IS THE SECOND CHARACTER "^" ?
	RNZ	
	INX	H
	CMP	M			;IS THE THIRD CHARACTER "^" ?
	RNZ	
	INX	H
	CMP	M			;IS THE FOURTH CHARACTER "^" ?
	RNZ	
	INX	H
	MOV	A,B			;WERE THERE ENOUGH CHARACTERS FOR "^^^^"
	SUI	4			;IT TAKES FOUR
	RC	
	POP	D			;POP OFF THE NOTSCI RETURN ADDRESS
	POP	D			;GET BACK [D]=FLAGS [E]=LEADING DIGITS
	MOV	B,A			;MAKE [B]=NEW CHARACTER COUNT
	INR	D			;TURN ON THE SCIENTIFIC NOTATION FLAG
	INX	H
	DB	312O			;SKIP THE NEXT TWO BYTES WITH "JZ"
NOTSCI:	XCHG				;RESTORE THE OLD [H,L]
	POP	D			;GET BACK [D]=FLAGS [E]=LEADING DIGITS
ENDNUS:	MOV	A,D			;IF THE LEADING PLUS FLAG IS ON
	DCX	H
	INR	E			;INCLUDE LEADING "+" IN NUMBER OF DIGITS
	ANI	8			;DON'T CHECK FOR A TRAILING SIGN
	JNZ	ENDNUM			;ALL DONE WITH THE FIELD IF SO
					;IF THERE IS A LEADING PLUS
	DCR	E			;NO LEADING PLUS SO DON'T INCREMENT THE
					;NUMBER OF DIGITS BEFORE THE DECIMAL POINT
	MOV	A,B
	ORA	A			;SEE IF THERE ARE MORE CHARACTERS
	JZ	ENDNUM			;IF NOT, STOP SCANNING
	MOV	A,M			;GET THE CURRENT CHARACTER
	SUI	'-'			;TRAIL MINUS?
	JZ	SGNTRL			;SET THE TRAILING SIGN FLAG
	CPI	'+'-'-'			;A TRAILING PLUS?
	JNZ	ENDNUM			;IF NOT, WE ARE DONE SCANNING
	MVI	A,8			;TURN ON THE POSITIVE="+" FLAG
SGNTRL:	ADI	4			;TURN ON THE TRAILING SIGN FLAG
	ADD	D			;INCLUDE WITH OLD FLAGS
	MOV	D,A
	DCR	B			;DECREMENT THE "USING" STRING CHARACTER
					;COUNT TO ACCOUNT FOR THE TRAILING SIGN
ENDNUM:	POP	H			;[H,L]=THE OLD TEXT POINTER
	POP	PSW			;POP OFF FLAG THAT SAYS WHETHER THERE
					;ARE MORE VALUES IN THE VALUE LIST
	JZ	FLDFIN			;IF NOT, WE ARE DONE WITH THE "PRINT"
	PUSH	B			;SAVE [B]=# OF CHARACTERS REMAINING IN
					;"USING" STRING AND [C]=TRAILING DIGITS
	PUSH	D			;SAVE [D]=FLAGS AND [E]=LEADING DIGITS
	CALL	FRMEVL			;READ A VALUE FROM THE VALUE LIST
	POP	D			;[D]=FLAGS & [E]=# OF LEADING DIGITS
	POP	B			;[B]=# CHARACTER LEFT IN "USING" STRING
					;[C]=NUMBER OF TRAILING DIGITS
	PUSH	B			;SAVE [B] FOR ENTERING SCAN AGAIN
	PUSH	H			;SAVE THE TEXT POINTER
	MOV	B,E			;[B]=# OF LEADING DIGITS
	MOV	A,B			;MAKE SURE THE TOTAL NUMBER OF DIGITS
	ADD	C			;DOES NOT EXCEED TWENTY-FOUR
	CPI	25
	JNC	FCERR			;IF SO, "ILLEGAL FUNCTION CALL"
	MOV	A,D			;[A]=FLAG BITS
	ORI	128			;TURN ON THE "USING" BIT
	CALL	PUFOUT			;PRINT THE VALUE
	CALL	STROUT			;ACTUALLY PRINT IT
FNSTRF:	POP	H			;GET BACK THE TEXT POINTER
	DCX	H			;SEE WHAT THE TERMINATOR WAS
	CALL	CHRGTR
	STC				;SET FLAG THAT CRLF IS DESIRED
	JZ	CRDNUS			;IF IT WAS A END-OF-STATEMENT
					;FLAG THAT THE VALUE LIST ENDED
					;AND THAT  CRLF SHOULD BE PRINTED
	STA	USFLG			;FLAG THAT VALUE HAS BEEN PRINTED.
					;DOESNT MATTER IF ZERO SET, [A]
					;MUST BE NON-ZERO OTHERWISE
	CPI	73O			;A SEMI-COLON?
	JZ	SEMUSN			;A LEGAL DELIMITER
	CPI	54O			;A COMMA ?
	JNZ	SNERR			;THE DELIMETER WAS ILLEGAL
SEMUSN:	CALL	CHRGTR			;IS THERE ANOTHER VALUE?
CRDNUS:	POP	B			;[B]=CHARACTERS REMAINING IN "USING" STRING
	XCHG				;[D,E]=TEXT POINTER
	POP	H			;[H,L]=POINT AT THE "USING" STRING
	PUSH	H			;DESCRIPTOR. RESAVE IT.
	PUSH	PSW			;SAVE THE FLAG THAT INDICATES
					;WHETHER OR NOT THE VALUE LIST TERMINATED
	PUSH	D			;SAVE THE TEXT POINTER
;
; SINCE FRMEVL MAY HAVE FORCED GARBAGE COLLECTION
; WE HAVE TO USE THE NUMBER OF CHARACTERS ALREADY SCANNED
; AS AN OFFSET TO THE POINTER TO THE "USING" STRING'S DATA
; TO GET A NEW POINTER TO THE REST OF THE CHARACTERS TO
; BE SCANNED
;
	MOV	A,M			;GET THE "USING" STRING'S LENGTH
	SUB	B			;SUBTRACT THE NUMBER OF CHARACTERS
					;ALREADY SCANNED
	INX	H			;[H,L]=POINTER AT
	MOV	C,M			;THE "USING" STRING'S
	INX	H			;STRING DATA
	MOV	H,M
	MOV	L,C
	MVI	D,0			;SETUP [D,E] AS A DOUBLE BYTE OFFSET
	MOV	E,A
	DAD	D			;ADD ON THE OFFSET TO GET
					;THE NEW POINTER
CHKUSI:	MOV	A,B			;[A]=THE NUMBER OF CHARACTERS LEFT TO SCAN
	ORA	A			;SEE IF THERE ARE ANY LEFT
	JNZ	PRCCHR			;IF SO, KEEP SCANNING
	JMP	FINUSI			;SEE IF THERE ARE MORE VALUES
REUSIN:	CALL	PLSPRT			;PRINT A "+" IF NECESSARY
	CALL	OUTDO			;PRINT THE FINAL CHARACTER
FINUSI:	POP	H			;POP OFF THE TEXT POINTER
	POP	PSW			;POP OFF THE INDICATOR OF WHETHER OR NOT
					;THE VALUE LIST HAS ENDED
	JNZ	REUSST			;IF NOT, REUSE THE "USING" STRING
FLDFIN:	CC	CRDO			;IF NOT COMMA OR SEMI-COLON
					;ENDED THE VALUE LIST
					;PRINT A CRLF
	XTHL				;SAVE THE TEXT POINTER
					;[H,L]=POINT AT THE "USING" STRING'S
					;DESCRIPTOR
	CALL	FRETM2			;FINALLY FREE IT UP
	POP	H			;GET BACK THE TEXT POINTER
	EXTRN	FINPRT
	JMP	FINPRT			;ZERO [PTRFIL]
;
; HERE TO HANDLE A LITERAL CHARACTER IN THE USING STRING PRECEDED
; BY "_"
;
LITCHR:	CALL	PLSPRT			;PRINT PREVIOUS "+" IF ANY
	DCR	B			;DECREMENT COUNT FOR ACTUAL CHARACTER
	MOV	A,M			;FETCH LITERAL CHARACTER
	INX	H
	CALL	OUTDO			;OUTPUT LITERAL CHARACTER
	JMP	CHKUSI			;GO SEE IF USING STRING ENDED
;
; HERE TO HANDLE VARIABLE LENGTH STRING FIELD SPECIFIED WITH "&"
;
VARSTR:	MVI	C,255			;SET LENGTH TO MAXIMUM POSSIBLE
	JMP	ISSTR1
;
; HERE WHEN THE "!" INDICATING A SINGLE CHARACTER
; STRING FIELD HAS BEEN SCANNED
;
SMSTRF:	MVI	C,1			;SET THE FIELD WIDTH TO 1
	DB	76Q			;SKIP NEXT BYTE WITH A "MVI A,"
ISSTRF:	POP	PSW			;GET RID OF THE [H,L] THAT WAS BEING
					;SAVED IN CASE THIS WASN'T A STRING FIELD
ISSTR1:	DCR	B			;DECREMENT THE "USING" STRING CHARACTER COUNT
	CALL	PLSPRT			;PRINT A "+" IF ONE CAME BEFORE THE FIELD
	POP	H			;TAKE OFF THE TEXT POINTER
	POP	PSW			;TAKE OF THE FLAG WHICH SAYS
					;WHETHER THERE ARE MORE VALUES IN THE
					;VALUE LIST
	JZ	FLDFIN			;IF THERE ARE NO MORE VALUES
					;THEN WE ARE DONE
	PUSH	B			;SAVE [B]=NUMBER OF CHARACTERS YET TO
					;BE SCANNED IN "USING" STRING
	CALL	FRMEVL			;READ A VALUE
	CALL	CHKSTR			;MAKE SURE ITS A STRING
	POP	B			;[C]=FIELD WIDTH
	PUSH	B			;RESAVE [B]
	PUSH	H			;SAVE THE TEXT POINTER
	LHLD	FACLO			;GET A POINTER TO THE DESCRIPTOR
	MOV	B,C			;[B]=FIELD WIDTH
	MVI	C,0			;SET UP FOR "LEFT$"
	PUSH	B			;SAVE THE FIELD WIDTH FOR SPACE PADDING
	CALL	LEFTUS			;TRUNCATE THE STRING TO [B] CHARACTERS
	CALL	STRPRT			;PRINT THE STRING
	LHLD	FACLO			;SEE IF IT NEEDS TO BE PADDED
	POP	PSW			;[A]=FIELD WIDTH
	INR	A			;IF FIELD LENGTH IS 255 MUST BE "&" SO
	JZ	FNSTRF			;DONT PRINT ANY TRAILING SPACES
	DCR	A
	SUB	M			;[A]=AMOUNT OF PADDING NEEDED
	MOV	B,A
	MVI	A,' '			;SETUP THE PRINT CHARACTER
	INR	B			;DUMMY INCREMENT OF NUMBER OF SPACES
UPRTSP:	DCR	B			;SEE IF MORE SPACES
	JZ	FNSTRF			;NO, GO SEE IF THE VALUE LIST ENDED AND
					;RESUME SCANNING
	CALL	OUTDO			;PRINT A SPACE
	JMP	UPRTSP			;AND LOOP PRINTING THEM
;
; WHEN A "+" IS DETECTED IN THE "USING" STRING
; IF A NUMERIC FIELD FOLLOWS A BIT IN [D] SHOULD
; BE SET, OTHERWISE "+" SHOULD BE PRINTED.
; SINCE DECIDING WHETHER A NUMERIC FIELD FOLLOWS IS VERY
; DIFFICULT, THE BIT IS ALWAYS SET IN [D].
; AT THE POINT IT IS DECIDED A CHARACTER IS NOT PART
; OF A NUMERIC FIELD, THIS ROUTINE IS CALLED TO SEE
; IF THE BIT IN [D] IS SET, WHICH MEANS
; A PLUS PRECEDED THE CHARACTER AND SHOULD BE
; PRINTED.
;
PLSPRT:	PUSH	PSW			;SAVE THE CURRENT CHARACTER
	MOV	A,D			;CHECK THE PLUS BIT
	ORA	A			;SINCE IT IS THE ONLY THING THAT COULD
					;BE TURNED ON
	MVI	A,'+'			;SETUP TO PRINT THE PLUS
	CNZ	OUTDO			;PRINT IT IF THE BIT WAS SET
	POP	PSW			;GET BACK THE CURRENT CHARACTER
	RET	
	END	
                                                                          