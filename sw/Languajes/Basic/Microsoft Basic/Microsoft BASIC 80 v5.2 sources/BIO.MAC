	SUBTTL	Common file for BASIC interpreter
	.SALL	

CONTO	SET	15			;CHARACTER TO SUPRESS OUTPUT (USUALLY CONTROL-O)
DBLTRN	SET	0			;FOR DOUBLE PRECISION TRANSCENDENTALS
	IF2	

	.PRINTX	/EXTENDED/


	.PRINTX	/LPT/

	.PRINTX	/CPM DISK/


	.PRINTX	/Z80/

	.PRINTX	/FAST/

	.PRINTX	/5.0 FEATURES/

	.PRINTX	/ANSI COMPATIBLE/
	ENDIF

CLMWID	SET	14			;MAKE COMMA COLUMNS FOURTEEN CHARACTERS
DATPSC	SET	128			;NUMBER OF DATA BYTES IN DISK SECTOR
LINLN	SET	80			;TERMINAL LINE LENGTH 
LPTLEN	SET	132
BUFLEN	SET	255			;LONG LINES
NAMLEN	SET	40			;MAXIMUM LENGTH NAME -- 3 TO 127

NUMLEV	SET	0*20+19+2*5		;NUMBER OF STACK LEVELS RESERVED
					;BY AN EXPLICIT CALL TO GETSTK

STRSIZ	SET	4

STRSIZ	SET	3
NUMTMP	SET	3			;NUMBER OF STRING TEMPORARIES

NUMTMP	SET	10

MD.RND	SET	3			;THE MODE NUMBER FOR RANDOM FILES
MD.SQI	SET	1			;THE MODE NUMBER FOR SEQUENTIAL INPUT FILES
					;NEVER WRITTEN INTO A FILE
MD.SQO	SET	2			;THE MODE FOR SEQUENTIAL OUTPUT FILES
					;AND PROGRAM FILES
CPMWRM	SET	0			;CP/M WARM BOOT ADDR
CPMENT	SET	CPMWRM+5		;CP/M BDOS CALL ADDR
	CSEG	
TRUROM	SET	0
	PAGE
	TITLE	BIO BASIC Interpreter I/O routines/WHG/PGA/MBM...
	SUBTTL	OUTDO, OUTCON - CHARACTER OUTPUT
; Microsoft BASIC has a number of primitive I/O routines:
;	OUTDO (either CALL or RST) prints char in [A] no registers affected
;		to either terminal or disk file or printer depending
;		flags:
;			PRTFLG if non-zero print to printer
;			PTRFIL if non-zero print to disk file pointed to
;				by PTRFIL
;
;	INCHR	input a character into [A] condiation codes destroyed.
;		input from disk file if PTRFIL non-zero.
;
;	CRDO	Print a carriage return sequence on either
;		terminal or printer or disk file depending on flags
;		See OUTDO above. See below code for register use
	EXTRN	PPSWRT
	PUBLIC	INCHR,OUTDO,FININL,CRFIN
OUTDO:	PUSH	PSW
	PUSH	H
	EXTRN	PTRFIL
	LHLD	PTRFIL
OUTCON:
	MOV	A,H
	ORA	L
	EXTRN	FILOUT
	JNZ	FILOUT
	POP	H
	EXTRN	PRTFLG
LPTCOD:	LDA	PRTFLG			;SEE IF WE WANT TO TALK TO LPT
	ORA	A			;TEST BITS

					;REGULAR OKIA DRIVER ONLY
	JZ	TTYCHR			;IF ZERO THEN NOT
	POP	PSW			;GET BACK CHAR
	PUSH	PSW
	CPI	8			;BACKSPACE?
	JNZ	NTBKS2			;NO
	LDA	LPTPOS			;GET LPT POS
	DCR	A			;SUBTRACT ONE FROM PRINTER POSIT
	STA	LPTPOS			;CORRECT LPTPOS
	POP	PSW			;GET BACK BACKSPACE
	JMP	LPTCHR			;SEND CHAR
NTBKS2:	CPI	9			;TAB
	JNZ	NOTABL			;NO
MORSPL:	MVI	A,32			;GET SPACE
	CALL	OUTDO			;SEND IT
	EXTRN	LPTPOS
	LDA	LPTPOS			;GET CURRENT PRINT POSIT
	ANI	7			;AT TAB STOP?
	JNZ	MORSPL			;GO BACK IF MORE TO PRINT
	POP	PSW			;POP OFF CHAR
	RET				;RETURN
NOTABL:

	POP	PSW			;GET CHAR BACK
	PUSH	PSW			;SAVE AGAIN
	SUI	13			;IF FUNNY CONTROL CHAR, (LF) DO NOTHING
	JZ	ZERLP1
	JC	LPTCH1			;JUST PRINT CHAR
	EXTRN	LPTSIZ
	LDA	LPTSIZ			;GET SIZE OF PRINTER
	INR	A			;IS IT INFINITE?
	LDA	LPTPOS			;GET POSIT
	JZ	ZERLPT			;THEN DONT FOLD
	PUSH	H			;SSAVE [H,L]
	LXI	H,LPTSIZ		;MAX LENGTH
	CMP	M			;SET CC'S
	POP	H			;THEN DO CRLF
	CZ	PRINTW			;DO CRLF
	JZ	LPTCH1			;IF FORCED CR, LEAVE LPTPOS AT ZERO
ZERLPT:
	CPI	255			;MAX LENGTH?
	JZ	LPTCH1			;THEN JUST PRINT
	INR	A			;INCREMENT POSIT
ZERLP1:	STA	LPTPOS
LPTCH1:	POP	PSW			;GET CHAR BACK
LPTCHR:	PUSH	PSW			;SAVE BACK AGAIN
	PUSH	B			;SAVE [B,C]
	PUSH	D			;SAVE [D,E]
	PUSH	H
	MOV	C,A			;CPM WANTS CHAR IN [C]
	PUBLIC	LPTOUT
LPTOUT:	CALL	0			;PRINTER ROUTINE ADDRESS STORED HERE
	POP	H			;RESTORE REGS
	POP	D
	POP	B
	POP	PSW			;RESTORE CHAR
	RET				;RETURN FROM OUTCHR
	PUBLIC	FINLPT
FINLPT:	XRA	A			;RESET PRINT FLAG SO
	STA	PRTFLG			;OUTPUT GOES TO TERMINAL
	LDA	LPTPOS			;GET CURRENT LPT POSIT
	ORA	A			;ON LEFT HAND MARGIN ALREADY?
	RZ				;YES, RETURN
PRINTW:	MVI	A,13			;PUT OUT CRLF
	CALL	LPTCHR
	MVI	A,10
	CALL	LPTCHR
	XRA	A			;ZERO LPTPOS
	STA	LPTPOS
	RET				;DONE
	PUBLIC	TTYCHR
TTYCHR:
	EXTRN	CNTOFL
	LDA	CNTOFL
	ORA	A
	JNZ	PPSWRT			;NO, DO OUTPUT
	POP	PSW			;GET THE CHARACTER
	PUSH	B
	PUSH	PSW			;AND SAVE IT AGAIN
	CPI	8			;BACKSPACE?
	JNZ	NTBKS1			;NO
	LDA	TTYPOS			;GET TTY POS
	ORA	A			;SET CC'S
	JZ	MORSPR			;RETURN
	DCR	A			;DECRMENT POSIT BY ONE
	STA	TTYPOS			;CORRECT TTYPOS
					;CORRECT TTYPOS
	MVI	A,8			;GET BACK BACKSPACE CHAR
	JMP	TRYOUT			;SEND IT
NTBKS1:	CPI	9			;OUTPUTTING TAB?
	JNZ	NOTAB			;NO.
MORSP:	MVI	A,32			;GET SPACE CHAR
	CALL	OUTDO			;CALL OUTCHR RECURSIVELY (!)
	LDA	TTYPOS			;GET CURRENT PRINT POS.
	ANI	7			;AT TAB STOP YET??
	JNZ	MORSP			;NO, KEEP SPACING
MORSPR:	POP	PSW			;RESTORE CURRENT CHAR (TAB)
	POP	B			;GET [B,C] BACK
	RET				;ALL DONE
NOTAB:
	CPI	32			;IS THIS A MEANINGFUL CHARACTER?
	JC	TRYOUT			;IF IT'S A NON-PRINTING CHARACTER
	EXTRN	LINLEN
	LDA	LINLEN
	MOV	B,A			;[B]=LINE LENGTH
					;DON'T INCLUDE IT IN TTYPOS
	LDA	TTYPOS			;SEE IF PRINT HEAD IS AT THE END OF THE LINE
	INR	B			;IS WIDTH 255?
	JZ	INCTPS			;YES, JUST INC TTYPOS
	DCR	B			;CORRECT [B]
	CMP	B
	PUBLIC	LINPT1
LINPT1	SET	$-1
	CZ	CRDO			;TYPE CRLF AND SET TTYPOS AND [A]=0 IF SO
	JZ	TRYOUT			;IF FORCED CRLF, LEAVE TTYPOS AT ZERO
INCTPS:
	CPI	255			;HAVE WE HIT MAX #?
	JZ	TRYOUT			;THEN LEAVE IT THERE
	INR	A			;INCREMENT TTYPOS SINCE WE'RE
					;GOING TO PRINT A CHARACTER.
	EXTRN	TTYPOS
	STA	TTYPOS			;STORE NEW PRINT HEAD POSITION
					;STORE NEW PRINT HEAD POSITION
TRYOUT:
	POP	PSW			;GET CHAR OFF STACK
	POP	B			;RESTORE [B,C]
	PUSH	PSW			;SAVE PSW BACK
	PUBLIC	NOPRIN
NOPRIN:					; END OF PHLZ80 OFF
	POP	PSW			;GET CHARACTER BACK

	PUSH	PSW			;THEN SAVE BACK
	PUSH	B			;SAVE ALL REGS
	PUSH	D
	PUSH	H
	MOV	C,A			;CPM WANTS CHAR IN [C]
	PUBLIC	CONOUT
CONOUT:	CALL	0			;CPM (BIOS) ENTRY POINT
	POP	H			;RESTORE REGS
	POP	D
	POP	B
	POP	PSW			;RESTORE CHAR
	RET				;RETURN FROM OUTCHR




	PAGE
	SUBTTL	INCHR, TRYIN - CHARACTER INPUT ROUTINES
	PUBLIC	INCHR,TRYIN
INCHR:
	PUSH	H
	LHLD	PTRFIL
	MOV	A,H
	ORA	L
	JZ	NOTFLC			;GET CHARACTER FROM TERMINAL
	EXTRN	INDSKC
	CALL	INDSKC			;READ A CHARACTER
	EXTRN	POPHRT
	JNC	POPHRT			;RETURN WITH CHARACTER
	PUSH	B			;SAVE ALL REGISTERS
	PUSH	D
	PUSH	H
	EXTRN	PRGFIN
	CALL	PRGFIN			;CLOSE THE FILE
	POP	H
	POP	D
	POP	B
	EXTRN	CHNRET
	EXTRN	CHNFLG
	LDA	CHNFLG			;CHAIN IN PROGRESS?
	ORA	A			;TEST..
	JNZ	CHNRET			;YES, PERFORM VARIABLE BLOCK TRANSFER, ETC.
	EXTRN	LSTFRE
	LDA	LSTFRE			;RUN IT OR NOT?
	ORA	A
	EXTRN	NEWSTT
	LXI	H,NEWSTT
	XTHL	
	EXTRN	RUNC
	JNZ	RUNC			;RUN IT
	XTHL	
	PUSH	B			;PRESERVE REGISTERS
	PUSH	D
	EXTRN	REDDY
	LXI	H,REDDY			;PRINT PROMPT "OK"
	EXTRN	STROUT
	CALL	STROUT
	POP	D
	POP	B
	XRA	A
	POP	H
	RET	
NOTFLC:	POP	H
TRYIN:
	PUBLIC	INCHRI
INCHRI:
	PUSH	B			;SAVE REGS
	PUSH	D
	PUSH	H
	PUBLIC	CONIN
CONIN:	CALL	0			;CHANGED TO CALL CI
	POP	H			;RESTORE REGS
	POP	D
	POP	B
	PUBLIC	CNLCB2
CNLCB2	SET	$-1			;CONSOLE COMMAND CHANGE LOC

INEXIT:
	ANI	127			;GET RID OF PARITY BIT
	CPI	CONTO			;IS IT SUPRESS OUTPUT?
	RNZ	
	LDA	CNTOFL
	ORA	A			;ARE WE SUPRESSING OUTPUT?
	EXTRN	CTROPT
	CZ	CTROPT			;THEN PRINT CONTROL-O NOW.
	CMA				;COMPLEMENT ITS STATE
	STA	CNTOFL			;SAVE BACK
	ORA	A			;SEE IF WE ARE TURNING OUTPUT ON.
	JZ	CTROPT			;PRINT THE ^O
	XRA	A			;RETURN WITH NULL WHICH IS ALWAYS IGNORED

	RET	

					;FOR SOME REASON SBC DOENT HAVE CST
					;TERMINATES RSHACK
	PAGE
	SUBTTL	CRDO	Put out a carriage return and associated routines
; CRDO returns with all registers except [A]
; preserved, [A]=0, Zero CC set, Carry reset.

	PUBLIC	CRDONZ
; CRDONZ Only does a CR if TTYPOS is not Zero.
; In other words, only print a carriage return when not at left margin.
CRDONZ:
	LDA	TTYPOS			;GET CURRENT TTYPOS
					;GET CURRENT TTYPOS
	ORA	A			;SET CC'S
	RZ				;IF ALREADY ZERO, RETURN
	JMP	CRDO			;DO CR
FININL:	MVI	M,0			;PUT A ZERO AT THE END OF BUF
	EXTRN	BUFMIN
	LXI	H,BUFMIN		;SETUP POINTER
					;DON'T PUT CR/LF OUT TO LOAD FILE
	PUBLIC	CRDO
CRDO:
	MVI	A,13
	CALL	OUTDO
	MVI	A,10
	PUBLIC	CRFINO
CRFINO:	CALL	OUTDO
CRFIN:
	PUSH	H			;SAVE [H,L]
	LHLD	PTRFIL			;SEE IF OUTPUTTING TO DISK
	MOV	A,H			;IF SO, PTRFIL .NE. 0
	ORA	L			;...
	POP	H			;RESTORE [H,L]
	JZ	CRCONT			;NOT DISK FILE, CONTINUE
	XRA	A			;CRFIN MUST ALWAYS RETURN WITH A=0
	RET				;AND CARRY=0.
CRCONT:
	LDA	PRTFLG			;GOING TO PRINTER?
	ORA	A			;TEST
	JZ	NTPRTR			;NO
	XRA	A			;DONE, RETURN
	STA	LPTPOS			;ZERO POSITON
	RET	
NTPRTR:
	XRA	A			;SET TTYPOS=0
	STA	TTYPOS
	EXTRN	NULCNT
	LDA	NULCNT			;GET NUMBER OF NULLS
PRTNUL:	DCR	A
	RZ				;ALL NULLS DONE [A]=0
					;SOME ROUTINES DEPEND ON CRDO
					;AND CRFIN RETURNING [A]=0 AND Z TRUE
	PUSH	PSW			;SAVE THE COUNT
	XRA	A			;[A]= A NULL
	CALL	OUTDO			;SEND IT OUT
	POP	PSW			;RESTORE THE COUNT
	JMP	PRTNUL			;LOOP PRINTING NULLS
	PUBLIC	ISCNTC
ISCNTC:

	EXTRN	CSTS
	PUSH	B			;SAVE REGS
	PUSH	D
	PUSH	H

	PUBLIC	CONSTS
CONSTS:	CALL	CSTS			;GET CONSOLE STATUS
	POP	H
	POP	D
	POP	B
	ORA	A			;SET CC'S
	RZ				;0=FALSE - NO CHARACTER TYPED
					;IF NONE, RETURN
	PUBLIC	CNTCCN
CNTCCN:
	CALL	INCHRI			;READ THE CHARACTER THAT WAS PRESENT
	CPI	23O			;PAUSE? (^S)
	CZ	INCHRI			;IF PAUSE, READ NEXT CHAR
	STA	CHARC##			;SAVE CHAR IN THE BUFFER
	CPI	3			;^C?
	EXTRN	CTRLPT
	CZ	CTRLPT			;TYPE ^C
	EXTRN	STOP
	JMP	STOP
	PUBLIC	INKEY,CHARCG
	EXTRN	DSCPTR,PUTNEW,REDDY,FACLO,VALTYP,STRIN1,CHARC,SETSTR
	EXTRN	CHRGTR
INKEY:
	CALL	CHRGTR
	PUSH	H			;SAVE THE TEXT POINTER
	CALL	CHARCG			;GET CHARC AND CLEAR IF SET
	JNZ	BUFCIN
MRCHRI:
CONST3::CALL	0
	ORA	A			;SET NON-ZERO IF CHAR THERE
	JZ	NULRT			;NO, RETURN NULL STRING
; GET CHAR IF ONE,
;****SOME VERSIONS ALREADY HAVE CHAR AND DONT WANT THIS CODE ***
;****SO THEY SHOULD TURN ON CHSEAT TO TURN OFF READS
	CALL	INCHRI
BUFCIN:	PUSH	PSW
	CALL	STRIN1			;MAKE ONE CHAR STRING
	POP	PSW
	MOV	E,A			;CHAR TO [D]
	CALL	SETSTR			;STUFF IN DESCRIPTOR AND GOTO PUTNEW

NULRT:	LXI	H,REDDY-1
	SHLD	FACLO
	MVI	A,3
	STA	VALTYP
	POP	H
	RET	

CHARCG::LDA	CHARC			;GET SAVED CHAR
	ORA	A			;IS THERE ONE?
	RZ				;NO, DONE
	PUSH	PSW			;SAVE CHAR
	XRA	A			;CLEAR IT
	STA	CHARC			;BY STORING ZERO
	POP	PSW			;RESTORE CHAR AND NON-ZERO CC'S
	RET	
	PUBLIC	OUTCH1
OUTCH1:
	CALL	OUTDO			;OUTPUT THE CHAR
	CPI	10			;WAS IT A LF?
	RNZ				;NO, RETURN
	MVI	A,13			;DO CR
	CALL	OUTDO
	CALL	CRFIN
	MVI	A,10			;RESTORE CHAR (LF)
	RET	
	END	
                                                       