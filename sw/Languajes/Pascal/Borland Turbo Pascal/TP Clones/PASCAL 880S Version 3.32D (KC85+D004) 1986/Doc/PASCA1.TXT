..Version zum Ausdrucken mit PC1715 / SD1152 ohne Druckertreiber
..16. 01. 1990/ 30.1.90
..Beschreibung entspricht dem TURBO-PASCAL-Handbuch
.pl68
.po10
.op







              B e d i e n u n g s a n l e i t u n g

           ı Ó ‰   ”  Ú · „ Ë ‚ Â Û „ Ë Ú Â È ‚ ı Ó g

                         f { r   d a s 

               P r o g r a m m i e r s y s t e m 

                       P A S C A L   8 8 0

               unter Steuerung des Betriebssystems
                            MicroDOS
.paä








































veb mikroelektronik m{hlhausen

DeÚ Vertrie‚ dieseÚ DruckschrifÙ erfolgÙ ausschlie\licË durcË deÓ ç
Herausgeber. Nachfragen bei der Druckerei sind zwecklos.

OhnÂ† GenehmigunÁ† deÛ HerausgeberÛ isÙ eÛ nicht† gestattet¨† daÛ ç
BucË† odeÚ TeilÂ darauÛ nachzudruckeÓ odeÚ† auÊ† fotomechanischeÌ ç
Wege zu vervielf}ltigen. 

Hinweise¨† diÂ† zuÚ† VerbesserunÁ† dieseÚ† DokumentatioÓ† f{hren¨ ç
werden gern entgegengenommen. 

Redaktionsschlu\: M}rz 1990
.paä.po10
.pn3
.op
.hePASCAL                         #               Inhaltsverzeichnis
I n h a l t s v e r z e i c h n i s        
                                         
                                                            Seite

1.            Einf{hrung.....................................   7  

2.            Bedienung Systemkern ..........................   9
2.1.          Start und Men{ ................................   9
2.2.          Laufwerkzuweisung .............................  11
2.3.          Arbeitsdateizuweisung .........................  11
2.4.          Hauptdateizuweisung ...........................  12
2.5.          Editieren .....................................  12
2.6.          Compilieren ...................................  16
2.7.          Compiler - Optionen ...........................  17
2.8.          Testen (Ausf{hren) ............................  20
2.9.          Sichern .......................................  20
2.10.         Kommandoausf{hrung ............................  21
2.11.         Directory - Anzeige ...........................  21
2.12.         Beenden .......................................  22
2.13.         Hauptspeicherregime ...........................  22
2.13.1.       Compilierung im Speicher ......................  22
2.13.2.       Compilierung auf Diskette .....................  23
2.13.3.       Ausf{hrung im Speicher ........................  24
2.13.4.       Ausf{hrung eines Programmes als transientes
              Kommando ......................................  25      

3.            Systemservice (Dienstprogramme) ...............  26
3.1.          Start und Men{ ................................  26
3.2.          Kopieren ......................................  28
3.3.          Quelltextliste ................................  29
3.4.          Rename ........................................  33
3.5.          Crossreferenzliste ............................  33
3.6.          Type ..........................................  34
3.7.          Moduldiagramm .................................  35
3.8.          Erase .........................................  36
3.9.          Datenschutz ...................................  36
3.10.         Anzeige .......................................  37
3.11.         Status ........................................  38
3.12.         Zur{ck ........................................  38  

4.            Sprachbeschreibung ............................  39
4.1.          Beschreibungsform (Metasprache) ...............  39
4.2.          Grundelemente .................................  39
4.2.1.        Morpheme und Regelungen .......................  39
4.2.1.1.      Wortsymbole ...................................  39
4.2.1.2.      Standardbezeichner ............................  39
4.2.1.3.      Spezialsymbole ................................  40
4.2.1.4.      Begrenzer .....................................  40
4.2.1.5.      Zeilenl}nge ...................................  40
4.2.2.        Nutzerdefinierte Sprachelemente ...............  40
4.2.2.1.      Bezeichner ....................................  40
4.2.2.2.      Zahlen ........................................  41
4.2.2.3.      Zeichenketten .................................  42
4.2.2.4.      CTRL (Steuer)- Zeichen ........................  42
4.2.2.5.      Kommentare ....................................  43
4.2.2.6.      Compiler - Direktiven .........................  43
4.3.          Deklarationen und Definitionen ................  46ä4.3.1.        Programmrahmen ................................  46
4.3.2.        Markendeklaration .............................  47
4.3.3.        Konstantendefinition ..........................  48
4.3.4.        Datentypen und Typdefinitionen ................  48
4.3.4.1.      Typdefinition .................................  49
4.3.4.2.      Einfacher Typ .................................  49
4.3.4.2.1.    Ordinaler Typ .................................  49
4.3.4.2.1.1.  Ordinaler Standardtyp .........................  49
4.3.4.2.1.2.  Aufz}hlungstyp ................................  51
4.3.4.2.1.3.  Teilbereichstyp ...............................  51
4.3.4.2.2.    Realtyp .......................................  51
4.3.4.3.      Strukturierter Typ ............................  52
4.3.4.3.1.    Feld - Typ ....................................  52
4.3.4.3.2.    Record - Typ ..................................  53
4.3.4.3.3.    Datei - Typ ...................................  54
4.3.4.3.4.    Mengen - Typ ..................................  54
4.3.4.3.5.    Dynamischer Zeichenkettentyp ..................  55
4.3.4.3.6.    Standardfelder ................................  55
4.3.4.4.      Zeigertyp .....................................  56
4.3.4.5.      Typumwandlungen und Bereichspr{fungen .........  56
4.3.4.5.1.    Retyping ......................................  56
4.3.4.5.2.    Pseudofunktionen zur Konvertierung ............  57
4.3.5.        Variablendeklaration und Variablenzugriff .....  58
4.3.5.1.      Deklaration von Variablen .....................  58
4.3.5.2.      Variablenzugriff ..............................  59
4.3.6.        Typisierte Konstante ..........................  61
4.3.6.1.      Einfache typisierte Konstante .................  61
4.3.6.2.      Strukturierte typisierte Konstante ............  62
4.3.6.2.1.    Typisierte Feldkonstante ......................  62
4.3.6.2.2.    Mehrdimensionale typisierte Feldkonstante .....  63
4.3.6.2.3.    Typisierte Recordkonstante ....................  63
4.3.6.2.4.    Typisierte Mengenkonstante ....................  64
4.3.7.        Prozedur- und Funktionsdeklaration ............  64
4.4.          Operatoren und Ausdr{cke ......................  65
4.4.1.        Operatoren ....................................  65
4.4.1.1.      Minusvorzeichen ...............................  65
4.4.1.2.      Operator NOT ..................................  65
4.4.1.3.      Multiplikationsoperatoren .....................  66
4.4.1.4.      Additionsoperatoren ...........................  67
4.4.1.5.      Vergleichsoperatoren ..........................  68
4.4.1.6.      Mengenoperatoren ..............................  68
4.4.1.7.      Priorit}t .....................................  69
4.4.2.        Ausdr{cke .....................................  69
4.4.3.        Funktionsaufruf ...............................  70
4.5.          Anweisungen ...................................  71
4.5.1.        ]bersicht .....................................  71
4.5.2.        Einfache Anweisungen ..........................  71
4.5.2.1.      Ergibtanweisung ...............................  71
4.5.2.2.      Prozeduranweisung .............................  72
4.5.2.3.      Sprunganweisung ...............................  72
4.5.2.4.      Leeranweisung .................................  73
4.5.3.        Strukturierte Anweisung .......................  73
4.5.3.1.      Verbundanweisung ..............................  73
4.5.3.2.      Bedingte Anweisungen ..........................  74
4.5.3.2.1.    IF - Anweisung ................................  74
4.5.3.2.2.    CASE - Anweisung ..............................  75
4.5.3.3.      Zyklusanweisungen .............................  76ä4.5.3.3.1.    WHILE - Anweisung .............................  76
4.5.3.3.2.    REPEAT - Anweisung ............................  76
4.5.3.3.3.    FOR - Anweisung ...............................  77
4.5.3.4.      WITH - Anweisung ..............................  78
4.6.          Nutzerdefinierte Prozeduren und Funktionen ....  80
4.6.1.        Deklarationen von Prozeduren und Funktionen ...  80
4.6.1.1.      Prozedurdeklaration ...........................  80
4.6.1.2.      Funktionsdeklaration ..........................  80
4.6.2.        Datenaustausch zwischen Programmeinheiten .....  81
4.6.2.1.      Blockkonzept ..................................  81
4.6.2.2.      Parameter .....................................  82
4.6.2.2.1.    Variablenparameter ............................  83
4.6.2.2.2.    Wertparameter .................................  83
4.6.2.2.3.    Ungetypte Variablenparameter ..................  83
4.6.3.        FORWARD - Deklaration .........................  84
4.6.4.        EXTERNAL - Deklaration ........................  84
4.6.5.        OVERLAY - Strukturen ..........................  85
4.7.          Standardprozeduren und -funktionen 
              (ohne Dateiarbeit und Zeiger) .................  87
4.7.1.        STRING - Funktionen und -Prozeduren ...........  87
4.7.2.        Arithmetische Funktionen ......................  90
4.7.3.        Skalarfunktionen ..............................  93
4.7.4.        Konvertierungsfunktionen (ohne Pseudofunktion)   94
4.7.5.        Bildschirmorientierte Prozeduren ..............  94
4.7.6.        Sonstige Funktionen und Prozeduren ............  95
4.8.          Mengenkonstruktionen und -zuweisungen ......... 101
4.8.1.        Mengenkonstruktionen .......................... 101
4.8.2.        Mengenzuweisungen ............................. 101
4.9.          Zeiger und Listen ............................. 102
4.9.1.        Dynamische Variablen .......................... 102
4.9.2.        Erzeugung und Vernichtung dynamischer Variablen 102
4.9.3.        Mark und Release .............................. 103
4.9.4.        GETMEM und FREEMEM ............................ 103
4.9.5.        Programmierung dynamischer Listen am Beispiel . 104
4.10.         Ein- und Ausgabe von Dateien .................. 106
4.10.1.       Begriffe ...................................... 106
4.10.2.       Dateiprozeduren ............................... 107
4.10.3.       Dateifunktionen ............................... 110
4.10.4.       Nutzung von Bin}rdateien ...................... 111
4.10.5.       Textdateien und Textdateioperationen .......... 111
4.10.6.       Logische Ger}te ............................... 112
4.10.7.       Standarddateien ............................... 113
4.10.8.       Ein- und Ausgabe von Textdateien {ber Standard-
              ger}te ........................................ 115
4.10.8.1.     READ .......................................... 115
4.10.8.2.     READLN ........................................ 117
4.10.8.3.     WRITE ......................................... 117
4.10.8.4.     WRITELN ....................................... 118
4.10.9.       Nichtgetypte Dateien .......................... 119
4.10.10.      Ein- und Ausgabepr{fung (IORESULT) ............ 120
4.11.         Sonstige Sprachelemente und Besonderheiten .... 121
4.11.1.       HEAP- und STACK-Manipulationen ................ 121
4.11.2.       Optimierung der ARRAY-Indizes ................. 122
4.11.3.       BDOS/BIOS-Rufe ................................ 122
4.11.4.       INLINE-Maschinencode .......................... 123
4.11.5.       Nutzergeschriebene I/O-Driver ................. 125
4.11.6.       INTERRUPT-Behandlung .......................... 126ä5.            Hilfprogramme ................................. 127
5.1.          Retten einer editierten Arbeitsdatei nach
              Systemabsturz ................................. 127
5.2.          Installation von Systemkern und Systemservice . 128


Anhang A:     Zeichensatz ................................... 131

Anhang B:     Compilerdirektiven ............................ 132

Anhang C:     INLINE-Maschinencode (8-Bit-Prozessor) ........ 133

Anhang D:     Fehlermeldungen Compiler ...................... 141

Anhang E:     Fehlermeldungen Laufzeitsystem/Systemservice .. 145

Anhang F:     Interne Datenformate .......................... 147

Anhang G:     BDOS/BIOS-Rufe MicroDOS ....................... 155

Anhang H:     Syntax in Backus-Naur-Notation ................ 157

Anhang I:     Vordefinierte Prozeduren und Funktionen ....... 166

Anhang @:     Grafik-Tool-Boxen f{r den KC85/3 bzw. KC85/4 mit 
              D004-Erweiterung und f{r das 
              KC compact-Floppy-System ...................... 171


Sachwortregister ............................................ 179
.paä.hePASCAL                         #                       Einf{hrung
1 .   E i n f { h r u n g 

PASCAÃ† 880/”† isÙ eiÓ leistungsf}higeÛ ProgrammiersysteÌ f{Ú† 8- ç
Bit-RechnerÆ EÛ isÙ lauff}hiÁ unteÚ MicroDO” deÛ KC8µ miÙ Aufsat˙ ç
D00¥† sowiÂ deÛ K√ compact-Floppy-SystemÛ un‰ unteÚ SCPÿ 171µ beÈ ç
eineÌ verf{gbareÓ SpeicherbereicË (TPA© a‚ 4∏ KByte.
Das System f{r 8-Bit-Rechner besteht aus folgenden Teilen:

1Æ SystemkerÓ miÙ Editor¨ Compiler¨ Laufzeitbibliothek¨ InterfacÂ ç
   (PASCAL.COM)¨† FehlertextdateÈ (PASCAL.TXT© un‰ eineÚ Restartç
   routinÂ† (PASCAL.RES© zuÌ WiederladeÓ deÛ SystemkernÛ nacË deÚ ç
   Ausf{hrunÁ voÓ Kommandodateien¨† voÚ alleÌ beÈ deÚ ArbeiÙ† miÙ ç
   nuÚ eineÌ Diskettenlaufwerk.
2Æ SystemservicÂ miÙ  RoutineÓ zuÌ L>scheÓ¨ Umbenennen¨ Kopieren¨ ç
   StatuÛ }ndern¨†ChiffriereÓ voÓ Dateien¨ AnzeigÂ deÚ Diskettenç
   belegung¨† DurchmusterÓ† voÓ  DateieÓ odeÚ deÛ Hauptspeichers¨ ç
   Quelltext-¨† Crossreferenz- un‰ ModuldiagrammlistÂ (PLUS.COM)Æ ç
   F{Ú† QuelltextausgabÂ† miÙ CrossreferenzlistÂ† existierÙ† einÂ ç
   speziellÂ† KomponentÂ† CROSZREF.880¨† diÂ† voÌ†† SystemservicÂ ç
   aktivierÙ† wirdÆ† DeÚ† SystemservicÂ isÙ  voÌ† SystemkerÓ† auÛ ç
   autonoÌ erreichbar.
3Æ†HilfsprogrammÂ† zuÌ†  RetteÓ† voÓ† editierteÌ†  QuelltexÙ† beÈ ç
   Systemabstur˙† (PASRETT.COM© un‰ zuÌ InstalliereÓ voÓ† Systemç
   kerÓ un‰ SystemservicÂ (PASINST.COM).

AllÂ† KomponenteÓ (Systemkern¨† SystemservicÂ un‰ Hilfsprogramme© ç
unterliegeÓ† deÌ† [nderungsdiensÙ un‰ trageÓ† deshal‚† gesondertÂ ç
Versionsnummern.
DiÂ† voÓ† CompileÚ un‰ BibliotheÎ verwaltetÂ SprachÂ† PASCAÃ† isÙ ç
kompatibel zu TURBO-PASCAL./1/
NichÙ† vorhandeÓ† sin‰† CRTINIT¨†† CRTEXIT¨†† DELLINE¨†† INSLINE¨ ç
HIGHVIDEO¨ NORMVIDEœ un‰ LOWVIDEO.

Zus}tzlichÂ††† FunktioneÓ†† sin‰†† SPECSC“†† un‰†† NORMSC“††† zuÚ ç
Bildschirmsteuerung.
DiÂ† SprachelementÂ LABEL/GOTœ k>nneÓ f{Ú LehrzweckÂ miÙ† PASINS‘ ç
herausgenommen und wieder installiert werden.

DeÚ† SystemservicÂ erm>glichÙ hochwertigÂ ListingÛ miÙ† Einr{ckeÓ ç
entsprechen‰   deÚ  Schachtelungstiefe¨   CrossreferenzlistÂ  f{Ú
selbstdefiniertÂ†  BezeichneÚ (wahlweisÂ aucË unteÚ Ber{cksichtiç
gunÁ  deÛ  kyrillischeÓ  Alphabets)¨  paarweiseÛ  NumeriereÓ  voÓ 
BEGIN/ENƒ sowiÂ einÂ Schachtelungs{bersichÙ  alleÚ UnterprogrammÂ ç
iÓ† DiagrammformÆ† DaÛ erleichterÙ un‰ beschleunigÙ diÂ† Entwickç
lungsarbeiÙ erheblichÆ F{Ú LehrzweckÂ iÓ KabinetteÓ kanÓ KopiereÓ ç
un‰ DruckeÓ aÓ CodewortÂ gebundeÓ werden.

SystemkerÓ††† un‰†† SystemservicÂ†† unterst{tzeÓ†† diÂ†† modularÂ ç
ProgrammierunÁ durcË Include-DateieÓ auÊ PASCAL-Quelltext-Ebene.
Dazı† wir‰ iÓ deÓ QuelltexÙ deÚ HauptdateÈ einÂ INCLUDE-DirektivÂ  ç
(*JI  Dateiname<*) geschrieben. /2/

SystemkerÓ† un‰† SystemservicÂ unterbrecheÓ aÓ dieseÚ StellÂ† un‰ ç
verarbeiten den Quelltext der Datei  Dateiname<.
.paäDiÂ† Include-TechniÎ† erm>glichÙ sÔ diÂ EntwicklunÁ† gro\eÚ† Proç
grammÂ un‰ einÂ rationellÂ ArbeiÙ miÙ Anwenderbibliotheken.
DiÂ† auÊ† deÚ DiskettÂ mitgeliefertÂ AnwenderbibliotheÎ† iÓ† ForÌ ç
eineÚ† Grafik-Tool-Bo¯† gestatteÓ† deÌ† PASCAL-ProgrammiereÚ† deÓ ç
ZugrifÊ auÊ diÂ GRAFIK-RoutineÓ deÚ verschiedeneÓ Grundger}te.

BOX3.INC  f{r den KC85/3 mit D004-Erweiterung
BOX4.INC  f{r den KC85/4 mit D004-Erweiterung
BOXC.INC  f{r das KC compact-Floppy-System

DiÂ† BeschreibunÁ deÚ zugeh>rigeÓ FunktioneÓ un‰† ProzedureÓ† isÙ ç
deÌ AnhanÁ @ zı entnehmen.

IÓ dieseÚ DokumentatioÓ wir‰ eiÓ erforderlicheÛ Abschlie\eÓ eineÚ ç
EingabÂ† miÙ ^ET~ gekennzeichnetÆ† BeiÌ KC8µ miÙ D004-ErweiterunÁ ç
entsprichÙ† daÛ† deÌ Bet}tigeÓ deÚ† ^ENTER~-¨† beiÌ† K√† compact-ç
Floppy-System deÚ ^RETURN~-Taste.



































/1Ø†TURBO-PASCAÃ† isÙ eiÓ  eingetrageneÛ WarenzeicheÓ† deÚ† Firm· ç
    Borland International Inc., USA

/2Ø DiÂ SchreibweisÂ  Dateiname< un‰ weiterÂ NotationeÓ iÓ ZiffeÚ ç
    2 und 3 sind ein Vorgriff auf die Metasprache  in Ziffer 4.1.ä.hePASCAL                         #             Bedienung Systemkern
2. B e d i e n u n g   S y s t e m k e r n 

2.1. Start und Men{

Der Start erfolgt durch die Eingabe des Kommandos PASCAL.

Danach erscheint das Titelbild:

-----------------------------------------------------
!                                                   ! 
! PASCAL 880/S (c) 01/08/86 VEB ROBOTRON BWS        !
! Systemkern Version 3.32D/SCPX 1715                !
! KC85+D004/KC compact                              !
!                                                   !
!                                                   !
!                                                   !
! Fehlertext laden   (@/N)?                         !
!                                                   !
!                                                   !
!                                                   !
-----------------------------------------------------

Die Ger}tebezeichnung ist installationsabh}ngig.
DiÂ† FragÂ† isÙ† miÙ† @ odeÚ Œ zı beantwortenÆ† BeÈ† @† wir‰† diÂ ç
KomponentÂ† PASCAL.TX‘† iÓ† diÂ† TP¡† geladenÆ† SiÂ† enth}lÙ† deÓ ç
Fehlertext des Compilers.
DurcË daÛ LadeÓ wir‰ deÚ EditorpuffeÚ uÌ 146≤ ByteÛ† verkleinertÆ ç
Daf{Ú† wir‰ abeÚ beÈ auftretendeÓ FehlerÓ au\eÚ deÚ† FehlernummeÚ ç
auch der Fehlertext ausgegeben.

Beispiel f{r eine Fehlermeldung durch den Compiler:

Fehler 5. Weiter mit ^ESC~                   bei N.
Fehler 5: ')' fehlt. Weiter mit ^ESC~        bei @.

BeÈ† ProgrammeÓ† miÙ umfangreicheÌ QuelltexÙ un‰ beÈ† eineÚ† TPA-ç
Gr>\Â† voÓ 4∏ KBytÂ kanÓ miÙ deÚ AntworÙ Œ Plat˙ gesparÙ un‰† eiÓ ç
]berlauÊ† verhinderÙ werdenÆ† IÓ dieseÌ FalÏ mu\ beÈ deÚ† Fehlerç
analysÂ auÊ diÂ FehlertabellÂ iÌ AnhanÁ ƒ zur{ckgegriffeÓ werden.
.paä.hePASCAL                         #            Bedienung Systemkern 
NacË† BeantwortunÁ deÚ FragÂ miÙ Œ erscheinÙ daÛ Grundmen{† (hieÚ ç
f{r 48 KByte-TPA, Fehlertext nicht geladen):

--------------------------------------------------
!                                                !
! L-aufwerk:A                                    !
!                                                !
! A-rbeitsdatei                                  !
! H-auptdatei                                    !
!                                                !
! E-ditor   C-ompiler-O-ptionen T-est            !
!                                                !
! S-ichern  B-eenden  K-ommando  D-ir            !
!                                                !
! Text:     0 BYTES (7BF5-7BF5)                  !
! Frei: 18698 BYTES (7BF6-C500)                  !
!                                                !
! <                                              !
!                                                !
--------------------------------------------------

IsÙ† deÚ FehlertexÙ geladen¨† wir‰ deÚ  AnfanÁ deÛ† EditorpufferÛ ç
nichÙ miÙ J7BF5¨ sonderÓ miÙ J826¥ angezeigt.
DiÂ oberÂ GrenzÂ JC500 isÙ betriebssystemabh}ngigÆ† BeÈ 5≤ KByte-ç
TPA ist sie JCC06.
AlÛ letzteÛ ZeicheÓ erscheinÙ daÛ PromptzeicheÓ <Æ† DurcË EingabÂ ç
eineÛ† KommandobuchstabenÛ† (iÌ Men{ alÛ ersteÚ† BuchstabÂ† abgeç
setzt©† wir‰ diÂ entsprechendÂ KomponentÂ deÛ SystemkernÛ† aufgeç
rufenÆ† NacË† Ausf{hrunÁ dieseÚ KomponentÂ erscheinÙ† wiedeÚ  dasç
Promptzeichen¨ un‰ einÂ anderÂ FunktioÓ kanÓ aufgerufeÓ werden.
Wir‰† nacË† deÌ† PromptzeicheÓ einÂ TastÂ† gedr{ckt¨† diÂ† keineÌ ç
KommandobuchstabeÓ entspricht¨† wir‰ deÚ BildschirÌ gel>scht¨ un‰ ç
daÛ† Grundmen{ erscheintÆ† DieseÛ WiederaufrufeÓ† deÛ† Grundmen{Û ç
solltÂ maÓ grunds}tzlicË durchf{hren¨ wenÓ diÂ aktuelleÓ WertÂ iÌ ç
Men{ angezeigt werden sollen.

Es gibt folgende Kommandobuchstaben:

L      Laufwerkzuweisung.
       DieseÛ†† KommandÔ† bewirkÙ† zugleicË† daÛ† R{cksetzeÓ† deÛ ç
       Diskettensystems.
A      Arbeitsdatei laden.
       Die Datei steht danach zum Editieren bereit.
H      Hauptdatei spezifieren.
       DieseÛ† KommandÔ† solltÂ† gegebeÓ† werden¨†† wenÓ† daÛ† zı ç
       compilierende Programm Include-Dateien enth}lt.
E      Editieren.
       Eingabe oder Ver}nderung der Arbeitsdatei.
C      Compilation.
       CompilierÙ† wir‰† diÂ Hauptdatei¨† wenÓ† diÂ† ArbeitsdateÈ ç
       nicht angegeben ist.
O      Optionen.
       Setzen von Compiler-Optionen {ber ein Nebenmen{.
T      Testlauf.
       Ausf{hren eines compilierten Programmes.
S      Sichern.
       Schreiben der Arbeitsdatei auf Diskette.äK      Kommandoausf{hrung.
       Ausf{hreÓ† eineÛ† transienteÓ KommandoÛ un‰† Anschlu\† zuÌ ç
       Systemservice mit PLUS.
D      Directory.
       AnzeigÂ† deÚ† Director˘ iÌ aktuelleÓ† LaufwerÎ† sowiÂ† deÛ ç
       freien Speicherplatzes auf der Diskette.
B      Beenden.
       R{ckkehr zum Laufzeitsystem MicroDOS.

DiÂ KommandoÛ werdeÓ soforÙ nacË EingabÂ ausgef{hrtÆ† EÛ isÙ alsÔ ç
kein ^ET~ zu dr{cken.


2.2. Laufwerkzuweisung

NacË†††  EingabÂ†† voÓ†† Ã†† erscheinÙ†† diÂ†† AufforderunÁ†† zuÚ ç
Laufwerkzuweisung :

   Neues Laufwerk: B^ET~

MiÙ† ¬ ^ET~ wir‰ alÛ aktuelleÛ LaufwerÎ ¬† zugewiesenÆ† Wir‰† nuÚ  ç
^ET~ gedr{ckt, bleibt die alte Zuweisung erhalten.
BeÈ† jedeÚ Ausf{hrunÁ deÛ KommandoÛ Ã wir‰ stetÛ aucË daÛ Disketç
tensysteÌ zur{ckgesetztÆ DaÛ R{cksetzeÓ deÛ DiskettensystemÛ ® C© ç
nacË†  DiskettenwechseÏ† kanÓ alsÔ durcË AufruÊ deÛ† KommandoÛ† Ã ç
ohnÂ AngabÂ eineÛ neueÓ LaufwerkeÛ (nuÚ  ^ET~© erfolgen.
DiÂ† NeuzuweisunÁ† eineÛ† LaufwerkeÛ wir‰ iÌ† Men{† nichÙ† soforÙ ç
angezeigtÆ† Dazı isÙ nacË ErscheineÓ deÛ PromptzeichenÛ < nochmaÏ  ç
^ET~ notwendig.


2.3. Arbeitsdateizuweisung

NacË† EingabÂ† voÓ ¡ erscheinÙ diÂ AufforderunÁ zuÚ† EingabÂ† deÛ ç
NamenÛ† f{Ú diÂ ArbeitsdateiÆ† EÛ gelteÓ diÂ bekannteÓ RegelÓ deÛ ç
MicroDOS.
Die Eingabe wird mit

        Arbeitsdateiname:

angefordert und mit

        Laden  Name<

quittiert.  Name< schlie\t eine eventuelle Laufwerksangabe ein.

DamiÙ† wir‰ diÂ DateÈ  Name< voÓ deÌ jeweiligeÓ LaufwerÎ† iÓ† deÓ ç
ArbeitsbereicË†† geladeÓ†† un‰†† kanÓ† danacË† miÙ†† ≈†† odeÚ†† √ ç
weiterbearbeiteÙ† werdenÆ† EinÂ† NamenserweiterunÁ† .PA”† erfolgÙ ç
standardm}\ig. Existiert die Datei nicht, erscheint die 

Ausschrift:

  Datei neu
.paäIÓ† dieseÌ FallÂ kanÓ danacË miÙ ≈ diÂ DateÈ neı angelegÙ werdenÆ ç
FallÛ† iÌ ArbeitsbereicË einÂ nocË nichÙ† gerettete¨† bearbeitetÂ ç
Datei steht, wird dies angezeigt durch:

  Arbeitsdatei  Name< noch sichern (@/N)?

BeÈ† AntworÙ† @† wir‰ diÂ altÂ ArbeitsdateÈ† auÊ† deÌ† jeweiligeÓ ç
Laufwerk abgelegt und die neue Arbeitsdatei zugewiesen.
BeÈ† AntworÙ† Œ† wir‰ diÂ iÌ† ArbeitsbereicË† (deÌ† Editorpuffer© ç
stehende alte Arbeitsdatei durch die neue {berschrieben.


2.4. Hauptdateizuweisung

NacË† EingabÂ† voÓ » erscheinÙ diÂ AufforderunÁ zuÚ† EingabÂ† deÛ ç
Namens f{r die Hauptdatei nach den bekannten Regeln f{r MicroDOS.
Die Namenserweiterung .PAS ist Standard.
DiÂ† BenutzunÁ eineÚ HauptdateÈ wir‰ notwendig¨† wenÓ eiÓ PASCAL-ç
Programm Include- Direktiven (vgl. Ziffer 4.2.2.6.) enth}lt.
DeÚ† CompileÚ beginnÙ danÓ diÂ ]bersetzunÁ miÙ deÌ† HauptprogramÌ ç
un‰ l}dt¨† wenÓ eÚ auÊ einÂ Include-DirektivÂ trifft¨† diÂ† durcË ç
diÂ† Include-DirektiveÓ benanntÂ DateÈ iÓ deÓ† EditorpufferÆ† DiÂ ç
Include-DateieÓ† werdeÓ† ArbeitsdateieÓ un‰ aÓ dieseÚ StellÂ† voÌ ç
CompileÚ {bersetztÆ TreteÓ beÈ deÚ  CompilatioÓ  FehleÚ auf¨ kanÓ ç
diÂ fehlerhaftÂ DateÈ wiÂ {blicË korrigierÙ werdenÆ† DaÛ† AblegeÓ ç
deÚ†† ge}nderteÓ† DateÈ† erfolgÙ† automatisch¨†† un‰† beÈ†† eineÌ ç
erneuten Compilerlauf wird auch die Hauptdatei wieder geladen.


2.5. Editieren

NacË† EingabÂ† voÓ ≈ erscheinÙ deÚ TexÙ deÚ ArbeitsdateÈ auÊ† deÌ ç
Bildschirm¨† un‰† deÚ EditoÚ wir‰ gestartetÆ† DeÚ TexÙ kanÓ† danÓ ç
bearbeitet werden.
ExistierÙ nocË keiÓ Arbeitsdateiname¨ sÔ erfolgÙ diÂ AufforderunÁ ç
zuÚ† EingabÂ eineÛ NamensÆ† DanacË wir‰ diÂ DateÈ† geladeÓ† oder¨ ç
wenÓ† siÂ† nichÙ† gefundeÓ† wurde¨† diÂ† AusschrifÙ† "DateÈ† neu¢ ç
ausgegeben und der Editor gestartet. Es erscheint das Bild:

---------------------------------------------------
!                                                 !
! Zei  Zahl<   Spa  Zahl<   Einfuegen Tab   Name< !
!                                                 !
!                                                 !
!                                                 !
!                                                 !
!                                                 !
---------------------------------------------------

DiÂ† erstÂ ZeilÂ bleibÙ alÛ StatuszeilÂ stetÛ auÊ deÌ† BildschirÌ ç
stehen. Es bedeuten:

Zei    Zahl<    Zahl< ist die Zeilenposition des Cursors.
Spa    Zahl<    Zahl< ist die Spaltenposition des Cursors.
EinfuegeÓ       AnzeigÂ Einf{gen¨† iÌ WechseÏ (CTRÃ V© miÙ† Ersetç
                zen.
äTa‚†           ZeigÙ† automatischeÛ† Einr{ckeÓ aÓ  un‰† kanÓ† miÙ ç
               (CTRL QI) aus- und eingeschaltet werden.
 Name<†        DateinamÂ†  deÛ† geradÂ† editierteÓ† Textes¨† einç
               schlie\licË Laufwerksangabe.

IÓ† diÂ† deÚ StatuszeilÂ folgendeÓ ZeileÓ kanÓ† deÚ† ProgrammtexÙ ç
geschriebeÓ werdenÆ† @edÂ ZeilÂ isÙ durcË ^ET~ abzuschlie\enÆ† IÓ ç
deÓ† untenstehendeÓ† KommandoÛ kanÓ† daÛ† zweitÂ† Control-ZeicheÓ ç
durcË† deÓ† entsprechendeÓ† normaleÓ BuchstabeÓ† ersetzÙ† werden¨ ç
d.h.¨ statÙ  — Ã kanÓ maÓ aucË  QÃ dr{cken.
F{Ú daÛ EditiereÓ k>nneÓ folgendÂ KommandoÛ verwendeÙ werden¨ diÂ ç
weitgehen‰† miÙ† deneÓ† voÓ† TextverarbeitungssystemeÓ†† {bereinç
stimmen:

Cursorbewegungen

ZeicheÓ linkÛ          ”     WirkÙ nuÚ biÛ Zeilenanfang.
ZeicheÓ rechtÛ         ƒ     WirkÙ nuÚ biÛ SpaltÂ 125.
WorÙ linkÛ             ¡     ZuÌ Wortanfang.
                             WortÂ werdeÓ begrenzÙ durch:
                              space<  <,.()^~ '*+-/J
                             WirkÙ {beÚ Zeilengrenzen.
WorÙ rechtÛ            ∆     AnaloÁ oben.
ZeilÂ hocË             ≈     RollmoduÛ beÈ ErreicheÓ obereÚ† 
                             Zeile.
ZeilÂ tieÊ             ÿ     RollmoduÛ beÈ vorletzteÚ Zeile.
RolleÓ hocË            ⁄     RolleÓ uÌ einÂ ZeilÂ zur{ck.
RolleÓ tieÊ            ◊     RolleÓ uÌ einÂ ZeilÂ vorw}rts.
Bl}tterÓ hocË          “     RolleÓ uÌ eiÓ Bil‰ zur{ck.
Bl}tterÓ tieÊ          √     RolleÓ uÌ eiÓ Bil‰ vorw}rts.
ZeilenanfanÁ           — ”   NacË ersteÚ Spalte.
ZeilenendÂ†            — ƒ   NacË SpaltÂ  hinteÚ deÌ letzteÓ 
                             Zeichen.
BildanfanÁ             — ≈   NacË obersteÚ Bildzeile.
BildendÂ               — ÿ   NacË untersteÚ Bildzeile.
FileanfanÁ             — “   NacË ersteÚ TextzeilÂ deÛ Files.
FileendÂ               — √   NacË letzteÚ TextzeilÂ deÛ Files.
BlockbeginÓ            — ¬   ZuÌ Blockbeginn.
BlockendÂ              — À   ZuÌ Blockende.
LetztÂ PositioÓ        — –   R{ckkehÚ zuÚ letzteÓ Cursorposition¨ ç
                             nacË SUCH/ERSETZ-Kommando
                             o.a.

Einf{ge- un‰ L>schkommandos

Einf{ge-ModuÛ ein/auÛ   ÷    Einf{geÓ odeÚ ]berschreiben.
L>scheÓ ZeicheÓ linkÛ  DEÃ   WirkÙ {beÚ ZeilengrenzenÆ 
L>scheÓ ZeicheÓ         «    WirkÙ {beÚ Zeilengrenzen.
L>scheÓ WorÙ rechtÛ     ‘    WirkÙ {beÚ Zeilengrenzen.
ZeilÂ†einf{geÓ†         Œ†   WenÓ  deÚ†  CursoÚ† sicË†  nichÙ† aÌç
                             ZeilenanfanÁ befindet¨ wir‰ diÂ 
                             ZeilÂ aÓ dieseÚ StellÂ getrennt.
ZeilÂ†l>scheÓ†          Ÿ    ZeilÂ  l>schen¨† iÓ  deÚ deÚ† CursoÚç
                             steht.
ZeilenresÙ†l>scheÓ      — Ÿ  L>schÙ ZeilÂ a‚  CursoÚ biÛ Zeilen-ç
                             ende.
.paäBlockkommandos

BlockbeginÓ†            À†¬  DiÂ† gesetztÂ† MarkÂ† isÙ†† nichÙ ç
                             sichtbar.
BlockendÂ††             À†À† DiÂ† gesetztÂ† MarkÂ† isÙ† nichÙ ç
                             sichtbar.
MarkeÓ†l>scheÓ†         À†»† BlockmarkeÓ†werdeÓ†gel>scht¨ 
                             unabh}ngig von der Cursorstellung.
WorÙ markiereÓ          À ‘  MarkiereÓ deÛ WorteÛ aÓ deÚ† Cursor-ç
                             position oder links von ihr.
Block kopieren          K C  Kopieren an die Cursorposition.
                             Marken wandern mit.
Block verschieben       K V  Verschieben an die Cursorposition.
                             Marken wandern mit.
Block l>schen           K Y  Achtung! Ein gel>schter Block ist 
                             nicht zur{ckholbar.
Block lesen             K R  Block aus einer angeforderten Datei
                             lesen.
Block schreiben         K W  Block in eine angeforderte Datei
                             schreibenÆ†MarkeÓ†un‰†BlocÎ verblei-
                             ben an alter Stelle.

BeÈ†† nichtvorhandeneÌ† BlocÎ† habeÓ† diÂ† BlockkommandoÛ†† keinÂ ç
Wirkung. Es erfolgt keine Fehlermeldung.

Spezielle Kommandos

Editieren Ende          K D  R{ckkehr zum PASCAL-Grundmen{.
                             EÛ isÙ zı beachten¨ da\ diÂ Arbeits-ç
                             datei noch nicht gesichert ist.
Tab                     I    Die Tab-Positionen werden durch die 
                             Wortanf}nge der vorhergehenden Zeile
                             bestimmt.
                             Achtung! Im Einf{gemodus werden Tab-
                             Zeichen eingef{gt!

Automatische Tabellierung

ein/auÛ†                 — … FunktionierÙ nuÚ iÌ†Einf{ge-ModusÆ ç
†††††††††††††††††††††††††††††BeÈ†'einß wir‰ 'Tabß iÓ deÚ Statusç
†††††††††††††††††††††††††††††zeilÂ angezeigtª†deÚ CursoÚ springÙ ç
†††††††††††††††††††††††††††††beÈ ^E‘~ nichÙ iÓ diÂ 1Æ†SpaltÂ deÚ ç
†††††††††††††††††††††††††††††neueÓ Zeile¨ sonderÓ unteÚ daÛ erstÂ ç
†††††††††††††††††††††††††††††WorÙ deÚ letzteÓ Zeile.
R{cksetzeÓ†ZeilÂ        — Ã  WerdeÓ Ver}nderungeÓ iÓ eineÚ ZeilÂ 
                             durchgef{hrt, k>nnen diese durch  QL
                             wieder r{ckg}ngig gemacht werden,
                             solange dabei der Cursor die Zeile
                             nicht verlassen hat.
.paäSuchen                  Q F  Die Suchkette kann aus maximal 30 
                             Zeichen bestehen. Sie kann CTRL-
                             Zeichen enthalten und wird durch 
                             ^ET~ beendetÆ†DaÛ ZeilenendÂ†kanÓ 
                             durch  M @ erzeugt werden. In der 
                             Suchkette kann  A als Wildcard (Mas-
                             kenzeichen) verwendet werden.

                             Option:
                             B   R{ckw}rts suchen
                             G   Globales suchen (Anfang bis 
                                 Ende)
                             n   Suchen des n-ten Auftretens
                             U   Ignorieren Gro\-/Kleinbuchstaben
                             W   Nur ganze Worte suchen

                             OptioneÓ†sin‰ ohnÂ ZwischenrauÌ†zı 
                             schreiben und mit ^ET~ zu beenden.
Suchen und Ersetzen     Q A  Suchkette und Zus}tze werden wie 
                             beim Suchen angegeben. Die Zeichen-
                             kette zum Ersetzen kann bis zu 30 
                             Zeichen lang sein. Sie kann CTRL-
                             Zeichen enthalten ( A ohne Bedeu-
                             tung). Abschlu\ durch ^ET~.

                             Option:
                             B   R{ckw}rts suchen
                             G   Globales Suchen (von Anfang bis
                                 Ende)
                             n   n-maliges Ersetzen 
                             N   Ersetzen ohne Fragen:
                                 (Ersetzen (@/N)?)
                             U   Ignorieren Gro\-/Kleinbuchstaben
                             W   Nur ganze Worte suchen

                             Optionen sind ohne Zwischenraum zu
                             schreiben und mit ^ET~ zu beenden.
Suchen wiederholen      L    Wiederholen des letzten  Q F oder 
                              Q A Kmmandos.
Eingabe CTRL-Zeichen    P    Im Programmtext k>nnen CTRL-Zeichen 
                             durch Voranstellen von  P eingegeben
                             werden.
                             Beispiel:  G durch  P G.
                             Auch das zweite CTRL mu\ gedr{ckt 
                             werden.
Abort-Kommando          U    @edes Editor-Kommando kann durch  U
                             sofort abgebrochen werden.
.paä2.6. Compilieren

Nach Eingabe von C erfolgt die Compilation der

     - Hauptdatei, wenn sie existiert,
     - Arbeitsdatei, im anderen Fall.

ExistierÙ† nocË keinÂ Arbeitsdatei¨† erfolgÙ diÂ AufforderunÁ zuÚ ç
Eingabe des Arbeitsdateinamens.
Wir‰†† diÂ† ArbeitsdateÈ† nichÙ† auÊ† deÚ† angegebeneÓ†† DiskettÂ ç
gefunden¨† erscheinÙ† diÂ† MitteilunÁ "DateÈ neu"¨† un‰† eÛ† wir‰ ç
versucht¨† diÂ† leerÂ DateÈ zı {bersetzenÆ† DaÛ ErgebniÛ isÙ† diÂ ç
MeldunÁ "FehleÚ 91∫ VorzeitigeÛ Ende deÚ  Quell-DateiÆ WeiteÚ miÙ  ç
^ESC~"Æ NacË deÌ Dr{ckeÓ deÚ TastÂ ^ESC˛ wir‰ deÚ EditoÚ aufgeruç
fen¨† un‰† diÂ neuÂ DateÈ kanÓ erstellÙ werdenÆ† SolÏ dieÛ† nichÙ ç
geschehen¨† kanÓ† deÚ EditorlauÊ durcË  Kƒ beendeÙ werdenÆ† DamiÙ ç
wir‰ daÛ Grundmen˚ erreichtÆ DiÂ leerÂ DateÈ wir‰ nichÙ gerettet.

DiÂ† CompilatioÓ† un‰ diÂ ForÌ deÛ ObjektcodeÛ sin‰ abh}ngiÁ† voÓ ç
verschiedeneÓ† Compiler-OptionenÆ† EÛ sin‰ StandardwertÂ† festgeç
legt¨ diÂ einÂ zeitg{nstigÂ ]bersetzung¨ minimaleÓ ObjektcodÂ un‰ ç
schnellÂ† AbarbeitunÁ† deÛ {bersetzteÓ† ProgrammeÛ† ergebenÆ† F{Ú ç
bestimmtÂ F}llÂ k>nneÓ diesÂ StandardwertÂ ver}nderÙ werdeÓ (vglÆ ç
ZiffeÚ 2.7.).
BeÈ† AuftreteÓ† eineÛ FehlerÛ iÌ QuelltexÙ wir‰† diÂ† CompilatioÓ ç
abgebrochen in der Form:

------------------------------------------------
!                                              !
! <                                            !
!                                              !
! Compilation                                  !
!   10 Zeilen                                  !
!                                              !
! Fehler 5: ')' fehlt.  Weiter mit  ESC<       !
!                                              !
------------------------------------------------

wobeÈ†† deÚ† FehlertexÙ† nuÚ† danÓ† ausgeschriebeÓ†† wird¨†† wenÓ ç
PASCAL.TX‘ geladeÓ wurdÂ (EingabÂ @ beÈ "FehlertexÙ ladeÓ (@/N)?¢ ç
nacË† deÌ StarteÓ deÛ Systemkerns)Æ† NacË Dr{ckeÓ deÚ TastÂ ^ESC~ ç
wir‰† deÚ† EditoÚ† gestarteÙ un‰ deÚ† CursoÚ† hinteÚ† deÌ† FehleÚ ç
positioniertÆ†† EÛ†† kanÓ† soforÙ† editierÙ† un‰† danacË†† erneuÙ ç
compilierÙ† werdenÆ† BeÈ fehlerfreieÚ ]bersetzunÁ erscheinÙ† z.BÆ ç
folgendes Bild:
.paä-----------------------------------------
!                                       !
! Compilation                           !
!   12 Zeilen                           !
!                                       !
! Code :    81 Bytes (7C65-7CB6)        !
! Frei : 17987 Bytes (7CB7-C2FA)        !
! Daten:    11 Bytes (C2FB-C306)        !
!                                       !
! <                                     !
!                                       !
-----------------------------------------

EÛ werdeÓ diÂ AnzahÏ deÚ {bersetzteÓ Quelltextzeilen¨† diÂ AnzahÏ ç
deÚ ByteÛ un‰ diÂ AdresseÓ f{Ú deÓ Programmcode¨ deÓ DatenbereicË ç
und den noch verbleibenden freien Speicherbereich angegeben.
@Â† nacË festgelegteÚ OptioÓ (KommandÔ O© wir‰ diÂ erzeugtÂ DateÈ ç
gespeichert

      - im TPA         (Hauptspeicher)     (T)    (Standard)
      - als COM-Datei  (Programm)          (P)
      - als CHN-Datei  (Modul)             (M)

(vgl. Ziffer 2.13.)


2.7. Compiler-Optionen

MiÙ† dieseÌ† KommandÔ wir‰ diÂ ForÌ deÚ† AusgabedateÈ† festgelegÙ ç
odeÚ† kanÓ† nacË† eineÌ† beÈ† deÚ† AbarbeitunÁ† eineÚ†† COM-DateÈ ç
aufgetretenen Fehler dessen Stelle gefunden werden.

Nach der Eingabe des Kommandos O erscheint:

-----------------------------------------------------------------
!                                                               !
!   Code f{r-<T-est                                             !
!             P-rogramm                                         !
!             M-odul                                            !
!                                                               !
!                                                               !
!   F-ehlersuche      Z-ur{ck                                   !
!                                                               !
!   <                                                           !
!                                                               !
-----------------------------------------------------------------

Die Stelle des Pfeiles zeigt das aktuelle Ziel des Compilates.
EÛ† kanÓ durcË EingabÂ voÓ T¨† – odeÚ Õ ver}nderÙ werdenÆ† MiÙ† ∆ ç
wir‰ deÚ Suchproze\ zuÚ AuffindunÁ eineÛ FehlerÛ iÌ QuellprogramÌ ç
gestartet¨† un‰† miÙ† ⁄ kanÓ zuÌ Grundmen{ zur{ckgekehrÙ† werdenÆ ç
Start- un‰ EndadressÂ k>nneÓ beÈ deÓ OptioneÓ – odeÚ Õ miÙ ”† un‰ ç
E ge}ndert werden.
.paäDie M>glichkeiten im einzelnen:

‘   (Standard)∫ DeÚ CodÂ wir‰ iÌ HauptspeicheÚ (TPA© erzeugt¨ un‰ ç
       das Programm kann durch T (Test) gestartet werden.

P:     UnteÚ† deÌ† NameÓ deÚ Arbeits- bzwÆ† HauptdateÈ† wir‰† eiÓ ç
       lauff}higeÛ ProgramÌ (COM-Datei© erzeugt¨ daÛ deÓ CodÂ un‰ ç
       diÂ† PASCAL-BibliotheÎ† enth}ltÆ† GestarteÙ wir‰ diÂ† COM-ç
       DateÈ voÓ MicroDO” auÛ alÛ transienteÛ KommandÔ odeÚ durcË ç
†††††††daÛ KommandÔ ‘ (nuÚ unmittelbaÚ nacË deÚ Compilation).
       DiesÂ† ProgrammÂ k>nneÓ gr>\eÚ alÛ beÈ deÚ OptioÓ ‘† sein¨ ç
       d·† ihrÂ AnfangsadressÂ iÌ TP¡ niedrigeÚ liegÙ un‰ beÈ deÚ        ç
       CompilierunÁ† keiÓ TP¡ f{Ú diÂ SpeicherunÁ deÛ† ProgrammeÛ        ç
       ben>tigÙ wirdÆ† NichtgeladeneÚ FehlertexÙ vergr>\erÙ† aucË        ç
       hieÚ† deÓ† ArbeitsbereicË deÛ CompilersÆ† F{Ú deÓ CodÂ† iÓ         ç
       deÚ††† COM-DateÈ†† werdeÓ†† Start- un‰†† EndadressÂ††† deÛ ç
       ProgrammbereicheÛ ausgegeben.
       Sie k>nnen mit S und E ge}ndert werden.

M∫†    UnteÚ† deÌ† NameÓ deÚ  Arbeits- bzwÆ† HauptdateÈ wir‰† eiÓ ç
       aufrufbareÚ† ModuÏ† (CHN-Datei© erzeugtÆ† EÚ† enth}lÙ† deÓ ç
       Programmcode¨† abeÚ† nichÙ† diÂ† PASCAL-BibliothekÆ† DiesÂ ç
       ProgrammÂ k>nneÓ nuÚ voÓ eineÌ andereÓ Pascalprogramm¨ daÛ ç
       miÙ† deÚ† COM-OptioÓ un‰ gleicheÚ† StartadressÂ† {bersetzÙ ç
       wurde¨† durcË diÂ Chain-ProzeduÚ aufgerufeÓ werdenÆ† DamiÙ ç
       bestehÙ diÂ M>glichkeit¨† aucË sehÚ gro\Â† Pascalprogramm-ç
       paketÂ††† zı†† erzeugenÆ††† Start- un‰†† EndadressÂ††† deÛ ç
       ProgrammbereicheÛ† werdeÓ† f{Ú† deÓ† CodÂ†  deÚ† CHN-DateÈ ç
       ausgegeben. Sie k>nnen mit S bzw. E ge}ndert werden.

F∫†    Wir‰† eiÓ ProgramÌ nichÙ miÙ  deÚ T-OptioÓ ausgef{hrÙ† un‰ ç
       eiÓ LaufzeitfehleÚ tritÙ auf¨† kanÓ diÂ StellÂ deÛ FehlerÛ ç
       nichÙ† automatiscË† iÌ QuelltexÙ gefundeÓ† werden¨† d·† zı ç
       dieseÌ† ZeitpunkÙ† deÚ QuelltexÙ iÌ allgemeineÓ nichÙ† zuÚ ç
       Verf{gunÁ† stehtÆ† DeÚ AbbrucË deÛ ProgrammeÛ erfolgÙ† miÙ ç
       der Fehlermeldung

                 Laufzeit-Fehler  nn<. PC= Adresse<
                 Programmabbruch
       oder
                 E/A-Fehler  nn<. PC= Adresse<
                 Programmabbruch

       DabeÈ† isÙ†  nn< diÂ Fehlernummer¨† un‰† diÂ† hexadezimalÂ ç
       Adresse gibt die Fehlerstelle im Code an.
.paäAllgemeinÂ†LaufzeitfehleÚ†
(ausf{hrlichÂ DarstellunÁ†iÌ†AnhanÁ E.1)

CODE ! Bedeutung
-----!-----------------------------------------------------------
01   ! Gleitkomma{berlauf
02   ! Division durch Null
03   ! Fehler im Argument von SQRT ( Null)
04   ! Fehler im Argument von LN   ( =Null)
10   ! Falsche STRING-L}nge (auch in Ergibtanweisungen)
11   ! Fehlerhafter STRING-Index (au\erhalb 1 - 255)
90   ! Index au\erhalb des zul}ssigen Bereiches
91   ! Ordinaler Typ au\erhalb des Wertebereiches
     ! (auch bei Teilbereichstypen)
92   ! Wert au\erhalb des INTEGER-Bereiches
F0   ! OVERLAY-Datei nicht im erwarteten Laufwerk
FF   ! Halden/Kellerspeicher-Kollision


Ein-/Ausgabe-LaufzeitfehleÚ† 
(ausf{hrlichÂ  DarstellunÁ iÌ AnhanÁ E)

CODE  ! Bedeutung
------!----------------------------------------------------------
01    ! Datei existiert nicht
02    ! Datei f{r Leseoperationen nicht vorbereitet
03    ! Datei f{r Schreiboperationen nicht vorbereitet
04    ! Datei nicht ge>ffnet
10    ! Fehler im numerischen Format
20    ! Operation auf logischem Ger}t nicht erlaubt
21    ! Im Direktmodus (Zielauswahl T) nicht erlaubt
22    ! ASSIGN f. vordefinierte Dateivariablen nicht erlaubt
90    ! Recordl}nge nicht vertr}glich
91    ! Position au\erhalb der Datei
99    ! Vorzeitiges Dateiende
F0    ! Disketten-Schreibfehler 
F1    ! Directory voll
F2    ! Datei zu gro\
FF    ! Datei nicht unter Kontrolle

UÌ† diesÂ FehlerpositioÓ iÌ QuellprogramÌ zı finden¨† isÙ† dieseÛ ç
miÙ† ¡† odeÚ » zı spezifierenÆ† DanÓ mu\ (nacË O© daÛ† F-KommandÔ ç
gegebeÓ werdenÆ EÛ wir‰ die Eingabe der Fehleradresse gefordert:

     Stand PC: 3B56 ^ET~

DiÂ EingabÂ deÚ FehleradressÂ (hieÚ 3B56© f{hrÙ zuÌ Suchproze\ iÌ ç
QuellprogrammÆ†† WurdÂ† diÂ† FehlerstellÂ† gefunden¨†† wir‰† dieÛ ç
mitgeteilÙ un‰ zuÌ Dr{ckeÓ deÚ TastÂ ^ESC~† aufgefordertÆ† DanacË ç
erscheinÙ† daÛ† Quellprogramm¨† un‰ deÚ CursoÚ stehÙ† hinteÚ† deÌ ç
Sprachelement¨†† daÛ†† deÓ† FehleÚ† verursachteÆ†† Wir‰† beÈ† deÚ ç
CompilatioÓ† einÂ ]berlagerungsstruktuÚ erzeugÙ† (Overlay)¨† kanÓ ç
eiÓ FehleÚ nichÙ eindeutiÁ lokalisierÙ werdenÆ† DiÂ AdressÂ† wir‰ ç
iÓ deÌ ProgrammteiÏ gesucht¨† daÛ iÓ deÌ ]berlagerungsbereicË alÛ ç
ersteÛ compilierÙ wurde.
.paäS∫† DiÂ† StartadressÂ gibÙ diÂ AdressÂ deÛ ersteÓ ByteÛ  voÌ CodÂ ç
    anÆ† DaÛ isÙ normalerweisÂ diÂ AdressÂ unmittelbaÚ hinteÚ deÚ ç
    Laufzeit-BibliothekÆ† DiesÂ† AdressÂ† kanÓ nacË† obeÓ† erh>hÙ ç
    werden¨† uÌ† Plat˙† z.BÆ† f{Ú† absolutÂ† Variablen¨† diÂ† voÓ ç
    geketteteÓ ProgrammeÓ (CHN-Datei© verwendeÙ werden¨ zı schafç
    fenÆ† NacË EingabÂ deÛ KommandoÛ ” erscheinÙ diÂ AufforderunÁ ç
    zuÚ EingabÂ deÚ StartadresseÆ SiÂ wir‰ hexadezimaÏ eingegebeÓ ç
    un‰† miÙ ^ET~ abgeschlossenÆ† Wir‰ nuÚ  ^ET~† eingegeben¨† sÔ ç
    bleibÙ diÂ altÂ AdressÂ erhaltenÆ 
    DiÂ† CHAIN-DateÈ un‰ diÂ rufendÂ COM-DateÈ sin‰ miÙ† gleicheÚ ç
    Startadresse zu {bersetzen.

E∫† DiÂ†  EndadressÂ† gibÙ† diÂ h>chstÂ† verf{gbarÂ† AdressÂ† deÛ ç
    ProgrammeÛ anÆ DeÚ WerÙ iÓ KlammerÓ isÙ diÂ TPA-GrenzÂ (BDOS-ç
    Anfang)Æ† DiÂ EingabÂ deÚ EndadressÂ erfolgÙ hexadezimalÆ SiÂ ç
    wir‰ miÙ ^ET~ abgeschlossenÆ† Wir‰ nuÚ ^ET~ eingegeben¨† danÓ ç
    bleibt die alte Adresse erhalten. 
    DeÚ† freiÂ SpeicheÚ voÓ z.BÆ† 4∏ KBytÂ (BDOS=C106© kanÓ† nocË     ç
    kleineÚ werden¨† wenÓ BetriebssystemerweiterungeÓ wiÂ Tastenç
    umcodierungeÓ†  un‰ zus}tzlichÂ Ein-/AusgabetreibeÚ† untergeç
    ladeÓ werdenÆ Deshal‚ wir‰ empfohlen¨ diÂ EndadressÂ stetÛ sÔ ç
    niedriÁ wiÂ m>glicË einzustelleÓ (z.BÆ† A000)¨ damiÙ daÛ Proç
    gramÌ m>glichsÙ unteÚ alleÓ SCP-BetriebssystemeÓ† einschlie\ç
    licË† seineÓ† ErweiterungeÓ  lauff}hiÁ istÆ†Zı† beachteÓ† isÙ ç
    nat{rlich¨† da\†  sicË  diÂ HaldÂ  f{Ú  dynamischÂ† VariableÓ ç
    verringertÆ† DanÓ† helfeÓ  HEAP- un‰  STACK-   ManipulationeÓ ç
    (vglÆ 4.11.1.).
    DaÛ† LaufzeitsysteÌ† deÛ† compilierteÓ† ProgrammÛ† pr{fÙ† beÈ ç
    ProgrammstarÙ† diÂ EndadressÂ gegeÓ diÂ aktuellÂ† TPA-GrenzeÆ ç
    BeÈ† Unvertr}glichkeiÙ erscheinÙ diÂ FehlermeldunÁ† "SpeicheÚ ç
    zu klein, Programmabbruch".


2.8. Testen (Ausf{hren)

NacË† EingabÂ† voÓ ‘ wir‰ daÛ {bersetztÂ ProgramÌ† aktivierÙ† un‰ ç
gestartet. @e nach Option bei der ]bersetzung befindet es sich 

- im TPA (Hauptspeicher)       (T)
- als COM-Datei auf Diskette   (P).

WurdÂ†† keiÓ†† {bersetzteÛ† ProgramÌ†† gefunden¨†† sÔ†† {bersetzÙ ç
automatiscË† deÚ† CompileÚ† diÂ† ArbeitsdateÈ† un‰† starteÙ† nacË ç
erfolgreicheÚ† ]bersetzunÁ soforÙ aucË daÛ ProgrammÆ† WurdÂ† nocË ç
keinÂ†† ArbeitsdateÈ†† angegeben¨†† sÔ† wir‰† zuÚ†† EingabÂ†† deÛ ç
ArbeitsdateinamenÛ aufgefordertÆ† ExistierÙ aucË diÂ ArbeitsdateÈ ç
selbsÙ† nocË† nichÙ† auÊ† deÌ Datentr}ger¨† sÔ† wir‰† deÚ† EditoÚ ç
gestartet.


2.9. Sichern

NacË† EingabÂ voÓ ” wir‰ diÂ ArbeitsdateÈ {beÚ daÛ† entsprechendÂ ç
Laufwerk auf Diskette geschrieben.
FallÛ† bereitÛ† auÊ† deÚ† DiskettÂ† eiÓ† ProgramÌ† miÙ†† gleicheÌ ç
DateinameÓ† existiert¨† wir‰ diesÂ iÓ einÂ BAK-DateÈ† umgewandelÙ ç
und die neue Version unter dem urspr{nglichen Namen eingetragen.äVoÚ  Optionen¨†diÂ deÓ EditorpuffeÚ zerst>reÓ (KommandÔ A¨†K¨ B©, ç
wir‰† f{Ú ge}ndertÂ PufferinhaltÂ daÛ SicherÓ deÚ† QuelltextdateÈ ç
{berwacht und gegebenenfalls angeboten.


2.10. Kommandoausf{hrung

NacË EingabÂ voÓ À kanÓ eiÓ beliebigeÛ MicroDOS-ProgramÌ odeÚ miÙ ç
"PLUS¢ deÚ SystemservicÂ gerufeÓ werdeÓ (vglÆ† ZiffeÚ† 3)Æ† EndeÙ ç
daÛ MicroDOS-ProgramÌ miÙ normaleÌ AusganÁ zı MicroDOS¨† sÔ kehrÙ ç
diÂ SteuerunÁ unmittelbaÚ zuÌ SystemkerÓ zur{ck¨† d.h.¨ eÛ werdeÓ ç
PASCAL.COÕ† un‰ diÂ ben>tigtÂ DateÈ geladen¨† einschlie\licË† deÚ ç
zuletzÙ bearbeiteteÓ ArbeitsdateÈ un‰ deÛ HauptdateinamensÆ† DanÓ ç
erscheinÙ† daÛ† PrompÙ† <Æ† EiÓ† nachfolgendeÛ† ^ET~† bringÙ† daÛ ç
Grundmen{† zur{ck¨† eÛ kanÓ abeÚ aucË miÙ jedeÌ andereÓ† KommandÔ ç
wiÂ T¨† E¨  √ uswÆ fortgesetzÙ werdenÆ FallÛ zwischenzeitlicË diÂ ç
DiskettÂ† miÙ† deÌ† SystemkerÓ† auÛ† deÌ† betreffendeÓ† aktuelleÓ ç
LaufwerÎ† entfernÙ† wurde¨† wir‰† deÚ† NutzeÚ† aufgefordert¨† diÂ ç
SystemdiskettÂ wiedeÚ einzulegeÓ un‰ miÙ ^ET~ fortzusetzen:

----------------------------------------------------------------
!                                                              !
! PASCAL.COM nicht gefunden. Bitte in Laufwerk  x<: und  ET<   !
!                                                              !
!                                                              !
----------------------------------------------------------------

DanacË† erfolgÙ† daÛ† LadeÓ† un‰† StarteÓ† deÛ† SystemkernÛ†† wiÂ ç
beschriebenÆ† AuÛ† dieseÚ VerfahrensweisÂ folgt¨† da\ daÛ† SysteÌ ç
bereits mit einem Laufwerk arbeitsf}hig ist.


2.11. Directory-Anzeige

NacË† EingabÂ eineÛ ƒ erfolgÙ diÂ AufforderunÁ zuÚ EingabÂ† eineÚ ç
Maske, die die auszugebenden Programmnamen steuert.
DiÂ† MaskÂ† wir‰† iÓ† deÚ MicroDOS-{blicheÓ WeisÂ† miÙ† ™† un‰† ø ç
gebildeÙ† un‰ miÙ ^ET~ abgeschlossenÆ† Wir‰ nuÚ ^ET~† eingegeben¨ ç
danÓ† wir‰† diÂ gesamtÂ Director˘ deÛ angegebeneÓ LaufwerkeÛ† auÊ ç
deÌ BildschirÌ ausgegeben:

-----------------------------------------------------------------
!                                                               !
! <D                                                            !
! Maske: A:*.PAS                                                !
! HANDEL   PAS : PROBE    PAS : PRO1   PAS : PRO2   PAS         !
! PRO4     PAS : DRUCK    PAS                                   !
!                                                               !
! Byte verf{gbar in A: 25K                                      !
! <                                                             !
!                                                               !
-----------------------------------------------------------------

ZuÌ Abschlu\ wir‰ deÚ auÊ deÚ DiskettÂ nocË freiÂ SpeicherbereicË ç
ausgegebeÓ (hieÚ 25K)Æ DabeÈ k>nneÓ geringf{gigÂ AbweichungeÓ voÓ ç
deÚ† tats}chlicheÓ† Gr>\Â auftretenÆç
.paä2.12. Beenden 

DaÛ† KommandÔ† ¬† dienÙ deÌ VerlasseÓ deÛ† PASCAL-KernÛ† un‰† deÚ ç
R{ckkehÚ† zı MicroDOSÆ† EÛ erscheinÙ daÛ MicroDOS-PrompÙ miÙ† deÌ ç
aktuelleÓ† LaufwerkÆ† FallÛ nocË einÂ editiertÂ† ArbeitsdateÈ† iÌ ç
EditorpuffeÚ existiert¨† diÂ nichÙ gesicherÙ wurde¨ wir‰ gefragt¨ ç
o‚ daÛ gescheheÓ soll.


2.13. Hauptspeicherregime

DiÂ†† folgendeÓ†† AbbildungeÓ† zeigeÓ† deÓ†† SpeicherinhalÙ†† beÈ ç
verschiedeneÓ ArbeitsmodiÆ† EinigÂ GrenzeÓ ver}nderÓ sicË w}hren‰ ç
deÚ† LaufzeiÙ† (durcË† diÂ† Gr>\Â† deÛ† Quelltextes¨†† dynamischÂ ç
VariablÂ† usw.)Æ† DiÂ† Gr>\Â deÚ SegmentÂ iÓ deÓ AbbildungeÓ† haÙ ç
keinen Bezug zur Gr>\e der Speicherbereiche.


2.13.1. Compilierung im Speicher
--------------------------------

W}hren‰ deÚ CompilierunÁ eineÛ ProgrammeÛ iÌ SpeicheÚ (OptioÓ† T© ç
ist dieser wie folgt aufgeteilt:

--------------------------------------- ---  0000
! Systemparameterbereich MicroDOS     !
!                                     !
!-------------------------------------! ---  0100
! Laufzeitbibliothek                  !
!                                     !
!-------------------------------------! ---  20E2 (Standard)
! Editor, Compiler, Interface         !
!                                     !
!-------------------------------------! ---  7BF6
! Fehlermitteilungen (optional)       !
!                                     !
!-------------------------------------! ---  (8264)
! Quelltext                           !          !
!                                     !          !
!-------------------------------------! ---
! Objektcode (Arbeitsbereich Editor   !          !
!             aufw}rts)               !          !
!-------------------------------------! ---
! Symboltabelle (abw}rts)             !          !
!                                     !          !
!-------------------------------------! ---!
! CPU-Stack (abw}rts)                 !          !
!                                     !          !
!-------------------------------------! ---! BDOS - 1
! MicroDOS                            !
!                                     !
!-------------------------------------! ---  FFFF

WurdeÓ† diÂ FehlermitteilungeÓ beiÌ AufruÊ deÛ SystemkernÛ† nichÙ ç
geladen¨† kanÓ† deÚ† QuelltexÙ† bereitÛ† beÈ† deÚ† AdressÂ† J7BF∂ ç
beginnen.
.paäBeiÌ†† AufruÊ† deÛ† CompilerÛ† wir‰† deÚ† ObjektcodÂ† hinteÚ† deÌ ç
aktuellen Quelltext aufw}rts aufgebaut.
DeÚ† CPU-StacÎ arbeiteÙ voÌ logischeÓ SpeicherendÂ† abw}rts¨† un‰ ç
diÂ† SymboltabellÂ deÛ CompilerÛ wir‰ abw}rtÛ voÓ eineÚ† Adresse¨ ç
diÂ 1À (J40∞ Bytes© unterhal‚ deÛ logischeÓ SpeicherendeÛ† liegt¨ ç
aufgebaut.


2.13.2. Compilierung auf Diskette
---------------------------------

W}hren‰ deÚ CompilatioÓ zı  eineÚ .COM- odeÚ .CHN-DateÈ (OptioÓ – ç
odeÚ† M©† isÙ† diÂ AufteilunÁ deÛ SpeicherÛ anderÛ† alÛ† beÈ† deÚ ç
CompilatioÓ† iÌ SpeicherÆ† DeÚ erzeugtÂ ObjektcodÂ stehÙ nichÙ iÌ ç
Speicher¨† sonderÓ wir‰ {beÚ eineÓ relatiˆ kleineÓ PuffeÚ† soforÙ ç
auf der Diskette abgelegt.
Au\erdeÌ† enth}lÙ deÚ CodÂ niedrigerÂ AdressenÆ† IÓ dieseÌ† ModuÛ ç
k>nnen viel gr>\ere Programme {bersetzt werden.


--------------------------------------- ---  0000
! Systemparameterbereich MicroDOS     !
!                                     !
!-------------------------------------! ---  0100
! Laufzeitbibliothek                  !
!                                     !
!-------------------------------------! ---  20E2 (Standard)
! Editor, Compiler, Interface         !
!                                     !
!-------------------------------------! ---  7BF6
! Fehlermitteilungen (optional)       !
!                                     !
!-------------------------------------! ---! (8264)
! Quelltext (Arbeitsbereich Editor    !    !
!            aufw}rts)                !    
!-------------------------------------! ---
! Symboltabelle (abw}rts)             !    
!                                     !    !
!-------------------------------------! ---!
! CPU-Stack (abw}rts)                 !    
!                                     !    !
!-------------------------------------! ---! BDOS - 1
! MicroDOS                            !
!                                     !
!-------------------------------------! ---  FFFF
.paä2.13.3. Ausf{hrung im Speicher
------------------------------

WenÓ† eiÓ† ProgramÌ† iÌ DirektmoduÛ (OptioÓ T©† ausgef{hrÙ† wird¨ ç
sieht die Speicheraufteilung wie folgt aus:

-------------------------------------- ---  0000
! Systemparameterbereich MicroDOS    !
!                                    !
!------------------------------------! ---  0100
! Laufzeitbibliothek                 !
!                                    !
!------------------------------------! ---  20E2 (Standard)
! Editor, Compiler, Interface        !
!                                    !
!------------------------------------! ---! (7BF6)
! Fehlermitteilungen (optional)      !    !
!                                    !    
!------------------------------------! ---!   
! Quelltext (aufw}rts)               !    !
!                                    !
!------------------------------------! ---!
! Objektcode (aufw}rts)              !    !
!                                    !
!------------------------------------! ---!
! HEAP (aufw}rts)                    !    !
! Standardanfangswert vom HEAPPTR    !
!------------------------------------! ---
! Rekursionsstack (abw}rts)          !    
! Standardanfangswert vom RECURPTR   !    !
!------------------------------------! ---!
! CPU-Stack (abw}rts)                !    
! Standardanfangswert vom STACKPTR   !    !
!------------------------------------! ---!
! Programmvariable (abw}rts)         !    
!                                    !    !
!------------------------------------! ---! BDOS - 1
! MicroDOS                           !
!                                    !
!------------------------------------! ---  FFFF

WenÓ eiÓ ProgramÌ {bersetzÙ wurde¨† isÙ daÛ EndÂ deÛ† ObjektcodeÛ ç
bekanntÆ† Standardm}\iÁ† wir‰† auÊ dieseÓ WerÙ pluÛ ±† deÚ† Heap-ç
PointeÚ† (HEAPPTR©† gestellÙ† un‰ deÚ Hea aufw}rtÛ† iÓ† RichtunÁ ç
RekursionsstacÎ aufgebautÆ† DiÂ maximalÂ Speichergr>\Â isÙ† BDOS-ç
AnfanÁ† minuÛ† ±† (wir‰ iÌ Options-Men{† angezeigt)Æ† VoÓ† dieseÚ ç
AdressÂ† werdeÓ† diÂ Programmvariablen¨† alsÔ† nichÙ† Konstanten¨ ç
abw}rtÛ†† gespeicherÙ†† iÓ†† RichtunÁ† deÛ†† EndeÛ†† voÌ†† freieÓ ç
Speicherplatz¨† auÊ† deÌ† deÚ† WerÙ† CPU-StackpointeÚ† (STACKPTR© ç
gestellÙ† wirdÆ† VoÓ† hieÚ† auÛ† wir‰† deÚ† CPU-StackpointeÚ†  iÓ ç
RichtunÁ† RekursionsstacÎ aufgebaut¨† wobeÈ RECURPT“† J40∞† ByteÛ ç
niedrigeÚ alÛ STACKPT“ liegtÆ DeÚ RekursionsstacÎ wir‰ voÓ dieseÚ ç
Stelle in Richtung HEAPPTR (also abw}rts) aufgebaut.
.paä2.13.4 Ausf{hrung eines Programmes als transientes Kommando
-----------------------------------------------------------
 
Wenn  einÂ† ProgrammdateÈ ausgef{hrÙ wir‰ (entwedeÚ {beÚ† À† odeÚ ç
direkt von MicroDOS), sieht die Speicheraufteilung wie folgt aus:

-------------------------------------- ---  0000
! Sytemparameterbereich MicroDOS     !
!                                    !
!------------------------------------! ---  0100
! Laufzeitbibliothek                 !
!                                    !
!------------------------------------! ---  20E2 (Standard)
! Objektcode                         !    !
! Standardanfangswert vom            !    !
! Programmstart (aufw}rts)           !
!------------------------------------! ---!  
! Heap (aufw}rts)                    !    !
! Standardanfangswert vom HEAPPTR    !
!------------------------------------! ---
! Rekursionsstack (abw}rts)          !    
! Standardanfangswert vom RECURPTR   !    !
!------------------------------------! ---!
! CPU Stack (abw}rts)                !    
! Standardanfangswert vom STACKPTR   !    !
!------------------------------------! ---!
! Programmvariablen (abw}rts von     !    
!                    Endadresse)     !    !
!------------------------------------! ---!
! Maximale Speichergr>\e             !  Lader
!                                    !
!------------------------------------! ---
! MicroDOS                           !
!                                    !
!------------------------------------! ---  FFFF

DiÂ†† Standard-StartadressÂ†† deÛ† ProgrammeÛ† (iÌ†† Options-Men{ ç
angegeben©† beginnÙ† unmittelbaÚ hinteÚ† deÚ† LaufzeitbibliothekÆ 
DieseÚ† WerÙ kanÓ miÙ deÌ Startadressen-KommandÔ† iÌ† Option-Men{ ç
ver}nderÙ werden¨† uÌ beispielsweisÂ Plat˙ f{Ú absolutÂ VariableÓ ç
zı† schaffeÓ und/odeÚ externÂ ProzedureÓ zwischeÓ BibliotheÎ† un‰ ç
CodÂ einzuf{genÆ DiÂ maximalÂ Speichergr>\Â isÙ BDO” minuÛ 1ª deÚ ç
StandardwerÙ† wir‰ durcË diÂ L}ngÂ voÓ BDO” iÌ SpeicheÚ bestimmtÆ ç
WenÓ† ProgrammÂ† f{Ú anderÂ RechneÚ {bersetzÙ† werden¨† mu\† dieÛ ç
beachteÙ† werden¨† uÌ† KollisioneÓ miÙ deÌ BDO” auÊ† deÓ† andereÓ ç
RechneÚ† zı vermeidenÆ† DiÂ maximalÂ Speichergr>\Â kanÓ† miÙ† deÌ ç
Endadressen-KommandÔ iÌ Option-Men{ ver}nderÙ werdenÆ† MaÓ solltÂ ç
beachten¨† da\† diÂ† Standard-EndadressÂ etw· 70∞ biÛ 100∞† ByteÛ ç
niedrigeÚ† liegÙ† alÛ diÂ maximalÂ Speichergr>\e¨† uÌ† Plat˙† f{Ú ç
LadeÚ† zı† lassen¨† deÚ† ben>tigÙ wird¨† wenÓ† daÛ† ProgramÌ† voÌ ç
Systemkern mittels K-Kommando gestartet werden soll.
