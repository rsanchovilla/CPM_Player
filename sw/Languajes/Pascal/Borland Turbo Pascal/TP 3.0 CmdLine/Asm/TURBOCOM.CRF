TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1


                                	title	TURBO PASCAL Line Compiler for CP/M 80
                                	name	('TURBOCOM')
                                
                                ; Bases upon DASMed version of TURBO.COM, v3.0
                                ; By W. Cirsovius
                                
                                ; Program compiles into .COM and .CHN file only
                                ;
                                ; It only holds the compiler part of the original package
                                ; It bases upon plane ASCII - no control included
                                
                                ; Call it:
                                ;           TURBOCOM SOURCE_file{.PAS} {/Sstr_address} {/Eend_address} {/H}}
                                
                                ; Option /Saaaa	defines an start address
                                ; Option /Eaaaa	defines an end address
                                ; Option /H 	selects a chain file
                                
                                ;
                                ; This file is the original Run Time Library of TURBO PASCAL 3.0
                                ;
                                	.z80
  0000'                         	aseg
                                	org	0100h
                                
FALSE  0000                          FALSE	equ	0
.TRUE  0001                          .TRUE	equ	1
                                
_RST  0007                          _RST	equ	7		; ** CAUTION **
@RST_RST  0038                          @RST	equ	_RST SHL 3	; RST address     (0x0038H)
RST@RST  00FF                          RST	equ	11000111b + @RST; RST instruction (0xFFH)
                                
OS  0000                          OS	equ	0000h
DU  0004                          DU	equ	0004h
BDOS  0005                          BDOS	equ	0005h
TPATOPBDOS  0006                          TPAtop	equ	BDOS+1
STDFCB  005C                          STDFCB	equ	005ch
NUMBER  005D                          Number	equ	005dh
CCP  0080                          CCP	equ	0080h
                                
TPA  0100                          TPA	equ	0100h
                                
.RESDSK  000D                          .resdsk	equ	13
.SELDSK  000E                          .seldsk	equ	14
.OPEN  000F                          .open	equ	15
.CLOSE  0010                          .close	equ	16
.SRCFRS  0011                          .srcfrs	equ	17
.SRCNXT  0012                          .srcnxt	equ	18
.DELETE  0013                          .delete	equ	19
.RDSEQ  0014                          .rdseq	equ	20
.WRSEQ  0015                          .wrseq	equ	21
.MAKE  0016                          .make	equ	22
.RENAME  0017                          .rename	equ	23
.RETDSK  0019                          .retdsk	equ	25
.SETDMA  001A                          .setdma	equ	26
.GETALV  001B                          .getalv	equ	27
.GETDPBTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-1


  001F                          .getdpb	equ	31
.RNDRD  0021                          .rndrd	equ	33
.RNDWR  0022                          .rndwr	equ	34
.FILSIZ  0023                          .filsiz	equ	35
                                
RECLNG  0080                          RecLng		equ	128	; Standard record length
DIRLNG  000F                          Dirlng		equ	15
                                
MAXPARAMS  001F                          MaxParams	equ	31
                                
@CONST  0002                          @const		equ	 2
@CONIN  0003                          @conin		equ	 3
@CONOUT  0004                          @conout		equ	 4
@LIST  0005                          @list		equ	 5
@AUXOUT  0006                          @auxout		equ	 6
@AUXIN  0007                          @auxin		equ	 7
                                
..CONST@CONST  0003                          ..const		equ	(@const-1)*3
..CONIN@CONIN  0006                          ..conin		equ	(@conin-1)*3
..CONOUT@CONOUT  0009                          ..conout	equ	(@conout-1)*3
..LIST@LIST  000C                          ..list		equ	(@list-1)*3
..AUXOUT@AUXOUT  000F                          ..auxout	equ	(@auxout-1)*3
..AUXIN@AUXIN  0012                          ..auxin		equ	(@auxin-1)*3
                                
FDRV  0001                          Fdrv		equ	 1
FNAME  0008                          Fname		equ	 8
FEXT  0003                          Fext		equ	 3
_SYS  000A                          _SYS		equ	10
_EX  000C                          _ex		equ	12
DIRLEN  0010                          DIRlen		equ	16
_RRN  0021                          _rrn		equ	33
FCBLEN  0024                          FCBlen		equ	36
                                
FIB.REC  0004                          FIB.rec		equ	4		; Pointer #records
FIB.RECLEN  0006                          FIB.reclen	equ	6		; Pointer record length
FIB.CUR  0008                          FIB.cur		equ	8		; Pointer to current record
FIB.FCB  000C                          FIB.FCB		equ	12		; Pointer to FCB
FIBLENFIB.FCBFCBLEN  0030                          FIBlen		equ	FIB.FCB+FCBlen	; FIB length less buffer
FIB.BUFFFIBLEN  0030                          FIB.buff	equ	FIBlen		; Pointer to buffer
                                
FIBTYPE  000F                          FIBtype		equ	00001111b
                                
RD.BIT  0004                          rd.bit		equ	4
WR.BIT  0005                          wr.bit		equ	5
OUT.BIT  0006                          out.bit		equ	6
IN.BIT  0007                          in.bit		equ	7
                                
..IN  0080                          ..in		equ	10000000b
..OUT  0040                          ..out		equ	01000000b
..READ  0010                          ..read		equ	00010000b
                                
FIXRECLEN  0004                          FixRecLen	equ	4	; Fixed record length
REC.WR.BIT  0000                          Rec.Wr.bit	equ	0
REC.NEW.BIT  0001                          Rec.New.bit	equ	1
REC.WR  0001                          Rec.Wr		equ	01b
REC.NEW  0002                          Rec.New		equ	10b
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-2


                                
RAMDEVICE  0006                          RAMdevice	equ	6
                                
HEAPLEN  0004                          HeapLen		equ	4	; Heap administration
HEAPLOADR  0000                          HeapLOadr	equ	0	; Address location
HEAPHIADR  0001                          HeapHIadr	equ	1
HEAPLOLEN  0002                          HeapLOlen	equ	2	; Length location
HEAPHILEN  0003                          HeapHIlen	equ	3
                                
NULL  0000                          null	equ	00h
BS  0008                          bs	equ	08h
TAB  0009                          tab	equ	09h
LF  000A                          lf	equ	0ah
CR  000D                          cr	equ	0dh
EOF  001A                          eof	equ	1ah
ESC  001B                          esc	equ	1bh
CTRLC  0003                          CtrlC	equ	'C'-'@'
XOFF  0013                          Xoff	equ	'S'-'@'
@CAN  0015                          @CAN	equ	'U'-'@'
CTRLX  0018                          CtrlX	equ	'X'-'@'
DEL  007F                          DEL	equ	7fh
                                
LOMASK  000F                          LoMask	equ	00001111b
DPBMASK  001F                          DPBMASK	equ	00011111b
NOMSB  007F                          NOMSB	equ	01111111b
MSB  0080                          MSB	equ	10000000b
LSB  0001                          LSB	equ	00000001b
@MSB  8000                          @MSB	equ	1000000000000000b
                                
MINWID  0038                          MINWID	equ	56			; Min width for filename
                                
MAXINT  7FFF                          MAXINT	equ	32767
DEFSTR  0008                          DefSTR	equ	8
                                
_LB  0000                          _LB	equ	0
_MB  0007                          _MB	equ	7
                                
SGN.BIT  0007                          sgn.bit		equ	7
SIGN.BIT  0080                          sign.bit	equ	10000000b
                                
MANT.LEN  0005                          mant.len	equ	5		; Byte length  of mantissa
REAL.LEN  0006                          Real.Len	equ	6		; Length of real
BIT.LEN  0008                          bit.len		equ	8		; Bits in a byte
EXP.OFFSET  0080                          exp.offset	equ	080h		; Offset in exponent
EXP.ONEEXP.OFFSET  0081                          Exp.One		equ	exp.offset+1	; Exponent for >=1.0
INT.MAXEXP.OFFSET  008F                          int.max		equ	exp.offset+15	; Max exponent for an integer
MANT.BITSMANT.LENBIT.LEN  0028                          mant.bits	equ	mant.len*bit.len
REAL.DIG  0018                          real.dig	equ	24		; Length of mantissa
REAL.FIELD  0007                          real.field	equ	7		; Real field size
REAL.ASCII  000C                          real.ASCII	equ	12		; Decimal places
EXPFIX  004D                          ExpFix		equ	77		; Exponent fix for real to ASCII
EXPRANGE  00D9                          ExpRange	equ	0d9h		; Exponent range
SQR.EXP  0014                          sqr.exp		equ	014h		; SQRT exponent fix
SIN.MIN  006C                          sin.min		equ	06ch		; SIN/COS minimum exponent
LN.MIN  0067                          ln.min		equ	067h		; LN  minimum exponent
EXP.MAX  0088                          exp.max		equ	088h		; EXP maximum exponent
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-3


                                
DOT.BIT  0006                          dot.bit		equ	6		; Status of dot in real
EXPS.BIT  0005                          exps.bit	equ	5		; Sign of exponent
EXP.BIT  0004                          exp.bit		equ	4		; Exponent
                                
L00FE  00FE                          l00fe	equ	254		; Mystery editor size
                                
MEMGAP  02C4                          MEMGAP	equ	 708		; Memory gap at top of memory
STKSPC  0400                          StkSpc	equ	1024		; Stack space
_SAVLEN  2000                          _SavLen	equ	8192
                                
@OVLADR  9000                          @OVLADR	equ	9000h		; Overlay load address
                                
.LD.A  003E                          .LD.A		equ	03eh	; LD A,xx
.LD.BC  0001                          .LD.BC		equ	001h	; LD BC,xxxx
.LD.DE  0011                          .LD.DE		equ	011h	; LD DE,xxxx
.LD.HL  0021                          .LD.HL		equ	021h	; LD HL,xxxx
.LD.SP  0031                          .LD.SP		equ	031h	; LD SP,xxxx
.LD@DE  5BED                          .LD@DE		equ	5bedh	; LD DE,(xxxx)
.LD@HL  002A                          .LD@HL		equ	02ah	; LD HL,(xxxx)
.LDHL@  0022                          .LDHL@		equ	022h	; LD (xxxx),HL
.LDA@  0032                          .LDA@		equ	032h	; LD (xxxx),A
.JP  00C3                          .JP		equ	0c3h	; JP xxxx
.CALL  00CD                          .CALL		equ	0cdh	; CALL addr
.JPZ  00CA                          .JPZ		equ	0cah	; JP Z,xxxx
.EXX  00D9                          .EXX		equ	0d9h	; EXX
.POP.HL  00E1                          .POP.HL		equ	0e1h	; POP HL
.PUSH.HL  00E5                          .PUSH.HL	equ	0e5h	; PUSH HL
.INC.HL  0023                          .INC.HL		equ	023h	; PUSH HL
.DEC.HL  002B                          .DEC.HL		equ	02bh	; PUSH HL
                                ;
SKIP  003E                          skip		equ	03eh	; LD A,xx
SKIP.2  0001                          skip.2		equ	001h	; LD BC,xx
SKIP.3  0011                          skip.3		equ	011h	; LD DE,xx
                                
_LINLEN  007F                          _LinLen		equ	127
                                
.MAXBUF  007E                          .MaxBuf		equ	126	; Max line input
.MAXSAMP  001E                          .MaxSamp	equ	 30	; Max sample input
                                
_AHEAD  0014                          _Ahead		equ	20	; Size of ahead buffer
                                
SET.LEN  0020                          set.len		equ	32
                                
DEFWITH  0002                          DefWITH		equ	2
                                
_BYTE  0001                          _Byte		equ	1
_ADDR  0002                          _Addr		equ	2
                                
_ARRAY  0001                          _Array		equ	 1
_RECORD  0002                          _Record		equ	 2
_SET  0003                          _Set		equ	 3
_PTR  0004                          _Ptr		equ	 4
_RECF  0005                          _RecF		equ	 5
_TXTF  0006                          _TxtF		equ	 6
_UNTF  0007                          _UntF		equ	 7
_STRINGTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-4


  0008                          _String		equ	 8
_REAL  0009                          _Real		equ	 9
_INTEG  000A                          _Integ		equ	10
_BOOL  000B                          _Bool		equ	11
_CHAR  000C                          _Char		equ	12
                                
_LABEL  0001                          _Label		equ	1
_CONST  0002                          _Const		equ	2
_TYPE  0003                          _Type		equ	3
_VAR  0004                          _Var		equ	4
_PROC  0005                          _Proc		equ	5
_OVERLY  0007                          _Overly		equ	7
_BEGIN  0008                          _Begin		equ	8
                                ;
                                ; Option selection bits
                                ;
_ROPT  0002                          _Ropt		equ	00000010b
_UOPT  0008                          _Uopt		equ	00001000b
                                ;
.IOPT  0000                          .Iopt		equ	0
.ROPT  0001                          .Ropt		equ	1
.AOPT  0002                          .Aopt		equ	2
.UOPT  0003                          .Uopt		equ	3
.XOPT  0004                          .Xopt		equ	4
.VOPT  0005                          .Vopt		equ	5
.BOPT  0006                          .Bopt		equ	6
.COPT  0007                          .Copt		equ	7
                                ;
                                ; Search option list
                                ;
_W  0000                          _W		equ	0
_N  0001                          _N		equ	1
_U  0002                          _U		equ	2
_G  0003                          _G		equ	3
_B  0004                          _B		equ	4
                                ;
                                ; Error levels
                                ;
_BRK  0000                          _BRK		equ	0	; User break
_IO  0001                          _IO		equ	1	; I/O error
_RT  0002                          _RT		equ	2	; Run time error
                                ;
                                ; BREAK error
                                ;
_CBRK  0001                          _CBRK		equ	1
                                ;
                                ; Compiler errors
                                ;
_COLEXP  0001                          _ColExp		equ	  1
_SEMIEXP  0002                          _SemiExp	equ	  2
_COMMAEXP  0003                          _CommaExp	equ	  3
_LFTPAR  0004                          _LftPar		equ	  4
_RGTPAR  0005                          _RgtPar		equ	  5
_EQUEXP  0006                          _EquExp		equ	  6
_ASSIGEXP  0007                          _AssigExp	equ	  7
_LFTBREXP  0008                          _LftBrExp	equ	  8
_RGTBREXPTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-5


  0009                          _RgtBrExp	equ	  9
_DOTEXP  000A                          _DotExp		equ	 10
_TWODOTS  000B                          _TwoDots	equ	 11
_BEGINEXP  000C                          _BEGINexp	equ	 12
_NODO  000D                          _NoDO		equ	 13
_END  000E                          _End		equ	 14
_NOOF  000F                          _NoOF		equ	 15
_SUBEXP  0010                          _SUBexp		equ	 16
_STRIDX  0011                          _StrIdx		equ	 17
_NODOWN_TO  0012                          _NoDOWN_TO	equ	 18
_BOOLEXP  0014                          _BoolExp	equ	 20
_FILEVAREXP  0015                          _FileVarExp	equ	 21
_INTCONST  0016                          _IntConst	equ	 22
_INTEXPR  0017                          _IntExpr	equ	 23
_INTVAREXP  0018                          _IntVarExp	equ	 24
_INTREALCEXP  0019                          _IntRealCexp	equ	 25
_NUMEXPREXP  001A                          _NumExprExp	equ	 26
_NUMVAREXP  001B                          _NumVarExp	equ	 27
_PTRVAREXP  001C                          _PtrVarExp	equ	 28
_RECVAREXP  001D                          _RecVarExp	equ	 29
_SIMTYP  001E                          _SimTyp		equ	 30
_SIMPEXPR  001F                          _SimpExpr	equ	 31
_STRGCONEXP  0020                          _StrgConExp	equ	 32
_STRGEXPEXP  0021                          _StrgExpExp	equ	 33
_STRGVAREXP  0022                          _StrgVarExp	equ	 34
_MUSTTEXTFILE  0023                          _MustTextFile	equ	 35
_TYPEEXP  0024                          _TypeExp	equ	 36
_UNTFILEEXP  0025                          _UntFileExp	equ	 37
_UNKLABEL  0028                          _UnkLabel	equ	 40
_UNDEF  0029                          _Undef		equ	 41
_INKPOINTER  002A                          _InkPointer	equ	 42
_DOUBLELAB  002B                          _DoubleLab	equ	 43
_INVTYPE  002C                          _InvType	equ	 44
_CONSTRANGE  002D                          _ConstRange	equ	 45
_ILLCASE  002E                          _IllCASE	equ	 46
_ILLOPS  002F                          _IllOps		equ	 47
_INVRESULT  0030                          _InvResult	equ	 48
_ILLSTRGLEN  0031                          _IllStrgLen	equ	 49
_STRCONST  0032                          _StrConst	equ	 50
_ILLSKALAR  0033                          _IllSkalar	equ	 51
_ILLLIMIT  0034                          _IllLimit	equ	 52
_RESWORD  0035                          _ResWord	equ	 53
_ILLASS  0036                          _IllAss		equ	 54
_STRCONLONG  0037                          _StrConLong	equ	 55
_INTEGERR  0038                          _IntegErr	equ	 56
_REALERR  0039                          _RealErr	equ	 57
_ILLCHAR  003A                          _IllChar	equ	 58
_ILLCONST  003C                          _IllConst	equ	 60
_INVFILPTR  003D                          _InvFilPtr	equ	 61
_NOSTRUKTVAR  003E                          _NoStruktVar	equ	 62
_ILLTXTFILE  003F                          _IllTxtFile	equ	 63
_ILLFILETYPE  0040                          _IllFileType	equ	 64
_NOUNTYPEFILE  0041                          _NoUntypeFile	equ	 65
_INVIO  0042                          _InvIO		equ	 66
_VARFILE  0043                          _VarFile	equ	 67
_FILEF  0044                          _FileF		equ	 68
_INVSETORDERTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-6


  0045                          _InvSetOrder	equ	 69
_ILLSETRANGE  0046                          _IllSetRange	equ	 70
_ILLGOTO  0047                          _IllGOTO	equ	 71
_ILLLABEL  0048                          _IllLabel	equ	 72
_UNDEFFORW  0049                          _UndefFORW	equ	 73
_ILLINLINE  004A                          _IllINLINE	equ	 74
_INVALABS  004B                          _InvalABS	equ	 75
_OVLFORW  004C                          _OvlFORW	equ	 76
_OVLDIRERR  004D                          _OvlDirErr	equ	 77
_NOFILEERR  005A                          _NoFileErr	equ	 90
_ILLSRCEND  005B                          _IllSrcEnd	equ	 91
_NOOVL  005C                          _NoOvl		equ	 92
_COMPDIREC  005D                          _CompDirec	equ	 93	;;--
_INCLERR  0060                          _INCLerr	equ	 96	;;--
_TOOMANYWITH  0061                          _TooManyWITH	equ	 97
_MEMOVFL  0062                          _MemOvfl	equ	 98
_COMPOVFL  0063                          _CompOvfl	equ	 99
_INDXERR  0090                          _IndxErr	equ	144
_RNGERR  0091                          _RngErr		equ	145
_ABORT  00CA                          _ABORT		equ	202
_FNDRTERR  00C8                          _FndRTerr	equ	200
_DSKFULL  00FA                          _DskFull	equ	250
                                ;
                                ; Run-Time errors
                                ;
_FLPOVFL  0001                          _FLPovfl	equ	  1	; 0x01
_DIVZERO  0002                          _DivZero	equ	  2	; 0x02
_NEGSQRT  0003                          _NegSqrt	equ	  3	; 0x03
_LNERR  0004                          _LNerr		equ	  4	; 0x04
_STRLENERR  0010                          _StrLenErr	equ	 16	; 0x10
_TRUNCOVL  0092                          _TruncOvl	equ	146	; 0x92
_OVLERR  00F0                          _OVLerr		equ	240	; 0xf0
_HEAPERR  00FF                          _HeapErr	equ	255	; 0xff
                                ;
                                ; Run-Time I/O errors
                                ;
_NOFILE  0001                          _NoFile		equ	  1	; 0x01
_NOREAD  0002                          _NoRead		equ	  2	; 0x02
_NOWRITE  0003                          _NoWrite	equ	  3	; 0x03
_BLKERR  0004                          _BlkErr		equ	  4	; 0x04
_ILLNUM  0010                          _IllNum		equ	 16	; 0x10
_ILLIO  0020                          _IllIO		equ	 32	; 0x20
_DIRERR  0021                          _DirErr		equ	 33	; 0x21
_STDASSERR  0022                          _StdAssErr	equ	 34	; 0x22
_INVREC  0090                          _InvRec		equ	144	; 0x90
_SEEKEOF  0091                          _SeekEOF	equ	145	; 0x91
_ILLEOF  0099                          _IllEOF		equ	153	; 0x99
_WRERR  00F0                          _WrErr		equ	240	; 0xF0
_DIRFULL  00F1                          _DirFull	equ	241	; 0xF1
_OVFLERR  00F2                          _OvflErr	equ	242	; 0xF2
_NOCLOSE  00FF                          _NoClose	equ	255	; 0xFF
                                
TPHEAD  0015                          TPhead		equ	21	; Header code length for ERROR
                                
_VIDEO  0007                          _Video		equ	7	; Status
                                
@DUMMYTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-7


  04D2                          @DUMMY	equ	04d2h
                                
L0300  0300                          l0300	equ	0300h
L0800  0800                          l0800	equ	0800h
L07D0  07D0                          l07d0	equ	07d0h
                                
L00A0  00A0                          l00a0	equ	00a0h		; Keypressed
L00A3  00A3                          l00a3	equ	00a3h		; Read KBD
L00A6  00A6                          l00a6	equ	00a6h		; Console output
L00A9  00A9                          l00a9	equ	00a9h		; List output
L00AC  00AC                          l00ac	equ	00ach		; Auxiliary output
L00AF  00AF                          l00af	equ	00afh		; Auxiliary input
L00B2  00B2                          l00b2	equ	00b2h		; Console output
L00B5  00B5                          l00b5	equ	00b5h		; Read USR
L00B8  00B8                          l00b8	equ	00b8h		; Base FIB
L00BA  00BA                          l00ba	equ	00bah		; ConinFIB
L00BC  00BC                          l00bc	equ	00bch		; LstFIB
L00BE  00BE                          l00be	equ	00beh		; AuxFIB
L00C0  00C0                          l00c0	equ	00c0h		; UsrFIB
L00C2  00C2                          l00c2	equ	00c2h		; StdIOdev
L00C4  00C4                          l00c4	equ	00c4h		; Heap pointer
L00C6  00C6                          l00c6	equ	00c6h		; Recursion pointer
L00C8  00C8                          l00c8	equ	00c8h		; Four byte random value
L00CC  00CC                          l00cc	equ	00cch		; Base PC
L00CE  00CE                          l00ce	equ	00ceh		; Current PC
L00D0  00D0                          l00d0	equ	00d0h		; I/O result
L00D1  00D1                          l00d1	equ	00d1h		; Buffer length
L00D2  00D2                          l00d2	equ	00d2h		; RTL top of memory
L00D4  00D4                          l00d4	equ	00d4h		; Current pointer
L00D6  00D6                          l00d6	equ	00d6h		; Top pointer
L00D8  00D8                          l00d8	equ	00d8h		; Run mode
L00D9  00D9                          l00d9	equ	00d9h		; + JP xxxx
L00DA  00DA                          l00da	equ	00dah		; + Restart vector
L00DC  00DC                          l00dc	equ	00dch		; Overlay drive
L00DD  00DD                          l00dd	equ	00ddh		; $C mode
L00E0  00E0                          l00e0	equ	00e0h		; Video mode
L00E8  00E8                          l00e8	equ	00e8h		; Pointer ????
L00F4  00F4                          l00f4	equ	00f4h		; Available memory
                                
L0000  0000                          l0000	equ	00h
L0001  0001                          l0001	equ	01h
L0002  0002                          l0002	equ	02h
L0005  0005                          l0005	equ	05h
L0008  0008                          l0008	equ	08h
L000C  000C                          l000c	equ	0ch
L000D  000D                          l000d	equ	0dh
L0015  0015                          l0015	equ	15h
L0019  0019                          l0019	equ	19h
L0024  0024                          l0024	equ	24h
L0030  0030                          l0030	equ	30h
L005C  005C                          l005c	equ	5ch
L0080  0080                          l0080	equ	80h
L0081  0081                          l0081	equ	81h
                                
L00B0  00B0                          l00b0	equ	00b0h
L00DE  00DE                          l00de	equ	0deh
L00E2TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-8


  00E2                          l00e2	equ	0e2h
L00E4  00E4                          l00e4	equ	0e4h
L00E6  00E6                          l00e6	equ	0e6h
L00E9  00E9                          l00e9	equ	0e9h
L00EA  00EA                          l00ea	equ	0eah
L00EC  00EC                          l00ec	equ	0ech
L00ED  00ED                          l00ed	equ	0edh
L00F0  00F0                          l00f0	equ	0f0h
L00F2  00F2                          l00f2	equ	0f2h
L00F6  00F6                          l00f6	equ	0f6h
L00F8  00F8                          l00f8	equ	0f8h
                                
LFFF3  FFF3                          lfff3	equ	0fff3h
LFFFC  FFFC                          lfffc	equ	0fffch
LFFFF  FFFF                          lffff	equ	0ffffh
                                
L0100  0100                          l0100:
L20E2  0100    C3 20E2               	jp	l20e2		; Jump over Run Time Library
                                ;
                                ; %%%%%%%%%%%%%%%%%%%%%%%%%
                                ; %%% RUN TIME ROUTINES %%%
                                ; %%%%%%%%%%%%%%%%%%%%%%%%%
                                ;
  0103    CD AB                 	db	0cdh,0abh
  0105    43 6F 70 79           	db	'Copyright (C) 1985 BORLAND Inc',null
  0109    72 69 67 68           
  010D    74 20 28 43           
  0111    29 20 31 39           
  0115    38 35 20 42           
  0119    4F 52 4C 41           
  011D    4E 44 20 49           
NULL  0121    6E 63 00              
L0124  0124                          l0124:
  0124    04                    	db	4		; CPU speed
  0125    00 A1 42              	db	0,0a1h,'B'
                                ;
                                ; &&&&&&&&&&&&&&&&&&
                                ; &&& PATCH AREA &&&
                                ; &&&&&&&&&&&&&&&&&&
                                ;
L0128  0128                          l0128:
  0128                          	ds	43
                                ;
L0153  0153                          l0153::
TERMLEN  0153    0F                    	db	TermLen
  0154    53 63 68 6E           	db	'Schneider Joyce'
  0158    65 69 64 65           
  015C    72 20 4A 6F           
  0160    79 63 65              
TERMLENL0153  000F                          TermLen	equ	$-l0153-1
  0163    31 32 38 36           	db	'12864'
  0167    34                    
L0168  0168                          l0168:
  0168    5A                    	db	90		; Screen columns
L0169  0169                          l0169:
  0169    001F                  	dw	31		; Screen lines
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-9


                                ;
                                ; Lead in sequence: Leave 24x80 mode
                                ;
L016B  016B                          l016b:
ESC  016B    02 1B 79              	db	2,esc,'y'
                                ;
  016E    1B 59 20 20           	db	1bh,'Y  ',1,1,1dh
  0172    01 01 1D              
  0175    03 03 1B 1B           	db	3,3,1bh,1bh,1bh,0d5h
  0179    1B D5                 
                                ;
                                ; Lead out sequence: Enter 24x80 mode
                                ;
L017B  017B                          l017b:
ESC  017B    02 1B 78              	db	2,esc,'x'
                                ;
  017E    00 00 1C 00           	db	0,0,1ch,0,17h,17h
  0182    17 17                 
  0184    1D 17 17 EF           	db	1dh,17h,17h,0efh,9eh,0cdh,0bdh
  0188    9E CD BD              
L018B  018B                          l018b:
ESC  018B    04 1B 59 00           	db	4,esc,'Y',0,0
  018F    00                    
  0190                          	ds	11
LL018BL018B  0010                          ll018b	equ	$-l018b
L019B  019B                          l019b:
  019B    01                    	db	1		; Binary indicator (1 is binary)
L019C  019C                          l019c:
  019C    20                    	db	' '		; Offset for column
L019D  019D                          l019d:
  019D    20                    	db	' '		; Offset for row
L019E  019E                          l019e:
  019E    04                    	db	4		; Position of column
L019F  019F                          l019f:
  019F    03                    	db	3		; Position of row
L01A0  01A0                          l01a0:
  01A0    0000                  	dw	0
                                ;
                                ; Clear display
                                ;
L01A2  01A2                          l01a2:
ESC  01A2    02 1B 45              	db	2,esc,'E'
  01A5                          	ds	3
                                ;
                                ; Home cursor
                                ;
L01A8  01A8                          l01a8:
ESC  01A8    02 1B 48              	db	2,esc,'H'
  01AB                          	ds	3
                                ;
                                ; Insert line
                                ;
L01AE  01AE                          l01ae:
ESC  01AE    02 1B 4C              	db	2,esc,'L'
  01B1                          	ds	3
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-10


                                ; Delete line
                                ;
L01B4  01B4                          l01b4:
ESC  01B4    02 1B 4D              	db	2,esc,'M'
  01B7                          	ds	3
L01BA  01BA                          l01ba:
  01BA    0000                  	dw	0
                                ;
                                ; Clear to end of line
                                ;
L01BC  01BC                          l01bc:
ESC  01BC    02 1B 4B              	db	2,esc,'K'
  01BF                          	ds	3
                                ;
                                ; Turn off inverse
                                ;
L01C2  01C2                          l01c2:
ESC  01C2    02 1B 71              	db	2,esc,'q'
  01C5                          	ds	3
                                ;
                                ; Turn on inverse
                                ;
L01C8  01C8                          l01c8:
ESC  01C8    02 1B 70              	db	2,esc,'p'
  01CB                          	ds	3
L01CE  01CE                          l01ce:
  01CE    0000                  	dw	0
                                ;
                                ; Print control string ^HL on console
                                ; C set if control not defined
                                ;
L01D0  01D0                          l01d0:
  01D0    7E                    	ld	a,(hl)		; Get character
  01D1    B7                    	or	a		; Test defined
  01D2    37                    	scf
  01D3    C8                    	ret	z		; Nope as C set says
L01D4  01D4                          l01d4:
  01D4    23                    	inc	hl
  01D5    F5                    	push	af
  01D6    E5                    	push	hl
  01D7    7E                    	ld	a,(hl)		; Get character
L01E8  01D8    CD 01E8               	call	l01e8		; Put to console
  01DB    E1                    	pop	hl
  01DC    F1                    	pop	af
  01DD    3D                    	dec	a
  01DE    C8                    	ret	z
L01D4  01DF    18 F3                 	jr	l01d4
                                ;
                                ; Give new line on console
                                ;
L01E1  01E1                          l01e1:
L0200  01E1    CD 0200               	call	l0200
CRLFNULL  01E4    0D 0A 00              	db	cr,lf,null
  01E7    C9                    	ret
                                ;
                                ; Put character on console
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-11


                                ;
L01E8  01E8                          l01e8:
  01E8    6F                    	ld	l,a
  01E9    E5                    	push	hl		; Push onto stack
L00A6  01EA    CD 00A6               	call	l00a6		; Put to console
  01ED    C9                    	ret
                                ;
                                ; Check character for attribute
                                ; MSB set for normal output
                                ;
L01EE  01EE                          l01ee:
MSB  01EE    FE 80                 	cp	MSB		; Test attribute set
L026B  01F0    DC 026B               	call	c,l026b		; Nope, set invers video
L0284  01F3    D4 0284               	call	nc,l0284	; Yeap, set normal video
NOMSB  01F6    E6 7F                 	and	NOMSB		; Strip off attribute
L01E8  01F8    18 EE                 	jr	l01e8
                                ;
                                ; Print immediate control string on console
                                ;
L01FA  01FA                          l01fa:
  01FA    E5                    	push	hl
L01EE  01FB    21 01EE               	ld	hl,l01ee	; Get new output routine
L0204  01FE    18 04                 	jr	l0204
                                ;
                                ; Print immediate string on console
                                ;
L0200  0200                          l0200:
  0200    E5                    	push	hl
L01E8  0201    21 01E8               	ld	hl,l01e8	; Get new output routine
L0204  0204                          l0204:
L0213  0204    22 0213               	ld	(l0213),hl	; Change output vector
  0207    E1                    	pop	hl
  0208    E3                    	ex	(sp),hl		; Get pointer to string
  0209    F5                    	push	af
  020A    C5                    	push	bc
  020B    D5                    	push	de
L020C  020C                          l020c:
  020C    7E                    	ld	a,(hl)		; Get character
  020D    23                    	inc	hl
  020E    B7                    	or	a		; Test end
L0218  020F    28 07                 	jr	z,l0218		; Yeap
  0211    E5                    	push	hl
L0213  0213                          l0213	equ	$+1
@DUMMY  0212    CD 04D2               	call	@DUMMY		; Process output
  0215    E1                    	pop	hl
L020C  0216    18 F4                 	jr	l020c
L0218  0218                          l0218:
  0218    D1                    	pop	de
  0219    C1                    	pop	bc
  021A    F1                    	pop	af
  021B    E3                    	ex	(sp),hl
  021C    C9                    	ret
                                ;
                                ; Delay by value in reg HL
                                ;
L021D  021D                          l021d:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-12


  021D    7D                    	ld	a,l
  021E    B4                    	or	h		; Test any value given
  021F    C8                    	ret	z		; Nope
L0124  0220    3A 0124               	ld	a,(l0124)	; Get CPU speed
  0223    87                    	add	a,a
  0224    87                    	add	a,a
  0225    87                    	add	a,a		; Build delay value
L0226  0226                          l0226:
  0226    E3                    	ex	(sp),hl		;  5 cycles
  0227    E3                    	ex	(sp),hl		; 10 cycles
  0228    E3                    	ex	(sp),hl		; 15 cycles
  0229    E3                    	ex	(sp),hl		; 20 cycles
  022A    C5                    	push	bc		; 23 cycles
  022B    01 04D2               	ld	bc,1234		; 26 cycles
  022E    C1                    	pop	bc		; 29 cycles
  022F    3D                    	dec	a		; 30 cycles
L0226  0230    20 F4                 	jr	nz,l0226
  0232    2B                    	dec	hl
L021D  0233    18 E8                 	jr	l021d
                                ;
                                ; Give control and delay if control defined
                                ;
L0235  0235                          l0235:
L01D0  0235    CD 01D0               	call	l01d0		; Give control
  0238    D8                    	ret	c		; Not defined
L01CE  0239    2A 01CE               	ld	hl,(l01ce)	; Get value
L021D  023C    18 DF                 	jr	l021d		; Delay
                                ;
                                ; Clear screen
                                ;
L023E  023E                          l023e:
  023E    F5                    	push	af
  023F    C5                    	push	bc
  0240    D5                    	push	de
  0241    E5                    	push	hl
L01A8  0242    21 01A8               	ld	hl,l01a8
L0235  0245    CD 0235               	call	l0235		; Home cursor
L01A2  0248    21 01A2               	ld	hl,l01a2
L024B  024B                          l024b:
L01D0  024B    CD 01D0               	call	l01d0		; Clear display
L01BA  024E    2A 01BA               	ld	hl,(l01ba)
L021D  0251    D4 021D               	call	nc,l021d	; Delay if defined
  0254    E1                    	pop	hl
  0255    D1                    	pop	de
  0256    C1                    	pop	bc
  0257    F1                    	pop	af
  0258    C9                    	ret
                                ;
                                ; Delete line
                                ;
L0259  0259                          l0259:
  0259    F5                    	push	af
  025A    C5                    	push	bc
  025B    D5                    	push	de
  025C    E5                    	push	hl
L01B4  025D    21 01B4               	ld	hl,l01b4
L024BTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-13


  0260    18 E9                 	jr	l024b		; Delete line
                                ;
                                ; Insert line
                                ;
L0262  0262                          l0262:
  0262    F5                    	push	af
  0263    C5                    	push	bc
  0264    D5                    	push	de
  0265    E5                    	push	hl
L01AE  0266    21 01AE               	ld	hl,l01ae
L024B  0269    18 E0                 	jr	l024b		; Insert line
                                ;
                                ; Set low video
                                ;
L026B  026B                          l026b:
  026B    F5                    	push	af
L00E0  026C    3A 00E0               	ld	a,(l00e0)	; Get video mode
  026F    B7                    	or	a		; Test low mode already set
L0282  0270    28 10                 	jr	z,l0282		; Yeap, skip
  0272    C5                    	push	bc
  0273    D5                    	push	de
  0274    E5                    	push	hl
  0275    AF                    	xor	a
L00E0  0276    32 00E0               	ld	(l00e0),a	; Set video mode	
L01C8  0279    21 01C8               	ld	hl,l01c8	; Set attribute
L027C  027C                          l027c:
L0235  027C    CD 0235               	call	l0235		; Give control
  027F    E1                    	pop	hl
  0280    D1                    	pop	de
  0281    C1                    	pop	bc
L0282  0282                          l0282:
  0282    F1                    	pop	af
  0283    C9                    	ret
                                ;
                                ; Set normal video
                                ;
L0284  0284                          l0284:
  0284    F5                    	push	af
L00E0  0285    3A 00E0               	ld	a,(l00e0)	; Get video mode
  0288    FE FF                 	cp	-1		; Test normal mode already set
L0282  028A    28 F6                 	jr	z,l0282		; Yeap, skip
  028C    C5                    	push	bc
  028D    D5                    	push	de
  028E    E5                    	push	hl
  028F    3E FF                 	ld	a,-1
L00E0  0291    32 00E0               	ld	(l00e0),a	; Set video mode
L01C2  0294    21 01C2               	ld	hl,l01c2	; Reset attribute
L027C  0297    18 E3                 	jr	l027c
                                ;
                                ; Erase to end of line
                                ;
L0299  0299                          l0299:
  0299    F5                    	push	af
  029A    C5                    	push	bc
  029B    D5                    	push	de
  029C    E5                    	push	hl
L01BCTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-14


  029D    21 01BC               	ld	hl,l01bc	; Clear to end of line
L027C  02A0    18 DA                 	jr	l027c
                                ;
                                ; Position cursor with X (column) in reg H and y (row) in reg L
                                ;
L02A2  02A2                          l02a2:
  02A2    F5                    	push	af
  02A3    C5                    	push	bc
  02A4    D5                    	push	de
  02A5    E5                    	push	hl
  02A6    E5                    	push	hl
L00F0  02A7    11 00F0               	ld	de,l00f0
L018B  02AA    21 018B               	ld	hl,l018b
LL018B  02AD    01 0010               	ld	bc,ll018b
  02B0    ED B0                 	ldir			; Unpack control string
  02B2    D1                    	pop	de		; Get back coordinates
L019E  02B3    3A 019E               	ld	a,(l019e)	; Get position of column
  02B6    4F                    	ld	c,a
L019C  02B7    3A 019C               	ld	a,(l019c)	; Get offset for column
  02BA    82                    	add	a,d		; Build real value
  02BB    D5                    	push	de
L02DC  02BC    CD 02DC               	call	l02dc		; Store it
  02BF    D1                    	pop	de
L019F  02C0    3A 019F               	ld	a,(l019f)	; Get position of row
  02C3    4F                    	ld	c,a
L019D  02C4    3A 019D               	ld	a,(l019d)	; Get offset for row
  02C7    83                    	add	a,e		; Build real value
L02DC  02C8    CD 02DC               	call	l02dc		; Store it
L00F0  02CB    21 00F0               	ld	hl,l00f0
L01D0  02CE    CD 01D0               	call	l01d0		; Give control
L01A0  02D1    2A 01A0               	ld	hl,(l01a0)	; Get delay value
L021D  02D4    CD 021D               	call	l021d		; Delay a bit
  02D7    E1                    	pop	hl
  02D8    D1                    	pop	de
  02D9    C1                    	pop	bc
  02DA    F1                    	pop	af
  02DB    C9                    	ret
                                ;
                                ; Store Accu in position in reg C
                                ;
L02DC  02DC                          l02dc:
L00F0  02DC    21 00F0               	ld	hl,l00f0
  02DF    06 00                 	ld	b,0
  02E1    09                    	add	hl,bc		; Position in string
  02E2    EB                    	ex	de,hl
L019B  02E3    21 019B               	ld	hl,l019b
  02E6    34                    	inc	(hl)		; Test binary
  02E7    35                    	dec	(hl)
L02EC  02E8    28 02                 	jr	z,l02ec		; Nope, build ASCII
  02EA    12                    	ld	(de),a		; Store value
  02EB    C9                    	ret
L02EC  02EC                          l02ec:
  02EC    1B                    	dec	de		; Fix for hi ASCII
  02ED    1B                    	dec	de
L0307  02EE    21 030A               	ld	hl,l0307+3	; Point to divisor
  02F1    06 03                 	ld	b,3		; Set length
L02F3TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-15


  02F3                          l02f3:
  02F3    2B                    	dec	hl
  02F4    0E 2F                 	ld	c,'0'-1		; Init ASCII
L02F6  02F6                          l02f6:
  02F6    0C                    	inc	c		; Fix quotient
  02F7    96                    	sub	(hl)		; Divide
L02F6  02F8    30 FC                 	jr	nc,l02f6
  02FA    86                    	add	a,(hl)		; Build last value
  02FB    F5                    	push	af
  02FC    79                    	ld	a,c
  02FD    FE 30                 	cp	'0'		; Test zero
L0302  02FF    28 01                 	jr	z,l0302		; Skip if so
  0301    12                    	ld	(de),a		; Store ASCII
L0302  0302                          l0302:
  0302    13                    	inc	de
  0303    F1                    	pop	af
L02F3  0304    10 ED                 	djnz	l02f3
  0306    C9                    	ret
                                ;
L0307  0307                          l0307:
  0307    01 0A 64              	db	1,10,100
                                ;
                                ; Set lead in
                                ;
L030A  030A                          l030a:
L016B  030A    21 016B               	ld	hl,l016b		; Give lead in
L0235  030D    C3 0235               	jp	l0235
                                ;
                                ; Set lead out
                                ;
L0310  0310                          l0310:
L017B  0310    21 017B               	ld	hl,l017b		; Give lead out
L0235  0313    C3 0235               	jp	l0235
                                ;
                                ; Test key pressed
                                ; EXIT	Reg HL holds 1 if key pressed
                                ;
L0316  0316                          l0316:
..CONST  0316    11 0003               	ld	de,..const
L035F  0319    CD 035F               	call	l035f		; Get state
  031C    E6 01                 	and	1		; Extract the bit
L0326  031E    18 06                 	jr	l0326
                                ;
                                ; Read character from console
                                ; EXIT	Reg HL holds character
                                ;
L0320  0320                          l0320:
..CONIN  0320    11 0006               	ld	de,..conin
L0323  0323                          l0323:
L035F  0323    CD 035F               	call	l035f		; Get input
L0326  0326                          l0326:
  0326    6F                    	ld	l,a		; Expand result to 16 bit
  0327    26 00                 	ld	h,0
  0329    C9                    	ret
                                ;
                                ; Read character from auxiliary device
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-16


                                ; EXIT	Reg HL holds character
                                ;
L032A  032A                          l032a:
..AUXIN  032A    11 0012               	ld	de,..auxin	; Set function
L0323  032D    18 F4                 	jr	l0323		; Do thru BIOS
                                ;
                                ; Write character to list device
                                ; ENTRY	Character on stack
                                ;
L032F  032F                          l032f:
..LIST  032F    11 000C               	ld	de,..list	; Set function
L033C  0332    18 08                 	jr	l033c		; Do thru BIOS
                                ;
                                ; Write character to auxiliary device
                                ; ENTRY	Character on stack
                                ;
L0334  0334                          l0334:
..AUXOUT  0334    11 000F               	ld	de,..auxout	; Set function
L033C  0337    18 03                 	jr	l033c		; Do thru BIOS
                                ;
                                ; Write character to console
                                ; ENTRY	Character on stack
                                ;
L0339  0339                          l0339:
..CONOUT  0339    11 0009               	ld	de,..conout	; Set function
L033C  033C                          l033c:
  033C    E1                    	pop	hl
  033D    C1                    	pop	bc		; Get character
  033E    E5                    	push	hl
L00DD  033F    3A 00DD               	ld	a,(l00dd)	; Get $C mode
  0342    B7                    	or	a
L035F  0343    28 1A                 	jr	z,l035f		; $C-, so skip testing
  0345    D5                    	push	de
  0346    C5                    	push	bc
L00A0  0347    CD 00A0               	call	l00a0		; Test key pressed
  034A    7C                    	ld	a,h
  034B    B5                    	or	l		; Nope
L035D  034C    28 0F                 	jr	z,l035d
L03E1  034E    CD 03E1               	call	l03e1		; Read character
XOFF  0351    FE 13                 	cp	Xoff		; Test XOFF
L035D  0353    20 08                 	jr	nz,l035d
L03E1  0355    CD 03E1               	call	l03e1
CTRLC  0358    FE 03                 	cp	CtrlC		; Test abort
L20D4  035A    CA 20D4               	jp	z,l20d4		; Halt if so
L035D  035D                          l035d:
  035D    C1                    	pop	bc
  035E    D1                    	pop	de
                                ;
                                ; Do BIOS internal call
                                ;
L035F  035F                          l035f:
OS  035F    2A 0001               	ld	hl,(OS+1)	; Fetch base vector
  0362    19                    	add	hl,de		; Add osffset
  0363    E9                    	jp	(hl)		; Go
                                ;
                                ; Init TURBO program
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-17


                                ; ENTRY	Reg HL holds top of RAM
                                ;	Reg B holds break mode
                                ;		($C- B=00)
                                ;		($C+ B=FF)
                                ;	Reg C holds interrupt mode
                                ;		($U- C=00)
                                ;		($U+ C=rst)
                                ;	[rst may be the opcode for the requested
                                ;	 RST opcode, typically F7 or EF]
                                ;
L0364  0364                          l0364:
L00D2  0364    22 00D2               	ld	(l00d2),hl	; Save address
  0367    78                    	ld	a,b
L00DD  0368    32 00DD               	ld	(l00dd),a	; Set $C mode
  036B    79                    	ld	a,c		; Get $U
  036C    B7                    	or	a
L037A  036D    28 0B                 	jr	z,l037a		; No interrupt
.JP  036F    3E C3                 	ld	a,.JP		; Set JP to interrupt
@RST  0371    32 0038               	ld	(@RST),a
L1FFB  0374    21 1FFB               	ld	hl,l1ffb
@RST  0377    22 0039               	ld	(@RST+1),hl	; Change vector
L037A  037A                          l037a:
L03A5  037A    21 03A5               	ld	hl,l03a5
L00A0  037D    11 00A0               	ld	de,l00a0
LL0018  0380    01 0018               	ld	bc,ll0018
  0383    ED B0                 	ldir			; Unpack I/O
L03BD  0385    21 03BD               	ld	hl,l03bd
L00B8  0388    11 00B8               	ld	de,l00b8
LL000C  038B    01 000C               	ld	bc,ll000c
  038E    ED B0                 	ldir			; Init FIB
  0390    AF                    	xor	a
  0391    6F                    	ld	l,a
  0392    67                    	ld	h,a
L00D0  0393    32 00D0               	ld	(l00d0),a	; Clear I/O error
L00D4  0396    22 00D4               	ld	(l00d4),hl	; Clear some pointers
L00D6  0399    22 00D6               	ld	(l00d6),hl
.MAXBUF  039C    3E 7E                 	ld	a,.MaxBuf
L00D1  039E    32 00D1               	ld	(l00d1),a	; Set buffer length
L00E0  03A1    32 00E0               	ld	(l00e0),a	; Set video mode
  03A4    C9                    	ret
                                ;
                                ; Character I/O table moved into 0x00A0
                                ;
L03A5  03A5                          l03a5:
L0316  03A5    C3 0316               	jp	l0316		; 0x00A0 : Keypressed
L0320  03A8    C3 0320               	jp	l0320		; 0x00A3 : Read KBD
L0339  03AB    C3 0339               	jp	l0339		; 0x00A6 : Console output
L032F  03AE    C3 032F               	jp	l032f		; 0x00A9 : List output
L0334  03B1    C3 0334               	jp	l0334		; 0x00AC : Auxiliary output
L032A  03B4    C3 032A               	jp	l032a		; 0x00AF : Auxiliary input
L0339  03B7    C3 0339               	jp	l0339		; 0x00B2 : Console output
L0320  03BA    C3 0320               	jp	l0320		; 0x00B5 : Read KBD
LL0018L03A5  0018                          ll0018	equ	$-l03a5
                                ;
                                ; Standard IO control table
                                ;
L03BDTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-18


  03BD                          l03bd:
  03BD    C1                    	db	11000001b	; 0x00B8 : Input Output for CON
  03BE    00                    	db	0
  03BF    82                    	db	10000010b	; 0x00BA : Input for KBD
  03C0    00                    	db	0
  03C1    43                    	db	01000011b	; 0x00BC : Output for LST
  03C2    00                    	db	0
  03C3    C4                    	db	11000100b	; 0x00BE : Input Output for AUX
  03C4    00                    	db	0
  03C5    C5                    	db	11000101b	; 0x00C0 : Input Output for USR
  03C6    00                    	db	0
  03C7    C1                    	db	11000001b	; 0x00C2 : Input Output for CON
  03C8    00                    	db	0
LL000CL03BD  000C                          ll000c	equ	$-l03bd
                                ;
                                ; Put chracater to console
                                ;
L03C9  03C9                          l03c9:
  03C9    C5                    	push	bc
  03CA    D5                    	push	de
  03CB    E5                    	push	hl
  03CC    DD E5                 	push	ix
  03CE    FD E5                 	push	iy
  03D0    F5                    	push	af
  03D1    6F                    	ld	l,a
  03D2    26 00                 	ld	h,0
  03D4    E5                    	push	hl
L00A6  03D5    CD 00A6               	call	l00a6		; Put to console
  03D8    F1                    	pop	af
L03D9  03D9                          l03d9:
  03D9    FD E1                 	pop	iy
  03DB    DD E1                 	pop	ix
  03DD    E1                    	pop	hl
  03DE    D1                    	pop	de
  03DF    C1                    	pop	bc
  03E0    C9                    	ret
                                ;
                                ; Read character from keyboard
                                ;
L03E1  03E1                          l03e1:
  03E1    C5                    	push	bc
  03E2    D5                    	push	de
  03E3    E5                    	push	hl
  03E4    DD E5                 	push	ix
  03E6    FD E5                 	push	iy
L00A3  03E8    CD 00A3               	call	l00a3		; Read KBD
  03EB    7D                    	ld	a,l
L03D9  03EC    18 EB                 	jr	l03d9
                                ;
                                ; Parse file, allow wildcards
                                ;
L03EE  03EE                          l03ee:
FALSE  03EE    0E FF                 	ld	c,NOT FALSE	; Set flag
L03FE  03F0    18 0C                 	jr	l03fe
                                ;
                                ; Parse file, wildcards not allowed
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-19


                                ;
L03F2  03F2                          l03f2:
FALSE  03F2    0E 00                 	ld	c,FALSE
L00D2  03F4    ED 5B 00D2            	ld	de,(l00d2)	; Get top of memory for input
L03F8  03F8                          l03f8:
  03F8    13                    	inc	de
  03F9    1A                    	ld	a,(de)
  03FA    FE 20                 	cp	' '		; Skip blanks
L03F8  03FC    28 FA                 	jr	z,l03f8
L03FE  03FE                          l03fe:
L005CFDRVFNAME  03FE    21 0065               	ld	hl,l005c+Fdrv+Fname
FEXT  0401    06 03                 	ld	b,Fext
L047B  0403    CD 047B               	call	l047b		; Blank extension
L0406  0406                          l0406:
  0406    1A                    	ld	a,(de)		; Get character
L04A6  0407    CD 04A6               	call	l04a6		; Convert to upper case
  040A    FE 41                 	cp	'A'		; Test posible drive
L0420  040C    38 12                 	jr	c,l0420
  040E    FE 51                 	cp	'P'+1
L0420  0410    30 0E                 	jr	nc,l0420
  0412    47                    	ld	b,a		; Save drive
  0413    13                    	inc	de
  0414    1A                    	ld	a,(de)
  0415    FE 3A                 	cp	':'		; Verify drive
L041F  0417    20 06                 	jr	nz,l041f
  0419    78                    	ld	a,b
  041A    D6 40                 	sub	'A'-1		; Make binary
  041C    13                    	inc	de
L0421  041D    18 02                 	jr	l0421
L041F  041F                          l041f:
  041F    1B                    	dec	de
L0420  0420                          l0420:
  0420    AF                    	xor	a		; Set default drive
L0421  0421                          l0421:
L005C  0421    21 005C               	ld	hl,l005c
  0424    77                    	ld	(hl),a		; Save drive
  0425    23                    	inc	hl
  0426    0C                    	inc	c		; Test wildcards allowed
  0427    0D                    	dec	c
L0443  0428    28 19                 	jr	z,l0443		; Nope
  042A    1A                    	ld	a,(de)		; Get character
L0482  042B    CD 0482               	call	l0482		; Test delimiter
L0443  042E    20 13                 	jr	nz,l0443	; Nope
  0430    FE 3F                 	cp	'?'		; Test single wildcard
L0443  0432    28 0F                 	jr	z,l0443		; Yeap
  0434    FE 2A                 	cp	'*'		; Test wildcard
L0443  0436    28 0B                 	jr	z,l0443		; Yeap
  0438    FE 2E                 	cp	'.'		; Test dot
L0443  043A    28 07                 	jr	z,l0443		; Yeap
FNAMEFEXT  043C    06 0B                 	ld	b,Fname+Fext
L0477  043E    CD 0477               	call	l0477		; Set wildcard
L0453  0441    18 10                 	jr	l0453		; Go init remainder
L0443  0443                          l0443:
FNAME  0443    06 08                 	ld	b,Fname
L045E  0445    CD 045E               	call	l045e		; Parse name
  0448    1A                    	ld	a,(de)
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-20


  0449    FE 2E                 	cp	'.'		; Test extension delimiter
L0453  044B    20 06                 	jr	nz,l0453	; Nope
  044D    13                    	inc	de
FEXT  044E    06 03                 	ld	b,Fext
L045E  0450    CD 045E               	call	l045e		; Parse extension
L0453  0453                          l0453:
L005C_EX  0453    21 0068               	ld	hl,l005c+_ex
FCBLEN_EX  0456    06 18                 	ld	b,FCBlen-_ex
L0458  0458                          l0458:
  0458    36 00                 	ld	(hl),0		; Clear remainder of FCB
  045A    23                    	inc	hl
L0458  045B    10 FB                 	djnz	l0458
  045D    C9                    	ret
                                ;
                                ; Parse B characters
                                ;
L045E  045E                          l045e:
  045E    1A                    	ld	a,(de)		; Get character
  045F    0C                    	inc	c		; Test wildcard allowed
  0460    0D                    	dec	c
L046B  0461    28 08                 	jr	z,l046b		; Nope
  0463    FE 3F                 	cp	'?'		; Test single wildcard
L0470  0465    28 09                 	jr	z,l0470		; Save it
  0467    FE 2A                 	cp	'*'		; Test multiple wildcards
L0476  0469    28 0B                 	jr	z,l0476		; Map them
L046B  046B                          l046b:
L0482  046B    CD 0482               	call	l0482		; Test delimiter
L047B  046E    28 0B                 	jr	z,l047b		; Yeap
L0470  0470                          l0470:
  0470    77                    	ld	(hl),a		; Store character
  0471    23                    	inc	hl
  0472    13                    	inc	de
L045E  0473    10 E9                 	djnz	l045e
  0475    C9                    	ret
L0476  0476                          l0476:
  0476    13                    	inc	de
                                ;
                                ; Set B wildcards
                                ;
L0477  0477                          l0477:
  0477    3E 3F                 	ld	a,'?'		; Set wildcard character
L047D  0479    18 02                 	jr	l047d
                                ;
                                ; Blank B positions in ^HL
                                ;
L047B  047B                          l047b:
  047B    3E 20                 	ld	a,' '
L047D  047D                          l047d:
  047D    77                    	ld	(hl),a		; Save character
  047E    23                    	inc	hl
L047D  047F    10 FC                 	djnz	l047d
  0481    C9                    	ret
                                ;
                                ; Test delimiter
                                ; Z set says yes
                                ;
L0482TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-21


  0482                          l0482:
L04A6  0482    CD 04A6               	call	l04a6		; Convert to upper case
  0485    FE 20                 	cp	' '		; Test control
L0496  0487    38 0D                 	jr	c,l0496		; Yeap, it's a delimiter
  0489    E5                    	push	hl
  048A    C5                    	push	bc
L0498  048B    21 0498               	ld	hl,l0498
LL0498  048E    01 000E               	ld	bc,ll0498
  0491    ED B1                 	cpir			; Find in table
  0493    C1                    	pop	bc
  0494    E1                    	pop	hl
  0495    C9                    	ret
L0496  0496                          l0496:
  0496    BF                    	cp	a
  0497    C9                    	ret
                                ;
L0498  0498                          l0498:
  0498    20 2E 2C 3B           	db	' .,;:=?*[]<>{}'
  049C    3A 3D 3F 2A           
  04A0    5B 5D 3C 3E           
  04A4    7B 7D                 
LL0498L0498  000E                          ll0498	equ	$-l0498
                                ;
                                ; Convert character to UPPER case
                                ;
L04A6  04A6                          l04a6:
  04A6    FE 61                 	cp	'a'		; Test range
  04A8    D8                    	ret	c
  04A9    FE 7B                 	cp	'z'+1
  04AB    D0                    	ret	nc
  04AC    D6 20                 	sub	'a'-'A'		; Convert to upper case
  04AE    C9                    	ret
                                ;
                                ; Print hex word in reg HL
                                ;
L04AF  04AF                          l04af:
  04AF    7C                    	ld	a,h		; Get hi
L04B4  04B0    CD 04B4               	call	l04b4		; Print it
  04B3    7D                    	ld	a,l		; Followed by lo
                                ;
                                ; Print hex byte in Accu
                                ;
L04B4  04B4                          l04b4:
  04B4    F5                    	push	af
  04B5    1F                    	rra			; Isolate hi bits
  04B6    1F                    	rra
  04B7    1F                    	rra
  04B8    1F                    	rra
L04BD  04B9    CD 04BD               	call	l04bd		; Convert them
  04BC    F1                    	pop	af
L04BD  04BD                          l04bd:
LOMASK  04BD    E6 0F                 	and	LoMask		; Mak bits
  04BF    C6 90                 	add	a,090h		; Dirty trick
  04C1    27                    	daa
  04C2    CE 40                 	adc	a,040h
  04C4    27                    	daa
L03C9TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-22


  04C5    C3 03C9               	jp	l03c9		; Put to console
                                ;
                                ; Get byte from 16 bit
                                ; ENTRY	Reg HL holds 16 bit signed integer
                                ; EXIT	Accu holds 0 and carry set if HL<0
                                ;	Accu holds -1 and carry reset if HL>256
                                ;	Accu holds low part and carry reset else
                                ;
L04C8  04C8                          l04c8:
  04C8    AF                    	xor	a
  04C9    37                    	scf
  04CA    CB 7C                 	bit	7,h		; Test sign bit
  04CC    C0                    	ret	nz		; Return 0 and C set if HL<0
  04CD    7C                    	ld	a,h
  04CE    B7                    	or	a
  04CF    7D                    	ld	a,l
  04D0    C8                    	ret	z		; Return LO if HI=0
  04D1    3E FF                 	ld	a,-1		; Else return -1
  04D3    C9                    	ret
                                ;
                                ; Test enough space
                                ; ENTRY	Reg HL holds 1st free address
                                ;	Reg DE holds last free address
                                ;	Reg BC holds top of ram
                                ;	Accu holds run mode
                                ;
L04D4  04D4                          l04d4:
L00D8  04D4    32 00D8               	ld	(l00d8),a	; Re/Set runmode (0 is TP menue)
  04D7    C5                    	push	bc
L1EAF  04D8    CD 1EAF               	call	l1eaf		; Init heap
  04DB    C1                    	pop	bc
TPATOP  04DC    2A 0006               	ld	hl,(TPAtop)
  04DF    B7                    	or	a
  04E0    ED 42                 	sbc	hl,bc		; Test memory available
L20A8  04E2    DA 20A8               	jp	c,l20a8		; Nope, exit
  04E5    EB                    	ex	de,hl
  04E6    D1                    	pop	de		; Get caller
  04E7    F9                    	ld	sp,hl		; Set new stack
STKSPC  04E8    01 FC00               	ld	bc,-StkSpc
  04EB    09                    	add	hl,bc		; Allow some stack space
L00C6  04EC    22 00C6               	ld	(l00c6),hl	; Set recursion pointer
  04EF    AF                    	xor	a
  04F0    6F                    	ld	l,a
  04F1    67                    	ld	h,a
L00CE  04F2    22 00CE               	ld	(l00ce),hl	; Reset current PC
L00DC  04F5    32 00DC               	ld	(l00dc),a	; Reset overlay drive
.JP  04F8    3E C3                 	ld	a,.JP
L00D9  04FA    32 00D9               	ld	(l00d9),a	; Init restart
L20DE  04FD    21 20DE               	ld	hl,l20de
L00DA  0500    22 00DA               	ld	(l00da),hl	; Set error vector
  0503    EB                    	ex	de,hl
L00CC  0504    22 00CC               	ld	(l00cc),hl	; Set base PC
  0507    E9                    	jp	(hl)		; Jump back to caller
                                ;
                                ; Start of recursive procedure or function
                                ; ENTRY	Reg BC holds bytes to be preserved
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-23


                                ;	Reg HL holds address of save area
                                ;
L0508  0508                          l0508:
  0508    E5                    	push	hl
L00C6  0509    2A 00C6               	ld	hl,(l00c6)	; Get recursion pointer
  050C    B7                    	or	a
  050D    ED 42                 	sbc	hl,bc		; Calculate new pointer
L00C6  050F    22 00C6               	ld	(l00c6),hl
L00C4  0512    ED 5B 00C4            	ld	de,(l00c4)	; Get heap pointer
  0516    B7                    	or	a
  0517    ED 52                 	sbc	hl,de		; Test against it
  0519    19                    	add	hl,de
  051A    EB                    	ex	de,hl
  051B    E1                    	pop	hl
L1D75  051C    DA 1D75               	jp	c,l1d75		; Error if overlapping
  051F    ED B0                 	ldir
  0521    C9                    	ret
                                ;
                                ; End of recursive procedure or function
                                ; ENTRY	Reg BC holds bytes to be preserved
                                ;	Reg DE holds address of save area
                                ;
L0522  0522                          l0522:
L00C6  0522    2A 00C6               	ld	hl,(l00c6)	; Get recursion pointer
  0525    ED B0                 	ldir			; Reload code
L00C6  0527    22 00C6               	ld	(l00c6),hl	; Update pointer
  052A    D9                    	exx
  052B    C9                    	ret
                                ;
                                ; Load real into registers
                                ; ENTRY	Reg HL points to real variable
                                ; EXIT	Regs HL,DE,BC hold number
                                ;
L052C  052C                          l052c:
  052C    5E                    	ld	e,(hl)		; Get exponent
  052D    23                    	inc	hl
  052E    56                    	ld	d,(hl)		; Get LSB
  052F    23                    	inc	hl
  0530    D5                    	push	de
  0531    5E                    	ld	e,(hl)		; Get 4th mantissa byte
  0532    23                    	inc	hl
  0533    56                    	ld	d,(hl)		; Get 3rd mantissa byte
  0534    23                    	inc	hl
  0535    4E                    	ld	c,(hl)		; Get 2nd mantissa byte
  0536    23                    	inc	hl
  0537    46                    	ld	b,(hl)		; Get MSB
  0538    E1                    	pop	hl
  0539    C9                    	ret
                                ;
                                ; Move string to stack
                                ; ENTRY	Reg HL points to string
                                ;
L053A  053A                          l053a:
  053A    DD E1                 	pop	ix		; Get caller
  053C    EB                    	ex	de,hl
  053D    1A                    	ld	a,(de)		; Get length of string
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-24


  053E    4F                    	ld	c,a
  053F    06 00                 	ld	b,0
  0541    2F                    	cpl			; Negate
  0542    6F                    	ld	l,a
  0543    26 FF                 	ld	h,-1
  0545    39                    	add	hl,sp		; Fix stack
  0546    F9                    	ld	sp,hl
  0547    EB                    	ex	de,hl
  0548    03                    	inc	bc
  0549    ED B0                 	ldir			; Move to stack
  054B    DD E9                 	jp	(ix)		; Exit
                                ;
                                ; Move immediate string to stack
                                ; ENTRY	String started with length after caller
                                ;
L054D  054D                          l054d:
  054D    D1                    	pop	de		; Get string pointer
  054E    1A                    	ld	a,(de)		; Get length
  054F    4F                    	ld	c,a
  0550    06 00                 	ld	b,0		; Expand for 16 bit
  0552    2F                    	cpl			; Negate
  0553    6F                    	ld	l,a
  0554    26 FF                 	ld	h,-1
  0556    39                    	add	hl,sp		; Fix stack
  0557    F9                    	ld	sp,hl
  0558    EB                    	ex	de,hl
  0559    03                    	inc	bc
  055A    ED B0                 	ldir			; Move to stack
  055C    E9                    	jp	(hl)
                                ;
                                ; Push set onto stack
                                ; ENTRY	Reg HL points to set variable
                                ;	Reg C holds set length in bits
                                ;	Reg B holds set to be cleared
                                ;
L055D  055D                          l055d:
  055D    DD E1                 	pop	ix		; Get caller
  055F    EB                    	ex	de,hl
SET.LEN  0560    21 FFE0               	ld	hl,-set.len
  0563    39                    	add	hl,sp		; Adjust stack for max set length
  0564    F9                    	ld	sp,hl
  0565    EB                    	ex	de,hl
  0566    C5                    	push	bc
  0567    04                    	inc	b		; Test bits to clear
  0568    05                    	dec	b
L0570  0569    28 05                 	jr	z,l0570		; Nope
  056B    AF                    	xor	a
L056C  056C                          l056c:
  056C    12                    	ld	(de),a		; Clear a part
  056D    13                    	inc	de
L056C  056E    10 FC                 	djnz	l056c
L0570  0570                          l0570:
  0570    ED B0                 	ldir			; Save set on stack
  0572    C1                    	pop	bc
SET.LEN  0573    3E 20                 	ld	a,set.len
  0575    90                    	sub	b
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-25


  0576    91                    	sub	c		; Test remaining bits to clear
L057F  0577    28 06                 	jr	z,l057f		; Nope
  0579    47                    	ld	b,a
  057A    AF                    	xor	a
L057B  057B                          l057b:
  057B    12                    	ld	(de),a		; Clear bits
  057C    13                    	inc	de
L057B  057D    10 FC                 	djnz	l057b
L057F  057F                          l057f:
  057F    DD E9                 	jp	(ix)
                                ;
                                ; Initialize a set on stack
                                ;
L0581  0581                          l0581:
  0581    DD E1                 	pop	ix		; Get caller
SET.LEN  0583    21 FFE0               	ld	hl,-set.len
  0586    39                    	add	hl,sp		; Fix stack
  0587    F9                    	ld	sp,hl
SET.LEN  0588    06 20                 	ld	b,set.len	; Set count
  058A    AF                    	xor	a
L058B  058B                          l058b:
  058B    77                    	ld	(hl),a		; Init set
  058C    23                    	inc	hl
L058B  058D    10 FC                 	djnz	l058b
  058F    DD E9                 	jp	(ix)
                                ;
                                ; Init one set element
                                ; ENTRY	Reg HL holds set value to be set
                                ;
L0591  0591                          l0591:
  0591    DD E1                 	pop	ix
  0593    45                    	ld	b,l		; Get value
L05BA  0594    CD 05BA               	call	l05ba		; Get bit
L0597  0597                          l0597:
  0597    B6                    	or	(hl)		; Insert it
  0598    77                    	ld	(hl),a
L0599  0599                          l0599:
  0599    DD E9                 	jp	(ix)
                                ;
                                ; Init a contiguous set value
                                ; ENTRY	Reg HL holds upper limit
                                ;	On stack pushed lower limit
                                ;
L059B  059B                          l059b:
  059B    DD E1                 	pop	ix
  059D    D1                    	pop	de		; Get lower limit
  059E    7D                    	ld	a,l
  059F    93                    	sub	e
L0599  05A0    38 F7                 	jr	c,l0599		; Out of range
  05A2    3C                    	inc	a
  05A3    4F                    	ld	c,a
  05A4    43                    	ld	b,e		; Get low value
L05BA  05A5    CD 05BA               	call	l05ba		; Get bit
  05A8    5F                    	ld	e,a
  05A9    41                    	ld	b,c		; Copy loop value
  05AA    AF                    	xor	a
L05ABTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-26


  05AB                          l05ab:
  05AB    B3                    	or	e
  05AC    CB 23                 	sla	e		; Shift bit
L05B6  05AE    30 06                 	jr	nc,l05b6
  05B0    B6                    	or	(hl)		; Insert
  05B1    77                    	ld	(hl),a
  05B2    23                    	inc	hl		; Point to next
  05B3    AF                    	xor	a
  05B4    1E 01                 	ld	e,1		; Init low bit for next
L05B6  05B6                          l05b6:
L05AB  05B6    10 F3                 	djnz	l05ab
L0597  05B8    18 DD                 	jr	l0597		; Set final one
                                ;
                                ; Access one set bit
                                ; ENTRY	Reg B holds numeric value of set element
                                ; EXIT	Accu holds bit
                                ;	Reg HL points to set loacation
                                ;
L05BA  05BA                          l05ba:
  05BA    78                    	ld	a,b		; Get value
  05BB    E6 F8                 	and	11111000b	; Mask it
  05BD    0F                    	rrca			; Divide by eight
  05BE    0F                    	rrca
  05BF    0F                    	rrca
  05C0    C6 02                 	add	a,2		; Fix position for stack
  05C2    6F                    	ld	l,a
  05C3    26 00                 	ld	h,0
  05C5    39                    	add	hl,sp		; Get position
  05C6    78                    	ld	a,b
  05C7    E6 07                 	and	00000111b	; Mask bits
  05C9    3C                    	inc	a
  05CA    47                    	ld	b,a
  05CB    AF                    	xor	a
  05CC    37                    	scf			; Init 1
L05CD  05CD                          l05cd:
  05CD    17                    	rla			; Shift bit into correct position
L05CD  05CE    10 FD                 	djnz	l05cd
  05D0    C9                    	ret
                                ;
                                ; Save real number
                                ; ENTRY	Reg HL points to real variable
                                ;	Alternative regs HL,DE,BC hold number
                                ;
L05D1  05D1                          l05d1:
  05D1    E5                    	push	hl		; Save pointer
  05D2    D9                    	exx
  05D3    EB                    	ex	de,hl
  05D4    E3                    	ex	(sp),hl		; Get back pointer
  05D5    73                    	ld	(hl),e		; Save exponent
  05D6    23                    	inc	hl
  05D7    72                    	ld	(hl),d		; Save LSB
  05D8    23                    	inc	hl
  05D9    D1                    	pop	de
  05DA    73                    	ld	(hl),e		; Save 4th mantissa byte
  05DB    23                    	inc	hl
  05DC    72                    	ld	(hl),d		; Save 3rd byte
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-27


  05DD    23                    	inc	hl
  05DE    71                    	ld	(hl),c		; Save 2nd byte
  05DF    23                    	inc	hl
  05E0    70                    	ld	(hl),b		; Save MSB
  05E1    C9                    	ret
                                ;
                                ; Assign string from stack
                                ; ENTRY	Reg HL points to string to be assigned
                                ;	Reg B holds max length of this string
                                ;
L05E2  05E2                          l05e2:
  05E2    DD E1                 	pop	ix		; Get caller
  05E4    78                    	ld	a,b		; Get max
  05E5    EB                    	ex	de,hl		; Swap pointer
  05E6    21 0000               	ld	hl,0
  05E9    44                    	ld	b,h
  05EA    39                    	add	hl,sp		; Fix stack for start of string
  05EB    4E                    	ld	c,(hl)		; Get this length
  05EC    E5                    	push	hl
  05ED    09                    	add	hl,bc		; Calculate new stack
L05EE  05EE                          l05ee:
  05EE    23                    	inc	hl
  05EF    E3                    	ex	(sp),hl
  05F0    B9                    	cp	c		; Test length
L05F4  05F1    38 01                 	jr	c,l05f4
  05F3    79                    	ld	a,c		; Get smaller one
L05F4  05F4                          l05f4:
  05F4    12                    	ld	(de),a		; Unpack length
  05F5    13                    	inc	de
  05F6    23                    	inc	hl
  05F7    B7                    	or	a		; Test any character
L05FD  05F8    28 03                 	jr	z,l05fd		; Nope
  05FA    4F                    	ld	c,a
  05FB    ED B0                 	ldir			; Unpack if so
L05FD  05FD                          l05fd:
  05FD    E1                    	pop	hl
  05FE    F9                    	ld	sp,hl
  05FF    DD E9                 	jp	(ix)
                                ;
                                ; Assign string from stack
                                ; ENTRY	Reg B holds max length of string
                                ;
L0601  0601                          l0601:
  0601    DD E1                 	pop	ix		; Get caller
  0603    78                    	ld	a,b		; Get max
  0604    21 0000               	ld	hl,0
  0607    44                    	ld	b,h
  0608    39                    	add	hl,sp		; Fix stack for start of string
  0609    4E                    	ld	c,(hl)		; Get this length
  060A    E5                    	push	hl
  060B    09                    	add	hl,bc		; Calculate new stack
  060C    23                    	inc	hl
  060D    5E                    	ld	e,(hl)		; Fetch address of string
  060E    23                    	inc	hl
  060F    56                    	ld	d,(hl)
L05EE  0610    18 DC                 	jr	l05ee		; Unpack it
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-28


                                ;
                                ; Assign set variable
                                ; ENTRY	Reg HL points to variable
                                ;	Reg BC holds length of set
                                ;
L0612  0612                          l0612:
  0612    DD E1                 	pop	ix		; Get caller
  0614    EB                    	ex	de,hl
  0615    68                    	ld	l,b		; Copy length
  0616    26 00                 	ld	h,0
  0618    44                    	ld	b,h
  0619    39                    	add	hl,sp		; Point to start location
  061A    ED B0                 	ldir			; Unpack set variable
SET.LEN  061C    21 0020               	ld	hl,set.len
L061F  061F                          l061f:
  061F    39                    	add	hl,sp		; Fix stack
  0620    F9                    	ld	sp,hl
  0621    DD E9                 	jp	(ix)		; Exit
                                ;
                                ; Assign set variable
                                ; ENTRY	Reg BC holds length of set
                                ;
L0623  0623                          l0623:
  0623    DD E1                 	pop	ix		; Get caller
SET.LEN  0625    21 0020               	ld	hl,set.len
  0628    39                    	add	hl,sp		; Point to destination
  0629    5E                    	ld	e,(hl)		; Get it
  062A    23                    	inc	hl
  062B    56                    	ld	d,(hl)
  062C    68                    	ld	l,b		; Copy length
  062D    26 00                 	ld	h,0
  062F    44                    	ld	b,h
  0630    39                    	add	hl,sp		; Point to start location
  0631    ED B0                 	ldir
SET.LEN  0633    21 0022               	ld	hl,set.len+2	; Remember address
L061F  0636    18 E7                 	jr	l061f		; Fix stack
                                ;
                                ; Set set to stack
                                ; ENTRY	Reg HL holds address of set
                                ;	Reg B  holds length of set
                                ;
L0638  0638                          l0638:
  0638    DD E1                 	pop	ix		; Get caller
  063A    EB                    	ex	de,hl		; Swap source
  063B    78                    	ld	a,b
  063C    2F                    	cpl
  063D    6F                    	ld	l,a
  063E    26 FF                 	ld	h,-1		; Get -length
  0640    39                    	add	hl,sp		; Fix stack
  0641    F9                    	ld	sp,hl		; Set new
  0642    70                    	ld	(hl),b		; Set length
  0643    23                    	inc	hl
  0644    48                    	ld	c,b		; Expand length
  0645    06 00                 	ld	b,0
  0647    EB                    	ex	de,hl		; Get back source
  0648    ED B0                 	ldir			; Move to stack
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-29


  064A    DD E9                 	jp	(ix)
                                ;
                                ; Index check on compiler directive {$R+}
                                ; ENTRY	Reg HL holds current index
                                ;	Reg DE holds max index
                                ;
L064C  064C                          l064c:
  064C    B7                    	or	a
  064D    ED 52                 	sbc	hl,de		; Verify limit ok
  064F    19                    	add	hl,de
  0650    D8                    	ret	c		; Yeap
_INDXERR  0651    3E 90                 	ld	a,_IndxErr
L2027  0653    C3 2027               	jp	l2027		; Else process error
                                ;
                                ; Range check on compiler directive {$R+}
                                ; ENTRY	Reg HL holds actual value
                                ;	Reg DE holds low limit
                                ;	Reg BC holds range of value
                                ;
L0656  0656                          l0656:
  0656    B7                    	or	a
  0657    ED 52                 	sbc	hl,de
  0659    B7                    	or	a
  065A    ED 42                 	sbc	hl,bc		; Test max
L0661  065C    30 03                 	jr	nc,l0661	; Error
  065E    09                    	add	hl,bc		; Restore value
  065F    19                    	add	hl,de
  0660    C9                    	ret
L0661  0661                          l0661:
_RNGERR  0661    3E 91                 	ld	a,_RngErr
L2027  0663    C3 2027               	jp	l2027		; Set error
                                ;
                                ; Set up FOR .. TO loop
                                ; ENTRY	Reg DE holds start value
                                ;	Reg HL holds end value
                                ; EXIT	Reg DE holds loops
                                ;	Reg HL holds start value
                                ;
L0666  0666                          l0666:
  0666    B7                    	or	a
  0667    ED 52                 	sbc	hl,de		; Get difference
  0669    EB                    	ex	de,hl		; Into reg DE
L066A  066A                          l066a:
  066A    13                    	inc	de		; Fix loop count
L0671  066B    EA 0671               	jp	pe,l0671	; Check any loop
  066E    F0                    	ret	p
L0672  066F    18 01                 	jr	l0672
L0671  0671                          l0671:
  0671    F8                    	ret	m
L0672  0672                          l0672:
  0672    11 0000               	ld	de,0		; Set no loop
  0675    C9                    	ret
                                ;
                                ; Set up FOR .. DOWNTO loop
                                ; ENTRY	Reg DE holds start value
                                ;	Reg HL holds end value
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-30


                                ; EXIT	Reg DE holds loops
                                ;	Reg HL holds start value
                                ;
L0676  0676                          l0676:
  0676    D5                    	push	de
  0677    EB                    	ex	de,hl
  0678    B7                    	or	a
  0679    ED 52                 	sbc	hl,de		; Get difference
  067B    EB                    	ex	de,hl
  067C    E1                    	pop	hl
L066A  067D    18 EB                 	jr	l066a		; Build loop
                                ;
                                ; ################## The comparison package ###################
                                ; # TRUE set (=1 on TURBO) if relation matches                #
                                ; #                                                           #
                                ; # On all relational functions the assignment is as follows: #
                                ; #                                                           #
                                ; # INTEGER : DE:HL                                           #
                                ; # REAL    : (Regs):(Regs)'                                  #
                                ; # STRING  : (Stack):(next_stack)                            #
                                ; #                                                           #
                                ; #############################################################
                                ;
                                ; ********************************
                                ; ********** Relation = **********
                                ; ********************************
                                ;
                                ; %%%%%%%%%%%%%
                                ; %% INTEGER %%
                                ; %%%%%%%%%%%%%
                                ;
L067F  067F                          l067f:
  067F    B7                    	or	a
  0680    ED 52                 	sbc	hl,de		; Get difference
L0682  0682                          l0682:
.TRUE  0682    21 0001               	ld	hl,.TRUE	; Init TRUE
  0685    C8                    	ret	z		; Ok, same
  0686    2B                    	dec	hl		; Fix for FALSE
  0687    C9                    	ret
                                ;
                                ; %%%%%%%%%%
                                ; %% REAL %%
                                ; %%%%%%%%%%
                                ;
L0688  0688                          l0688:
L0BDF  0688    CD 0BDF               	call	l0bdf		; Compare
L0682  068B    18 F5                 	jr	l0682		; Set result
                                ;
                                ; %%%%%%%%%%%%
                                ; %% STRING %%
                                ; %%%%%%%%%%%%
                                ;
L068D  068D                          l068d:
L09B0  068D    CD 09B0               	call	l09b0		; Compare
L0682  0690    18 F0                 	jr	l0682		; Set result
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-31


                                ; *********************************
                                ; ********** Relation <> **********
                                ; *********************************
                                ;
                                ; %%%%%%%%%%%%%
                                ; %% INTEGER %%
                                ; %%%%%%%%%%%%%
                                ;
L0692  0692                          l0692:
  0692    B7                    	or	a
  0693    ED 52                 	sbc	hl,de		; Get difference
L0695  0695                          l0695:
.TRUE  0695    21 0001               	ld	hl,.TRUE	; Init TRUE
  0698    C0                    	ret	nz		; Ok, not same
  0699    2B                    	dec	hl		; Fix for FALSE
  069A    C9                    	ret
                                ;
                                ; %%%%%%%%%%
                                ; %% REAL %%
                                ; %%%%%%%%%%
                                ;
L069B  069B                          l069b:
L0BDF  069B    CD 0BDF               	call	l0bdf		; Compare
L0695  069E    18 F5                 	jr	l0695		; Set result
                                ;
                                ; %%%%%%%%%%%%
                                ; %% STRING %%
                                ; %%%%%%%%%%%%
                                ;
L06A0  06A0                          l06a0:
L09B0  06A0    CD 09B0               	call	l09b0		; Compare
L0695  06A3    18 F0                 	jr	l0695		; Set result
                                ;
                                ; *********************************
                                ; ********** Relation >= **********
                                ; *********************************
                                ;
                                ; %%%%%%%%%%%%%
                                ; %% INTEGER %%
                                ; %%%%%%%%%%%%%
                                ;
L06A5  06A5                          l06a5:
L0772  06A5    CD 0772               	call	l0772		; Check operands
L06A8  06A8                          l06a8:
.TRUE  06A8    21 0001               	ld	hl,.TRUE	; Init TRUE
  06AB    D0                    	ret	nc		; Ok if .GTE.
  06AC    2B                    	dec	hl		; Else fix for FALSE
  06AD    C9                    	ret
                                ;
                                ; %%%%%%%%%%
                                ; %% REAL %%
                                ; %%%%%%%%%%
                                ;
L06AE  06AE                          l06ae:
L0BDF  06AE    CD 0BDF               	call	l0bdf		; Compare
L06A8  06B1    18 F5                 	jr	l06a8		; Set result
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-32


                                ;
                                ; %%%%%%%%%%%%
                                ; %% STRING %%
                                ; %%%%%%%%%%%%
                                ;
L06B3  06B3                          l06b3:
L09B0  06B3    CD 09B0               	call	l09b0		; Compare
L06A8  06B6    18 F0                 	jr	l06a8		; Set result
                                ;
                                ; *********************************
                                ; ********** Relation <= **********
                                ; *********************************
                                ;
                                ; %%%%%%%%%%%%%
                                ; %% INTEGER %%
                                ; %%%%%%%%%%%%%
                                ;
L06B8  06B8                          l06b8:
L0772  06B8    CD 0772               	call	l0772		; Check operands
L06BB  06BB                          l06bb:
.TRUE  06BB    21 0001               	ld	hl,.TRUE	; Init TRUE
  06BE    C8                    	ret	z		; Ok if .EQ.
  06BF    D8                    	ret	c		; Ok if .LT.
  06C0    2B                    	dec	hl		; Else fix for FALSE
  06C1    C9                    	ret
                                ;
                                ; %%%%%%%%%%
                                ; %% REAL %%
                                ; %%%%%%%%%%
                                ;
L06C2  06C2                          l06c2:
L0BDF  06C2    CD 0BDF               	call	l0bdf		; Compare
L06BB  06C5    18 F4                 	jr	l06bb		; Set result
                                ;
                                ; %%%%%%%%%%%%
                                ; %% STRING %%
                                ; %%%%%%%%%%%%
                                ;
L06C7  06C7                          l06c7:
L09B0  06C7    CD 09B0               	call	l09b0		; Compare
L06BB  06CA    18 EF                 	jr	l06bb		; Set result
                                ;
                                ; ********************************
                                ; ********** Relation > **********
                                ; ********************************
                                ;
                                ; %%%%%%%%%%%%%
                                ; %% INTEGER %%
                                ; %%%%%%%%%%%%%
                                ;
L06CC  06CC                          l06cc:
L0772  06CC    CD 0772               	call	l0772		; Check operands
L06CF  06CF                          l06cf:
FALSE  06CF    21 0000               	ld	hl,FALSE	; Init FALSE
  06D2    C8                    	ret	z		; Ok if .EQ.
  06D3    D8                    	ret	c		; Ok if .LT.
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-33


  06D4    23                    	inc	hl		; Else fix for TRUE
  06D5    C9                    	ret
                                ;
                                ; %%%%%%%%%%
                                ; %% REAL %%
                                ; %%%%%%%%%%
                                ;
L06D6  06D6                          l06d6:
L0BDF  06D6    CD 0BDF               	call	l0bdf		; Compare
L06CF  06D9    18 F4                 	jr	l06cf		; Set result
                                ;
                                ; %%%%%%%%%%%%
                                ; %% STRING %%
                                ; %%%%%%%%%%%%
                                ;
L06DB  06DB                          l06db:
L09B0  06DB    CD 09B0               	call	l09b0		; Compare
L06CF  06DE    18 EF                 	jr	l06cf		; Set result
                                ;
                                ; ********************************
                                ; ********** Relation < **********
                                ; ********************************
                                ;
                                ; %%%%%%%%%%%%%
                                ; %% INTEGER %%
                                ; %%%%%%%%%%%%%
                                ;
L06E0  06E0                          l06e0:
L0772  06E0    CD 0772               	call	l0772		; Check operands
L06E3  06E3                          l06e3:
.TRUE  06E3    21 0001               	ld	hl,.TRUE	; Init TRUE
  06E6    D8                    	ret	c		; Ok if .LT.
  06E7    2B                    	dec	hl		; Else fix for FALSE
  06E8    C9                    	ret
                                ;
                                ; %%%%%%%%%%
                                ; %% REAL %%
                                ; %%%%%%%%%%
                                ;
L06E9  06E9                          l06e9:
L0BDF  06E9    CD 0BDF               	call	l0bdf		; Compare
L06E3  06EC    18 F5                 	jr	l06e3		; Set result
                                ;
                                ; %%%%%%%%%%%%
                                ; %% STRING %%
                                ; %%%%%%%%%%%%
                                ;
L06EE  06EE                          l06ee:
L09B0  06EE    CD 09B0               	call	l09b0		; Compare
L06E3  06F1    18 F0                 	jr	l06e3		; Set result
                                ;
                                ; ################# End of comparison package #################
                                ;
                                ; Function SQR(integer):integer;
                                ; ENTRY	Reg HL holds number
                                ; EXIT	Reg HL holds power
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-34


                                ;
L06F3  06F3                          l06f3:
  06F3    54                    	ld	d,h		; Copy number
  06F4    5D                    	ld	e,l
                                ;
                                ; Operator *
                                ; Multiply signed integers
                                ; ENTRY	Reg DE holds multiplicand
                                ;	Reg HL holds multiplier
                                ; EXIT	Reg HL holds product
                                ;
L06F5  06F5                          l06f5:
  06F5    4B                    	ld	c,e		; Copy multiplicand
  06F6    42                    	ld	b,d
  06F7    EB                    	ex	de,hl
  06F8    21 0000               	ld	hl,0		; Init product
  06FB    7A                    	ld	a,d
  06FC    B7                    	or	a		; Test word
  06FD    3E 10                 	ld	a,16
L0704  06FF    20 03                 	jr	nz,l0704	; Yeap, set bit count
  0701    53                    	ld	d,e
  0702    3E 08                 	ld	a,8		; Change bit count
L0704  0704                          l0704:
  0704    29                    	add	hl,hl		; Do the multiplication
  0705    EB                    	ex	de,hl
  0706    29                    	add	hl,hl
  0707    EB                    	ex	de,hl
L070B  0708    30 01                 	jr	nc,l070b
  070A    09                    	add	hl,bc
L070B  070B                          l070b:
  070B    3D                    	dec	a
L0704  070C    20 F6                 	jr	nz,l0704
  070E    C9                    	ret
                                ;
                                ; Operator DIV
                                ; Divide signed integers
                                ; ENTRY	Reg DE holds dividend
                                ;	Reg HL holds divisor
                                ; EXIT	Reg HL holds quotient
                                ; 	Reg DE holds remainder
                                ;
L070F  070F                          l070f:
  070F    7C                    	ld	a,h		; Test zero divisor
  0710    B5                    	or	l
L0A03  0711    CA 0A03               	jp	z,l0a03		; Divide by zero
  0714    7C                    	ld	a,h
  0715    AA                    	xor	d		; Calculate sign
  0716    F5                    	push	af
L0780  0717    CD 0780               	call	l0780		; Make both numbers positive
  071A    EB                    	ex	de,hl
L0780  071B    CD 0780               	call	l0780
  071E    EB                    	ex	de,hl
  071F    44                    	ld	b,h		; Copy divisor
  0720    4D                    	ld	c,l
  0721    AF                    	xor	a
  0722    67                    	ld	h,a		; Clear result
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-35


  0723    6F                    	ld	l,a
  0724    3E 11                 	ld	a,17		; Set bit count
L0726  0726                          l0726:
  0726    ED 6A                 	adc	hl,hl		; Perform division
  0728    ED 42                 	sbc	hl,bc
L072E  072A    30 02                 	jr	nc,l072e
  072C    09                    	add	hl,bc
  072D    37                    	scf
L072E  072E                          l072e:
  072E    3F                    	ccf
  072F    CB 13                 	rl	e
  0731    CB 12                 	rl	d
  0733    3D                    	dec	a		; Test done
L0726  0734    20 F0                 	jr	nz,l0726	; Nope, loop on
  0736    EB                    	ex	de,hl
  0737    F1                    	pop	af		; Get resulting sign
  0738    F0                    	ret	p
L0783  0739    18 48                 	jr	l0783		; Negate result
                                ;
                                ; Function RANDOM(integer):integer
                                ; ENTRY	Reg HL holds integer limit
                                ; EXIT	Reg HL holds random
                                ;
L073B  073B                          l073b:
  073B    E5                    	push	hl
L0792  073C    CD 0792               	call	l0792		; Get random value
  073F    CB 3C                 	srl	h		; Make positive, dividing by 2
  0741    CB 1D                 	rr	l
  0743    D1                    	pop	de
  0744    EB                    	ex	de,hl
                                ;
                                ; Operator MOD
                                ; Get modulo of signed integers
                                ; ENTRY	Reg DE holds dividend
                                ;	Reg HL holds divisor
                                ; EXIT	Reg HL holds remainder
                                ;
L0745  0745                          l0745:
L070F  0745    CD 070F               	call	l070f		; HL:=DE DIV HL;DE:=DE MOD HL
  0748    EB                    	ex	de,hl		; Swap remainder
  0749    CB 7A                 	bit	7,d		; Test result
  074B    C8                    	ret	z
L0783  074C    18 35                 	jr	l0783		; Negate
                                ;
                                ; Operator SHL
                                ; Shift left number
                                ; ENTRY	Reg DE holds number to be shifted
                                ;	Reg HL holds shift count
                                ; EXIT	Reg HL holds result
                                ;
L074E  074E                          l074e:
L0761  074E    CD 0761               	call	l0761		; Get shift values
  0751    C8                    	ret	z		; End on zero
L0752  0752                          l0752:
  0752    29                    	add	hl,hl		; Shift
L0752  0753    10 FD                 	djnz	l0752
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-36


  0755    C9                    	ret
                                ;
                                ; Operator SHR
                                ; Shift right number
                                ; ENTRY	Reg DE holds number to be shifted
                                ;	Reg HL holds shift count
                                ; EXIT	Reg HL holds result
                                ;
L0756  0756                          l0756:
L0761  0756    CD 0761               	call	l0761		; Get shift values
  0759    C8                    	ret	z		; End on zero
L075A  075A                          l075a:
  075A    CB 3C                 	srl	h		; Shift
  075C    CB 1D                 	rr	l
L075A  075E    10 FA                 	djnz	l075a
  0760    C9                    	ret
                                ;
                                ; Set shift values
                                ; ENTRY	Reg HL holds number to be shifted
                                ;	Reg DE holds shift count
                                ; EXIT	Reg B holds shift count
                                ;	Zero flag set on nothing to be shifted
                                ;	Reg HL may be preset to zero
                                ;
L0761  0761                          l0761:
  0761    EB                    	ex	de,hl		; Swap factor
  0762    7A                    	ld	a,d		; Test hi zero value
  0763    B7                    	or	a
L076E  0764    20 08                 	jr	nz,l076e	; Nope, should be
  0766    7B                    	ld	a,e
  0767    FE 10                 	cp	16		; Test max length
L076E  0769    30 03                 	jr	nc,l076e	; Overflow
  076B    47                    	ld	b,a
  076C    B7                    	or	a
  076D    C9                    	ret
L076E  076E                          l076e:
  076E    AF                    	xor	a
  076F    67                    	ld	h,a		; Clear result
  0770    6F                    	ld	l,a
  0771    C9                    	ret
                                ;
                                ; Compare signed integers
                                ; ENTRY	Reg DE holds 1st number
                                ;	Reg HL holds 2nd number
                                ; EXIT	Zero  flag set if DE=HL
                                ;	Carry flag set if DE<HL
                                ;
L0772  0772                          l0772:
  0772    EB                    	ex	de,hl
  0773    7C                    	ld	a,h
  0774    AA                    	xor	d		; Test same signs
  0775    7C                    	ld	a,h
L077E  0776    FA 077E               	jp	m,l077e		; Nope, fix carry
  0779    BA                    	cp	d		; Compare hi
  077A    C0                    	ret	nz
  077B    7D                    	ld	a,l
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-37


  077C    BB                    	cp	e		; Compare lo if hi is same
  077D    C9                    	ret
L077E  077E                          l077e:
  077E    17                    	rla			; Get sign of first number
  077F    C9                    	ret
                                ;
                                ; Function ABS(integer):integer;
                                ; ENTRY	Reg HL holds signed integer
                                ; EXIT	Reg HL holds positive integer
                                ;
L0780  0780                          l0780:
_MB  0780    CB 7C                 	bit	_MB,h		; Test sign
  0782    C8                    	ret	z		; Already positive
L0783  0783                          l0783:
  0783    7C                    	ld	a,h		; Build one's complement
  0784    2F                    	cpl
  0785    67                    	ld	h,a
  0786    7D                    	ld	a,l
  0787    2F                    	cpl
  0788    6F                    	ld	l,a
  0789    23                    	inc	hl		; Fix for two's complement
  078A    C9                    	ret
                                ;
                                ; Function ODD(integer):boolean
                                ;
L078B  078B                          l078b:
  078B    7D                    	ld	a,l		; Get lo byte
LSB  078C    E6 01                 	and	LSB		; Extract bit
  078E    6F                    	ld	l,a		; Expand to 16 bit
  078F    26 00                 	ld	h,0
  0791    C9                    	ret
                                ;
                                ; Get random value
                                ; EXIT	Regs BC and HL hold byte 3 and 4 of resulting random
                                ;	Reg  DE holds middle part of real number
                                ;
L0792  0792                          l0792:
L00C8  0792    ED 4B 00CA            	ld	bc,(l00c8+2)	; Load old values
L00C8  0796    ED 5B 00C8            	ld	de,(l00c8)
  079A    C5                    	push	bc		; Save them
  079B    D5                    	push	de
  079C    78                    	ld	a,b		; Expand to 40 bits
  079D    41                    	ld	b,c
  079E    4A                    	ld	c,d
  079F    53                    	ld	d,e
  07A0    1E 00                 	ld	e,0
  07A2    1F                    	rra			; Shift them all
  07A3    CB 18                 	rr	b
  07A5    CB 19                 	rr	c
  07A7    CB 1A                 	rr	d
  07A9    CB 1B                 	rr	e
  07AB    E1                    	pop	hl
  07AC    19                    	add	hl,de		; Add to old
  07AD    EB                    	ex	de,hl
  07AE    E1                    	pop	hl
  07AF    ED 4A                 	adc	hl,bc
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-38


  07B1    44                    	ld	b,h
  07B2    4D                    	ld	c,l
  07B3    21 62E9               	ld	hl,0110001011101001b
  07B6    19                    	add	hl,de		; Fix them - add 62E9H
L00C8  07B7    22 00C8               	ld	(l00c8),hl	; Save new values
  07BA    EB                    	ex	de,hl
  07BB    21 3619               	ld	hl,0011011000011001b
  07BE    ED 4A                 	adc	hl,bc		; Add 3619H
L00C8  07C0    22 00CA               	ld	(l00c8+2),hl
  07C3    44                    	ld	b,h		; Copy result
  07C4    4D                    	ld	c,l
  07C5    C9                    	ret
                                ;
                                ; Convert positive integer to ASCII number
                                ; ENTRY	Reg IX points to ASCII buffer
                                ; 	Reg HL holds integer
                                ; EXIT	Buffer filled
                                ;
L07C6  07C6                          l07c6:
  07C6    06 00                 	ld	b,0		; Init flag
  07C8    11 2710               	ld	de,10000
L07E2  07CB    CD 07E2               	call	l07e2		; Start with 10000s
  07CE    11 03E8               	ld	de,1000
L07E2  07D1    CD 07E2               	call	l07e2		; Then 1000s
  07D4    11 0064               	ld	de,100
L07E2  07D7    CD 07E2               	call	l07e2		; Then 100s
  07DA    1E 0A                 	ld	e,10
L07E2  07DC    CD 07E2               	call	l07e2		; Then 10s
  07DF    7D                    	ld	a,l		; Get remainder
L07EF  07E0    18 0D                 	jr	l07ef
L07E2  07E2                          l07e2:
  07E2    AF                    	xor	a		; Clear quotient
L07E3  07E3                          l07e3:
  07E3    3C                    	inc	a		; Advance quotient
  07E4    ED 52                 	sbc	hl,de		; Divide
L07E3  07E6    30 FB                 	jr	nc,l07e3	; Still positive
  07E8    19                    	add	hl,de		; Fix for last number
  07E9    04                    	inc	b		; Access flag
  07EA    3D                    	dec	a		; Test zero digit
L07EF  07EB    20 02                 	jr	nz,l07ef	; Nope, so store result
  07ED    05                    	dec	b		; Test flag
  07EE    C8                    	ret	z		; No leading zeroes
L07EF  07EF                          l07ef:
  07EF    C6 30                 	add	a,'0'		; Make ASCII
  07F1    DD 77 00              	ld	(ix+0),a	; Save it
  07F4    DD 23                 	inc	ix		; Advance buffer
  07F6    C9                    	ret
                                ;
                                ; Convert ASCII number to integer
                                ; ENTRY	Reg IX points to ASCII number
                                ; EXIT	Reg HL holds integer
                                ;	Carry set on overflow
                                ;
L07F7  07F7                          l07f7:
  07F7    DD 7E 00              	ld	a,(ix+0)
  07FA    D6 24                 	sub	'$'		; Test hex indicator
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-39


  07FC    4F                    	ld	c,a		; Save flag
  07FD    21 0000               	ld	hl,0		; Init result
L0804  0800    20 02                 	jr	nz,l0804
L0802  0802                          l0802:
  0802    DD 23                 	inc	ix		; Skip indicator
L0804  0804                          l0804:
  0804    DD 7E 00              	ld	a,(ix+0)
L04A6  0807    CD 04A6               	call	l04a6		; Convert to upper case
  080A    D6 30                 	sub	'0'		; Strip off offset
L0837  080C    38 29                 	jr	c,l0837		; Out of range
  080E    FE 0A                 	cp	9+1		; Test decimal
L0820  0810    38 0E                 	jr	c,l0820		; Yeap
  0812    0C                    	inc	c		; Test hex allowed
  0813    0D                    	dec	c
L0837  0814    20 21                 	jr	nz,l0837	; Nope
  0816    D6 07                 	sub	'A'-'0'-10	; Fix hex offset
  0818    FE 0A                 	cp	10		; Verify correct range
L0837  081A    38 1B                 	jr	c,l0837
  081C    FE 10                 	cp	15+1
L0837  081E    30 17                 	jr	nc,l0837
L0820  0820                          l0820:
  0820    54                    	ld	d,h		; Copy current number
  0821    5D                    	ld	e,l
  0822    29                    	add	hl,hl		; * 2
  0823    D8                    	ret	c		; Overflow
  0824    29                    	add	hl,hl		; * 4
  0825    D8                    	ret	c
  0826    0C                    	inc	c		; Test hex
  0827    0D                    	dec	c
L082C  0828    20 02                 	jr	nz,l082c
  082A    54                    	ld	d,h		; Copy * 4
  082B    5D                    	ld	e,l
L082C  082C                          l082c:
  082C    19                    	add	hl,de		; * 5 or * 8
  082D    D8                    	ret	c
  082E    29                    	add	hl,hl		; * 10 or * 16
  082F    D8                    	ret	c
  0830    5F                    	ld	e,a
  0831    16 00                 	ld	d,0
  0833    19                    	add	hl,de		; Insert new digit
  0834    D8                    	ret	c
L0802  0835    18 CB                 	jr	l0802
L0837  0837                          l0837:
  0837    79                    	ld	a,c
  0838    B7                    	or	a		; Test hex
  0839    C8                    	ret	z		; Yeap
  083A    7C                    	ld	a,h
  083B    87                    	add	a,a		; Get MSB into carry if decimal
  083C    C9                    	ret
                                ;
                                ; Add two strings
                                ; ENTRY	Stack holds strings
                                ; EXIT	Stack holds combined string
                                ;
L083D  083D                          l083d:
  083D    DD E1                 	pop	ix		; Get caller
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-40


  083F    E1                    	pop	hl
  0840    E5                    	push	hl
  0841    7D                    	ld	a,l		; Get length of 1st
  0842    26 00                 	ld	h,0
  0844    23                    	inc	hl
  0845    39                    	add	hl,sp		; Point to 2nd
  0846    4E                    	ld	c,(hl)
  0847    81                    	add	a,c		; Add lengthes
L0866  0848    38 1C                 	jr	c,l0866		; Too long
  084A    77                    	ld	(hl),a		; Set new length
  084B    EB                    	ex	de,hl
  084C    21 0000               	ld	hl,0
  084F    44                    	ld	b,h
  0850    ED 42                 	sbc	hl,bc		; Prepare moving strings
  0852    39                    	add	hl,sp
  0853    F9                    	ld	sp,hl
  0854    EB                    	ex	de,hl
  0855    E5                    	push	hl
  0856    03                    	inc	bc
  0857    ED B0                 	ldir			; Move into right place
  0859    EB                    	ex	de,hl
  085A    E1                    	pop	hl
  085B    2B                    	dec	hl
  085C    1B                    	dec	de
  085D    4F                    	ld	c,a
  085E    03                    	inc	bc
  085F    ED B8                 	lddr
  0861    EB                    	ex	de,hl
  0862    23                    	inc	hl
  0863    F9                    	ld	sp,hl
  0864    DD E9                 	jp	(ix)
L0866  0866                          l0866:
_STRLENERR  0866    3E 10                 	ld	a,_StrLenErr	; Set error
L2029  0868    C3 2029               	jp	l2029
                                ;
                                ; Function COPY(string,start,length):string
                                ; ENTRY	Start on stack, followed by string
                                ;	Reg HL holds length
                                ; EXIT	Substring on stack
                                ;
L086B  086B                          l086b:
  086B    DD E1                 	pop	ix		; Get caller
L04C8  086D    CD 04C8               	call	l04c8		; Get length byte from integer
  0870    57                    	ld	d,a
  0871    E1                    	pop	hl		; Get start
L09DD  0872    CD 09DD               	call	l09dd		; Verify 1..255
  0875    5F                    	ld	e,a
  0876    E1                    	pop	hl		; Get length ( - and 1st character)
  0877    E5                    	push	hl
  0878    7D                    	ld	a,l
  0879    93                    	sub	e		; Test against start
L0896  087A    38 1A                 	jr	c,l0896		; Out of bounds
  087C    14                    	inc	d		; Test zero length
  087D    15                    	dec	d
L0896  087E    28 16                 	jr	z,l0896		; Yeap, done
  0880    BA                    	cp	d		; Compare against length
L0899TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-41


  0881    38 16                 	jr	c,l0899		; Nothing to move
  0883    4A                    	ld	c,d		; Fix a bit
  0884    06 00                 	ld	b,0
  0886    60                    	ld	h,b
  0887    39                    	add	hl,sp
  0888    7B                    	ld	a,e
  0889    82                    	add	a,d
  088A    54                    	ld	d,h
  088B    5D                    	ld	e,l
  088C    3D                    	dec	a
  088D    6F                    	ld	l,a
  088E    60                    	ld	h,b
  088F    39                    	add	hl,sp
  0890    79                    	ld	a,c
  0891    ED B8                 	lddr			; Then move down
  0893    EB                    	ex	de,hl
L089F  0894    18 09                 	jr	l089f
L0896  0896                          l0896:
  0896    AF                    	xor	a		; Set zero length
L089C  0897    18 03                 	jr	l089c
L0899  0899                          l0899:
  0899    3C                    	inc	a		; Fix length
  089A    6B                    	ld	l,e
  089B    2D                    	dec	l		; Fix position
L089C  089C                          l089c:
  089C    26 00                 	ld	h,0
  089E    39                    	add	hl,sp		; Copy position
L089F  089F                          l089f:
  089F    77                    	ld	(hl),a		; Store length
  08A0    F9                    	ld	sp,hl		; Get stack
  08A1    DD E9                 	jp	(ix)		; Exit
                                ;
                                ; Function LENGTH(string):integer
                                ; ENTRY	String on stack
                                ; EXIT	Reg HL holds length
                                ;
L08A3  08A3                          l08a3:
  08A3    DD E1                 	pop	ix		; Get caller
  08A5    E1                    	pop	hl		; Get length ( - and 1st character)
  08A6    E5                    	push	hl
  08A7    7D                    	ld	a,l		; Save length
  08A8    26 00                 	ld	h,0
  08AA    23                    	inc	hl
  08AB    39                    	add	hl,sp
  08AC    F9                    	ld	sp,hl		; Fix stack
  08AD    6F                    	ld	l,a		; Get 16 bit length
  08AE    26 00                 	ld	h,0
  08B0    DD E9                 	jp	(ix)		; Exit
                                ;
                                ; Function POS(substring,string):integer
                                ; ENTRY	String on stack, followed by substring
                                ; EXIT	Reg HL holds position, 0 is not found
                                ;
L08B2  08B2                          l08b2:
  08B2    DD E1                 	pop	ix		; Get caller
  08B4    21 0000               	ld	hl,0
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-42


  08B7    54                    	ld	d,h
  08B8    39                    	add	hl,sp		; Copy stack
  08B9    5E                    	ld	e,(hl)		; Get length of main_string
  08BA    4B                    	ld	c,e
  08BB    23                    	inc	hl
  08BC    E5                    	push	hl
  08BD    19                    	add	hl,de		; Point to sub_string
  08BE    5E                    	ld	e,(hl)		; Get length of sub_string
  08BF    43                    	ld	b,e
  08C0    23                    	inc	hl
  08C1    E5                    	push	hl
  08C2    19                    	add	hl,de		; Point to end of both
  08C3    E5                    	push	hl
  08C4    FD E1                 	pop	iy		; Copy address
  08C6    D1                    	pop	de		; Get sub_string
  08C7    E1                    	pop	hl		; Get main_string
  08C8    79                    	ld	a,c
  08C9    90                    	sub	b		; Test range
L08DC  08CA    38 10                 	jr	c,l08dc		; Sub_string > main_string - no match
  08CC    3C                    	inc	a		; Fix count
  08CD    4F                    	ld	c,a
L08CE  08CE                          l08ce:
  08CE    C5                    	push	bc
  08CF    D5                    	push	de
  08D0    E5                    	push	hl
L08D1  08D1                          l08d1:
  08D1    1A                    	ld	a,(de)
  08D2    BE                    	cp	(hl)		; Compare
L08E1  08D3    28 0C                 	jr	z,l08e1		; Maybe success
  08D5    E1                    	pop	hl
  08D6    D1                    	pop	de
  08D7    C1                    	pop	bc
  08D8    23                    	inc	hl
  08D9    0D                    	dec	c		; Test more to search
L08CE  08DA    20 F2                 	jr	nz,l08ce	; Ok, then try next
L08DC  08DC                          l08dc:
  08DC    21 0000               	ld	hl,0		; Set zero result
L08EF  08DF    18 0E                 	jr	l08ef
L08E1  08E1                          l08e1:
  08E1    23                    	inc	hl
  08E2    13                    	inc	de
L08D1  08E3    10 EC                 	djnz	l08d1		; Loop thru sub_string
  08E5    D1                    	pop	de
  08E6    E1                    	pop	hl
  08E7    C1                    	pop	bc
  08E8    21 0000               	ld	hl,0
  08EB    39                    	add	hl,sp		; Get pointers
  08EC    EB                    	ex	de,hl
  08ED    ED 52                 	sbc	hl,de		; Calculate resulting position
L08EF  08EF                          l08ef:
  08EF    FD F9                 	ld	sp,iy		; Set stack
  08F1    DD E9                 	jp	(ix)		; Exit
                                ;
                                ; Procedure DELETE(string,start,length)
                                ; ENTRY	Start on stack, followed by string
                                ; 	Reg HL holds length
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-43


                                ;
L08F3  08F3                          l08f3:
  08F3    DD E1                 	pop	ix		; Get caller
L04C8  08F5    CD 04C8               	call	l04c8		; Get length byte from integer
  08F8    4F                    	ld	c,a
  08F9    E1                    	pop	hl
L09DD  08FA    CD 09DD               	call	l09dd		; Verify length in range 1..255
  08FD    5F                    	ld	e,a
  08FE    E1                    	pop	hl		; Get start_string
  08FF    7E                    	ld	a,(hl)		; Get length
  0900    93                    	sub	e		; Test start > length
L091E  0901    38 1B                 	jr	c,l091e		; Exit if so
  0903    0C                    	inc	c
  0904    0D                    	dec	c		; Test any length
L091E  0905    28 17                 	jr	z,l091e		; Nope, exit
  0907    91                    	sub	c		; Test remaining count
L091C  0908    38 12                 	jr	c,l091c		; Nope, done
  090A    F5                    	push	af
  090B    7E                    	ld	a,(hl)
  090C    91                    	sub	c
  090D    77                    	ld	(hl),a
  090E    06 00                 	ld	b,0
  0910    50                    	ld	d,b
  0911    19                    	add	hl,de		; Point to destination
  0912    54                    	ld	d,h
  0913    5D                    	ld	e,l
  0914    09                    	add	hl,bc		; Point to source
  0915    F1                    	pop	af
  0916    3C                    	inc	a
  0917    4F                    	ld	c,a
  0918    ED B0                 	ldir			; Unpack
L091E  091A    18 02                 	jr	l091e
L091C  091C                          l091c:
  091C    1D                    	dec	e		; Adjust length
  091D    73                    	ld	(hl),e		; Store it
L091E  091E                          l091e:
  091E    DD E9                 	jp	(ix)		; Exit
                                ;
                                ; Procedure INSERT(string,substring,start)
                                ; ENTRY	Pointer of substring on stack, followed by string
                                ; 	Reg HL holds start
                                ;	Reg B holds max length of string
                                ;
L0920  0920                          l0920:
  0920    DD E1                 	pop	ix		; Get caller
L09DD  0922    CD 09DD               	call	l09dd		; Verify start in range 1..255
  0925    4F                    	ld	c,a
  0926    D1                    	pop	de		; Get sub_string
L00E8  0927    ED 53 00E8            	ld	(l00e8),de
  092B    21 0000               	ld	hl,0
  092E    39                    	add	hl,sp		; Get string pointer
  092F    1A                    	ld	a,(de)
  0930    F5                    	push	af
  0931    86                    	add	a,(hl)		; Get combined length
L0937  0932    38 03                 	jr	c,l0937		; Truncate on overflow
  0934    B8                    	cp	b		; Compare against max
L0938TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-44


  0935    38 01                 	jr	c,l0938		; Ok
L0937  0937                          l0937:
  0937    78                    	ld	a,b		; Set max defualt
L0938  0938                          l0938:
  0938    12                    	ld	(de),a		; Save combined length
  0939    F1                    	pop	af		; Get length of substring
  093A    57                    	ld	d,a
  093B    5E                    	ld	e,(hl)
  093C    91                    	sub	c		; Get remainder
L096E  093D    38 2F                 	jr	c,l096e		; Skip
  093F    3C                    	inc	a
  0940    6F                    	ld	l,a
  0941    7A                    	ld	a,d
  0942    83                    	add	a,e
L0949  0943    38 04                 	jr	c,l0949
  0945    B8                    	cp	b
  0946    7D                    	ld	a,l
L0951  0947    38 08                 	jr	c,l0951
L0949  0949                          l0949:
  0949    78                    	ld	a,b
  094A    93                    	sub	e
L0973  094B    38 26                 	jr	c,l0973
  094D    91                    	sub	c
L0973  094E    38 23                 	jr	c,l0973
  0950    3C                    	inc	a
L0951  0951                          l0951:
  0951    B7                    	or	a
L0973  0952    28 1F                 	jr	z,l0973
  0954    C5                    	push	bc
  0955    D5                    	push	de
L00E8  0956    2A 00E8               	ld	hl,(l00e8)	; Get back sub_string pointer
  0959    5F                    	ld	e,a
  095A    1D                    	dec	e
  095B    16 00                 	ld	d,0
  095D    42                    	ld	b,d
  095E    19                    	add	hl,de
  095F    09                    	add	hl,bc
  0960    D1                    	pop	de
  0961    D5                    	push	de
  0962    E5                    	push	hl
  0963    50                    	ld	d,b
  0964    19                    	add	hl,de
  0965    EB                    	ex	de,hl
  0966    E1                    	pop	hl
  0967    4F                    	ld	c,a
  0968    ED B8                 	lddr			; Move down
  096A    D1                    	pop	de
  096B    C1                    	pop	bc
L0973  096C    18 05                 	jr	l0973
L096E  096E                          l096e:
  096E    7A                    	ld	a,d
  096F    3C                    	inc	a
L098B  0970    28 19                 	jr	z,l098b
  0972    4F                    	ld	c,a
L0973  0973                          l0973:
  0973    78                    	ld	a,b
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-45


  0974    91                    	sub	c
  0975    3C                    	inc	a
  0976    BB                    	cp	e
L097A  0977    38 01                 	jr	c,l097a
  0979    7B                    	ld	a,e
L097A  097A                          l097a:
  097A    B7                    	or	a
L098B  097B    28 0E                 	jr	z,l098b
L00E8  097D    2A 00E8               	ld	hl,(l00e8)	; Get sub_string pointer
  0980    06 00                 	ld	b,0
  0982    09                    	add	hl,bc
  0983    EB                    	ex	de,hl
  0984    21 0001               	ld	hl,1
  0987    39                    	add	hl,sp
  0988    4F                    	ld	c,a
  0989    ED B0                 	ldir			; Move
L098B  098B                          l098b:
  098B    21 0000               	ld	hl,0
  098E    54                    	ld	d,h
  098F    39                    	add	hl,sp		; Fix stack
  0990    5E                    	ld	e,(hl)
  0991    13                    	inc	de
  0992    19                    	add	hl,de
  0993    F9                    	ld	sp,hl		; Set stack
  0994    DD E9                 	jp	(ix)		; Exit
                                ;
                                ; Check assignment of string to character
                                ; EXIT	Reg L holds character
                                ;
L0996  0996                          l0996:
  0996    DD E1                 	pop	ix		; Get caller
  0998    E1                    	pop	hl		; Get length and character
  0999    2D                    	dec	l		; Verify character only
L0866  099A    C2 0866               	jp	nz,l0866	; Error if not
  099D    6C                    	ld	l,h		; Unpack character
  099E    26 00                 	ld	h,0
  09A0    DD E9                 	jp	(ix)		; Exit
                                ;
                                ; Set character into string
                                ;
L09A2  09A2                          l09a2:
  09A2    21 0002               	ld	hl,2
  09A5    54                    	ld	d,h
  09A6    39                    	add	hl,sp		; Point to string
  09A7    5E                    	ld	e,(hl)		; Get length
  09A8    13                    	inc	de
  09A9    19                    	add	hl,de		; Point to top
  09AA    7E                    	ld	a,(hl)		; Get character
  09AB    36 01                 	ld	(hl),1		; Set length
  09AD    23                    	inc	hl
  09AE    77                    	ld	(hl),a		; Store character
  09AF    C9                    	ret
                                ;
                                ; Compare two strings
                                ; ENTRY	1st stack 1st pushed, 2nd stack 2nd pushed
                                ; EXIT	Carry flag set if 1st<2nd
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-46


                                ;	Zero  flag set if 1st=2nd
                                ;
L09B0  09B0                          l09b0:
  09B0    21 0004               	ld	hl,2*2		; Note 2nd level call
  09B3    54                    	ld	d,h
  09B4    39                    	add	hl,sp		; Point to 2nd string
  09B5    5E                    	ld	e,(hl)		; Get length
  09B6    4B                    	ld	c,e
  09B7    23                    	inc	hl
  09B8    E5                    	push	hl
  09B9    19                    	add	hl,de		; Point to first string
  09BA    5E                    	ld	e,(hl)		; Get length
  09BB    43                    	ld	b,e
  09BC    23                    	inc	hl
  09BD    E5                    	push	hl
  09BE    19                    	add	hl,de		; Set return stack
  09BF    E5                    	push	hl
  09C0    FD E1                 	pop	iy		; Copy into reg IY
  09C2    D1                    	pop	de		; Get 1st string
  09C3    E1                    	pop	hl		; Get 2nd string
L09C4  09C4                          l09c4:
  09C4    AF                    	xor	a		; Try zero length
  09C5    B8                    	cp	b
L09CC  09C6    28 04                 	jr	z,l09cc
  09C8    B9                    	cp	c		; Test on both
L09D3  09C9    20 08                 	jr	nz,l09d3
  09CB    78                    	ld	a,b
L09CC  09CC                          l09cc:
  09CC    B9                    	cp	c
L09CD  09CD                          l09cd:
  09CD    E1                    	pop	hl		; Get back callers
  09CE    D1                    	pop	de
  09CF    FD F9                 	ld	sp,iy		; Set new stack
  09D1    D5                    	push	de		; Set 2nd kevel caller
  09D2    E9                    	jp	(hl)		; Exit
L09D3  09D3                          l09d3:
  09D3    1A                    	ld	a,(de)
  09D4    BE                    	cp	(hl)		; Compare
L09CD  09D5    20 F6                 	jr	nz,l09cd	; No match
  09D7    23                    	inc	hl
  09D8    13                    	inc	de
  09D9    05                    	dec	b
  09DA    0D                    	dec	c
L09C4  09DB    18 E7                 	jr	l09c4
                                ;
                                ; Verify value in reg HL in range 1..255
                                ;
L09DD  09DD                          l09dd:
  09DD    7C                    	ld	a,h		; Verify < 256
  09DE    B7                    	or	a
L09E4  09DF    20 03                 	jr	nz,l09e4
  09E1    7D                    	ld	a,l
  09E2    B7                    	or	a		; Verify <> 0
  09E3    C0                    	ret	nz
L09E4  09E4                          l09e4:
_STRIDX  09E4    3E 11                 	ld	a,_StrIdx
L2029TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-47


  09E6    C3 2029               	jp	l2029
                                ;
                                ; Function ADD:real
                                ; ENTRY	Regs (HL,DE,BC)  hold 1st number
                                ; 	Regs (HL,DE,BC)' hold 2nd number
                                ; EXIT	Regs (HL,DE,BC)  hold sum
                                ;
L09E9  09E9                          l09e9:
L0A0D  09E9    CD 0A0D               	call	l0a0d		; Add
L09EC  09EC                          l09ec:
  09EC    D0                    	ret	nc		; Check result
_FLPOVFL  09ED    3E 01                 	ld	a,_FLPovfl
L2027  09EF    C3 2027               	jp	l2027		; Set error and abort
                                ;
                                ; Function SUBTRACT:real
                                ; ENTRY	Regs (HL,DE,BC)  hold 1st number
                                ; 	Regs (HL,DE,BC)' hold 2nd number
                                ; EXIT	Regs (HL,DE,BC)  hold difference
                                ;
L09F2  09F2                          l09f2:
L0A81  09F2    CD 0A81               	call	l0a81		; Subtract
L09EC  09F5    18 F5                 	jr	l09ec		; Check result
                                ;
                                ; Function SQR(real):real
                                ; ENTRY	Regs (HL,DE,BC) hold number
                                ; EXIT	Regs (HL,DE,BC) hold square
                                ;
L09F7  09F7                          l09f7:
L0FAC  09F7    CD 0FAC               	call	l0fac		; Copy number, then multiply
                                ;
                                ; Function MULTIPLY:real
                                ; ENTRY	Regs (HL,DE,BC)  hold multiplicand
                                ; 	Regs (HL,DE,BC)' hold multiplier
                                ; EXIT	Regs (HL,DE,BC)  hold product
                                ;
L09FA  09FA                          l09fa:
L0A97  09FA    CD 0A97               	call	l0a97		; Multiply
L09EC  09FD    18 ED                 	jr	l09ec		; Check result
                                ;
                                ; Function DIVIDE:real
                                ; ENTRY	Regs (HL,DE,BC)  hold 1st dividend
                                ; 	Regs (HL,DE,BC)' hold 2nd divisor
                                ; EXIT	Regs (HL,DE,BC)  hold quotient
                                ;
L09FF  09FF                          l09ff:
  09FF    D9                    	exx			; Get divisor
  0A00    7D                    	ld	a,l
  0A01    B7                    	or	a		; Verify not zero
  0A02    D9                    	exx
L0A03  0A03                          l0a03:
_DIVZERO  0A03    3E 02                 	ld	a,_DivZero
L2027  0A05    CA 2027               	jp	z,l2027		; Error if division by zero
L0AF5  0A08    CD 0AF5               	call	l0af5		; Divide
L09EC  0A0B    18 DF                 	jr	l09ec		; Check result
                                ;
                                ; Add reals
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-48


                                ; ENTRY	Regs (HL,DE,BC)  hold 1st number
                                ; 	Regs (HL,DE,BC)' hold 2nd number
                                ; EXIT	Regs (HL,DE,BC)  hold sum
                                ;	Carry set on overflow
                                ;
L0A0D  0A0D                          l0a0d:
  0A0D    D9                    	exx
SGN.BIT  0A0E    CB 78                 	bit	sgn.bit,b	; Test sign of 2nd number
  0A10    D9                    	exx
L0A88  0A11    C2 0A88               	jp	nz,l0a88	; Subtract if less 0
L0A14  0A14                          l0a14:
  0A14    D9                    	exx
  0A15    7D                    	ld	a,l		; Test 2nd number zero
  0A16    B7                    	or	a
  0A17    D9                    	exx
  0A18    C8                    	ret	z		; Ok, result is the 1st number
  0A19    D9                    	exx
  0A1A    C5                    	push	bc		; Save 1st number
  0A1B    D5                    	push	de
  0A1C    E5                    	push	hl
  0A1D    D9                    	exx
  0A1E    7D                    	ld	a,l
  0A1F    B7                    	or	a		; Test 1st number zero
L0A27  0A20    20 05                 	jr	nz,l0a27	; Nope
  0A22    D9                    	exx
SGN.BIT  0A23    CB B8                 	res	sgn.bit,b	; Clear sign
L0A7B  0A25    18 54                 	jr	l0a7b		; Get 2nd number as result
L0A27  0A27                          l0a27:
  0A27    C5                    	push	bc
SGN.BIT  0A28    CB F8                 	set	sgn.bit,b	; Force bit set
  0A2A    AF                    	xor	a
  0A2B    08                    	ex	af,af'
  0A2C    D9                    	exx
SGN.BIT  0A2D    CB F8                 	set	sgn.bit,b
  0A2F    7D                    	ld	a,l
  0A30    D9                    	exx
  0A31    95                    	sub	l		; Test same exponents
L0A47  0A32    28 13                 	jr	z,l0a47		; Yeap
L0A3C  0A34    30 06                 	jr	nc,l0a3c
  0A36    ED 44                 	neg
  0A38    08                    	ex	af,af'
  0A39    3D                    	dec	a
  0A3A    08                    	ex	af,af'
  0A3B    D9                    	exx
L0A3C  0A3C                          l0a3c:
L0B7A  0A3C    CD 0B7A               	call	l0b7a		; Shift mantissa right
  0A3F    2C                    	inc	l		; Bump exponent
  0A40    3D                    	dec	a
L0A3C  0A41    20 F9                 	jr	nz,l0a3c
  0A43    08                    	ex	af,af'
L0A47  0A44    28 01                 	jr	z,l0a47
  0A46    D9                    	exx
L0A47  0A47                          l0a47:
  0A47    F1                    	pop	af		; Get back mantissa MSB
SIGN.BIT  0A48    E6 80                 	and	sign.bit	; Test sign
L0A5B  0A4A    20 0F                 	jr	nz,l0a5b	; It's negative
L0B92TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-49


  0A4C    CD 0B92               	call	l0b92		; Add mantissas
L0A76  0A4F    30 25                 	jr	nc,l0a76	; Test bit out
L0B7B  0A51    CD 0B7B               	call	l0b7b		; Rotate mantissa right
  0A54    B7                    	or	a
  0A55    2C                    	inc	l		; Fix exponent
L0A76  0A56    20 1E                 	jr	nz,l0a76	; Test underflow
  0A58    37                    	scf
L0A7B  0A59    18 20                 	jr	l0a7b
L0A5B  0A5B                          l0a5b:
L0BC6  0A5B    CD 0BC6               	call	l0bc6		; Compare mantissas
  0A5E    3F                    	ccf
  0A5F    F5                    	push	af
L0A72  0A60    28 10                 	jr	z,l0a72		; It's same
L0A65  0A62    38 01                 	jr	c,l0a65		; It's less
  0A64    D9                    	exx
L0A65  0A65                          l0a65:
L0BAC  0A65    CD 0BAC               	call	l0bac		; Subtract mantissas
L0A68  0A68                          l0a68:
SGN.BIT  0A68    CB 78                 	bit	sgn.bit,b	; Test normalized
L0A75  0A6A    20 09                 	jr	nz,l0a75	; Yeap
L0B86  0A6C    CD 0B86               	call	l0b86		; Shift left
  0A6F    2D                    	dec	l
L0A68  0A70    20 F6                 	jr	nz,l0a68
L0A72  0A72                          l0a72:
L0B72  0A72    CD 0B72               	call	l0b72		; Zero result
L0A75  0A75                          l0a75:
  0A75    F1                    	pop	af
L0A76  0A76                          l0a76:
L0A7A  0A76    38 02                 	jr	c,l0a7a		; Test sign
SGN.BIT  0A78    CB B8                 	res	sgn.bit,b	; Reset if positive
L0A7A  0A7A                          l0a7a:
  0A7A    B7                    	or	a
L0A7B  0A7B                          l0a7b:
  0A7B    D9                    	exx
  0A7C    E1                    	pop	hl
  0A7D    D1                    	pop	de
  0A7E    C1                    	pop	bc
  0A7F    D9                    	exx
  0A80    C9                    	ret
                                ;
                                ; Subtract reals
                                ; ENTRY	Regs (HL,DE,BC)  hold 1st number
                                ; 	Regs (HL,DE,BC)' hold 2nd number
                                ; EXIT	Regs (HL,DE,BC)  hold difference
                                ;	Carry set on overflow
                                ;
L0A81  0A81                          l0a81:
  0A81    D9                    	exx
SGN.BIT  0A82    CB 78                 	bit	sgn.bit,b	; Test sign of 2nd number
  0A84    D9                    	exx
L0A14  0A85    C2 0A14               	jp	nz,l0a14	; Add if less 0
L0A88  0A88                          l0a88:
L0A8F  0A88    CD 0A8F               	call	l0a8f		; Negate
L0A14  0A8B    CD 0A14               	call	l0a14		; Then add
  0A8E    D8                    	ret	c
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-50


                                ; Negate real
                                ; ENTRY	Regs HL,DE,BC hold real number
                                ; EXIT	Sign changed if real > 0
                                ;
L0A8F  0A8F                          l0a8f:
  0A8F    2C                    	inc	l		; Test exponent zero
  0A90    2D                    	dec	l
  0A91    C8                    	ret	z		; Exit if so
  0A92    78                    	ld	a,b
SIGN.BIT  0A93    EE 80                 	xor	sign.bit	; Change sign bit
  0A95    47                    	ld	b,a
  0A96    C9                    	ret
                                ;
                                ; Multiply reals
                                ; ENTRY	Regs (HL,DE,BC)  hold multiplicand
                                ; 	Regs (HL,DE,BC)' hold multiplier
                                ; EXIT	Regs (HL,DE,BC)  hold product
                                ;	Carry set on overflow
                                ;
L0A97  0A97                          l0a97:
  0A97    D9                    	exx
  0A98    7D                    	ld	a,l
  0A99    B7                    	or	a		; Test zero multiplier
  0A9A    D9                    	exx
L0B72  0A9B    CA 0B72               	jp	z,l0b72		; Return 0.0 if so
  0A9E    7D                    	ld	a,l
  0A9F    B7                    	or	a
  0AA0    C8                    	ret	z		; Return if multiplicand zero
  0AA1    D9                    	exx
  0AA2    85                    	add	a,l		; Add exponents
  0AA3    D9                    	exx
L0B4D  0AA4    CD 0B4D               	call	l0b4d		; Fix exponent
  0AA7    C5                    	push	bc		; Save number
  0AA8    D5                    	push	de
  0AA9    E5                    	push	hl
  0AAA    DD 39                 	add	ix,sp
L0B72  0AAC    CD 0B72               	call	l0b72		; Prepare result
  0AAF    D9                    	exx
MANT.LEN  0AB0    2E 05                 	ld	l,mant.len	; Set mantissa count
  0AB2    D9                    	exx
L0AB3  0AB3                          l0ab3:
BIT.LEN  0AB3    3E 08                 	ld	a,bit.len	; Set bit count
  0AB5    DD 23                 	inc	ix
  0AB7    DD 6E 00              	ld	l,(ix+0)
L0ABA  0ABA                          l0aba:
  0ABA    08                    	ex	af,af'
  0ABB    CB 1D                 	rr	l		; Shift bit
L0AC2  0ABD    30 03                 	jr	nc,l0ac2
L0B92  0ABF    CD 0B92               	call	l0b92		; Add mantissa if bit out
L0AC2  0AC2                          l0ac2:
L0B7B  0AC2    CD 0B7B               	call	l0b7b		; Rotate mantissa right
  0AC5    08                    	ex	af,af'
  0AC6    3D                    	dec	a		; Go thru all bits
L0ABA  0AC7    20 F1                 	jr	nz,l0aba
  0AC9    D9                    	exx
  0ACA    2D                    	dec	l
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-51


  0ACB    D9                    	exx
L0AB3  0ACC    20 E5                 	jr	nz,l0ab3
MANT.LEN  0ACE    DD 6E FB              	ld	l,(ix-mant.len)	; Get byte back
SGN.BIT  0AD1    CB 78                 	bit	sgn.bit,b	; Test sign
L0ADE  0AD3    20 09                 	jr	nz,l0ade
  0AD5    08                    	ex	af,af'
L0B87  0AD6    CD 0B87               	call	l0b87		; Get bit
  0AD9    2C                    	inc	l
  0ADA    2D                    	dec	l
L0ADE  0ADB    28 01                 	jr	z,l0ade
  0ADD    2D                    	dec	l
L0ADE  0ADE                          l0ade:
  0ADE    F1                    	pop	af		; Clean stack
  0ADF    F1                    	pop	af
  0AE0    F1                    	pop	af
L0AE1  0AE1                          l0ae1:
  0AE1    B7                    	or	a
L0AE2  0AE2                          l0ae2:
  0AE2    08                    	ex	af,af'
  0AE3    F1                    	pop	af
  0AE4    D9                    	exx
  0AE5    C1                    	pop	bc
  0AE6    E1                    	pop	hl
  0AE7    D9                    	exx
  0AE8    DD E1                 	pop	ix
SGN.BIT  0AEA    CB B8                 	res	sgn.bit,b	; Reset hi bit
  0AEC    B0                    	or	b
  0AED    47                    	ld	b,a		; Insert sign
  0AEE    2C                    	inc	l
  0AEF    2D                    	dec	l
L0B72  0AF0    CC 0B72               	call	z,l0b72		; Clear if underflow
  0AF3    08                    	ex	af,af'
  0AF4    C9                    	ret
                                ;
                                ; Divide reals
                                ; ENTRY	Regs (HL,DE,BC)  hold 1st dividend
                                ; 	Regs (HL,DE,BC)' hold 2nd divisor
                                ; EXIT	Regs (HL,DE,BC)  hold quotient
                                ;	Carry set on overflow
                                ;
L0AF5  0AF5                          l0af5:
  0AF5    7D                    	ld	a,l
  0AF6    B7                    	or	a		; Test zero divisor
  0AF7    C8                    	ret	z
  0AF8    D9                    	exx
  0AF9    95                    	sub	l		; Get resulting exponent
  0AFA    D9                    	exx
  0AFB    3F                    	ccf
L0B4D  0AFC    CD 0B4D               	call	l0b4d		; Fix it
  0AFF    E5                    	push	hl
  0B00    E5                    	push	hl
  0B01    E5                    	push	hl
  0B02    DD 39                 	add	ix,sp
  0B04    D9                    	exx
MANT.LEN  0B05    2E 05                 	ld	l,mant.len	; Get complete count
  0B07    D9                    	exx
BIT.LENTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-52


  0B08    3E 08                 	ld	a,bit.len	; Set bit count
L0B0A  0B0A                          l0b0a:
  0B0A    08                    	ex	af,af'
L0BC6  0B0B    CD 0BC6               	call	l0bc6		; Compare mantissas
L0B13  0B0E    38 03                 	jr	c,l0b13
L0BAC  0B10    CD 0BAC               	call	l0bac		; Subtract mantissas
L0B13  0B13                          l0b13:
  0B13    3F                    	ccf
  0B14    CB 15                 	rl	l
  0B16    08                    	ex	af,af'
  0B17    3D                    	dec	a		; Go thru the bits
L0B26  0B18    20 0C                 	jr	nz,l0b26
MANT.LEN  0B1A    DD 75 05              	ld	(ix+mant.len),l	; Set result
  0B1D    DD 2B                 	dec	ix
  0B1F    D9                    	exx
  0B20    2D                    	dec	l		; Go thru the mantissa
  0B21    D9                    	exx
L0B32  0B22    28 0E                 	jr	z,l0b32		; Total end
BIT.LEN  0B24    3E 08                 	ld	a,bit.len	; Reset bit count
L0B26  0B26                          l0b26:
L0B86  0B26    CD 0B86               	call	l0b86		; Shift left
L0B0A  0B29    30 DF                 	jr	nc,l0b0a
  0B2B    08                    	ex	af,af'
L0BAC  0B2C    CD 0BAC               	call	l0bac		; Subtract mantissas
  0B2F    B7                    	or	a
L0B13  0B30    18 E1                 	jr	l0b13
L0B32  0B32                          l0b32:
L0B86  0B32    CD 0B86               	call	l0b86		; Shift left
L0B3B  0B35    38 04                 	jr	c,l0b3b
L0BC6  0B37    CD 0BC6               	call	l0bc6		; Compare mantissas
  0B3A    3F                    	ccf
L0B3B  0B3B                          l0b3b:
  0B3B    E1                    	pop	hl
  0B3C    D1                    	pop	de
  0B3D    C1                    	pop	bc
SGN.BIT  0B3E    CB 78                 	bit	sgn.bit,b	; Test bit
L0B47  0B40    20 05                 	jr	nz,l0b47
L0B87  0B42    CD 0B87               	call	l0b87		; Shift in
L0AE1  0B45    18 9A                 	jr	l0ae1
L0B47  0B47                          l0b47:
  0B47    2C                    	inc	l		; Test ok
L0AE1  0B48    20 97                 	jr	nz,l0ae1
  0B4A    37                    	scf
L0AE2  0B4B    18 95                 	jr	l0ae2
                                ;
                                ; Fix exponent
                                ; ENTRY	Accu and Carry reflect state of addition or
                                ;	subtraction of exponents
                                ;
L0B4D  0B4D                          l0b4d:
L0B55  0B4D    38 06                 	jr	c,l0b55		; Test bit out
EXP.OFFSET  0B4F    C6 80                 	add	a,exp.offset	; Add offset
L0B59  0B51    38 06                 	jr	c,l0b59		; Test bit
L0B70  0B53    18 1B                 	jr	l0b70
L0B55  0B55                          l0b55:
EXP.OFFSET  0B55    C6 80                 	add	a,exp.offset
L0B70TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-53


  0B57    38 17                 	jr	c,l0b70
L0B59  0B59                          l0b59:
  0B59    6F                    	ld	l,a		; Set new exponent
  0B5A    DD E3                 	ex	(sp),ix		; Get caller
  0B5C    D9                    	exx
  0B5D    E5                    	push	hl
  0B5E    C5                    	push	bc
  0B5F    78                    	ld	a,b
SGN.BIT  0B60    CB F8                 	set	sgn.bit,b	; Set bit
  0B62    D9                    	exx
  0B63    A8                    	xor	b
SIGN.BIT  0B64    E6 80                 	and	sign.bit	; Get result
  0B66    F5                    	push	af
SGN.BIT  0B67    CB F8                 	set	sgn.bit,b	; Second, too
  0B69    DD E5                 	push	ix		; Bring back caller
  0B6B    DD 21 0000            	ld	ix,0		; Return IX=0
  0B6F    C9                    	ret
L0B70  0B70                          l0b70:
  0B70    E1                    	pop	hl
  0B71    D8                    	ret	c
                                ;
                                ; Clear real number
                                ; EXIT	Regs (HL,DE,BC) hold zero
                                ;
L0B72  0B72                          l0b72:
  0B72    AF                    	xor	a
  0B73    6F                    	ld	l,a		; Clear all involved bytes
  0B74    47                    	ld	b,a
  0B75    4F                    	ld	c,a
  0B76    57                    	ld	d,a
  0B77    5F                    	ld	e,a
  0B78    67                    	ld	h,a
  0B79    C9                    	ret
                                ;
                                ; Shift mantissa right
                                ;
L0B7A  0B7A                          l0b7a:
  0B7A    B7                    	or	a		; Clear carry
                                ;
                                ; Rotate mantissa right
                                ;
L0B7B  0B7B                          l0b7b:
  0B7B    CB 18                 	rr	b		; Shift 5 bytes right
  0B7D    CB 19                 	rr	c
  0B7F    CB 1A                 	rr	d
  0B81    CB 1B                 	rr	e
  0B83    CB 1C                 	rr	h
  0B85    C9                    	ret
                                ;
                                ; Shift mantissa left
                                ;
L0B86  0B86                          l0b86:
  0B86    B7                    	or	a		; Clear carry
                                ;
                                ; Rotate mantissa left
                                ;
L0B87TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-54


  0B87                          l0b87:
  0B87    CB 14                 	rl	h		; Shift 5 bytes left
  0B89    CB 13                 	rl	e
  0B8B    CB 12                 	rl	d
  0B8D    CB 11                 	rl	c
  0B8F    CB 10                 	rl	b
  0B91    C9                    	ret
                                ;
                                ; Add mantissas
                                ;
L0B92  0B92                          l0b92:
  0B92    7C                    	ld	a,h		; Get 1st
  0B93    D9                    	exx			; Then second
  0B94    84                    	add	a,h		; Add
  0B95    D9                    	exx
  0B96    67                    	ld	h,a		; Into 1st
  0B97    7B                    	ld	a,e
  0B98    D9                    	exx
  0B99    8B                    	adc	a,e
  0B9A    D9                    	exx
  0B9B    5F                    	ld	e,a
  0B9C    7A                    	ld	a,d
  0B9D    D9                    	exx
  0B9E    8A                    	adc	a,d
  0B9F    D9                    	exx
  0BA0    57                    	ld	d,a
  0BA1    79                    	ld	a,c
  0BA2    D9                    	exx
  0BA3    89                    	adc	a,c
  0BA4    D9                    	exx
  0BA5    4F                    	ld	c,a
  0BA6    78                    	ld	a,b
  0BA7    D9                    	exx
  0BA8    88                    	adc	a,b
  0BA9    D9                    	exx
  0BAA    47                    	ld	b,a
  0BAB    C9                    	ret
                                ;
                                ; Subtract mantissas
                                ;
L0BAC  0BAC                          l0bac:
  0BAC    7C                    	ld	a,h		; Get 1st
  0BAD    D9                    	exx			; Then second
  0BAE    94                    	sub	h		; Subtract
  0BAF    D9                    	exx
  0BB0    67                    	ld	h,a		; Into 1st
  0BB1    7B                    	ld	a,e
  0BB2    D9                    	exx
  0BB3    9B                    	sbc	a,e
  0BB4    D9                    	exx
  0BB5    5F                    	ld	e,a
  0BB6    7A                    	ld	a,d
  0BB7    D9                    	exx
  0BB8    9A                    	sbc	a,d
  0BB9    D9                    	exx
  0BBA    57                    	ld	d,a
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-55


  0BBB    79                    	ld	a,c
  0BBC    D9                    	exx
  0BBD    99                    	sbc	a,c
  0BBE    D9                    	exx
  0BBF    4F                    	ld	c,a
  0BC0    78                    	ld	a,b
  0BC1    D9                    	exx
  0BC2    98                    	sbc	a,b
  0BC3    D9                    	exx
  0BC4    47                    	ld	b,a
  0BC5    C9                    	ret
                                ;
                                ; Compare mantissas
                                ;
L0BC6  0BC6                          l0bc6:
  0BC6    78                    	ld	a,b		; Get 1st
  0BC7    D9                    	exx			; Then second
  0BC8    B8                    	cp	b		; Compare
  0BC9    D9                    	exx
  0BCA    C0                    	ret	nz		; Exit if .NE. zero
  0BCB    79                    	ld	a,c
  0BCC    D9                    	exx
  0BCD    B9                    	cp	c
  0BCE    D9                    	exx
  0BCF    C0                    	ret	nz
  0BD0    7A                    	ld	a,d
  0BD1    D9                    	exx
  0BD2    BA                    	cp	d
  0BD3    D9                    	exx
  0BD4    C0                    	ret	nz
  0BD5    7B                    	ld	a,e
  0BD6    D9                    	exx
  0BD7    BB                    	cp	e
  0BD8    D9                    	exx
  0BD9    C0                    	ret	nz
  0BDA    7C                    	ld	a,h
  0BDB    D9                    	exx
  0BDC    BC                    	cp	h
  0BDD    D9                    	exx
  0BDE    C9                    	ret
                                ;
                                ; Compare two reals
                                ; ENTRY	1st real in register set
                                ;	2nd real in alternative set
                                ; EXIT	Carry flag set if 1st<2nd
                                ;	Zero  flag set if 1st=2nd
                                ;
L0BDF  0BDF                          l0bdf:
  0BDF    D9                    	exx
  0BE0    78                    	ld	a,b		; Get sign
  0BE1    D9                    	exx
  0BE2    A8                    	xor	b		; Test same signs
L0BE9  0BE3    F2 0BE9               	jp	p,l0be9		; Yeap
  0BE6    78                    	ld	a,b		; Get 1st sign
  0BE7    17                    	rla			; Calculate result
  0BE8    C9                    	ret
L0BE9TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-56


  0BE9                          l0be9:
SGN.BIT  0BE9    CB 78                 	bit	sgn.bit,b	; Test 1st > 0
L0BF3  0BEB    28 06                 	jr	z,l0bf3		; Yeap
L0BF3  0BED    CD 0BF3               	call	l0bf3		; Compare
  0BF0    C8                    	ret	z
  0BF1    3F                    	ccf
  0BF2    C9                    	ret
L0BF3  0BF3                          l0bf3:
  0BF3    7D                    	ld	a,l		; Get exponent
  0BF4    D9                    	exx
  0BF5    BD                    	cp	l		; Compare
  0BF6    D9                    	exx
  0BF7    C0                    	ret	nz		; Not same
  0BF8    B7                    	or	a		; Test zero
  0BF9    C8                    	ret	z
L0BC6  0BFA    C3 0BC6               	jp	l0bc6		; Compare mantissas
                                ;
                                ; Function INT(real):real
                                ;
L0BFD  0BFD                          l0bfd:
  0BFD    7D                    	ld	a,l
EXP.ONE  0BFE    D6 81                 	sub	Exp.One		; Test >= 1
L0B72  0C00    DA 0B72               	jp	c,l0b72		; Nope, return 0.0
  0C03    3C                    	inc	a		; Fix count
MANT.BITS  0C04    FE 28                 	cp	mant.bits	; Test fraction
  0C06    D0                    	ret	nc		; No, that's it
  0C07    D9                    	exx
  0C08    C5                    	push	bc		; save 2nd
  0C09    D5                    	push	de
  0C0A    E5                    	push	hl
  0C0B    08                    	ex	af,af'
L0B72  0C0C    CD 0B72               	call	l0b72		; Init result
  0C0F    08                    	ex	af,af'
L0C10  0C10                          l0c10:
  0C10    37                    	scf
L0B7B  0C11    CD 0B7B               	call	l0b7b		; Rotate mantissa right
  0C14    3D                    	dec	a
L0C10  0C15    20 F9                 	jr	nz,l0c10
  0C17    D9                    	exx
  0C18    7C                    	ld	a,h		; Mask result
  0C19    D9                    	exx
  0C1A    A4                    	and	h
  0C1B    D9                    	exx
  0C1C    67                    	ld	h,a
  0C1D    7B                    	ld	a,e
  0C1E    D9                    	exx
  0C1F    A3                    	and	e
  0C20    D9                    	exx
  0C21    5F                    	ld	e,a
  0C22    7A                    	ld	a,d
  0C23    D9                    	exx
  0C24    A2                    	and	d
  0C25    D9                    	exx
  0C26    57                    	ld	d,a
  0C27    79                    	ld	a,c
  0C28    D9                    	exx
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-57


  0C29    A1                    	and	c
  0C2A    D9                    	exx
  0C2B    4F                    	ld	c,a
  0C2C    78                    	ld	a,b
  0C2D    D9                    	exx
  0C2E    A0                    	and	b
  0C2F    D9                    	exx
  0C30    47                    	ld	b,a
L0C31  0C31                          l0c31:
L0A7B  0C31    C3 0A7B               	jp	l0a7b
                                ;
                                ; Function FRAC(real):real
                                ;
L0C34  0C34                          l0c34:
  0C34    D9                    	exx
  0C35    C5                    	push	bc
  0C36    D5                    	push	de
  0C37    E5                    	push	hl
  0C38    D9                    	exx
L0FAC  0C39    CD 0FAC               	call	l0fac		; Copy number
  0C3C    D9                    	exx
L0BFD  0C3D    CD 0BFD               	call	l0bfd		; Get integer part
  0C40    D9                    	exx
L0A81  0C41    CD 0A81               	call	l0a81		; Subtract from original number
L0C31  0C44    18 EB                 	jr	l0c31
                                ;
                                ; Function SQRT(real):real
                                ;
L0C46  0C46                          l0c46:
  0C46    7D                    	ld	a,l		; Test zero operand
  0C47    B7                    	or	a
  0C48    C8                    	ret	z		; Ok, that's it
SGN.BIT  0C49    CB 78                 	bit	sgn.bit,b	; Verify operand >= 0
_NEGSQRT  0C4B    3E 03                 	ld	a,_NegSqrt
L2027  0C4D    C2 2027               	jp	nz,l2027	; Should be
L0FAC  0C50    CD 0FAC               	call	l0fac		; Copy number
  0C53    7D                    	ld	a,l
EXP.OFFSET  0C54    C6 80                 	add	a,exp.offset
  0C56    CB 2F                 	sra	a		; Fix resulting exponent
EXP.OFFSET  0C58    C6 80                 	add	a,exp.offset
  0C5A    6F                    	ld	l,a
SQR.EXP  0C5B    D6 14                 	sub	sqr.exp		; Fix exponent
  0C5D    F5                    	push	af
  0C5E    D9                    	exx
L0C5F  0C5F                          l0c5f:
  0C5F    C5                    	push	bc
  0C60    D5                    	push	de
  0C61    E5                    	push	hl
L0AF5  0C62    CD 0AF5               	call	l0af5		; Divide reals
L0A0D  0C65    CD 0A0D               	call	l0a0d		; Add reals
  0C68    2D                    	dec	l		; Exponent - 1
  0C69    C5                    	push	bc
  0C6A    D5                    	push	de
  0C6B    E5                    	push	hl
L0A81  0C6C    CD 0A81               	call	l0a81		; Subtract reals
  0C6F    7D                    	ld	a,l
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-58


  0C70    E1                    	pop	hl
  0C71    D1                    	pop	de
  0C72    C1                    	pop	bc
  0C73    D9                    	exx
  0C74    E1                    	pop	hl
  0C75    D1                    	pop	de
  0C76    C1                    	pop	bc
  0C77    E3                    	ex	(sp),hl
  0C78    BC                    	cp	h		; Test ready
  0C79    E3                    	ex	(sp),hl
L0C5F  0C7A    30 E3                 	jr	nc,l0c5f	; Loop on
  0C7C    F1                    	pop	af
  0C7D    D9                    	exx
  0C7E    C9                    	ret
                                ;
                                ; Function COS(real):real
                                ;
L0C7F  0C7F                          l0c7f:
  0C7F    D9                    	exx
L0F8E  0C80    CD 0F8E               	call	l0f8e		; Load constant PI
  0C83    2D                    	dec	l		; Make 90 degrees
L0A81  0C84    CD 0A81               	call	l0a81		; Subtract reals
                                ;
                                ; Function SIN(real):real
                                ;
L0C87  0C87                          l0c87:
  0C87    D9                    	exx
L0F8E  0C88    CD 0F8E               	call	l0f8e		; Load constant PI
  0C8B    2C                    	inc	l		; Make 360 degrees
  0C8C    D9                    	exx
  0C8D    7D                    	ld	a,l
SIN.MIN  0C8E    FE 6C                 	cp	sin.min		; Test underflow
  0C90    D8                    	ret	c
  0C91    C5                    	push	bc
SGN.BIT  0C92    CB B8                 	res	sgn.bit,b	; Clear sign
L0BDF  0C94    CD 0BDF               	call	l0bdf		; Compare against period
  0C97    C1                    	pop	bc
L0CA3  0C98    38 09                 	jr	c,l0ca3
L0AF5  0C9A    CD 0AF5               	call	l0af5		; Divide reals
L0C34  0C9D    CD 0C34               	call	l0c34		; Get fraction
L0A97  0CA0    CD 0A97               	call	l0a97		; Multiply reals
L0CA3  0CA3                          l0ca3:
SGN.BIT  0CA3    CB 78                 	bit	sgn.bit,b	; Test sign
L0CAA  0CA5    28 03                 	jr	z,l0caa
L0A0D  0CA7    CD 0A0D               	call	l0a0d		; Add reals
L0CAA  0CAA                          l0caa:
  0CAA    D9                    	exx
  0CAB    2D                    	dec	l		; Make 180 degrees
  0CAC    D9                    	exx
L0BDF  0CAD    CD 0BDF               	call	l0bdf		; Test within 180 degrees
  0CB0    F5                    	push	af
L0CB6  0CB1    38 03                 	jr	c,l0cb6
L0A81  0CB3    CD 0A81               	call	l0a81		; Subtract reals
L0CB6  0CB6                          l0cb6:
  0CB6    D9                    	exx
  0CB7    2D                    	dec	l		; Make 90 degrees
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-59


  0CB8    D9                    	exx
L0BDF  0CB9    CD 0BDF               	call	l0bdf		; Test within 90 degrees
L0CC3  0CBC    38 05                 	jr	c,l0cc3
  0CBE    D9                    	exx
  0CBF    2C                    	inc	l		; Make 180 degrees
L0A81  0CC0    CD 0A81               	call	l0a81		; Subtract reals
L0CC3  0CC3                          l0cc3:
  0CC3    7D                    	ld	a,l
SIN.MIN  0CC4    FE 6C                 	cp	sin.min		; Test underflow
L0D03  0CC6    38 3B                 	jr	c,l0d03
  0CC8    D9                    	exx
  0CC9    01 2AAA               	ld	bc,02aaah	; Set 1/3
  0CCC    11 AAAA               	ld	de,0aaaah
  0CCF    21 AA7F               	ld	hl,0aa7fh
L0A97  0CD2    CD 0A97               	call	l0a97		; Multiply reals (Divide by 3)
  0CD5    DD E5                 	push	ix
L0D0DREAL.LEN  0CD7    DD 21 0D07            	ld	ix,l0d0d-Real.Len
TRG.LEN  0CDB    3E 05                 	ld	a,Trg.Len
L0F34  0CDD    CD 0F34               	call	l0f34		; Do the TAYLOR loop
  0CE0    DD E1                 	pop	ix
L0FAC  0CE2    CD 0FAC               	call	l0fac		; Copy number
L0A97  0CE5    CD 0A97               	call	l0a97		; Multiply reals
L0A97  0CE8    CD 0A97               	call	l0a97		; Multiply reals
  0CEB    C5                    	push	bc
  0CEC    D5                    	push	de
  0CED    E5                    	push	hl
  0CEE    D9                    	exx
L0FAC  0CEF    CD 0FAC               	call	l0fac		; Copy number
  0CF2    2D                    	dec	l		; Divide by 4
  0CF3    2D                    	dec	l
  0CF4    D9                    	exx
  0CF5    2D                    	dec	l		; Divide by 2
L0A0D  0CF6    CD 0A0D               	call	l0a0d		; Add reals
  0CF9    D9                    	exx
  0CFA    E1                    	pop	hl
  0CFB    D1                    	pop	de
  0CFC    C1                    	pop	bc
  0CFD    D9                    	exx
L0A81  0CFE    CD 0A81               	call	l0a81		; Subtract reals
  0D01    2C                    	inc	l		; Multiply by 4
  0D02    2C                    	inc	l
L0D03  0D03                          l0d03:
  0D03    F1                    	pop	af
  0D04    2C                    	inc	l		; Test zero
  0D05    2D                    	dec	l
  0D06    C8                    	ret	z
  0D07    D8                    	ret	c		; Check sign
  0D08    78                    	ld	a,b
SIGN.BIT  0D09    EE 80                 	xor	sign.bit	; Toggle it
  0D0B    47                    	ld	b,a
  0D0C    C9                    	ret
                                ;
                                ; Taylor series for SINE and COSINE
                                ;
L0D0D  0D0D                          l0d0d:
  0D0D    67 AA 3F 2B           	db	067h,0aah,03fh,02bh,032h,0d7h	; -1/11!
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-60


  0D11    32 D7                 
  0D13    6E B6 2A 1D           	db	06eh,0b6h,02ah,01dh,0efh,038h	;  1/9!
  0D17    EF 38                 
  0D19    74 0D D0 00           	db	074h,00dh,0d0h,000h,00dh,0d0h	; -1/7!
  0D1D    0D D0                 
  0D1F    7A 88 88 88           	db	07ah,088h,088h,088h,088h,008h	;  1/5!
  0D23    88 08                 
  0D25    7E AB AA AA           	db	07eh,0abh,0aah,0aah,0aah,0aah	; -1/3!
  0D29    AA AA                 
TRG.LENL0D0DREAL.LEN  0005                          Trg.Len	equ	($-l0d0d)/Real.Len
                                ;
                                ; Function LN(real):real
                                ;
L0D2B  0D2B                          l0d2b:
  0D2B    2C                    	inc	l
  0D2C    2D                    	dec	l		; Check zero
_LNERR  0D2D    3E 04                 	ld	a,_LNerr
L2027  0D2F    CA 2027               	jp	z,l2027		; Error if so
SGN.BIT  0D32    CB 78                 	bit	sgn.bit,b
L2027  0D34    C2 2027               	jp	nz,l2027	; If negative, too
  0D37    D9                    	exx
L0F98  0D38    CD 0F98               	call	l0f98		; Load constant SQRT(2)
  0D3B    D9                    	exx
  0D3C    7D                    	ld	a,l
EXP.ONE  0D3D    2E 81                 	ld	l,Exp.One	; Fix exponent
  0D3F    95                    	sub	l
  0D40    F5                    	push	af
L0AF5  0D41    CD 0AF5               	call	l0af5		; Divide reals
  0D44    D9                    	exx
L0F86  0D45    CD 0F86               	call	l0f86		; Load constant 1.0
  0D48    D9                    	exx
L0A81  0D49    CD 0A81               	call	l0a81		; Subtract reals
  0D4C    C5                    	push	bc
  0D4D    D5                    	push	de
  0D4E    E5                    	push	hl
  0D4F    D9                    	exx
  0D50    2C                    	inc	l		; Number times 2
L0A0D  0D51    CD 0A0D               	call	l0a0d		; Add reals
  0D54    D9                    	exx
  0D55    E1                    	pop	hl
  0D56    D1                    	pop	de
  0D57    C1                    	pop	bc
L0AF5  0D58    CD 0AF5               	call	l0af5		; Divide reals
  0D5B    DD E5                 	push	ix
L0D92REAL.LEN  0D5D    DD 21 0D8C            	ld	ix,l0d92-Real.Len
LN.LEN  0D61    3E 06                 	ld	a,LN.len
L0F34  0D63    CD 0F34               	call	l0f34		; Do the TAYLOR loop
  0D66    DD E1                 	pop	ix
  0D68    2C                    	inc	l		; Number times 2
  0D69    D9                    	exx
L0FA2  0D6A    CD 0FA2               	call	l0fa2		; Load constant LN(2)
  0D6D    2D                    	dec	l		; Halve it
  0D6E    D9                    	exx
L0A0D  0D6F    CD 0A0D               	call	l0a0d		; Add reals
  0D72    F1                    	pop	af
  0D73    C5                    	push	bc
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-61


  0D74    D5                    	push	de
  0D75    E5                    	push	hl
  0D76    6F                    	ld	l,a
  0D77    26 00                 	ld	h,0
L0D7C  0D79    30 01                 	jr	nc,l0d7c
  0D7B    25                    	dec	h		; Set -1
L0D7C  0D7C                          l0d7c:
L1008  0D7C    CD 1008               	call	l1008		; Convert to real
  0D7F    D9                    	exx
  0D80    2C                    	inc	l		; Number times 2
L0A97  0D81    CD 0A97               	call	l0a97		; Multiply reals
  0D84    D9                    	exx
  0D85    E1                    	pop	hl
  0D86    D1                    	pop	de
  0D87    C1                    	pop	bc
L0A0D  0D88    CD 0A0D               	call	l0a0d		; Add reals
  0D8B    7D                    	ld	a,l
LN.MIN  0D8C    FE 67                 	cp	ln.min		; Test underflow
L0B72  0D8E    DA 0B72               	jp	c,l0b72		; Return 0.0 if so
  0D91    C9                    	ret
                                ;
                                ; Taylor series for Natural Logarithm
                                ;
L0D92  0D92                          l0d92:
  0D92    7D 8A 9D D8           	db	07dh,08ah,09dh,0d8h,089h,01dh	; 1/13
  0D96    89 1D                 
  0D98    7D E9 A2 8B           	db	07dh,0e9h,0a2h,08bh,02eh,03ah	; 1/11
  0D9C    2E 3A                 
  0D9E    7D 8E E3 38           	db	07dh,08eh,0e3h,038h,08eh,063h	; 1/9
  0DA2    8E 63                 
  0DA4    7E 49 92 24           	db	07eh,049h,092h,024h,049h,012h	; 1/7
  0DA8    49 12                 
  0DAA    7E CD CC CC           	db	07eh,0cdh,0cch,0cch,0cch,04ch	; 1/5
  0DAE    CC 4C                 
  0DB0    7F AB AA AA           	db	07fh,0abh,0aah,0aah,0aah,02ah	; 1/3
  0DB4    AA 2A                 
LN.LENL0D92REAL.LEN  0006                          LN.len	equ	($-l0d92)/Real.Len
                                ;
                                ; Function EXP(real):real
                                ;
L0DB6  0DB6                          l0db6:
  0DB6    D9                    	exx
L0FA2  0DB7    CD 0FA2               	call	l0fa2		; Load constant LN(2)
  0DBA    D9                    	exx
  0DBB    B7                    	or	a
SGN.BIT  0DBC    CB 78                 	bit	sgn.bit,b
  0DBE    F5                    	push	af		; Save sign
SGN.BIT  0DBF    CB B8                 	res	sgn.bit,b	; Clear it
L0AF5  0DC1    CD 0AF5               	call	l0af5		; Divide reals
  0DC4    7D                    	ld	a,l
EXP.MAX  0DC5    FE 88                 	cp	exp.max		; Test overflow
L0E10  0DC7    30 47                 	jr	nc,l0e10
  0DC9    C5                    	push	bc
  0DCA    D5                    	push	de
  0DCB    E5                    	push	hl
  0DCC    2C                    	inc	l		; Times 2
L0FD0TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-62


  0DCD    CD 0FD0               	call	l0fd0		; Get integer
  0DD0    E5                    	push	hl
  0DD1    CB 3C                 	srl	h		; Divide by 2
  0DD3    CB 1D                 	rr	l
  0DD5    7D                    	ld	a,l
  0DD6    E1                    	pop	hl
  0DD7    F5                    	push	af
L1008  0DD8    CD 1008               	call	l1008		; Back to real
  0DDB    2C                    	inc	l		; Test zero
  0DDC    2D                    	dec	l
L0DE0  0DDD    28 01                 	jr	z,l0de0
  0DDF    2D                    	dec	l		; Fix if not
L0DE0  0DE0                          l0de0:
  0DE0    D9                    	exx
  0DE1    F1                    	pop	af
  0DE2    E1                    	pop	hl
  0DE3    D1                    	pop	de
  0DE4    C1                    	pop	bc
  0DE5    F5                    	push	af
L0A81  0DE6    CD 0A81               	call	l0a81		; Subtract reals
  0DE9    DD E5                 	push	ix
L0E16REAL.LEN  0DEB    DD 21 0E10            	ld	ix,l0e16-Real.Len
EXP.LEN  0DEF    3E 08                 	ld	a,EXP.Len
L0F49  0DF1    CD 0F49               	call	l0f49		; Do the TAYLOR loop
  0DF4    DD E1                 	pop	ix
  0DF6    F1                    	pop	af
L0E03  0DF7    30 0A                 	jr	nc,l0e03
  0DF9    F5                    	push	af
  0DFA    D9                    	exx
L0F98  0DFB    CD 0F98               	call	l0f98		; Load constant SQRT(2)
  0DFE    D9                    	exx
L0A97  0DFF    CD 0A97               	call	l0a97		; Multiply reals
  0E02    F1                    	pop	af
L0E03  0E03                          l0e03:
  0E03    85                    	add	a,l		; Build resulting exponent
  0E04    6F                    	ld	l,a
L0E10  0E05    38 09                 	jr	c,l0e10		; Overflow
  0E07    F1                    	pop	af		; Test sign
  0E08    C8                    	ret	z
  0E09    D9                    	exx
L0F86  0E0A    CD 0F86               	call	l0f86		; Load constant 1.0
L0AF5  0E0D    C3 0AF5               	jp	l0af5		; Divide reals (1/number)
L0E10  0E10                          l0e10:
  0E10    E1                    	pop	hl
_FLPOVFL  0E11    3E 01                 	ld	a,_FLPovfl	; Error
L2027  0E13    C3 2027               	jp	l2027
                                ;
                                ; Taylor series for natural EXPonetiation
                                ;
L0E16  0E16                          l0e16:
  0E16    6D 2E 1D 11           	db	06dh,02eh,01dh,011h,060h,031h	; 1.3215 E-6
  0E1A    60 31                 
  0E1C    70 46 2C FE           	db	070h,046h,02ch,0feh,0e5h,07fh	; 1.5252 E-5
  0E20    E5 7F                 
  0E22    74 36 7C 89           	db	074h,036h,07ch,089h,084h,021h	; 1.5403 E-4
  0E26    84 21                 
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-63


  0E28    77 53 3C FF           	db	077h,053h,03ch,0ffh,0c3h,02eh	; 1.3333 E-3
  0E2C    C3 2E                 
  0E2E    7A D2 7D 5B           	db	07ah,0d2h,07dh,05bh,095h,01dh	; 9.6181 E-3
  0E32    95 1D                 
  0E34    7C 25 B8 46           	db	07ch,025h,0b8h,046h,058h,063h	; 5.5504 E-2
  0E38    58 63                 
  0E3A    7E 16 FC EF           	db	07eh,016h,0fch,0efh,0fdh,075h	; 2.4022 E-1
  0E3E    FD 75                 
  0E40    80 D2 F7 17           	db	080h,0d2h,0f7h,017h,072h,031h	; 6.9314 E-1
  0E44    72 31                 
EXP.LENL0E16REAL.LEN  0008                          EXP.Len	equ	($-l0e16)/Real.Len
                                ;
                                ; Function ARCTAN(real):real
                                ;
L0E46  0E46                          l0e46:
  0E46    7D                    	ld	a,l
  0E47    B7                    	or	a		; Test zero
  0E48    C8                    	ret	z
  0E49    DD E5                 	push	ix
  0E4B    D9                    	exx
L0F86  0E4C    CD 0F86               	call	l0f86		; Load constant 1.0
  0E4F    D9                    	exx
  0E50    AF                    	xor	a
SGN.BIT  0E51    CB 78                 	bit	sgn.bit,b	; Test sign
L0E58  0E53    28 03                 	jr	z,l0e58
  0E55    3C                    	inc	a
SGN.BIT  0E56    CB B8                 	res	sgn.bit,b	; Make absolute
L0E58  0E58                          l0e58:
  0E58    F5                    	push	af
L0BDF  0E59    CD 0BDF               	call	l0bdf		; Compare against 1.0
L0E66  0E5C    38 08                 	jr	c,l0e66
  0E5E    D9                    	exx
L0AF5  0E5F    CD 0AF5               	call	l0af5		; Divide reals (1/number)
  0E62    F1                    	pop	af
SGN.BIT  0E63    CB FF                 	set	sgn.bit,a	; Indicate reverse
  0E65    F5                    	push	af
L0E66  0E66                          l0e66:
  0E66    D9                    	exx
  0E67    01 06CF               	ld	bc,006cfh	; Load 0.13165
  0E6A    11 E98E               	ld	de,0e98eh
  0E6D    21 4A7E               	ld	hl,04a7eh
  0E70    D9                    	exx
L0BDF  0E71    CD 0BDF               	call	l0bdf		; Compare reals
L0E7B  0E74    30 05                 	jr	nc,l0e7b
L0F2E  0E76    CD 0F2E               	call	l0f2e		; Build TAYLOR series
L0ECA  0E79    18 4F                 	jr	l0eca
L0E7B  0E7B                          l0e7b:
L0EE0REAL.LEN  0E7B    DD 21 0ECE            	ld	ix,l0ee0-3*Real.Len
  0E7F    3E 02                 	ld	a,2		; Set loop
L0E81  0E81                          l0e81:
  0E81    08                    	ex	af,af'
  0E82    D9                    	exx
REAL.LEN  0E83    11 0012               	ld	de,3*Real.Len
  0E86    DD 19                 	add	ix,de
L0F73  0E88    CD 0F73               	call	l0f73		; Get value from table
  0E8B    D9                    	exx
L0BDFTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-64


  0E8C    CD 0BDF               	call	l0bdf		; Compare reals
L0E9C  0E8F    38 0B                 	jr	c,l0e9c
  0E91    08                    	ex	af,af'
  0E92    3D                    	dec	a		; Go thru the loop
L0E81  0E93    20 EC                 	jr	nz,l0e81
  0E95    D9                    	exx
REAL.LEN  0E96    11 000C               	ld	de,2*Real.Len
  0E99    DD 19                 	add	ix,de		; Fix table
  0E9B    D9                    	exx
L0E9C  0E9C                          l0e9c:
  0E9C    D9                    	exx
L0F6E  0E9D    CD 0F6E               	call	l0f6e		; Get next from table
SGN.BIT  0EA0    CB F8                 	set	sgn.bit,b	; Make negative
L0A0D  0EA2    CD 0A0D               	call	l0a0d		; Add reals
  0EA5    C5                    	push	bc
  0EA6    D5                    	push	de
  0EA7    E5                    	push	hl
L0F73  0EA8    CD 0F73               	call	l0f73		; Get value back
L0A97  0EAB    CD 0A97               	call	l0a97		; Multiply reals
  0EAE    D9                    	exx
L0F86  0EAF    CD 0F86               	call	l0f86		; Load constant 1.0
L0A0D  0EB2    CD 0A0D               	call	l0a0d		; Add reals
  0EB5    D9                    	exx
  0EB6    E1                    	pop	hl
  0EB7    D1                    	pop	de
  0EB8    C1                    	pop	bc
L0AF5  0EB9    CD 0AF5               	call	l0af5		; Divide reals
  0EBC    DD E5                 	push	ix
L0F2E  0EBE    CD 0F2E               	call	l0f2e		; Do TAYLOR
  0EC1    DD E1                 	pop	ix
  0EC3    D9                    	exx
L0F6E  0EC4    CD 0F6E               	call	l0f6e		; Get from table
L0A0D  0EC7    CD 0A0D               	call	l0a0d		; Add reals
L0ECA  0ECA                          l0eca:
  0ECA    F1                    	pop	af
  0ECB    17                    	rla			; Get sign bit
L0ED8  0ECC    30 0A                 	jr	nc,l0ed8
  0ECE    F5                    	push	af
  0ECF    D9                    	exx
L0F8E  0ED0    CD 0F8E               	call	l0f8e		; Load constant PI
  0ED3    2D                    	dec	l		; Make 90 degrees
L0A81  0ED4    CD 0A81               	call	l0a81		; Subtract reals
  0ED7    F1                    	pop	af
L0ED8  0ED8                          l0ed8:
  0ED8    DD E1                 	pop	ix
  0EDA    CB 4F                 	bit	1,a		; Test operand sign
  0EDC    C8                    	ret	z
SGN.BIT  0EDD    CB F8                 	set	sgn.bit,b	; Set negative
  0EDF    C9                    	ret
                                ;
                                ; 2nd Taylor series for ARCTangent
                                ;
L0EE0  0EE0                          l0ee0:
  0EE0    7F E7 CF CC           	db	07fh,0e7h,0cfh,0cch,013h,054h	; 4.1421 E-1
  0EE4    13 54                 
  0EE6    7F F6 F4 A2           	db	07fh,0f6h,0f4h,0a2h,030h,009h	; 2.6794 E-1
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-65


  0EEA    30 09                 
  0EEC    7F 6A C1 91           	db	07fh,06ah,0c1h,091h,00ah,006h	; 2.6179 E-1
  0EF0    0A 06                 
  0EF2    80 B5 9E 8A           	db	080h,0b5h,09eh,08ah,06fh,044h	; 7.6732 E-1
  0EF6    6F 44                 
  0EF8    80 82 2C 3A           	db	080h,082h,02ch,03ah,0cdh,013h	; 5.7735 E-1
  0EFC    CD 13                 
  0EFE    80 6A C1 91           	db	080h,06ah,0c1h,091h,00ah,006h	; 5.2359 E-1
  0F02    0A 06                 
  0F04    81 00 00 00           	db	081h,000h,000h,000h,000h,000h	; 1.0000
  0F08    00 00                 
  0F0A    80 21 A2 DA           	db	080h,021h,0a2h,0dah,00fh,049h	; 7.8539 E-1
  0F0E    0F 49                 
                                ;
                                ; Taylor series for ARCTangent
                                ;
L0F10  0F10                          l0f10:
  0F10    7D E8 A2 8B           	db	07dh,0e8h,0a2h,08bh,02eh,0bah	; -1/11
  0F14    2E BA                 
  0F16    7D 8E E3 38           	db	07dh,08eh,0e3h,038h,08eh,063h	;  1/9
  0F1A    8E 63                 
  0F1C    7E 49 92 24           	db	07eh,049h,092h,024h,049h,092h	; -1/7
  0F20    49 92                 
  0F22    7E CD CC CC           	db	07eh,0cdh,0cch,0cch,0cch,04ch	;  1/5
  0F26    CC 4C                 
  0F28    7F AB AA AA           	db	07fh,0abh,0aah,0aah,0aah,0aah	; -1/3
  0F2C    AA AA                 
AT.LENL0F10REAL.LEN  0005                          AT.Len	equ	($-l0f10)/Real.Len
                                ;
                                ; Perform TAYLOR series
                                ; Calculate SERIES(x^2)*x
                                ;
L0F2E  0F2E                          l0f2e:
L0F10REAL.LEN  0F2E    DD 21 0F0A            	ld	ix,l0f10-Real.Len
AT.LEN  0F32    3E 05                 	ld	a,AT.Len
L0F34  0F34                          l0f34:
  0F34    C5                    	push	bc
  0F35    D5                    	push	de
  0F36    E5                    	push	hl
  0F37    F5                    	push	af
L0FAC  0F38    CD 0FAC               	call	l0fac		; Copy number
L0A97  0F3B    CD 0A97               	call	l0a97		; Multiply reals [^2]
  0F3E    F1                    	pop	af
L0F49  0F3F    CD 0F49               	call	l0f49		; Do the TAYLOR loop
  0F42    D9                    	exx
  0F43    E1                    	pop	hl
  0F44    D1                    	pop	de
  0F45    C1                    	pop	bc
L0A97  0F46    C3 0A97               	jp	l0a97		; Multiply reals
                                ;
                                ; The TAYLOR series loop
                                ; ENTRY	Reg IX points to table
                                ;	Accu holds loop count
                                ; Calculate : 1-(1/3!)x+..+/-..-(1/11!)x^8
                                ;
L0F49  0F49                          l0f49:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-66


  0F49    F5                    	push	af
  0F4A    D9                    	exx
L0F6E  0F4B    CD 0F6E               	call	l0f6e		; Load from table
L0F60  0F4E    18 10                 	jr	l0f60		; Skip addition this time
L0F50  0F50                          l0f50:
  0F50    F5                    	push	af
  0F51    D9                    	exx
  0F52    C5                    	push	bc
  0F53    D5                    	push	de
  0F54    E5                    	push	hl
L0F6E  0F55    CD 0F6E               	call	l0f6e		; Get next value from table
L0A0D  0F58    CD 0A0D               	call	l0a0d		; Add reals
  0F5B    D9                    	exx
  0F5C    E1                    	pop	hl
  0F5D    D1                    	pop	de
  0F5E    C1                    	pop	bc
  0F5F    D9                    	exx
L0F60  0F60                          l0f60:
L0A97  0F60    CD 0A97               	call	l0a97		; Multiply reals
  0F63    F1                    	pop	af
  0F64    3D                    	dec	a		; Test done
L0F50  0F65    20 E9                 	jr	nz,l0f50	; Nope
  0F67    D9                    	exx
L0F86  0F68    CD 0F86               	call	l0f86		; Load constant 1.0
L0A0D  0F6B    C3 0A0D               	jp	l0a0d		; Add reals
                                ;
                                ; Load next real from table
                                ; ENTRY	Reg IX points to table
                                ; EXIT	Regs (HL,DE,BC) hold real
                                ;
L0F6E  0F6E                          l0f6e:
REAL.LEN  0F6E    11 0006               	ld	de,Real.Len
  0F71    DD 19                 	add	ix,de		; Point to nexr
                                ;
                                ; Load real from table
                                ; ENTRY	Reg IX points to table
                                ; EXIT	Regs (HL,DE,BC) hold real
                                ;
L0F73  0F73                          l0f73:
  0F73    DD 6E 00              	ld	l,(ix+0)	; Get exponent
  0F76    DD 66 01              	ld	h,(ix+1)	; Mantissa LSB
  0F79    DD 5E 02              	ld	e,(ix+2)
  0F7C    DD 56 03              	ld	d,(ix+3)
  0F7F    DD 4E 04              	ld	c,(ix+4)
  0F82    DD 46 05              	ld	b,(ix+5)	; Mantissa MSB
  0F85    C9                    	ret
                                ;
                                ; Load constant 1.0
                                ;
L0F86  0F86                          l0f86:
EXP.ONE  0F86    21 0081               	ld	hl,Exp.One	; Load 6 bytes 2^0
  0F89    44                    	ld	b,h
  0F8A    4C                    	ld	c,h
  0F8B    54                    	ld	d,h
  0F8C    5C                    	ld	e,h
  0F8D    C9                    	ret
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-67


                                ;
                                ; Load constant PI=3.141592654
                                ;
L0F8E  0F8E                          l0f8e:
  0F8E    01 490F               	ld	bc,0490fh	; Load 6 bytes
  0F91    11 DAA2               	ld	de,0daa2h
  0F94    21 2182               	ld	hl,02182h
  0F97    C9                    	ret
                                ;
                                ; Load constant SQRT (2)=1.414213562
                                ;
L0F98  0F98                          l0f98:
  0F98    01 3504               	ld	bc,03504h	; Load 6 bytes
  0F9B    11 F333               	ld	de,0f333h
  0F9E    21 FA81               	ld	hl,0fa81h
  0FA1    C9                    	ret
                                ;
                                ; Load constant LN (2)=0.693147181
                                ;
L0FA2  0FA2                          l0fa2:
  0FA2    01 3172               	ld	bc,03172h	; Load 6 bytes
  0FA5    11 17F7               	ld	de,017f7h
  0FA8    21 D280               	ld	hl,0d280h
  0FAB    C9                    	ret
                                ;
                                ; Copy real number
                                ; ENTRY	Regs (HL,DE,BC) hold number
                                ; EXIT	Number copied to alternating regs (HL,DE,BC)'
                                ;
L0FAC  0FAC                          l0fac:
  0FAC    C5                    	push	bc		; Push onto stack
  0FAD    D5                    	push	de
  0FAE    E5                    	push	hl
  0FAF    D9                    	exx			; Copy into alternate registers
  0FB0    E1                    	pop	hl		; Pop back
  0FB1    D1                    	pop	de
  0FB2    C1                    	pop	bc
  0FB3    C9                    	ret
                                ;
                                ; Function RANDOM:real;
                                ; EXIT	Regs (HL,DE,BC) hold number
                                ;
L0FB4  0FB4                          l0fb4:
L0792  0FB4    CD 0792               	call	l0792		; Get random value
EXP.OFFSET  0FB7    21 0080               	ld	hl,exp.offset	; Init exponent and count
MANT.BITSBIT.LEN  0FBA    3E 20                 	ld	a,mant.bits-bit.len
L0FBC  0FBC                          l0fbc:
SGN.BIT  0FBC    CB 78                 	bit	sgn.bit,b	; Test MSB set
L0FCD  0FBE    20 0D                 	jr	nz,l0fcd
  0FC0    CB 23                 	sla	e		; Shift left if not
  0FC2    CB 12                 	rl	d
  0FC4    CB 11                 	rl	c
  0FC6    CB 10                 	rl	b
  0FC8    2D                    	dec	l		; Count down exponent
  0FC9    3D                    	dec	a
L0FBC  0FCA    20 F0                 	jr	nz,l0fbc
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-68


  0FCC    6F                    	ld	l,a
L0FCD  0FCD                          l0fcd:
SGN.BIT  0FCD    CB B8                 	res	sgn.bit,b	; .. make 1.0> x >=0.0
  0FCF    C9                    	ret
                                ;
                                ; Function ROUND(real):integer
                                ;
L0FD0  0FD0                          l0fd0:
SGN.BIT  0FD0    CB 78                 	bit	sgn.bit,b	; Attache sign
  0FD2    D9                    	exx
L0F86  0FD3    CD 0F86               	call	l0f86		; Load constant 1.0
L0FDA  0FD6    28 02                 	jr	z,l0fda		; Test < 0
SGN.BIT  0FD8    CB F8                 	set	sgn.bit,b	; make constant -1.0
L0FDA  0FDA                          l0fda:
  0FDA    2D                    	dec	l		; Set +-0.5
L0A0D  0FDB    CD 0A0D               	call	l0a0d		; Add reals
                                ;
                                ; Function TRUNC(real):integer
                                ;
L0FDE  0FDE                          l0fde:
  0FDE    B7                    	or	a
SGN.BIT  0FDF    CB 7D                 	bit	sgn.bit,l	; Test exponent < 0
L0FFF  0FE1    28 1C                 	jr	z,l0fff		; Return zero if so
SGN.BIT  0FE3    CB 78                 	bit	sgn.bit,b	; Mark sign
  0FE5    08                    	ex	af,af'
SGN.BIT  0FE6    CB F8                 	set	sgn.bit,b	; Set bit
L0FE8  0FE8                          l0fe8:
INT.MAX  0FE8    3E 8F                 	ld	a,int.max
  0FEA    BD                    	cp	l
L1003  0FEB    38 16                 	jr	c,l1003		; Test overflow
L0FF5  0FED    28 06                 	jr	z,l0ff5		; Or end of conversion
L0B7A  0FEF    CD 0B7A               	call	l0b7a		; Shift mantissa right
  0FF2    2C                    	inc	l		; Bump exponent
L0FE8  0FF3    18 F3                 	jr	l0fe8
L0FF5  0FF5                          l0ff5:
L0B7A  0FF5    CD 0B7A               	call	l0b7a		; Shift mantissa right
  0FF8    08                    	ex	af,af'
  0FF9    60                    	ld	h,b		; Get result
  0FFA    69                    	ld	l,c
  0FFB    C8                    	ret	z		; End if > 0
L0783  0FFC    C3 0783               	jp	l0783		; Negate
L0FFF  0FFF                          l0fff:
  0FFF    21 0000               	ld	hl,0		; Return 0
  1002    C9                    	ret
L1003  1003                          l1003:
_TRUNCOVL  1003    3E 92                 	ld	a,_TruncOvl
L2027  1005    C3 2027               	jp	l2027		; Set error
                                ;
                                ; Convert integer to floating point
                                ; ENTRY	Reg HL holds signed integer
                                ; EXIT	Regs (HL,DE,BC) hold real
                                ;
                                ; NOTE:	ON INTEGER 8000H AND ONLY ON THIS NUMBER
                                ;	THIS ROUTINE WILL LOOP FOREVER !!!!!!!!
                                ;
L1008  1008                          l1008:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-69


  1008    7C                    	ld	a,h		; Test Zero
  1009    B5                    	or	l
L0B72  100A    CA 0B72               	jp	z,l0b72		; Set 0.0 if so
SGN.BIT  100D    CB 7C                 	bit	sgn.bit,h	; Test sign
  100F    08                    	ex	af,af'
L0780  1010    CD 0780               	call	l0780		; Make number positive
INT.MAX  1013    3E 90                 	ld	a,int.max+1	; Init exponent
L1015  1015                          l1015:
  1015    29                    	add	hl,hl		; Shift mantissa
  1016    3D                    	dec	a		; Fix exponent
SGN.BIT  1017    CB 7C                 	bit	sgn.bit,h	; Test ready
L1015  1019    28 FA                 	jr	z,l1015		; Nope, wait for bit
  101B    44                    	ld	b,h		; Get into hi part of mantissa
  101C    4D                    	ld	c,l
  101D    11 0000               	ld	de,0		; Clear lo part
  1020    62                    	ld	h,d
  1021    6F                    	ld	l,a
  1022    08                    	ex	af,af'		; Test sign
  1023    C0                    	ret	nz
SGN.BIT  1024    CB B8                 	res	sgn.bit,b	; Set > 0
  1026    C9                    	ret
                                ;
                                ; Convert real to formatted ASCII string
                                ; ENTRY	Reg HL holds fix comma places (-1 on none)
                                ;	Reg DE holds decimal places
                                ;	Regs (HL,BC,DE)' hold real number
                                ;	Reg IX points to ASCII buffer
                                ;
L1027  1027                          l1027:
L04C8  1027    CD 04C8               	call	l04c8		; Get fix comma places
  102A    EB                    	ex	de,hl
  102B    1E 00                 	ld	e,0
L1033  102D    38 04                 	jr	c,l1033		; Integer was < 0, no places
REAL.DIG  102F    FE 19                 	cp	real.dig+1	; Test max digits
L104B  1031    38 18                 	jr	c,l104b
L1033  1033                          l1033:
  1033    1D                    	dec	e
L04C8  1034    CD 04C8               	call	l04c8		; Get decimal places
  1037    D9                    	exx
SGN.BIT  1038    CB 78                 	bit	sgn.bit,b	; Test sign
  103A    D9                    	exx
REAL.FIELD  103B    16 07                 	ld	d,real.field	; Init field size
L1040  103D    28 01                 	jr	z,l1040
  103F    14                    	inc	d		; Fix for sign < 0.0
L1040  1040                          l1040:
  1040    92                    	sub	d		; Test against field length
L1044  1041    30 01                 	jr	nc,l1044
  1043    AF                    	xor	a
L1044  1044                          l1044:
REAL.FIELD  1044    FE 09                 	cp	real.field+2	; Test max
L104A  1046    38 02                 	jr	c,l104a
REAL.FIELD  1048    3E 09                 	ld	a,real.field+2
L104A  104A                          l104a:
  104A    3C                    	inc	a
L104B  104B                          l104b:
  104B    57                    	ld	d,a
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-70


  104C    D5                    	push	de
  104D    D9                    	exx
NUMBER  104E    FD 21 005D            	ld	iy,number
  1052    DD E5                 	push	ix
L10EB  1054    CD 10EB               	call	l10eb		; Prepare conversion
  1057    DD E1                 	pop	ix
  1059    D1                    	pop	de
  105A    4F                    	ld	c,a		; Save result exponent
  105B    7A                    	ld	a,d
  105C    3C                    	inc	a
SGN.BIT  105D    CB 7B                 	bit	sgn.bit,e	; Test sign
L1071  105F    20 10                 	jr	nz,l1071	; < 0
  1061    81                    	add	a,c		; Fix exponent
L106B  1062    F2 106B               	jp	p,l106b
  1065    FD 36 00 00           	ld	(iy),0		; Clear entry
L1076  1069    18 0B                 	jr	l1076
L106B  106B                          l106b:
REAL.ASCII  106B    FE 0C                 	cp	real.ASCII	; Test decimal places
L1071  106D    38 02                 	jr	c,l1071
REAL.ASCII  106F    3E 0B                 	ld	a,real.ASCII-1	; Truncate it
L1071  1071                          l1071:
  1071    D5                    	push	de
L1180  1072    CD 1180               	call	l1180		; Normalize ASCII
  1075    D1                    	pop	de
L1076  1076                          l1076:
SGN.BIT  1076    CB 78                 	bit	sgn.bit,b	; Test sign
L107F  1078    28 05                 	jr	z,l107f
  107A    3E 2D                 	ld	a,'-'
L10E5  107C    CD 10E5               	call	l10e5		; Set sign
L107F  107F                          l107f:
SGN.BIT  107F    CB 7B                 	bit	sgn.bit,e	; Test sign
L1086  1081    28 03                 	jr	z,l1086
  1083    61                    	ld	h,c		; Unpack
  1084    0E 00                 	ld	c,0
L1086  1086                          l1086:
SGN.BIT  1086    CB 79                 	bit	sgn.bit,c	; Test sign
L108F  1088    28 05                 	jr	z,l108f
L10E3  108A    CD 10E3               	call	l10e3		; Set 0
L1096  108D    18 07                 	jr	l1096
L108F  108F                          l108f:
L10D9  108F    CD 10D9               	call	l10d9		; Copy ASCII
  1092    0D                    	dec	c		; Bump down
L108F  1093    F2 108F               	jp	p,l108f
L1096  1096                          l1096:
  1096    7A                    	ld	a,d		; Test mantissa
  1097    B7                    	or	a
L10B1  1098    28 17                 	jr	z,l10b1		; None
  109A    3E 2E                 	ld	a,'.'
L10E5  109C    CD 10E5               	call	l10e5		; Set decimal dot
L109F  109F                          l109f:
  109F    0C                    	inc	c		; Fix exponent
L10A8  10A0    28 06                 	jr	z,l10a8
L10E3  10A2    CD 10E3               	call	l10e3		; Set 0
  10A5    15                    	dec	d
L109F  10A6    20 F7                 	jr	nz,l109f
L10A8  10A8                          l10a8:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-71


  10A8    15                    	dec	d
L10B1  10A9    FA 10B1               	jp	m,l10b1
L10D9  10AC    CD 10D9               	call	l10d9		; Copy ASCII
L10A8  10AF    18 F7                 	jr	l10a8
L10B1  10B1                          l10b1:
SGN.BIT  10B1    CB 7B                 	bit	sgn.bit,e	; Test exponent
  10B3    C8                    	ret	z		; Nope
  10B4    3E 45                 	ld	a,'E'
L10E5  10B6    CD 10E5               	call	l10e5		; Set 'E'xponent
  10B9    3E 2B                 	ld	a,'+'
SGN.BIT  10BB    CB 7C                 	bit	sgn.bit,h	; Test bit
L10C5  10BD    28 06                 	jr	z,l10c5
  10BF    7C                    	ld	a,h
  10C0    ED 44                 	neg			; Make exponent > 0
  10C2    67                    	ld	h,a
  10C3    3E 2D                 	ld	a,'-'
L10C5  10C5                          l10c5:
L10E5  10C5    CD 10E5               	call	l10e5		; Store sign of exponent
  10C8    7C                    	ld	a,h		; Get exponent
  10C9    06 2F                 	ld	b,'0'-1		; Init HI
L10CB  10CB                          l10cb:
  10CB    04                    	inc	b		; Fix result
  10CC    D6 0A                 	sub	10		; Divide by 10
L10CB  10CE    30 FB                 	jr	nc,l10cb
  10D0    C6 3A                 	add	a,'9'+1		; Make remainder ASCII
  10D2    DD 70 00              	ld	(ix),b		; save HI
  10D5    DD 23                 	inc	ix
L10E5  10D7    18 0C                 	jr	l10e5		; Store LO
                                ;
                                ; Copy from buffer, set 0 if end
                                ;
L10D9  10D9                          l10d9:
  10D9    FD 7E 00              	ld	a,(iy)		; Get number
  10DC    FD 23                 	inc	iy
  10DE    B7                    	or	a		; Test end
L10E5  10DF    20 04                 	jr	nz,l10e5	; Nope
  10E1    FD 2B                 	dec	iy		; Fix for zero storage
                                ;
                                ; Store ASCII zero into number
                                ;
L10E3  10E3                          l10e3:
  10E3    3E 30                 	ld	a,'0'		; Set zero
                                ;
                                ; Store ASCII into number
                                ;
L10E5  10E5                          l10e5:
  10E5    DD 77 00              	ld	(ix),a		; Store number
  10E8    DD 23                 	inc	ix		; Update pointer
  10EA    C9                    	ret
                                ;
                                ; Prepare ASCII for real to formatted ASCII conversion
                                ; ENTRY	Reg IY points to ASXII buffer
                                ;	Regs (HL,BC,DE) hold real number
                                ; EXIT	Buffer pre-filled
                                ;	Accu holds exponent equivalent
                                ;
L10EBTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-72


  10EB                          l10eb:
  10EB    FD E5                 	push	iy		; save buffer
  10ED    2C                    	inc	l		; Test zero number
  10EE    2D                    	dec	l
L10FF  10EF    20 0E                 	jr	nz,l10ff
REAL.ASCII  10F1    06 0C                 	ld	b,real.ASCII	; Set length
L10F3  10F3                          l10f3:
  10F3    FD 36 00 30           	ld	(iy),'0'	; Clear ASCII number
  10F7    FD 23                 	inc	iy
L10F3  10F9    10 F8                 	djnz	l10f3
  10FB    AF                    	xor	a
L117D  10FC    C3 117D               	jp	l117d
L10FF  10FF                          l10ff:
  10FF    C5                    	push	bc		; Save sign
SGN.BIT  1100    CB B8                 	res	sgn.bit,b	; Reset sign
  1102    7D                    	ld	a,l
  1103    D9                    	exx
EXP.OFFSET  1104    D6 80                 	sub	exp.offset	; Strip off offset
  1106    6F                    	ld	l,a
  1107    9F                    	sbc	a,a		; Expand to signed 16 bit
  1108    67                    	ld	h,a
EXPFIX  1109    11 004D               	ld	de,ExpFix
L06F5  110C    CD 06F5               	call	l06f5		; HL:=HL*DE
  110F    11 0005               	ld	de,10 / 2
  1112    19                    	add	hl,de		; Gix exponent
  1113    7C                    	ld	a,h
EXPRANGE  1114    FE D9                 	cp	ExpRange	; Test range
L1119  1116    20 01                 	jr	nz,l1119
  1118    3C                    	inc	a		; Fix result
L1119  1119                          l1119:
  1119    FD 77 00              	ld	(iy),a		; Store into buffer
  111C    ED 44                 	neg
L1240  111E    CD 1240               	call	l1240
  1121    7D                    	ld	a,l
EXP.ONE  1122    FE 81                 	cp	Exp.One		; Test exponent
L112C  1124    30 06                 	jr	nc,l112c
L12B3  1126    CD 12B3               	call	l12b3		; Fix mantissa
  1129    FD 35 00              	dec	(iy)		; Fix exponent
L112C  112C                          l112c:
SGN.BIT  112C    CB F8                 	set	sgn.bit,b	; Set bit
EXP.OFFSET  112E    3E 84                 	ld	a,exp.offset+4
  1130    95                    	sub	l		; Test exponent
  1131    2E 00                 	ld	l,0
L113D  1133    28 08                 	jr	z,l113d
L1135  1135                          l1135:
L0B7A  1135    CD 0B7A               	call	l0b7a		; Shift mantissa right
  1138    CB 1D                 	rr	l
  113A    3D                    	dec	a
L1135  113B    20 F8                 	jr	nz,l1135
L113D  113D                          l113d:
  113D    FD 7E 00              	ld	a,(iy)		; Get exponent
  1140    F5                    	push	af
REAL.ASCII  1141    3E 0C                 	ld	a,real.ASCII	; Set count
L1143  1143                          l1143:
  1143    08                    	ex	af,af'
  1144    78                    	ld	a,b		; Get MSB
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-73


  1145    1F                    	rra			; Isolate hi
  1146    1F                    	rra
  1147    1F                    	rra
  1148    1F                    	rra
LOMASK  1149    E6 0F                 	and	LoMask		; Mask bits
  114B    C6 30                 	add	a,'0'		; Make ASCII
  114D    FD 77 00              	ld	(iy),a
  1150    FD 23                 	inc	iy
  1152    78                    	ld	a,b
LOMASK  1153    E6 0F                 	and	LoMask
  1155    47                    	ld	b,a
  1156    C5                    	push	bc
  1157    D5                    	push	de
  1158    E5                    	push	hl
  1159    CB 25                 	sla	l
L0B87  115B    CD 0B87               	call	l0b87		; Rotate mantissa left *2
  115E    CB 25                 	sla	l
L0B87  1160    CD 0B87               	call	l0b87		; * 4
  1163    EB                    	ex	de,hl
  1164    E3                    	ex	(sp),hl
  1165    19                    	add	hl,de		; * 5
  1166    D1                    	pop	de
  1167    E3                    	ex	(sp),hl
  1168    ED 5A                 	adc	hl,de
  116A    EB                    	ex	de,hl
  116B    E1                    	pop	hl
  116C    E3                    	ex	(sp),hl
  116D    ED 4A                 	adc	hl,bc
  116F    44                    	ld	b,h
  1170    4D                    	ld	c,l
  1171    E1                    	pop	hl
  1172    CB 25                 	sla	l
L0B87  1174    CD 0B87               	call	l0b87		; *10
  1177    08                    	ex	af,af'
  1178    3D                    	dec	a
L1143  1179    20 C8                 	jr	nz,l1143
  117B    F1                    	pop	af
  117C    C1                    	pop	bc
L117D  117D                          l117d:
  117D    FD E1                 	pop	iy
  117F    C9                    	ret
                                ;
                                ; Normalize ASCII number
                                ; ENTRY	Accu holds length of number
                                ;
L1180  1180                          l1180:
  1180    FD E5                 	push	iy
  1182    E1                    	pop	hl		; Copy buffer
  1183    5F                    	ld	e,a
  1184    16 00                 	ld	d,0
  1186    19                    	add	hl,de
  1187    7E                    	ld	a,(hl)		; Get last digit
  1188    36 00                 	ld	(hl),0
  118A    FE 35                 	cp	'5'		; Test to be normalized
  118C    D8                    	ret	c		; Nope
L118D  118D                          l118d:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-74


  118D    1D                    	dec	e		; Count down
L119C  118E    FA 119C               	jp	m,l119c
  1191    2B                    	dec	hl		; Get previous
  1192    7E                    	ld	a,(hl)
  1193    3C                    	inc	a		; Advance digit
  1194    77                    	ld	(hl),a
  1195    FE 3A                 	cp	'9'+1		; Test in range
  1197    D8                    	ret	c		; Yeap
  1198    36 00                 	ld	(hl),0		; Clear this one
L118D  119A    18 F1                 	jr	l118d
L119C  119C                          l119c:
  119C    36 31                 	ld	(hl),'1'	; Set carry
  119E    23                    	inc	hl
  119F    36 00                 	ld	(hl),0		; Clear next
  11A1    0C                    	inc	c
  11A2    C9                    	ret
                                ;
                                ; Convert ASCII string to Floating Point number
                                ; ENTRY	Reg IX points to ASCII number
                                ; EXIT	Regs HL,DE,BC hold real
                                ;	Carry set indicates conversion error
                                ;
L11A3  11A3                          l11a3:
  11A3    D9                    	exx
  11A4    01 0000               	ld	bc,0		; Reset flags
  11A7    D9                    	exx
L0B72  11A8    CD 0B72               	call	l0b72		; Init 0.0
L11AB  11AB                          l11ab:
  11AB    DD 7E 00              	ld	a,(ix)		; Get character
L04A6  11AE    CD 04A6               	call	l04a6		; Convert to upper case
  11B1    FE 2E                 	cp	'.'		; Test decimal point
L11C1  11B3    20 0C                 	jr	nz,l11c1
  11B5    D9                    	exx
DOT.BIT  11B6    CB 70                 	bit	dot.bit,b	; Test already selected
  11B8    37                    	scf
  11B9    C0                    	ret	nz		; Error if so
DOT.BIT  11BA    CB F0                 	set	dot.bit,b	; Indicate dot
  11BC    D9                    	exx
L11BD  11BD                          l11bd:
  11BD    DD 23                 	inc	ix		; Skip character
L11AB  11BF    18 EA                 	jr	l11ab		; Get next
L11C1  11C1                          l11c1:
  11C1    FE 45                 	cp	'E'		; Test exponent
L11E6  11C3    28 21                 	jr	z,l11e6		; Yeap, process it
L1239  11C5    CD 1239               	call	l1239		; Test digit
L121E  11C8    30 54                 	jr	nc,l121e	; Nope
  11CA    08                    	ex	af,af'
L12B3  11CB    CD 12B3               	call	l12b3		; Convert mantissa
  11CE    D8                    	ret	c		; Error
  11CF    08                    	ex	af,af'
  11D0    D9                    	exx
  11D1    C5                    	push	bc
  11D2    6F                    	ld	l,a		; Build integer
  11D3    26 00                 	ld	h,0
L1008  11D5    CD 1008               	call	l1008		; Convert to floating point
L09E9  11D8    CD 09E9               	call	l09e9		; Add reals
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-75


  11DB    D9                    	exx
  11DC    C1                    	pop	bc
  11DD    D8                    	ret	c		; End if overflow
DOT.BIT  11DE    CB 70                 	bit	dot.bit,b	; Test decimal point
L11E3  11E0    28 01                 	jr	z,l11e3
  11E2    0D                    	dec	c		; Fix length if so
L11E3  11E3                          l11e3:
  11E3    D9                    	exx
L11BD  11E4    18 D7                 	jr	l11bd
                                ;
                                ; Found 'E'xponent
                                ;
L11E6  11E6                          l11e6:
L121E  11E6    CD 121E               	call	l121e		; Fix mantissa
  11E9    D8                    	ret	c		; Overflow
  11EA    D9                    	exx
EXP.BIT  11EB    CB E0                 	set	exp.bit,b	; Set bit
  11ED    DD 23                 	inc	ix
  11EF    DD 7E 00              	ld	a,(ix)
  11F2    FE 2B                 	cp	'+'		; Test any sign
L11FC  11F4    28 06                 	jr	z,l11fc		; Skip plus
  11F6    FE 2D                 	cp	'-'
L11FE  11F8    20 04                 	jr	nz,l11fe
EXPS.BIT  11FA    CB E8                 	set	exps.bit,b	; Indicate negative exponent
L11FC  11FC                          l11fc:
  11FC    DD 23                 	inc	ix
L11FE  11FE                          l11fe:
L1236  11FE    CD 1236               	call	l1236		; Get 1st digit
  1201    3F                    	ccf
  1202    D8                    	ret	c		; Invalid
  1203    4F                    	ld	c,a
  1204    DD 23                 	inc	ix
L1236  1206    CD 1236               	call	l1236		; Get 2nd digit
L1215  1209    30 0A                 	jr	nc,l1215	; Only one
  120B    DD 23                 	inc	ix
  120D    57                    	ld	d,a
  120E    79                    	ld	a,c		; Get first one - it's tens
  120F    87                    	add	a,a		; * 2
  1210    87                    	add	a,a		; * 4
  1211    81                    	add	a,c		; * 5
  1212    87                    	add	a,a		; *10
  1213    82                    	add	a,d		; Insert 2nd
  1214    4F                    	ld	c,a
L1215  1215                          l1215:
EXPS.BIT  1215    CB 68                 	bit	exps.bit,b	; Test exponent < 0
L121D  1217    28 04                 	jr	z,l121d		; Nope
  1219    79                    	ld	a,c
  121A    ED 44                 	neg			; Change it if so
  121C    4F                    	ld	c,a
L121D  121D                          l121d:
  121D    D9                    	exx
L121E  121E                          l121e:
  121E    D9                    	exx
  121F    79                    	ld	a,c		; Get exponent
EXP.OFFSET  1220    C6 80                 	add	a,exp.offset	; Set offset
  1222    FE 5A                 	cp	05ah		; Check range
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-76


  1224    D8                    	ret	c		; Underflow
  1225    FE A6                 	cp	0a6h
  1227    3F                    	ccf
  1228    D8                    	ret	c		; Overflow
  1229    C5                    	push	bc
  122A    DD E5                 	push	ix
  122C    79                    	ld	a,c
L1240  122D    CD 1240               	call	l1240		; Fix exponent
  1230    DD E1                 	pop	ix
  1232    D9                    	exx
  1233    C1                    	pop	bc		; Fix stack
  1234    D9                    	exx
  1235    C9                    	ret
                                ;
                                ; Get character and test if digit
                                ; ENTRY	Reg IX points to character
                                ; EXIT	Accu holds character
                                ;	Carry reset if in range
                                ;
L1236  1236                          l1236:
  1236    DD 7E 00              	ld	a,(ix)		; Get character
                                ;
                                ; Test character a digit - C set if so
                                ; ENTRY	Accu holds character
                                ; EXIT	Carry reset if in range
                                ;
L1239  1239                          l1239:
  1239    D6 30                 	sub	'0'		; Strip off offset
  123B    3F                    	ccf
  123C    D0                    	ret	nc		; Out of range
  123D    FE 0A                 	cp	9+1
  123F    C9                    	ret
                                ;
                                ; Fix exponent for real to ASCII conversion
                                ; ENTRY	Accu holds exponent equivalent
                                ; EXIT	Real fixed
                                ;
L1240  1240                          l1240:
  1240    F5                    	push	af		; Save exponent
  1241    B7                    	or	a		; Test sign
L1247  1242    F2 1247               	jp	p,l1247
  1245    ED 44                 	neg			; Make >0
L1247  1247                          l1247:
  1247    F5                    	push	af
  1248    CB 3F                 	srl	a		; Shift
  124A    CB 3F                 	srl	a
  124C    3C                    	inc	a		; Then fix
REAL.LEN  124D    21 FFFA               	ld	hl,-Real.Len	; Init index
REAL.LEN  1250    11 0006               	ld	de,Real.Len
L1253  1253                          l1253:
  1253    19                    	add	hl,de		; Fix index
  1254    3D                    	dec	a
L1253  1255    20 FC                 	jr	nz,l1253
  1257    EB                    	ex	de,hl
L1277  1258    DD 21 1277            	ld	ix,l1277	; Point to table
  125C    DD 19                 	add	ix,de
L0F73TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-77


  125E    CD 0F73               	call	l0f73		; Get number from table
  1261    F1                    	pop	af
  1262    E6 03                 	and	11b		; Get MOD 4
L126E  1264    28 08                 	jr	z,l126e
L1266  1266                          l1266:
  1266    F5                    	push	af
L12B3  1267    CD 12B3               	call	l12b3		; Fix mantissa
  126A    F1                    	pop	af
  126B    3D                    	dec	a
L1266  126C    20 F8                 	jr	nz,l1266
L126E  126E                          l126e:
  126E    F1                    	pop	af		; Get back exponent
  126F    B7                    	or	a
L0A97  1270    F2 0A97               	jp	p,l0a97		; Multiply reals if > 0
  1273    D9                    	exx
L0AF5  1274    C3 0AF5               	jp	l0af5		; Divide reals if < 0
                                ;
                                ; Fix up table
                                ;
L1277  1277                          l1277:
  1277    81 00 00 00           	db	081h,000h,000h,000h,000h,000h	; 1 E 0
  127B    00 00                 
  127D    8E 00 00 00           	db	08eh,000h,000h,000h,040h,01ch	; 1 E 4
  1281    40 1C                 
  1283    9B 00 00 20           	db	09bh,000h,000h,020h,0bch,03eh	; 1 E 8
  1287    BC 3E                 
  1289    A8 00 10 A5           	db	0a8h,000h,010h,0a5h,0d4h,068h	; 1 E12
  128D    D4 68                 
  128F    B6 04 BF C9           	db	0b6h,004h,0bfh,0c9h,01bh,00eh	; 1 E16
  1293    1B 0E                 
  1295    C3 AC C5 EB           	db	0c3h,0ach,0c5h,0ebh,078h,02dh	; 1 E20
  1299    78 2D                 
  129B    D0 CD CE 1B           	db	0d0h,0cdh,0ceh,01bh,0c2h,053h	; 1 E24
  129F    C2 53                 
  12A1    DE F9 78 39           	db	0deh,0f9h,078h,039h,03fh,001h	; 1 E28
  12A5    3F 01                 
  12A7    EB 2B A8 AD           	db	0ebh,02bh,0a8h,0adh,0c5h,01dh	; 1 E32
  12AB    C5 1D                 
  12AD    F8 C9 7B CE           	db	0f8h,0c9h,07bh,0ceh,097h,040h	; 1 E36
  12B1    97 40                 
                                ;
                                ; Fix mantissa for real to ASCII conversion
                                ; ENTRY	Regs (BC,DE,HL) hold real
                                ; EXIT	Real fixed
                                ;
L12B3  12B3                          l12b3:
  12B3    7D                    	ld	a,l		; Test exponent
  12B4    B7                    	or	a
  12B5    C8                    	ret	z		; Zero
_MB  12B6    CB F8                 	set	_MB,b		; Set bit
  12B8    C5                    	push	bc
  12B9    D5                    	push	de
  12BA    7C                    	ld	a,h
L0B7A  12BB    CD 0B7A               	call	l0b7a		; Shift mantissa right
L0B7A  12BE    CD 0B7A               	call	l0b7a		; Two places
  12C1    84                    	add	a,h		; Add LSB
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-78


  12C2    67                    	ld	h,a
  12C3    E3                    	ex	(sp),hl		; Get middle part
  12C4    ED 5A                 	adc	hl,de		; Add it
  12C6    EB                    	ex	de,hl
  12C7    E1                    	pop	hl
  12C8    E3                    	ex	(sp),hl
  12C9    ED 4A                 	adc	hl,bc		; Same for hi part
  12CB    44                    	ld	b,h		; Copy to high
  12CC    4D                    	ld	c,l
  12CD    E1                    	pop	hl		; Get back old hi
L12D6  12CE    30 06                 	jr	nc,l12d6
L0B7B  12D0    CD 0B7B               	call	l0b7b		; Rotate mantissa right
  12D3    2C                    	inc	l		; Fix exponent
  12D4    37                    	scf
  12D5    C8                    	ret	z
L12D6  12D6                          l12d6:
  12D6    7D                    	ld	a,l
  12D7    C6 03                 	add	a,3		; Fix exponent
  12D9    6F                    	ld	l,a
_MB  12DA    CB B8                 	res	_MB,b		; Clear bit
  12DC    C9                    	ret
                                ;
                                ; Test sets not equal (<>)
                                ; ENTRY	Both sets on stack
                                ; EXIT	Reg HL holds boolean result
                                ;
L12DD  12DD                          l12dd:
.TRUE  12DD    0E 01                 	ld	c,.TRUE		; Set flag
L12E3  12DF    18 02                 	jr	l12e3		; Compare
                                ;
                                ; Test sets equal (=)
                                ; ENTRY	Both sets on stack
                                ; EXIT	Reg HL holds boolean result
                                ;
L12E1  12E1                          l12e1:
FALSE  12E1    0E 00                 	ld	c,FALSE
L12E3  12E3                          l12e3:
L133F  12E3    CD 133F               	call	l133f		; Get sets
L12E6  12E6                          l12e6:
  12E6    1A                    	ld	a,(de)
  12E7    BE                    	cp	(hl)		; Compare
L12F2  12E8    20 08                 	jr	nz,l12f2	; Not equal
  12EA    23                    	inc	hl
  12EB    13                    	inc	de
L12E6  12EC    10 F8                 	djnz	l12e6
  12EE    79                    	ld	a,c
.TRUE  12EF    EE 01                 	xor	.TRUE		; Zoggle flag if equal
  12F1    4F                    	ld	c,a
L12F2  12F2                          l12f2:
SET.LEN  12F2    21 0040               	ld	hl,2*set.len
  12F5    39                    	add	hl,sp		; Fix stack
  12F6    F9                    	ld	sp,hl
  12F7    69                    	ld	l,c		; Get state
  12F8    26 00                 	ld	h,0
  12FA    DD E9                 	jp	(ix)		; Exit
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-79


                                ; Test two sets included (1st in 2nd, <=)
                                ; ENTRY	Both sets on stack
                                ; EXIT	Reg HL holds boolean result
                                ;
L12FC  12FC                          l12fc:
.TRUE  12FC    0E 01                 	ld	c,.TRUE		; Set flag
L1302  12FE    18 02                 	jr	l1302
                                ;
                                ; Test two sets included (2nd in 1st, >=)
                                ; ENTRY	Both sets on stack
                                ; EXIT	Reg HL holds boolean result
                                ;
L1300  1300                          l1300:
FALSE  1300    0E 00                 	ld	c,FALSE
L1302  1302                          l1302:
L133F  1302    CD 133F               	call	l133f		; Get sets
  1305    0D                    	dec	c		; Test comparision mode
L1309  1306    20 01                 	jr	nz,l1309
  1308    EB                    	ex	de,hl
L1309  1309                          l1309:
FALSE  1309    0E 00                 	ld	c,FALSE
L130B  130B                          l130b:
  130B    1A                    	ld	a,(de)
  130C    B6                    	or	(hl)		; Combine
  130D    BE                    	cp	(hl)		; Compare
L12F2  130E    20 E2                 	jr	nz,l12f2
  1310    23                    	inc	hl
  1311    13                    	inc	de
L130B  1312    10 F7                 	djnz	l130b
.TRUE  1314    0E 01                 	ld	c,.TRUE		; Return TRUE
L12F2  1316    18 DA                 	jr	l12f2
                                ;
                                ; Combine two sets (add, +)
                                ; ENTRY	Both sets on stack
                                ; EXIT	Combined set on stack
                                ;
L1318  1318                          l1318:
L133F  1318    CD 133F               	call	l133f		; Get sets
L131B  131B                          l131b:
  131B    1A                    	ld	a,(de)
  131C    B6                    	or	(hl)		; Combine sets
  131D    77                    	ld	(hl),a
  131E    23                    	inc	hl
  131F    13                    	inc	de
L131B  1320    10 F9                 	djnz	l131b
L1322  1322                          l1322:
  1322    EB                    	ex	de,hl
  1323    F9                    	ld	sp,hl
  1324    DD E9                 	jp	(ix)
                                ;
                                ; Combine two sets (subtract, -)
                                ; ENTRY	Both sets on stack
                                ; EXIT	Combined set on stack
                                ;
L1326  1326                          l1326:
L133F  1326    CD 133F               	call	l133f		; Get sets
L1329TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-80


  1329                          l1329:
  1329    1A                    	ld	a,(de)
  132A    2F                    	cpl			; Complement
  132B    A6                    	and	(hl)		; Mask bits
  132C    77                    	ld	(hl),a
  132D    23                    	inc	hl
  132E    13                    	inc	de
L1329  132F    10 F8                 	djnz	l1329
L1322  1331    18 EF                 	jr	l1322
                                ;
                                ; Combine two sets (intersection, *)
                                ; ENTRY	Both sets on stack
                                ; EXIT	Combined set on stack
                                ;
L1333  1333                          l1333:
L133F  1333    CD 133F               	call	l133f		; Get sets
L1336  1336                          l1336:
  1336    1A                    	ld	a,(de)
  1337    A6                    	and	(hl)		; Mask
  1338    77                    	ld	(hl),a
  1339    23                    	inc	hl
  133A    13                    	inc	de
L1336  133B    10 F9                 	djnz	l1336
L1322  133D    18 E3                 	jr	l1322
                                ;
                                ; Get addresses of sets
                                ; ENTRY	Both sets on stack
                                ; EXIT	Regs HL and DE point to sets
                                ;	Reg  IX holds caller address
                                ;	Reg  B  holds set length
                                ;
L133F  133F                          l133f:
  133F    FD E1                 	pop	iy		; Get last caller
  1341    DD E1                 	pop	ix		; Get caller before last one
  1343    21 0000               	ld	hl,0
  1346    39                    	add	hl,sp
  1347    EB                    	ex	de,hl		; Get 1st set
SET.LEN  1348    21 0020               	ld	hl,set.len
  134B    45                    	ld	b,l		; Get length
  134C    39                    	add	hl,sp		; Get 2nd set
  134D    FD E9                 	jp	(iy)		; Return
                                ;
                                ; Test element in set (IN)
                                ; ENTRY	Both sets on stack
                                ; EXIT	Reg HL holds boolean result
                                ;
L134F  134F                          l134f:
  134F    DD E1                 	pop	ix		; Get caller
SET.LEN  1351    21 0021               	ld	hl,set.len+1
  1354    39                    	add	hl,sp		; Get pointer to set
  1355    7E                    	ld	a,(hl)
  1356    B7                    	or	a		; Test any set
L135C  1357    28 03                 	jr	z,l135c
  1359    AF                    	xor	a
L1362  135A    18 06                 	jr	l1362		; Force FALSE
L135C  135C                          l135c:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-81


  135C    2B                    	dec	hl
  135D    46                    	ld	b,(hl)
L05BA  135E    CD 05BA               	call	l05ba		; Get bit state
  1361    A6                    	and	(hl)
L1362  1362                          l1362:
SET.LEN  1362    21 0022               	ld	hl,set.len+2
  1365    39                    	add	hl,sp
  1366    F9                    	ld	sp,hl		; Set return stack
FALSE  1367    21 0000               	ld	hl,FALSE	; Init FALSE
L136D  136A    28 01                 	jr	z,l136d		; Test result
  136C    23                    	inc	hl		; Set TRUE
L136D  136D                          l136d:
  136D    DD E9                 	jp	(ix)
                                ;
                                ; Procedure ASSIGN(file,filename)
                                ; ENTRY	Filenname as string on stack
                                ;	FIB followed string
                                ;
                                ; Assign text file
                                ;
L136F  136F                          l136f:
SKIP  136F    3E                    	db	skip		; Set non zero
                                ;
                                ; Assign (un)typed file
                                ;
L1370  1370                          l1370:
  1370    AF                    	xor	a		; Set zero
L00E8  1371    32 00E8               	ld	(l00e8),a	; Put into mode
  1374    FD E1                 	pop	iy		; Get back caller
L00D2  1376    2A 00D2               	ld	hl,(l00d2)	; Get top of memory
  1379    06 10                 	ld	b,16		; And max length
L05E2  137B    CD 05E2               	call	l05e2		; Assign string from stack
  137E    AF                    	xor	a
  137F    12                    	ld	(de),a		; Close it
  1380    E1                    	pop	hl		; Fetch FIB
L00E2  1381    22 00E2               	ld	(l00e2),hl	; Put into device
  1384    FD E5                 	push	iy		; Bring back caller
  1386    7C                    	ld	a,h		; Verify not standard but file
  1387    B7                    	or	a
L1390  1388    20 06                 	jr	nz,l1390
_STDASSERR  138A    3E 22                 	ld	a,_StdAssErr	; Set illegal FIB
L00D0  138C    32 00D0               	ld	(l00d0),a
  138F    C9                    	ret
L1390  1390                          l1390:
L00E8  1390    3A 00E8               	ld	a,(l00e8)	; Get back mode
  1393    B7                    	or	a		; Test text file
L13A0  1394    28 0A                 	jr	z,l13a0		; Nope
L13B6  1396    CD 13B6               	call	l13b6		; Find standard device
L13A0  1399    20 05                 	jr	nz,l13a0	; Nope
L00E2  139B    2A 00E2               	ld	hl,(l00e2)	; Get back FIB
  139E    77                    	ld	(hl),a		; Set flag
  139F    C9                    	ret
L13A0  13A0                          l13a0:
L03F2  13A0    CD 03F2               	call	l03f2		; Parse file
L00E2  13A3    2A 00E2               	ld	hl,(l00e2)
  13A6    36 00                 	ld	(hl),0
FIB.FCBTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-82


  13A8    11 000C               	ld	de,FIB.FCB
  13AB    19                    	add	hl,de		; Point to FCB part
  13AC    EB                    	ex	de,hl
L005C  13AD    21 005C               	ld	hl,l005c
FCBLEN  13B0    01 0024               	ld	bc,FCBlen
  13B3    ED B0                 	ldir			; Move FCB to FIB
  13B5    C9                    	ret
                                ;
                                ; Find standard IO device
                                ; ENTRY	TOPRAM filled with device string
                                ; EXIT	Zero flag set if device found
                                ;	Accu holds FIB flag if so
                                ;
L13B6  13B6                          l13b6:
STD.LEN  13B6    06 06                 	ld	b,Std.Len	; Init length
L13E6  13B8    21 13E6               	ld	hl,l13e6	; Get table address
L13BB  13BB                          l13bb:
  13BB    C5                    	push	bc
  13BC    E5                    	push	hl
STD.ITM  13BD    06 03                 	ld	b,Std.Itm-1	; Set length of one item
L00D2  13BF    ED 5B 00D2            	ld	de,(l00d2)	; Get top of memory
L13C3  13C3                          l13c3:
  13C3    13                    	inc	de
  13C4    1A                    	ld	a,(de)
  13C5    FE 20                 	cp	' '		; Skip leading blanks
L13C3  13C7    28 FA                 	jr	z,l13c3
L13C9  13C9                          l13c9:
  13C9    1A                    	ld	a,(de)		; Get character
L04A6  13CA    CD 04A6               	call	l04a6		; Convert to upper case
  13CD    96                    	sub	(hl)		; Compare
L13DA  13CE    28 0A                 	jr	z,l13da		; Maybe a hit
  13D0    E1                    	pop	hl
  13D1    C1                    	pop	bc
STD.ITM  13D2    11 0004               	ld	de,Std.Itm
  13D5    19                    	add	hl,de		; Point to next entry
L13BB  13D6    10 E3                 	djnz	l13bb		; Try more
  13D8    B7                    	or	a
  13D9    C9                    	ret
L13DA  13DA                          l13da:
  13DA    23                    	inc	hl
  13DB    13                    	inc	de
L13C9  13DC    10 EB                 	djnz	l13c9		; Loop until all found
  13DE    C1                    	pop	bc
  13DF    C1                    	pop	bc
  13E0    1A                    	ld	a,(de)
  13E1    FE 3A                 	cp	':'		; Verify standard device
  13E3    C0                    	ret	nz
  13E4    7E                    	ld	a,(hl)		; Get flag if so
  13E5    C9                    	ret
                                ;
                                ; Standard character I/O devices
                                ;
L13E6  13E6                          l13e6:
  13E6    43 4F 4E              	db	'CON'
  13E9    C1                    	db	11000001b	; Input output for CON	
STD.ITML13E6  0004                          Std.Itm	equ	$-l13e6
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-83


  13EA    54 52 4D              	db	'TRM'
  13ED    C1                    	db	11000001b	; Input output for TRM
  13EE    4B 42 44              	db	'KBD'
  13F1    82                    	db	10000010b	; Input for KBD
  13F2    4C 53 54              	db	'LST'
  13F5    43                    	db	01000011b	; Output for LST
  13F6    41 55 58              	db	'AUX'
  13F9    C4                    	db	11000100b	; Input output for AUX
  13FA    55 53 52              	db	'USR'
  13FD    C5                    	db	11000101b	; Input output for USR
STD.LENL13E6STD.ITM  0006                          Std.Len	equ	($-l13e6) / Std.Itm
                                ;
                                ; Prepare files
                                ; ENTRY	Reg HL points to FIB
                                ;
                                ; Procedure REWRITE(text_file)
                                ;
L13FE  13FE                          l13fe:
SKIP  13FE    3E                    	db	skip
                                ;
                                ; Procedure RESET(text_file)
                                ;
L13FF  13FF                          l13ff:
  13FF    AF                    	xor	a
L00E8  1400    32 00E8               	ld	(l00e8),a	; Set mode (0=RESET)
L1469  1403    CD 1469               	call	l1469		; Close open file
L00D0  1406    3A 00D0               	ld	a,(l00d0)
  1409    B7                    	or	a		; Test error
  140A    C0                    	ret	nz		; End if so
L00E2  140B    2A 00E2               	ld	hl,(l00e2)	; Get FIB
WR.BIT  140E    CB AE                 	res	wr.bit,(hl)	; Reset write flag
  1410    7E                    	ld	a,(hl)
FIBTYPE  1411    E6 0F                 	and	FIBtype		; Get type
  1413    C0                    	ret	nz		; Exit on standard device
L1430  1414    CD 1430               	call	l1430		; Prepare file operation
L00D0  1417    3A 00D0               	ld	a,(l00d0)
  141A    B7                    	or	a		; Test error
  141B    C0                    	ret	nz		; Exit if so
L00E2  141C    2A 00E2               	ld	hl,(l00e2)	; Get back FIB
L00E8  141F    3A 00E8               	ld	a,(l00e8)	; Get file mode
  1422    B7                    	or	a		; Test RESET
RECLNG..IN  1423    01 8080               	ld	bc,RecLng*256+..in
L142B  1426    28 03                 	jr	z,l142b		; Yeap
..OUT  1428    01 0040               	ld	bc,0*256+..out
L142B  142B                          l142b:
  142B    71                    	ld	(hl),c		; Set flag
  142C    23                    	inc	hl
  142D    23                    	inc	hl
  142E    70                    	ld	(hl),b		; Set buffer pointer
  142F    C9                    	ret
                                ;
                                ; Prepare file operation for current FIB
                                ;
L1430  1430                          l1430:
L145A  1430    CD 145A               	call	l145a		; Clear FCB of this FIB
L00E2  1433    2A 00E2               	ld	hl,(l00e2)	; Get FIB
FIB.FCBTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-84


  1436    11 000C               	ld	de,FIB.FCB
  1439    19                    	add	hl,de		; Point to FCB
  143A    EB                    	ex	de,hl
L00E8  143B    3A 00E8               	ld	a,(l00e8)	; Get file mode
  143E    B7                    	or	a		; Test RESET
_NOFILE.OPEN  143F    01 010F               	ld	bc,_NoFile*256+.open
L144E  1442    28 0A                 	jr	z,l144e		; Yeap, go open file
  1444    D5                    	push	de
.DELETE  1445    0E 13                 	ld	c,.delete
BDOS  1447    CD 0005               	call	BDOS		; Delete file before rewrite
  144A    D1                    	pop	de
_DIRFULL.MAKE  144B    01 F116               	ld	bc,_DirFull*256+.make
L144E  144E                          l144e:
  144E    C5                    	push	bc
BDOS  144F    CD 0005               	call	BDOS		; Now open or make file
  1452    C1                    	pop	bc
  1453    3C                    	inc	a		; Test success
  1454    C0                    	ret	nz		; Yeap
  1455    78                    	ld	a,b
L00D0  1456    32 00D0               	ld	(l00d0),a	; Set error if not
  1459    C9                    	ret
                                ;
                                ; Clear FCB of current FIB
                                ;
L145A  145A                          l145a:
L00E2  145A    2A 00E2               	ld	hl,(l00e2)	; Get FIB
FIB.FCB_EX  145D    11 0018               	ld	de,FIB.FCB+_ex
  1460    19                    	add	hl,de		; Point to EX filed
FCBLEN_EX  1461    06 18                 	ld	b,FCBlen-_ex	; Set length
L1463  1463                          l1463:
  1463    36 00                 	ld	(hl),0		; Clear it
  1465    23                    	inc	hl
L1463  1466    10 FB                 	djnz	l1463
  1468    C9                    	ret
                                ;
                                ; Close text file
                                ;
                                ; Procedure CLOSE(text_file)
                                ;
                                ; ENTRY	Reg HL holds FIB
                                ;
L1469  1469                          l1469:
L00E2  1469    22 00E2               	ld	(l00e2),hl	; Save FIB for current device
  146C    7E                    	ld	a,(hl)
FIBTYPE  146D    E6 0F                 	and	FIBtype		; Get type
  146F    C0                    	ret	nz		; Exit if not a file
OUT.BIT  1470    CB 76                 	bit	out.bit,(hl)	; Test output
L147E  1472    28 0A                 	jr	z,l147e		; Skip if not
EOF  1474    3E 1A                 	ld	a,eof
L16C6  1476    CD 16C6               	call	l16c6		; Close file by EOF
L170C  1479    CD 170C               	call	l170c		; Then flash buffer
L1481  147C    18 03                 	jr	l1481
L147E  147E                          l147e:
IN.BIT  147E    CB 7E                 	bit	in.bit,(hl)	; Test input
  1480    C8                    	ret	z		; Nope, end
L1481  1481                          l1481:
L00E2TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-85


  1481    2A 00E2               	ld	hl,(l00e2)	; Get FIB
  1484    E5                    	push	hl
FIB.FCB  1485    11 000C               	ld	de,FIB.FCB
  1488    19                    	add	hl,de		; Point to FCB
  1489    EB                    	ex	de,hl
.CLOSE  148A    0E 10                 	ld	c,.close
BDOS  148C    CD 0005               	call	BDOS		; Close file
  148F    E1                    	pop	hl
  1490    3C                    	inc	a		; Test success 
L1498  1491    20 05                 	jr	nz,l1498	; Yeap
_NOCLOSE  1493    3E FF                 	ld	a,_NoClose
L00D0  1495    32 00D0               	ld	(l00d0),a	; Set error
L1498  1498                          l1498:
  1498    36 00                 	ld	(hl),0		; Reset FIB flag
  149A    C9                    	ret
                                ;
                                ; Set standard device
                                ;
L149B  149B                          l149b:
  149B    E3                    	ex	(sp),hl
L00E4  149C    22 00E4               	ld	(l00e4),hl	; Save caller
  149F    E3                    	ex	(sp),hl
  14A0    E5                    	push	hl
L00C2  14A1    21 00C2               	ld	hl,l00c2
L00E2  14A4    22 00E2               	ld	(l00e2),hl	; Set standard as FIB
  14A7    E1                    	pop	hl
  14A8    C9                    	ret
                                ;
                                ; Check file before read
                                ; ENTRY	Reg HL points to FIB
                                ;
L14A9  14A9                          l14a9:
  14A9    E3                    	ex	(sp),hl
L00E4  14AA    22 00E4               	ld	(l00e4),hl	; Save caller for error
  14AD    E3                    	ex	(sp),hl
L00E2  14AE    22 00E2               	ld	(l00e2),hl	; Save FIB
IN.BIT  14B1    CB 7E                 	bit	in.bit,(hl)	; Test read allowed
  14B3    C0                    	ret	nz		; Yeap
_NOREAD  14B4    3E 02                 	ld	a,_NoRead
L00D0  14B6    32 00D0               	ld	(l00d0),a	; Set error
  14B9    C9                    	ret
                                ;
                                ; Check file before write
                                ; ENTRY	Reg HL points to FIB
                                ;
L14BA  14BA                          l14ba:
  14BA    E3                    	ex	(sp),hl
L00E4  14BB    22 00E4               	ld	(l00e4),hl	; Save caller for error
  14BE    E3                    	ex	(sp),hl
L00E2  14BF    22 00E2               	ld	(l00e2),hl	; Save FIB
OUT.BIT  14C2    CB 76                 	bit	out.bit,(hl)	; Test write allowed
  14C4    C0                    	ret	nz		; Yeap
_NOWRITE  14C5    3E 03                 	ld	a,_NoWrite
L00D0  14C7    32 00D0               	ld	(l00d0),a	; Set error
  14CA    C9                    	ret
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-86


                                ; Function READLN(var)
                                ; ENTRY	Reg HL points to variable
                                ;
L14CB  14CB                          l14cb:
SKIP  14CB    3E                    	db	skip
                                ;
                                ; Function READ(var)
                                ; ENTRY	Reg HL points to variable
                                ; EXIT	Reg HL points to variable
                                ;
L14CC  14CC                          l14cc:
  14CC    AF                    	xor	a
  14CD    E3                    	ex	(sp),hl		; Get caller
L00E4  14CE    22 00E4               	ld	(l00e4),hl	; Save it
  14D1    E3                    	ex	(sp),hl
  14D2    E5                    	push	hl
L00C2  14D3    21 00C2               	ld	hl,l00c2
L00E2  14D6    22 00E2               	ld	(l00e2),hl	; Set standard device
WR.BIT  14D9    CB AE                 	res	wr.bit,(hl)	; Reset write bit
  14DB    F5                    	push	af		; Save mode
L14E8  14DC    CD 14E8               	call	l14e8		; Read a line
  14DF    F1                    	pop	af
  14E0    B7                    	or	a		; Test READLN
L14E6  14E1    28 03                 	jr	z,l14e6
L01E1  14E3    CD 01E1               	call	l01e1		; Give new line if so
L14E6  14E6                          l14e6:
  14E6    E1                    	pop	hl
  14E7    C9                    	ret
                                ;
                                ; Read a line from keyboard
                                ;
L14E8  14E8                          l14e8:
  14E8    06 00                 	ld	b,0		; Reset flag
L14EA  14EA                          l14ea:
L00D1  14EA    21 00D1               	ld	hl,l00d1	; Point to buffer length
  14ED    7E                    	ld	a,(hl)		; Get buffer length
.MAXBUF  14EE    FE 7F                 	cp	.MaxBuf+1	; Verify in range
L14F4  14F0    38 02                 	jr	c,l14f4
.MAXBUF  14F2    3E 7E                 	ld	a,.MaxBuf	; Truncate if not
L14F4  14F4                          l14f4:
  14F4    4F                    	ld	c,a
.MAXBUF  14F5    36 7E                 	ld	(hl),.MaxBuf	; Set default length
L00D2  14F7    2A 00D2               	ld	hl,(l00d2)	; Get top of memory
L00D4  14FA    22 00D4               	ld	(l00d4),hl	; Unpack it
L14FD  14FD                          l14fd:
  14FD    16 00                 	ld	d,0		; Reset character count
L14FF  14FF                          l14ff:
L03E1  14FF    CD 03E1               	call	l03e1		; Read character
  1502    77                    	ld	(hl),a		; Unpack it
  1503    1E 01                 	ld	e,1		; Init flag
BS  1505    FE 08                 	cp	bs		; Test backspace
L153F  1507    28 36                 	jr	z,l153f
DEL  1509    FE 7F                 	cp	DEL		; Test delete
L153F  150B    28 32                 	jr	z,l153f
  150D    1D                    	dec	e
CTRLX  150E    FE 18                 	cp	CtrlX		; Test ^X
L153FTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-87


  1510    28 2D                 	jr	z,l153f
ESC  1512    FE 1B                 	cp	esc		; Test escape
L153F  1514    28 29                 	jr	z,l153f
EOF  1516    FE 1A                 	cp	eof		; Test end of file
L1550  1518    28 36                 	jr	z,l1550
CR  151A    FE 0D                 	cp	cr		; Test end of line
L1556  151C    28 38                 	jr	z,l1556
  151E    FE 20                 	cp	' '		; Test printable
L1533  1520    30 11                 	jr	nc,l1533
CTRLC  1522    FE 03                 	cp	CtrlC		; Test ^C
L14FF  1524    20 D9                 	jr	nz,l14ff
L00DD  1526    3A 00DD               	ld	a,(l00dd)	; Get $C mode
  1529    B7                    	or	a		; Test abort
L14FF  152A    28 D3                 	jr	z,l14ff		; $C- - so ignore
L00E4  152C    DD 2A 00E4            	ld	ix,(l00e4)
L2016  1530    C3 2016               	jp	l2016		; Abort
                                ;
                                ; Found printable character
                                ;
L1533  1533                          l1533:
  1533    79                    	ld	a,c		; Get max
  1534    BA                    	cp	d		; Test against count
L14FF  1535    28 C8                 	jr	z,l14ff		; Yeap, ignore
  1537    7E                    	ld	a,(hl)		; Get character
  1538    14                    	inc	d		; Advance counter
  1539    23                    	inc	hl		; Point to next storage location
L03C9  153A    CD 03C9               	call	l03c9		; Put to console
L14FF  153D    18 C0                 	jr	l14ff
                                ;
                                ; Special control detected: Backspace, DELete, ^X, ESCape
                                ;
L153F  153F                          l153f:
  153F    15                    	dec	d		; Fix count
L14FD  1540    FA 14FD               	jp	m,l14fd		; Ignore if at 1st position
  1543    2B                    	dec	hl
L0200  1544    CD 0200               	call	l0200		; Position cursor left
BSBS  1547    08 20 08              	db	bs,' ',bs
NULL  154A    00                    	db	null
  154B    1D                    	dec	e		; Test backspace or delete
L14FF  154C    28 B1                 	jr	z,l14ff		; Yeap
L153F  154E    18 EF                 	jr	l153f		; Else delete two characters on screen
                                ;
                                ; Found EOF
                                ;
L1550  1550                          l1550:
  1550    04                    	inc	b		; Test flag
  1551    05                    	dec	b
L14FF  1552    28 AB                 	jr	z,l14ff		; Ignore input
L155A  1554    18 04                 	jr	l155a		; Close input line
                                ;
                                ; Found CR
                                ;
L1556  1556                          l1556:
  1556    04                    	inc	b		; Test flag
  1557    05                    	dec	b
L155E  1558    20 04                 	jr	nz,l155e	; Ignore EOF
L155ATURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-88


  155A                          l155a:
EOF  155A    36 1A                 	ld	(hl),eof	; Close line
L1566  155C    18 08                 	jr	l1566
L155E  155E                          l155e:
L01E1  155E    CD 01E1               	call	l01e1		; Give new line
CR  1561    36 0D                 	ld	(hl),cr		; Close line
  1563    23                    	inc	hl
LF  1564    36 0A                 	ld	(hl),lf
L1566  1566                          l1566:
  1566    23                    	inc	hl
L00D6  1567    22 00D6               	ld	(l00d6),hl	; Set top pointer
  156A    C9                    	ret
                                ;
                                ; Get character from file or console buffer
                                ;
L156B  156B                          l156b:
L00E2  156B    2A 00E2               	ld	hl,(l00e2)	; Get FIB
L00D0  156E    3A 00D0               	ld	a,(l00d0)
  1571    B7                    	or	a		; Test error
L15ED  1572    20 79                 	jr	nz,l15ed	; Force EOF if so
  1574    7E                    	ld	a,(hl)
WR.BIT  1575    CB 6F                 	bit	wr.bit,a	; Test preread
L15E9  1577    20 70                 	jr	nz,l15e9	; Fetch if so
FIBTYPE  1579    E6 0F                 	and	FIBtype		; Test device
L15AB  157B    20 2E                 	jr	nz,l15ab	; Yeap, standard I/O
  157D    23                    	inc	hl		; Point to sector buffer
  157E    23                    	inc	hl
  157F    7E                    	ld	a,(hl)
  1580    B7                    	or	a		; Test filled
L1597  1581    F2 1597               	jp	p,l1597		; Not yet
.RDSEQ  1584    0E 14                 	ld	c,.rdseq
  1586    E5                    	push	hl
L19BA  1587    CD 19BA               	call	l19ba		; Read sector
  158A    E1                    	pop	hl
L1595  158B    28 08                 	jr	z,l1595		; Read was successfull
  158D    E5                    	push	hl
FIB.BUFF  158E    11 002E               	ld	de,FIB.buff-2
  1591    19                    	add	hl,de		; Point to buffer
EOF  1592    36 1A                 	ld	(hl),eof	; Set EOF
  1594    E1                    	pop	hl
L1595  1595                          l1595:
  1595    AF                    	xor	a
  1596    77                    	ld	(hl),a		; Reset buffer pointer
L1597  1597                          l1597:
  1597    34                    	inc	(hl)		; Bump pointer
FIB.BUFF  1598    C6 2E                 	add	a,FIB.buff-2
  159A    5F                    	ld	e,a
  159B    16 00                 	ld	d,0
  159D    19                    	add	hl,de		; Calculate current buffer
  159E    7E                    	ld	a,(hl)
EOF  159F    FE 1A                 	cp	eof		; Test EOF
L15E0  15A1    20 3D                 	jr	nz,l15e0	; Nope
L00E2  15A3    2A 00E2               	ld	hl,(l00e2)
  15A6    23                    	inc	hl
  15A7    23                    	inc	hl
  15A8    35                    	dec	(hl)		; Fix pointer if eof found
L15E0TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-89


  15A9    18 35                 	jr	l15e0
L15AB  15AB                          l15ab:
  15AB    3D                    	dec	a		; Test CON:
L15C9  15AC    20 1B                 	jr	nz,l15c9
L00D4  15AE    2A 00D4               	ld	hl,(l00d4)	; Get current ppinter
L00D6  15B1    ED 5B 00D6            	ld	de,(l00d6)	; Get top pointer
  15B5    B7                    	or	a
  15B6    ED 52                 	sbc	hl,de		; Test more in buffer
L15BF  15B8    38 05                 	jr	c,l15bf		; Ok
  15BA    06 FF                 	ld	b,-1
L14EA  15BC    CD 14EA               	call	l14ea		; Else get more
L15BF  15BF                          l15bf:
L00D4  15BF    2A 00D4               	ld	hl,(l00d4)	; Get current pointer
  15C2    7E                    	ld	a,(hl)
  15C3    23                    	inc	hl		; Bump
L00D4  15C4    22 00D4               	ld	(l00d4),hl
L15E0  15C7    18 17                 	jr	l15e0
L15C9  15C9                          l15c9:
  15C9    3D                    	dec	a		; Test KBD:
L15D2  15CA    20 06                 	jr	nz,l15d2
L00A3  15CC    CD 00A3               	call	l00a3		; Read KBD
  15CF    7D                    	ld	a,l
L15E0  15D0    18 0E                 	jr	l15e0
L15D2  15D2                          l15d2:
  15D2    3D                    	dec	a		; Test AUX:
  15D3    3D                    	dec	a
L15DC  15D4    20 06                 	jr	nz,l15dc
L00AF  15D6    CD 00AF               	call	l00af		; Get from auxiliary
  15D9    7D                    	ld	a,l
L15E0  15DA    18 04                 	jr	l15e0
L15DC  15DC                          l15dc:
L00B5  15DC    CD 00B5               	call	l00b5		; Read USR
  15DF    7D                    	ld	a,l
L15E0  15E0                          l15e0:
L00E2  15E0    2A 00E2               	ld	hl,(l00e2)	; Get back FIB
WR.BIT  15E3    CB EE                 	set	wr.bit,(hl)	; Set preread flag
  15E5    23                    	inc	hl
  15E6    77                    	ld	(hl),a		; Save character
  15E7    2B                    	dec	hl
  15E8    C9                    	ret
L15E9  15E9                          l15e9:
  15E9    23                    	inc	hl		; Point to character buffer
  15EA    7E                    	ld	a,(hl)		; Get character
  15EB    2B                    	dec	hl
  15EC    C9                    	ret
L15ED  15ED                          l15ed:
EOF  15ED    3E 1A                 	ld	a,eof		; Return EOF
  15EF    C9                    	ret
                                ;
                                ; Get character from current device
                                ; Fix up controls
                                ;
L15F0  15F0                          l15f0:
  15F0    E5                    	push	hl
L00E2  15F1    2A 00E2               	ld	hl,(l00e2)	; Get FIB
  15F4    7E                    	ld	a,(hl)
FIBTYPETURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-90


  15F5    E6 0F                 	and	FIBtype		; Get device
RAMDEVICE  15F7    FE 06                 	cp	RAMdevice	; Test RAM
L1622  15F9    28 27                 	jr	z,l1622
L15FB  15FB                          l15fb:
L156B  15FB    CD 156B               	call	l156b		; Get character from device
  15FE    FE 21                 	cp	' '+1		; Test control
L160A  1600    30 08                 	jr	nc,l160a	; Nope
EOF  1602    FE 1A                 	cp	eof		; Test EOF
L160A  1604    28 04                 	jr	z,l160a		; Yeap
WR.BIT  1606    CB AE                 	res	wr.bit,(hl)	; Reset preread
L15FB  1608    18 F1                 	jr	l15fb		; Then synchronize
L160A  160A                          l160a:
NUMBER  160A    11 005D               	ld	de,Number	; Set buffer
.MAXSAMP  160D    06 1E                 	ld	b,.MaxSamp	; Set max
L160F  160F                          l160f:
  160F    C5                    	push	bc
  1610    D5                    	push	de
L156B  1611    CD 156B               	call	l156b		; Get character from device
  1614    D1                    	pop	de
  1615    C1                    	pop	bc
  1616    FE 21                 	cp	' '+1		; Test control
L1620  1618    38 06                 	jr	c,l1620		; Yeap, end if so
WR.BIT  161A    CB AE                 	res	wr.bit,(hl)	; No preread
  161C    12                    	ld	(de),a		; save character
  161D    13                    	inc	de
L160F  161E    10 EF                 	djnz	l160f
L1620  1620                          l1620:
  1620    AF                    	xor	a
  1621    12                    	ld	(de),a		; Close buffer
L1622  1622                          l1622:
  1622    E1                    	pop	hl
  1623    C9                    	ret
                                ;
                                ; Check negative sign of ASCII number
                                ; ENTRY	Location NUMBER filled
                                ; EXIT	Reg IX points to number buffer
                                ;	Reg B holds 0 on no negative sign
                                ;	        and 1 on negative sign found
                                ;	Zero flag indicates empty buffer
                                ;
L1624  1624                          l1624:
NUMBER  1624    DD 21 005D            	ld	ix,Number	; Init pointer
  1628    DD 7E 00              	ld	a,(ix)		; Get character
  162B    B7                    	or	a
  162C    C8                    	ret	z		; Exit if zero
  162D    06 00                 	ld	b,0
  162F    FE 2D                 	cp	'-'		; Test negative sign
  1631    C0                    	ret	nz		; Nope
  1632    04                    	inc	b		; Fix result
  1633    DD 23                 	inc	ix		; Skip pointer
  1635    C9                    	ret
                                ;
                                ; Fix number conversion for error
                                ; ENTRY	Reg IX points behind number
                                ;	Carry set reflects overflow
                                ; EXIT	Carry set indicates error
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-91


                                ;	IORESULT set to error 010H
                                ;
L1636  1636                          l1636:
L163D  1636    38 05                 	jr	c,l163d		; Fall into error
  1638    DD 7E 00              	ld	a,(ix)		; Test correct end
  163B    B7                    	or	a
  163C    C8                    	ret	z		; Yeap
L163D  163D                          l163d:
_ILLNUM  163D    3E 10                 	ld	a,_IllNum
L00D0  163F    32 00D0               	ld	(l00d0),a	; Set error
  1642    37                    	scf
  1643    C9                    	ret
                                ;
                                ; Get character from input READ(char)
                                ; ENTRY	Reg HL points to character variable
                                ;
L1644  1644                          l1644:
  1644    E5                    	push	hl		; Save pointer
L156B  1645    CD 156B               	call	l156b		; Get character
WR.BIT  1648    CB AE                 	res	wr.bit,(hl)	; Reset preread
  164A    E1                    	pop	hl		; Get back pointer
  164B    77                    	ld	(hl),a		; Save character
  164C    C9                    	ret
                                ;
                                ; Get byte from input READ(byte)
                                ; ENTRY	Reg HL points to byte variable
                                ;
L164D  164D                          l164d:
SKIP  164D    3E                    	db	skip		; Set byte flag
                                ;
                                ; Get integer from input READ(integer)
                                ; ENTRY	Reg HL points to integer variable
                                ;
L164E  164E                          l164e:
  164E    AF                    	xor	a		; Reset byte flag
  164F    4F                    	ld	c,a
  1650    C5                    	push	bc
L15F0  1651    CD 15F0               	call	l15f0		; Get number input
  1654    C1                    	pop	bc
L1624  1655    CD 1624               	call	l1624		; Test sign
  1658    C8                    	ret	z		; Empty number, exit
  1659    C5                    	push	bc
  165A    E5                    	push	hl
L07F7  165B    CD 07F7               	call	l07f7		; Convert ASCII to integer
  165E    D1                    	pop	de
  165F    C1                    	pop	bc
L1636  1660    CD 1636               	call	l1636		; Test error
  1663    D8                    	ret	c		; Yeap, exit
  1664    05                    	dec	b		; Test negative sign
L0783  1665    CC 0783               	call	z,l0783		; Negate if so
  1668    EB                    	ex	de,hl
  1669    73                    	ld	(hl),e		; Save low or byte
  166A    0C                    	inc	c
  166B    0D                    	dec	c		; Test byte
L1670  166C    20 02                 	jr	nz,l1670	; Skip if so
  166E    23                    	inc	hl
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-92


  166F    72                    	ld	(hl),d		; Save high on integer
L1670  1670                          l1670:
  1670    EB                    	ex	de,hl
  1671    C9                    	ret
                                ;
                                ; Get real from input READ(real)
                                ; ENTRY	Reg HL points to real variable
                                ;
L1672  1672                          l1672:
L15F0  1672    CD 15F0               	call	l15f0		; Get ASCII number
L1624  1675    CD 1624               	call	l1624		; Test sign
  1678    C8                    	ret	z		; Empty number, exit
  1679    C5                    	push	bc
  167A    E5                    	push	hl
L11A3  167B    CD 11A3               	call	l11a3		; Convert to real
  167E    D9                    	exx
  167F    E1                    	pop	hl
  1680    C1                    	pop	bc
L1636  1681    CD 1636               	call	l1636		; Test error
  1684    D8                    	ret	c		; Yeap, exit
  1685    05                    	dec	b		; Test negative sign
  1686    D9                    	exx
L0A8F  1687    CC 0A8F               	call	z,l0a8f		; Negate if so
  168A    D9                    	exx
L05D1  168B    C3 05D1               	jp	l05d1		; Save real number
                                ;
                                ; Get string from input READ(string[max])
                                ; ENTRY	Reg HL points to string variable
                                ;	Reg B holds max characters in string
                                ;
L168E  168E                          l168e:
  168E    E5                    	push	hl		; Save pointer
  168F    EB                    	ex	de,hl
  1690    0E 00                 	ld	c,0		; Clear character count
L1692  1692                          l1692:
  1692    C5                    	push	bc
  1693    D5                    	push	de
L156B  1694    CD 156B               	call	l156b		; Get character
  1697    D1                    	pop	de
  1698    C1                    	pop	bc
CR  1699    FE 0D                 	cp	cr		; Test end of line
L16A8  169B    28 0B                 	jr	z,l16a8
EOF  169D    FE 1A                 	cp	eof		; Test end of file
L16A8  169F    28 07                 	jr	z,l16a8
WR.BIT  16A1    CB AE                 	res	wr.bit,(hl)	; Reset preread
  16A3    0C                    	inc	c		; Advance count
  16A4    13                    	inc	de		; Advance pointer
  16A5    12                    	ld	(de),a
L1692  16A6    10 EA                 	djnz	l1692
L16A8  16A8                          l16a8:
  16A8    E1                    	pop	hl		; Get back pointer
  16A9    71                    	ld	(hl),c		; Set length
  16AA    C9                    	ret
                                ;
                                ; Handle end of line after READLN from file
                                ;
L16ABTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-93


  16AB                          l16ab:
L156B  16AB    CD 156B               	call	l156b		; Get character
EOF  16AE    FE 1A                 	cp	eof		; Test end of file
L16C5  16B0    28 13                 	jr	z,l16c5
WR.BIT  16B2    CB AE                 	res	wr.bit,(hl)	; Reset preread
LF  16B4    FE 0A                 	cp	lf		; Test new line
L16C5  16B6    28 0D                 	jr	z,l16c5
CR  16B8    FE 0D                 	cp	cr		; Wait for end of line
L16AB  16BA    20 EF                 	jr	nz,l16ab
L156B  16BC    CD 156B               	call	l156b
LF  16BF    FE 0A                 	cp	lf		; Maybe new line
L16C5  16C1    20 02                 	jr	nz,l16c5
WR.BIT  16C3    CB AE                 	res	wr.bit,(hl)	; Reset preread if so
L16C5  16C5                          l16c5:
  16C5    C9                    	ret
                                ;
                                ; Output character to device
                                ; ENTRY	Accu holds character
                                ;
L16C6  16C6                          l16c6:
L00E2  16C6    2A 00E2               	ld	hl,(l00e2)	; Get FIB
  16C9    4F                    	ld	c,a		; Save character
L00D0  16CA    3A 00D0               	ld	a,(l00d0)
  16CD    B7                    	or	a		; Test I/O error
  16CE    C0                    	ret	nz		; Exit if so
  16CF    7E                    	ld	a,(hl)		; Get type
FIBTYPE  16D0    E6 0F                 	and	FIBtype		; Test device
L16E4  16D2    20 10                 	jr	nz,l16e4	; Yeap
  16D4    23                    	inc	hl		; Point to sector buffer
  16D5    23                    	inc	hl
  16D6    E5                    	push	hl
  16D7    7E                    	ld	a,(hl)		; Get pointer
FIB.BUFF  16D8    C6 2E                 	add	a,FIB.buff-2
  16DA    5F                    	ld	e,a
  16DB    16 00                 	ld	d,0
  16DD    19                    	add	hl,de		; Make pointer absolute
  16DE    71                    	ld	(hl),c		; Save character
  16DF    E1                    	pop	hl
  16E0    34                    	inc	(hl)		; Advance count
  16E1    F0                    	ret	p		; Still in range
L170C  16E2    18 28                 	jr	l170c		; Write record
L16E4  16E4                          l16e4:
RAMDEVICE  16E4    FE 06                 	cp	RAMdevice	; Test store to RAM
L16FD  16E6    28 15                 	jr	z,l16fd		; Yeap
  16E8    E1                    	pop	hl
  16E9    06 00                 	ld	b,0
  16EB    C5                    	push	bc
  16EC    E5                    	push	hl
  16ED    3D                    	dec	a		; 1=CON:
L00A6  16EE    CA 00A6               	jp	z,l00a6		; Put to console
  16F1    3D                    	dec	a		; 3=LST:
  16F2    3D                    	dec	a
L00A9  16F3    CA 00A9               	jp	z,l00a9		; Put to printer
  16F6    3D                    	dec	a		; 4=AUX:
L00AC  16F7    CA 00AC               	jp	z,l00ac		; Put to auxiliary
                                				; 5=USR:
L00B2TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-94


  16FA    C3 00B2               	jp	l00b2		; Put to console
L16FD  16FD                          l16fd:
L00E8  16FD    2A 00E8               	ld	hl,(l00e8)	; Get string pointer
L00EA  1700    3A 00EA               	ld	a,(l00ea)	; Get max length
  1703    BE                    	cp	(hl)		; Test in range
  1704    C8                    	ret	z		; Nope, exit
  1705    34                    	inc	(hl)		; Bump count
  1706    5E                    	ld	e,(hl)
  1707    16 00                 	ld	d,0
  1709    19                    	add	hl,de		; Build address
  170A    71                    	ld	(hl),c		; Store character
  170B    C9                    	ret
                                ;
                                ; Write sector to file if any item in buffer
                                ;
L170C  170C                          l170c:
L00E2  170C    2A 00E2               	ld	hl,(l00e2)	; Get FIB
  170F    23                    	inc	hl
  1710    23                    	inc	hl
  1711    7E                    	ld	a,(hl)		; Get record pointer
  1712    B7                    	or	a		; Test any in buffer
  1713    C8                    	ret	z		; Nope, exit
  1714    36 00                 	ld	(hl),0		; Clear pointer
.WRSEQ  1716    0E 15                 	ld	c,.wrseq
L19BA  1718    CD 19BA               	call	l19ba		; Write record
  171B    C8                    	ret	z		; Ok, no errr
_WRERR  171C    3E F0                 	ld	a,_WrErr
L00D0  171E    32 00D0               	ld	(l00d0),a	; Set error
  1721    C9                    	ret
                                ;
                                ; Write character to device
                                ; WRITE(char)
                                ; ENTRY	Reg L holds character
                                ;
L1722  1722                          l1722:
  1722    7D                    	ld	a,l		; Get character
L16C6  1723    C3 16C6               	jp	l16c6		; Put it
                                ;
                                ; Write integer to device
                                ; WRITE(int)
                                ; WRITE(int:m)
                                ; ENTRY	Integer on stack
                                ;	Reg HL holds digit count (zero without count)
                                ;
L1726  1726                          l1726:
  1726    C1                    	pop	bc
  1727    D1                    	pop	de
  1728    C5                    	push	bc
L00D2  1729    DD 2A 00D2            	ld	ix,(l00d2)	; Get top of memory for buffer
SGN.BIT  172D    CB 7C                 	bit	sgn.bit,h	; Test sign of count
L1737  172F    28 06                 	jr	z,l1737		; >= 0
L0783  1731    CD 0783               	call	l0783		; Negate
  1734    EB                    	ex	de,hl		; Swap values
L1745  1735    18 0E                 	jr	l1745
L1737  1737                          l1737:
  1737    EB                    	ex	de,hl
SGN.BITTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-95


  1738    CB 7C                 	bit	sgn.bit,h	; Test sign of number
L1745  173A    28 09                 	jr	z,l1745		; >= 0
L0783  173C    CD 0783               	call	l0783		; Negate
  173F    DD 36 00 2D           	ld	(ix),'-'	; Init sign
  1743    DD 23                 	inc	ix
L1745  1745                          l1745:
  1745    D5                    	push	de
L07C6  1746    CD 07C6               	call	l07c6		; Convert integer to ASCII
L1749  1749                          l1749:
  1749    E1                    	pop	hl
L04C8  174A    CD 04C8               	call	l04c8		; Get byte from integer
L00D2  174D    ED 5B 00D2            	ld	de,(l00d2)	; Get back top of memory
  1751    DD E5                 	push	ix
  1753    E1                    	pop	hl
  1754    B7                    	or	a
  1755    ED 52                 	sbc	hl,de		; Calculate length of string
  1757    4D                    	ld	c,l
  1758    EB                    	ex	de,hl
L1759  1759                          l1759:
  1759    91                    	sub	c		; Test against count
L176A  175A    38 0E                 	jr	c,l176a		; Ignore if out of range
L176A  175C    28 0C                 	jr	z,l176a
  175E    47                    	ld	b,a		; Save count
  175F    E5                    	push	hl
L1760  1760                          l1760:
  1760    3E 20                 	ld	a,' '
  1762    C5                    	push	bc
L16C6  1763    CD 16C6               	call	l16c6		; Blank leading places
  1766    C1                    	pop	bc
L1760  1767    10 F7                 	djnz	l1760
  1769    E1                    	pop	hl
L176A  176A                          l176a:
  176A    41                    	ld	b,c		; Get back length
  176B    04                    	inc	b
L176C  176C                          l176c:
  176C    05                    	dec	b
  176D    C8                    	ret	z
  176E    7E                    	ld	a,(hl)
  176F    C5                    	push	bc
  1770    E5                    	push	hl
L16C6  1771    CD 16C6               	call	l16c6		; Type digits
  1774    E1                    	pop	hl
  1775    C1                    	pop	bc
  1776    23                    	inc	hl
L176C  1777    18 F3                 	jr	l176c
                                ;
                                ; Formatted write
                                ; WRITE(real)
                                ; WRITE(real:n)
                                ; WRITE(real:n:m)
                                ; ENTRY	Reg HL holds fix comma places (-1 on none)
                                ;	Stack holds decimal places and real
                                ;	(Without decimal places defaults to 24)
                                ;
L1779  1779                          l1779:
  1779    C1                    	pop	bc
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-96


  177A    D1                    	pop	de		; Get places
  177B    D9                    	exx
  177C    E1                    	pop	hl		; Get number
  177D    D1                    	pop	de
  177E    C1                    	pop	bc
  177F    D9                    	exx
  1780    C5                    	push	bc
L00D2  1781    DD 2A 00D2            	ld	ix,(l00d2)	; Get top of memory for buffer
  1785    D5                    	push	de
L1027  1786    CD 1027               	call	l1027		; Convert real to ASCII
L1749  1789    18 BE                 	jr	l1749
                                ;
                                ; Boolean write
                                ; WRITE(bool)
                                ; WRITE(bool:m)
                                ; ENTRY	Reg HL holds places (0 on none)
                                ;	Stack holds boolean
                                ;
L178B  178B                          l178b:
  178B    C1                    	pop	bc
  178C    D1                    	pop	de		; Get boolean
  178D    C5                    	push	bc
L04C8  178E    CD 04C8               	call	l04c8		; Get byte from integer
_LB  1791    CB 43                 	bit	_LB,e		; Test bit
L17A1  1793    21 17A1               	ld	hl,l17a1
L17A1.L  1796    0E 04                 	ld	c,l17a1.l
L1759  1798    20 BF                 	jr	nz,l1759	; It is TRUE
L17A5  179A    21 17A5               	ld	hl,l17a5
L17A5.L  179D    0E 05                 	ld	c,l17a5.l
L1759  179F    18 B8                 	jr	l1759		; Tell FALSE
                                ;
L17A1  17A1                          l17a1:
  17A1    54 52 55 45           	db	'TRUE'
L17A1.LL17A1  0004                          l17a1.l	equ	$-l17a1
L17A5  17A5                          l17a5:
  17A5    46 41 4C 53           	db	'FALSE'
  17A9    45                    
L17A5.LL17A5  0005                          l17a5.l	equ	$-l17a5
                                ;
                                ; String and formatted character write
                                ; WRITE(string)
                                ; WRITE(string:m)
                                ; WRITE(char:m)
                                ; ENTRY	Reg HL holds places (0 on none)
                                ;	Stack holds string (chracter=string with length=1)
                                ;
L17AA  17AA                          l17aa:
L04C8  17AA    CD 04C8               	call	l04c8		; Get byte from integer for places
  17AD    21 0002               	ld	hl,2
  17B0    39                    	add	hl,sp		; Fix stack
  17B1    4E                    	ld	c,(hl)		; Get length
  17B2    23                    	inc	hl
L1759  17B3    CD 1759               	call	l1759		; Print right justified
  17B6    D1                    	pop	de		; Get back caller
  17B7    F9                    	ld	sp,hl		; Reset stack
  17B8    D5                    	push	de
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-97


  17B9    C9                    	ret
                                ;
                                ; Immediate string write
                                ; WRITE('string')
                                ; ENTRY	Stack holds string starting with length
                                ;
L17BA  17BA                          l17ba:
  17BA    E1                    	pop	hl		; Get pointer to string
  17BB    7E                    	ld	a,(hl)		; Get length
  17BC    23                    	inc	hl
  17BD    B7                    	or	a		; Test any
L17CC  17BE    28 0C                 	jr	z,l17cc
  17C0    47                    	ld	b,a		; save length if so
L17C1  17C1                          l17c1:
  17C1    7E                    	ld	a,(hl)		; Get character
  17C2    C5                    	push	bc
  17C3    E5                    	push	hl
L16C6  17C4    CD 16C6               	call	l16c6		; Write it
  17C7    E1                    	pop	hl
  17C8    C1                    	pop	bc
  17C9    23                    	inc	hl
L17C1  17CA    10 F5                 	djnz	l17c1
L17CC  17CC                          l17cc:
  17CC    E9                    	jp	(hl)
                                ;
                                ; Give new line
                                ; WRITELN{...}
                                ;
L17CD  17CD                          l17cd:
CR  17CD    3E 0D                 	ld	a,cr
L16C6  17CF    CD 16C6               	call	l16c6		; Give return
LF  17D2    3E 0A                 	ld	a,lf
L16C6  17D4    C3 16C6               	jp	l16c6		; Followed by line feed
                                ;
                                ; The logical delimiter functions
                                ; Function SEEKEOLN(device):boolean
                                ; ENTRY	Reg HL points to FIB
                                ; EXIT	Reg HL holds TRUE or FALSE
                                ;
L17D7  17D7                          l17d7:
CR  17D7    11 010D               	ld	de,1*256+cr	; Set CR
L17E9  17DA    18 0D                 	jr	l17e9
                                ;
                                ; Function EOLN(device):boolean
                                ;
L17DC  17DC                          l17dc:
CR  17DC    11 000D               	ld	de,cr
L17E9  17DF    18 08                 	jr	l17e9
                                ;
                                ; Function SEEKEOF(device):boolean
                                ;
L17E1  17E1                          l17e1:
EOF  17E1    11 011A               	ld	de,1*256+eof	; Set EOF
L17E9  17E4    18 03                 	jr	l17e9
                                ;
                                ; Function EOF(device):boolean
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-98


                                ;
L17E6  17E6                          l17e6::
EOF  17E6    11 001A               	ld	de,eof
L17E9  17E9                          l17e9:
L00E2  17E9    22 00E2               	ld	(l00e2),hl	; Set device
IN.BIT  17EC    CB 7E                 	bit	in.bit,(hl)	; Test input possible
L180C  17EE    28 1C                 	jr	z,l180c		; Nope
L17F0  17F0                          l17f0:
  17F0    D5                    	push	de
L156B  17F1    CD 156B               	call	l156b		; Get character
  17F4    D1                    	pop	de
  17F5    BB                    	cp	e		; Test end found
L1808  17F6    28 10                 	jr	z,l1808		; Yeap
EOF  17F8    FE 1A                 	cp	eof		; Test end of file
L1808  17FA    28 0C                 	jr	z,l1808		; Force TRUE if so
  17FC    FE 21                 	cp	' '+1		; Test control
L180C  17FE    30 0C                 	jr	nc,l180c	; Nope
  1800    14                    	inc	d		; Test control to be checked
  1801    15                    	dec	d
L180C  1802    28 08                 	jr	z,l180c		; Yeap
WR.BIT  1804    CB AE                 	res	wr.bit,(hl)	; Reset preread
L17F0  1806    18 E8                 	jr	l17f0
L1808  1808                          l1808:
.TRUE  1808    21 0001               	ld	hl,.TRUE	; Return TRUE
  180B    C9                    	ret
L180C  180C                          l180c:
FALSE  180C    21 0000               	ld	hl,FALSE	; Return FALSE
  180F    C9                    	ret
                                ;
                                ; Prepare typed files
                                ; Procedure REWRITE(typed_file)
                                ; ENTRY	Reg HL points to FIB
                                ;	Reg DE holds length of record
                                ;
L1810  1810                          l1810:
SKIP  1810    3E                    	db	skip
                                ;
                                ; Procedure RESET(typed_file)
                                ;
L1811  1811                          l1811:
  1811    AF                    	xor	a
L00E8  1812    32 00E8               	ld	(l00e8),a	; Set mode (0=RESET)
L00E6  1815    ED 53 00E6            	ld	(l00e6),de	; Save record length
L187A  1819    CD 187A               	call	l187a		; Close file
L00D0  181C    3A 00D0               	ld	a,(l00d0)	; Test error
  181F    B7                    	or	a
  1820    C0                    	ret	nz		; End if so
L1430  1821    CD 1430               	call	l1430		; Set up FIB
L00D0  1824    3A 00D0               	ld	a,(l00d0)	; Test error
  1827    B7                    	or	a
  1828    C0                    	ret	nz		; End if so
L00E2  1829    2A 00E2               	ld	hl,(l00e2)	; Init FIB flag
..IN..OUT..READ  182C    36 D0                 	ld	(hl),..in+..out+..read
  182E    23                    	inc	hl
  182F    23                    	inc	hl
  1830    77                    	ld	(hl),a		; Init record pointer
FIB.CURTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-99


  1831    11 0006               	ld	de,FIB.cur-2
  1834    19                    	add	hl,de		; Point to current record
  1835    77                    	ld	(hl),a		; Clear it
  1836    23                    	inc	hl
  1837    77                    	ld	(hl),a
FIB.FCB_RRNFIB.CUR  1838    11 0024               	ld	de,FIB.FCB+_rrn-FIB.cur-1
  183B    19                    	add	hl,de		; Point to random record
  183C    77                    	ld	(hl),a		; Clear it
  183D    23                    	inc	hl
  183E    77                    	ld	(hl),a
FIB.RECFIB.FCB_RRN  183F    11 FFD6               	ld	de,FIB.rec-FIB.FCB-_rrn-1
  1842    19                    	add	hl,de		; Point to FIB record
L00E8  1843    3A 00E8               	ld	a,(l00e8)
  1846    B7                    	or	a		; Test mode
L1864  1847    20 1B                 	jr	nz,l1864	; Skip RESET
                                ;
                                ; Perform RESET
                                ;
  1849    E5                    	push	hl
FIXRECLEN  184A    01 0004               	ld	bc,FixRecLen	; Set four bytes
  184D    AF                    	xor	a
L1909  184E    CD 1909               	call	l1909		; Prepare read
  1851    E1                    	pop	hl
  1852    23                    	inc	hl
  1853    23                    	inc	hl
  1854    4E                    	ld	c,(hl)		; Point to max records
  1855    23                    	inc	hl
  1856    46                    	ld	b,(hl)
L00E6  1857    2A 00E6               	ld	hl,(l00e6)
  185A    B7                    	or	a
  185B    ED 42                 	sbc	hl,bc		; Test agianst tem in file
  185D    C8                    	ret	z		; Correct value
_INVREC  185E    3E 90                 	ld	a,_InvRec
L00D0  1860    32 00D0               	ld	(l00d0),a	; Set error
  1863    C9                    	ret
                                ;
                                ; Perform REWRITE
                                ;
L1864  1864                          l1864:
  1864    E5                    	push	hl
  1865    AF                    	xor	a
  1866    77                    	ld	(hl),a		; Clear record
  1867    23                    	inc	hl
  1868    77                    	ld	(hl),a
  1869    23                    	inc	hl
L00E6  186A    ED 5B 00E6            	ld	de,(l00e6)	; Fetch length
  186E    73                    	ld	(hl),e		; Store into FIB
  186F    23                    	inc	hl
  1870    72                    	ld	(hl),d
  1871    E1                    	pop	hl
FIXRECLEN  1872    01 0004               	ld	bc,FixRecLen
REC.NEWREC.WR  1875    3E 03                 	ld	a,Rec.New+Rec.Wr
L1909  1877    C3 1909               	jp	l1909		; Prepare write
                                ;
                                ; Procedure CLOSE(typed_file)
                                ; ENTRY	Reg HL points to FIB
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-100


                                ;
L187A  187A                          l187a:
L00E2  187A    22 00E2               	ld	(l00e2),hl	; Save FIB
  187D    7E                    	ld	a,(hl)		; Get state
..IN..OUT  187E    E6 C0                 	and	..in+..out	; Test any action
  1880    C8                    	ret	z		; Nope
L19AE  1881    CD 19AE               	call	l19ae		; Write record if requested
L00E2  1884    2A 00E2               	ld	hl,(l00e2)	; Get FIB
FIB.FCB_RRN  1887    11 002D               	ld	de,FIB.FCB+_rrn
  188A    19                    	add	hl,de		; Point to random recird
  188B    AF                    	xor	a
  188C    77                    	ld	(hl),a		; Clear it
  188D    23                    	inc	hl
  188E    77                    	ld	(hl),a
FIB.FCB_RRN  188F    11 FFD4               	ld	de,-FIB.FCB-_rrn+1
  1892    19                    	add	hl,de		; Point to record
  1893    77                    	ld	(hl),a		; Clear it
  1894    23                    	inc	hl
  1895    23                    	inc	hl
FIXRECLEN  1896    01 0004               	ld	bc,FixRecLen
REC.WR  1899    3E 01                 	ld	a,Rec.Wr
L1909  189B    CD 1909               	call	l1909		; Prepare write
L19AE  189E    CD 19AE               	call	l19ae		; Write if requested
L1481  18A1    C3 1481               	jp	l1481		; Close file
                                ;
                                ; Prepare write to record file
                                ; ENTRY	Reg HL points to FIB
                                ;
L18A4  18A4                          l18a4:
  18A4    E3                    	ex	(sp),hl
L00E4  18A5    22 00E4               	ld	(l00e4),hl	; Save caller
  18A8    E3                    	ex	(sp),hl
L00E2  18A9    22 00E2               	ld	(l00e2),hl	; Save FIB
  18AC    7E                    	ld	a,(hl)
..IN..OUT  18AD    E6 C0                 	and	..in+..out	; Test I/O allowed
  18AF    C0                    	ret	nz		; Yeap
L18B0  18B0                          l18b0:
_BLKERR  18B0    3E 04                 	ld	a,_BlkErr
L00D0  18B2    32 00D0               	ld	(l00d0),a	; Set error
  18B5    C9                    	ret
                                ;
                                ; Get structure from input READ(type)
                                ; ENTRY	Reg HL points to FIB
                                ;
L18B6  18B6                          l18b6:
L00D0  18B6    3A 00D0               	ld	a,(l00d0)	; Get error
  18B9    B7                    	or	a		; Test previous
  18BA    C0                    	ret	nz		; Yeap
  18BB    E5                    	push	hl
L1A5A  18BC    CD 1A5A               	call	l1a5a		; Get record data
  18BF    EB                    	ex	de,hl
  18C0    B7                    	or	a
  18C1    ED 52                 	sbc	hl,de		; Test against last record
  18C3    E1                    	pop	hl
L18D6  18C4    30 10                 	jr	nc,l18d6	; Error
  18C6    AF                    	xor	a
L1909TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-101


  18C7    CD 1909               	call	l1909		; Read
L18CA  18CA                          l18ca:
L00E2  18CA    2A 00E2               	ld	hl,(l00e2)	; Get back FIB
FIB.CUR  18CD    11 0008               	ld	de,FIB.cur
  18D0    19                    	add	hl,de
  18D1    34                    	inc	(hl)		; Bump record
  18D2    C0                    	ret	nz
  18D3    23                    	inc	hl
  18D4    34                    	inc	(hl)
  18D5    C9                    	ret
L18D6  18D6                          l18d6:
_ILLEOF  18D6    3E 99                 	ld	a,_IllEOF
L00D0  18D8    32 00D0               	ld	(l00d0),a	; Set error
  18DB    C9                    	ret
                                ;
                                ; Put structure to output WRITE(type)
                                ; ENTRY	Reg HL points to FIB
                                ;
L18DC  18DC                          l18dc:
L00D0  18DC    3A 00D0               	ld	a,(l00d0)	; Get error
  18DF    B7                    	or	a		; Test previous
  18E0    C0                    	ret	nz		; Yeap
  18E1    E5                    	push	hl
L1A5A  18E2    CD 1A5A               	call	l1a5a		; Get record data
  18E5    B7                    	or	a
  18E6    ED 52                 	sbc	hl,de		; Test same size
REC.WR  18E8    3E 01                 	ld	a,Rec.Wr
L18FC  18EA    20 10                 	jr	nz,l18fc
L00E2  18EC    2A 00E2               	ld	hl,(l00e2)
FIB.REC  18EF    11 0004               	ld	de,FIB.rec
  18F2    19                    	add	hl,de		; Point to record
  18F3    34                    	inc	(hl)		; Bump it
L18FA  18F4    20 04                 	jr	nz,l18fa
  18F6    23                    	inc	hl
  18F7    34                    	inc	(hl)
L1902  18F8    28 08                 	jr	z,l1902		; Overflow error
L18FA  18FA                          l18fa:
REC.NEWREC.WR  18FA    3E 03                 	ld	a,Rec.New+Rec.Wr
L18FC  18FC                          l18fc:
  18FC    E1                    	pop	hl
L1909  18FD    CD 1909               	call	l1909		; Execute write
L18CA  1900    18 C8                 	jr	l18ca
L1902  1902                          l1902:
  1902    E1                    	pop	hl
_OVFLERR  1903    3E F2                 	ld	a,_OvflErr
L00D0  1905    32 00D0               	ld	(l00d0),a	; Set error
  1908    C9                    	ret
                                ;
                                ; Perform record IO
                                ; ENTRY	Reg HL points to FIB record field
                                ;	Reg BC holds record length
                                ;	(Four on CLOSE, RESET and REWRITE)
                                ;	Accu holds code :
                                ;		0 : On RESET and READ
                                ;		1 : On CLOSE and WRITE
                                ;		3 : On WRITE and REWRITE
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-102


                                ;
L1909  1909                          l1909:
L00E9  1909    32 00E9               	ld	(l00e9),a	; Save code
  190C    EB                    	ex	de,hl
L190D  190D                          l190d:
L00E2  190D    2A 00E2               	ld	hl,(l00e2)	; Get FIB
RD.BIT  1910    CB 66                 	bit	rd.bit,(hl)	; Test known buffer
L1943  1912    28 2F                 	jr	z,l1943		; Nope
RD.BIT  1914    CB A6                 	res	rd.bit,(hl)	; Reset bit
L00E9  1916    3A 00E9               	ld	a,(l00e9)	; Get mode
REC.WR.BIT  1919    CB 47                 	bit	Rec.Wr.bit,a	; Test write
L1935  191B    28 18                 	jr	z,l1935		; Nope, so read
  191D    23                    	inc	hl
  191E    23                    	inc	hl
  191F    7E                    	ld	a,(hl)		; Get record pointer
  1920    2B                    	dec	hl
  1921    2B                    	dec	hl
  1922    B7                    	or	a
L1935  1923    20 10                 	jr	nz,l1935	; Not empty, so read
L00E9  1925    3A 00E9               	ld	a,(l00e9)	; Get code
REC.NEW.BIT  1928    CB 4F                 	bit	Rec.New.bit,a	; Test new
L1943  192A    20 17                 	jr	nz,l1943	; Yeap
  192C    78                    	ld	a,b		; Get counter
  192D    B7                    	or	a
L1943  192E    20 13                 	jr	nz,l1943
  1930    79                    	ld	a,c		; Test new
  1931    B7                    	or	a
L1943  1932    FA 1943               	jp	m,l1943
L1935  1935                          l1935:
  1935    C5                    	push	bc
  1936    D5                    	push	de
.RNDRD  1937    0E 21                 	ld	c,.rndrd
L19BA  1939    CD 19BA               	call	l19ba		; Read record
  193C    D1                    	pop	de
  193D    C1                    	pop	bc
L1991  193E    20 51                 	jr	nz,l1991	; Error return
L00E2  1940    2A 00E2               	ld	hl,(l00e2)	; Get back FIB
L1943  1943                          l1943:
L00E9  1943    3A 00E9               	ld	a,(l00e9)	; Get mode
REC.WR.BIT  1946    CB 47                 	bit	Rec.Wr.bit,a	; Test write allowed
L194C  1948    28 02                 	jr	z,l194c		; Nope
WR.BIT  194A    CB EE                 	set	wr.bit,(hl)	; Set bit
L194C  194C                          l194c:
  194C    23                    	inc	hl
  194D    23                    	inc	hl
  194E    7E                    	ld	a,(hl)		; Get pointer to buffer
FIB.BUFF  194F    C6 2E                 	add	a,FIB.buff-2
  1951    D5                    	push	de
  1952    5F                    	ld	e,a
  1953    16 00                 	ld	d,0
  1955    19                    	add	hl,de		; Get address of buffer
  1956    D1                    	pop	de
FIB.BUFF  1957    D6 2E                 	sub	FIB.buff-2	; Reset pointer
L199A  1959    CD 199A               	call	l199a		; Swap pointer
L195C  195C                          l195c:
  195C    ED A0                 	ldi			; Move bytes
L1966TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-103


  195E    E2 1966               	jp	po,l1966	; Test done
  1961    3C                    	inc	a		; Bump pointer
L195C  1962    F2 195C               	jp	p,l195c		; Test done
  1965    3D                    	dec	a
L1966  1966                          l1966:
  1966    3C                    	inc	a
L199A  1967    CD 199A               	call	l199a		; Swap back
L00E2  196A    2A 00E2               	ld	hl,(l00e2)	; Get FIB
  196D    23                    	inc	hl
  196E    23                    	inc	hl
NOMSB  196F    E6 7F                 	and	NOMSB		; Test remainder in buffer
  1971    77                    	ld	(hl),a
L198A  1972    20 16                 	jr	nz,l198a	; Yeap
  1974    C5                    	push	bc
  1975    D5                    	push	de
  1976    E5                    	push	hl
L19AE  1977    CD 19AE               	call	l19ae		; Write record
  197A    E1                    	pop	hl
  197B    D1                    	pop	de
  197C    C1                    	pop	bc
L1994  197D    20 15                 	jr	nz,l1994	; Error return
  197F    D5                    	push	de
FIB.FCB_RRN  1980    11 002B               	ld	de,FIB.FCB+_rrn-2
  1983    19                    	add	hl,de		; Point to record
  1984    D1                    	pop	de
  1985    34                    	inc	(hl)		; Advance it
L198A  1986    20 02                 	jr	nz,l198a
  1988    23                    	inc	hl
  1989    34                    	inc	(hl)
L198A  198A                          l198a:
  198A    78                    	ld	a,b		; Test all done
  198B    B1                    	or	c
L190D  198C    C2 190D               	jp	nz,l190d	; Nope
  198F    EB                    	ex	de,hl
  1990    C9                    	ret
L1991  1991                          l1991:
_ILLEOF  1991    3E 99                 	ld	a,_IllEOF
SKIP.2  1993    01                    	db	skip.2
L1994  1994                          l1994:
_WRERR  1994    3E F0                 	ld	a,_WrErr
L00D0  1996    32 00D0               	ld	(l00d0),a	; Set error
  1999    C9                    	ret
                                ;
                                ; Swap record pointers on request
                                ; ENTRY	Reg HL and DE hold pointer
                                ; EXIT	Register swapped on write selected
                                ;
L199A  199A                          l199a:
  199A    F5                    	push	af
L00E9  199B    3A 00E9               	ld	a,(l00e9)	; Get mode
REC.WR.BIT  199E    CB 47                 	bit	Rec.Wr.bit,a	; Test selection
L19A3  19A0    28 01                 	jr	z,l19a3
  19A2    EB                    	ex	de,hl		; Swap
L19A3  19A3                          l19a3:
  19A3    F1                    	pop	af
  19A4    C9                    	ret
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-104


                                ;
                                ; Force record write
                                ; Procedure FLUSH(type)
                                ; ENTRY	Reg HL holds FIB
                                ;
L19A5  19A5                          l19a5:
L00E2  19A5    22 00E2               	ld	(l00e2),hl	; Save FIB
L19AE  19A8    CD 19AE               	call	l19ae		; Write if possible
  19AB    C8                    	ret	z
L1994  19AC    18 E6                 	jr	l1994		; Set error
                                ;
                                ; Write random record if select, set read
                                ;
L19AE  19AE                          l19ae:
.RNDWR  19AE    0E 22                 	ld	c,.rndwr	; Set OS function
L00E2  19B0    2A 00E2               	ld	hl,(l00e2)	; Get FIB
RD.BIT  19B3    CB E6                 	set	rd.bit,(hl)	; Set read bit
WR.BIT  19B5    CB 6E                 	bit	wr.bit,(hl)	; Test write
  19B7    C8                    	ret	z		; Nope
WR.BIT  19B8    CB AE                 	res	wr.bit,(hl)	; Reset and write
                                ;
                                ; Execute file function
                                ; ENTRY	Reg C holds file function
                                ; EXIT	Zero flag reflects state of function
                                ;	Accu holds BDOS code
                                ;
L19BA  19BA                          l19ba:
L00E2  19BA    2A 00E2               	ld	hl,(l00e2)	; Load FIB
  19BD    E5                    	push	hl
  19BE    C5                    	push	bc
FIB.BUFF  19BF    11 0030               	ld	de,FIB.buff
  19C2    19                    	add	hl,de		; Point to buffer
  19C3    EB                    	ex	de,hl
.SETDMA  19C4    0E 1A                 	ld	c,.setdma
BDOS  19C6    CD 0005               	call	BDOS		; Set disk buffer
  19C9    C1                    	pop	bc
  19CA    E1                    	pop	hl
FIB.FCB  19CB    11 000C               	ld	de,FIB.FCB
  19CE    19                    	add	hl,de		; Point to FCB
  19CF    EB                    	ex	de,hl
BDOS  19D0    CD 0005               	call	BDOS		; Execute OS function
  19D3    B7                    	or	a		; Build result
  19D4    C9                    	ret
                                ;
                                ; Procedure SEEK(file,record)
                                ; ENTRY	Reg HL holds record seeked for
                                ;	FIB pushed onto stack
                                ;
L19D5  19D5                          l19d5:
  19D5    C1                    	pop	bc
  19D6    D1                    	pop	de
L00E2  19D7    ED 53 00E2            	ld	(l00e2),de	; Save FIB
  19DB    C5                    	push	bc
  19DC    E5                    	push	hl
L1A5A  19DD    CD 1A5A               	call	l1a5a		; Get FIB data
  19E0    D1                    	pop	de
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-105


  19E1    B7                    	or	a
  19E2    ED 52                 	sbc	hl,de		; Test record less size
L1A26  19E4    38 40                 	jr	c,l1a26		; Error if so
L00E2  19E6    2A 00E2               	ld	hl,(l00e2)	; Get FIB
FIB.RECLEN  19E9    01 0006               	ld	bc,FIB.reclen	; Point to length of record
  19EC    09                    	add	hl,bc
  19ED    4E                    	ld	c,(hl)		; Get record
  19EE    23                    	inc	hl
  19EF    46                    	ld	b,(hl)
  19F0    23                    	inc	hl
  19F1    73                    	ld	(hl),e		; Save record number
  19F2    23                    	inc	hl
  19F3    72                    	ld	(hl),d
L1A2C  19F4    CD 1A2C               	call	l1a2c		; Multiply it
FIXRECLEN  19F7    01 0004               	ld	bc,FixRecLen
  19FA    09                    	add	hl,bc		; Adjust for header
L19FE  19FB    30 01                 	jr	nc,l19fe
  19FD    13                    	inc	de
L19FE  19FE                          l19fe:
  19FE    7D                    	ld	a,l
NOMSB  19FF    E6 7F                 	and	NOMSB		; Get record pointer
  1A01    29                    	add	hl,hl		; * 2
  1A02    EB                    	ex	de,hl
  1A03    ED 6A                 	adc	hl,hl
  1A05    EB                    	ex	de,hl
  1A06    53                    	ld	d,e		; / 256
  1A07    5C                    	ld	e,h
L00E2  1A08    2A 00E2               	ld	hl,(l00e2)	; Get FIB
  1A0B    23                    	inc	hl
  1A0C    23                    	inc	hl
  1A0D    77                    	ld	(hl),a		; Store record pointer
FIB.FCB_RRN  1A0E    01 002B               	ld	bc,FIB.FCB+_rrn-2
  1A11    09                    	add	hl,bc		; Point to random record
  1A12    4E                    	ld	c,(hl)		; Get it
  1A13    23                    	inc	hl
  1A14    46                    	ld	b,(hl)
  1A15    EB                    	ex	de,hl
  1A16    B7                    	or	a
  1A17    ED 42                 	sbc	hl,bc		; Test record already set
  1A19    09                    	add	hl,bc
  1A1A    C8                    	ret	z		; Yeap
  1A1B    D5                    	push	de
  1A1C    E5                    	push	hl
L19AE  1A1D    CD 19AE               	call	l19ae		; Write record
  1A20    D1                    	pop	de
  1A21    E1                    	pop	hl
  1A22    72                    	ld	(hl),d		; Set current record
  1A23    2B                    	dec	hl
  1A24    73                    	ld	(hl),e
  1A25    C9                    	ret
L1A26  1A26                          l1a26:
_SEEKEOF  1A26    3E 91                 	ld	a,_SeekEOF
L00D0  1A28    32 00D0               	ld	(l00d0),a	; Set error
  1A2B    C9                    	ret
                                ;
                                ; Multiply record number by record length
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-106


                                ; ENTRY	Reg BC holds length of record
                                ;	Reg DE holds number of record
                                ; EXIT	Reg HL holds the product of both
                                ;
L1A2C  1A2C                          l1a2c:
  1A2C    D5                    	push	de		; Copy number
  1A2D    D9                    	exx
  1A2E    E1                    	pop	hl		; Get copy
  1A2F    D9                    	exx
  1A30    21 0000               	ld	hl,0		; Init result
  1A33    54                    	ld	d,h
  1A34    5D                    	ld	e,l
  1A35    3E 10                 	ld	a,16		; Set bit length
L1A37  1A37                          l1a37:
  1A37    29                    	add	hl,hl		; Shift result
  1A38    EB                    	ex	de,hl
  1A39    ED 6A                 	adc	hl,hl		; Treat as 32 bit number
  1A3B    EB                    	ex	de,hl
  1A3C    D9                    	exx
  1A3D    29                    	add	hl,hl		; Shift number
  1A3E    D9                    	exx
L1A45  1A3F    30 04                 	jr	nc,l1a45
  1A41    09                    	add	hl,bc		; Fix for carry
L1A45  1A42    30 01                 	jr	nc,l1a45
  1A44    13                    	inc	de
L1A45  1A45                          l1a45:
  1A45    3D                    	dec	a
L1A37  1A46    20 EF                 	jr	nz,l1a37	; Loop on
  1A48    C9                    	ret
                                ;
                                ; Function EOF(device):boolean (untyped)
                                ;
L1A49  1A49                          l1a49::
L1A5D  1A49    CD 1A5D               	call	l1a5d		; Get size of file
  1A4C    B7                    	or	a
  1A4D    ED 52                 	sbc	hl,de		; Test end
FALSE  1A4F    21 0000               	ld	hl,FALSE
  1A52    C0                    	ret	nz		; Return FALSE if not
  1A53    23                    	inc	hl		; Fix for TRUE
  1A54    C9                    	ret
                                ;
                                ; Get record position of file
                                ; Function FILEPOS(file):integer
                                ; ENTRY	Reg HL holds FIB
                                ; EXIT	Reg HL holds current record
                                ;
L1A55  1A55                          l1a55:
L1A5D  1A55    CD 1A5D               	call	l1a5d		; Get size of file
  1A58    EB                    	ex	de,hl		; Into integer result
  1A59    C9                    	ret
                                ;
                                ; Get record data of file
                                ; EXIT	Reg HL holds size of file
                                ;	Reg DE holds current record
                                ;	Reg BC holds record length
                                ;
L1A5ATURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-107


  1A5A                          l1a5a:
L00E2  1A5A    2A 00E2               	ld	hl,(l00e2)	; Load FIB
                                ;
                                ; Get size of file
                                ; Function FILESIZE(file):integer
                                ; ENTRY	Reg HL holds FIB
                                ; EXIT	Reg HL holds size of file in terms of records
                                ;	Reg DE holds current record
                                ;	Reg BC holds length of record
                                ;
L1A5D  1A5D                          l1a5d:
FIB.REC  1A5D    11 0004               	ld	de,FIB.rec
  1A60    19                    	add	hl,de		; Point to records
  1A61    5E                    	ld	e,(hl)		; Get number of records
  1A62    23                    	inc	hl
  1A63    56                    	ld	d,(hl)
  1A64    23                    	inc	hl
  1A65    D5                    	push	de
  1A66    4E                    	ld	c,(hl)		; Get record length
  1A67    23                    	inc	hl
  1A68    46                    	ld	b,(hl)
  1A69    23                    	inc	hl
  1A6A    5E                    	ld	e,(hl)		; Get current record
  1A6B    23                    	inc	hl
  1A6C    56                    	ld	d,(hl)
  1A6D    E1                    	pop	hl
  1A6E    C9                    	ret
                                ;
                                ; Prepare untyped files
                                ; Procedure REWRITE(un_typed_file)
                                ; ENTRY	Reg HL points to FIB
                                ;
L1A6F  1A6F                          l1a6f:
SKIP  1A6F    3E                    	db	skip
                                ;
                                ; Procedure RESET(un_typed_file)
                                ;
L1A70  1A70                          l1a70:
  1A70    AF                    	xor	a
L00E8  1A71    32 00E8               	ld	(l00e8),a	; Save mode (0=RESET)
L1AB0  1A74    CD 1AB0               	call	l1ab0		; Close open file
L00D0  1A77    3A 00D0               	ld	a,(l00d0)
  1A7A    B7                    	or	a		; Test error
  1A7B    C0                    	ret	nz		; Exit if so
L1430  1A7C    CD 1430               	call	l1430		; Fix FIB
L00D0  1A7F    3A 00D0               	ld	a,(l00d0)
  1A82    B7                    	or	a		; Test error
  1A83    C0                    	ret	nz		; Exit if so
L00E2  1A84    2A 00E2               	ld	hl,(l00e2)	; Get FIB
..IN..OUT  1A87    36 C0                 	ld	(hl),..in+..out	; Set flag
  1A89    E5                    	push	hl
FIB.FCB  1A8A    11 000C               	ld	de,FIB.FCB
  1A8D    19                    	add	hl,de		; Point to FCB
  1A8E    EB                    	ex	de,hl
.FILSIZ  1A8F    0E 23                 	ld	c,.filsiz
BDOS  1A91    CD 0005               	call	BDOS		; Get size of file
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-108


  1A94    E1                    	pop	hl
FIB.FCB_RRN  1A95    11 002D               	ld	de,FIB.FCB+_rrn
  1A98    19                    	add	hl,de		; Point to size
  1A99    AF                    	xor	a
  1A9A    4E                    	ld	c,(hl)		; Get size
  1A9B    77                    	ld	(hl),a		; Reset size
  1A9C    23                    	inc	hl
  1A9D    46                    	ld	b,(hl)
  1A9E    77                    	ld	(hl),a
FIB.RECFIB.FCB_RRN  1A9F    11 FFD6               	ld	de,FIB.rec-FIB.FCB-_rrn-1
  1AA2    19                    	add	hl,de		; Point to recird number
  1AA3    71                    	ld	(hl),c		; Set it
  1AA4    23                    	inc	hl
  1AA5    70                    	ld	(hl),b
  1AA6    23                    	inc	hl
RECLNG  1AA7    36 80                 	ld	(hl),RecLng	; Set standard record
  1AA9    23                    	inc	hl
  1AAA    77                    	ld	(hl),a
  1AAB    23                    	inc	hl
  1AAC    77                    	ld	(hl),a		; Init current record
  1AAD    23                    	inc	hl
  1AAE    77                    	ld	(hl),a
  1AAF    C9                    	ret
                                ;
                                ; Close untyped file
                                ; ENTRY	Reg HL holds FIB
                                ;
                                ; Procedure CLOSE(un_typed_file)
                                ;
L1AB0  1AB0                          l1ab0:
L00E2  1AB0    22 00E2               	ld	(l00e2),hl	; Save FIB
  1AB3    7E                    	ld	a,(hl)		; Get mode
..IN..OUT  1AB4    E6 C0                 	and	..in+..out	; Test access
  1AB6    C8                    	ret	z		; Nope
L1481  1AB7    C3 1481               	jp	l1481		; Close it
                                ;
                                ; Write block to untyped file
                                ; Procedure BLOCKWRITE(file,buffer,count)
                                ; ENTRY	Reg HL holds number of records to be written
                                ;	On stack FIB and buffer
                                ;
L1ABA  1ABA                          l1aba:
.RNDWR  1ABA    3E 22                 	ld	a,.rndwr	; Set function code
L1AC0  1ABC    18 02                 	jr	l1ac0
                                ;
                                ; Read block from untyped file
                                ; Procedure BLOCKREAD(file,buffer,count)
                                ; ENTRY	Reg HL holds number of records to be read
                                ;	On stack FIB and buffer
                                ;
L1ABE  1ABE                          l1abe:
.RNDRD  1ABE    3E 21                 	ld	a,.rndrd	; Set function code
L1AC0  1AC0                          l1ac0:
  1AC0    44                    	ld	b,h		; Copy count
  1AC1    4D                    	ld	c,l
L00F0  1AC2    21 00F0               	ld	hl,l00f0	; Point to scratch
L00E6TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-109


  1AC5    22 00E6               	ld	(l00e6),hl	; Set for record
  1AC8    DD E1                 	pop	ix
  1ACA    D1                    	pop	de		; Get buffer
  1ACB    E1                    	pop	hl		; Get FIB
  1ACC    DD E5                 	push	ix
  1ACE    C5                    	push	bc
L1AFD  1ACF    CD 1AFD               	call	l1afd		; Execute block I/O
  1AD2    C1                    	pop	bc
L00D0  1AD3    3A 00D0               	ld	a,(l00d0)
  1AD6    B7                    	or	a		; Test error
  1AD7    C0                    	ret	nz		; Exit if so
L00F0  1AD8    2A 00F0               	ld	hl,(l00f0)
  1ADB    ED 42                 	sbc	hl,bc		; Test all records processed
  1ADD    C8                    	ret	z		; Yeap
L00E9  1ADE    3A 00E9               	ld	a,(l00e9)	; Get file function
.RNDRD  1AE1    FE 21                 	cp	.rndrd		; Test read
_ILLEOF  1AE3    3E 99                 	ld	a,_IllEOF
L1AE9  1AE5    28 02                 	jr	z,l1ae9
_WRERR  1AE7    3E F0                 	ld	a,_WrErr
L1AE9  1AE9                          l1ae9:
L00D0  1AE9    32 00D0               	ld	(l00d0),a	; Set error code accordingly
  1AEC    C9                    	ret
                                ;
                                ; Write block to untyped file
                                ; Procedure BLOCKWRITE(file,buffer,count,result)
                                ; ENTRY	Reg HL points to result
                                ;	On stack FIB, buffer and number of records
                                ;
L1AED  1AED                          l1aed:
.RNDWR  1AED    3E 22                 	ld	a,.rndwr	; Set function
L1AF3  1AEF    18 02                 	jr	l1af3
                                ;
                                ; Rad block from untyped file
                                ; Procedure BLOCKREAD(file,buffer,count,result)
                                ; ENTRY	Reg HL points to result
                                ;	On stack FIB, buffer and number of records
                                ;
L1AF1  1AF1                          l1af1:
.RNDRD  1AF1    3E 21                 	ld	a,.rndrd	; Set function
L1AF3  1AF3                          l1af3:
L00E6  1AF3    22 00E6               	ld	(l00e6),hl	; Save result pointer
  1AF6    DD E1                 	pop	ix
  1AF8    C1                    	pop	bc		; Get count
  1AF9    D1                    	pop	de		; Get buffer
  1AFA    E1                    	pop	hl		; Get FIB
  1AFB    DD E5                 	push	ix
                                ;
                                ; Perform block IO
                                ; ENTRY	Accu holds file function
                                ;	Reg HL holds FIB
                                ;	Reg DE holds buffer
                                ;
L1AFD  1AFD                          l1afd:
L00E9  1AFD    32 00E9               	ld	(l00e9),a	; Save function
L00E2  1B00    22 00E2               	ld	(l00e2),hl	; Save FIB
  1B03    7E                    	ld	a,(hl)		; Get mode
..IN..OUTTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-110


  1B04    E6 C0                 	and	..in+..out	; Test IO allowed
L18B0  1B06    CA 18B0               	jp	z,l18b0		; Nope
L00E6  1B09    2A 00E6               	ld	hl,(l00e6)	; Get record address
  1B0C    AF                    	xor	a
  1B0D    77                    	ld	(hl),a		; Clear record
  1B0E    23                    	inc	hl
  1B0F    77                    	ld	(hl),a
L1B10  1B10                          l1b10:
  1B10    78                    	ld	a,b
  1B11    B1                    	or	c		; Test all done
L1B4D  1B12    28 39                 	jr	z,l1b4d		; Yeap
  1B14    C5                    	push	bc
  1B15    D5                    	push	de
.SETDMA  1B16    0E 1A                 	ld	c,.setdma
BDOS  1B18    CD 0005               	call	BDOS		; Set disk buffer
L00E2  1B1B    2A 00E2               	ld	hl,(l00e2)	; Get back FIB
FIB.FCB  1B1E    11 000C               	ld	de,FIB.FCB
  1B21    19                    	add	hl,de		; Point to FCB
  1B22    EB                    	ex	de,hl
L00E9  1B23    3A 00E9               	ld	a,(l00e9)	; Get file function
  1B26    4F                    	ld	c,a
BDOS  1B27    CD 0005               	call	BDOS		; Execute I/O
  1B2A    D1                    	pop	de
  1B2B    C1                    	pop	bc
  1B2C    B7                    	or	a		; Test result
L1B4D  1B2D    20 1E                 	jr	nz,l1b4d	; Not good
  1B2F    D5                    	push	de
L00E2  1B30    2A 00E2               	ld	hl,(l00e2)	; Get FIB again
FIB.FCB_RRN  1B33    11 002D               	ld	de,FIB.FCB+_rrn
  1B36    19                    	add	hl,de		; Point to record
  1B37    34                    	inc	(hl)		; Advance record
L1B3C  1B38    20 02                 	jr	nz,l1b3c
  1B3A    23                    	inc	hl
  1B3B    34                    	inc	(hl)
L1B3C  1B3C                          l1b3c:
  1B3C    D1                    	pop	de
RECLNG  1B3D    21 0080               	ld	hl,RecLng
  1B40    19                    	add	hl,de		; Advance buffer
  1B41    EB                    	ex	de,hl
L00E6  1B42    2A 00E6               	ld	hl,(l00e6)
  1B45    34                    	inc	(hl)		; Advance record count
L1B4A  1B46    20 02                 	jr	nz,l1b4a
  1B48    23                    	inc	hl
  1B49    34                    	inc	(hl)
L1B4A  1B4A                          l1b4a:
  1B4A    0B                    	dec	bc		; Count down requested length
L1B10  1B4B    18 C3                 	jr	l1b10
L1B4D  1B4D                          l1b4d:
L00E2  1B4D    2A 00E2               	ld	hl,(l00e2)	; Get FIB
FIB.FCB_RRN  1B50    11 002D               	ld	de,FIB.FCB+_rrn
  1B53    19                    	add	hl,de		; Point to last record
  1B54    4E                    	ld	c,(hl)
  1B55    23                    	inc	hl
  1B56    46                    	ld	b,(hl)
FIB.CURFIB.FCB_RRN  1B57    11 FFDA               	ld	de,FIB.cur-FIB.FCB-_rrn-1
  1B5A    19                    	add	hl,de		; Point to FIB record
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-111


  1B5B    71                    	ld	(hl),c		; Save record number
  1B5C    23                    	inc	hl
  1B5D    70                    	ld	(hl),b
FIB.REC  1B5E    11 FFFC               	ld	de,-FIB.rec
  1B61    19                    	add	hl,de		; Point to record
  1B62    56                    	ld	d,(hl)
  1B63    2B                    	dec	hl
  1B64    5E                    	ld	e,(hl)
  1B65    EB                    	ex	de,hl
  1B66    B7                    	or	a
  1B67    ED 42                 	sbc	hl,bc		; Test against last record
  1B69    D0                    	ret	nc
  1B6A    EB                    	ex	de,hl
  1B6B    71                    	ld	(hl),c		; Save new max record
  1B6C    23                    	inc	hl
  1B6D    70                    	ld	(hl),b
  1B6E    C9                    	ret
                                ;
                                ; Procedure SEEK(file,record)
                                ; ENTRY	Reg HL holds record seeked for
                                ;	FIB pushed onto stack
                                ;
L1B6F  1B6F                          l1b6f:
  1B6F    C1                    	pop	bc
  1B70    D1                    	pop	de
L00E2  1B71    ED 53 00E2            	ld	(l00e2),de	; Save FIB
  1B75    C5                    	push	bc
  1B76    E5                    	push	hl
L1A5A  1B77    CD 1A5A               	call	l1a5a		; Get record data
  1B7A    D1                    	pop	de
  1B7B    B7                    	or	a
  1B7C    ED 52                 	sbc	hl,de		; Test position
L1A26  1B7E    DA 1A26               	jp	c,l1a26		; Error if overflow
L00E2  1B81    2A 00E2               	ld	hl,(l00e2)	; Get FIB
FIB.CUR  1B84    01 0008               	ld	bc,FIB.cur
  1B87    09                    	add	hl,bc
  1B88    73                    	ld	(hl),e		; Save new position
  1B89    23                    	inc	hl
  1B8A    72                    	ld	(hl),d
FIB.FCB_RRNFIB.CUR  1B8B    01 0024               	ld	bc,FIB.FCB+_rrn-FIB.cur-1
  1B8E    09                    	add	hl,bc
  1B8F    73                    	ld	(hl),e		; Save in FCB, too
  1B90    23                    	inc	hl
  1B91    72                    	ld	(hl),d
  1B92    C9                    	ret
                                ;
                                ; Delete file
                                ; Procedure ERASE(file)
                                ; ENTRY	Reg HL holds FIB
                                ;
L1B93  1B93                          l1b93:
L1C4C  1B93    CD 1C4C               	call	l1c4c		; Check legal FIB
  1B96    C0                    	ret	nz		; Nope
FIB.FCB  1B97    11 000C               	ld	de,FIB.FCB
  1B9A    19                    	add	hl,de		; Point to FCB
  1B9B    EB                    	ex	de,hl
.DELETETURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-112


  1B9C    0E 13                 	ld	c,.delete
BDOS  1B9E    CD 0005               	call	BDOS		; Delete file
  1BA1    3C                    	inc	a
  1BA2    C0                    	ret	nz
L1BE4  1BA3    18 3F                 	jr	l1be4		; Set error if unknown
                                ;
                                ; Rename file
                                ; Procedure RENAME(file,newname)
                                ; ENTRY	FIB and name on stack
                                ;
L1BA5  1BA5                          l1ba5:
  1BA5    FD E1                 	pop	iy
L00D2  1BA7    2A 00D2               	ld	hl,(l00d2)	; Get top of memory for buffer
  1BAA    06 10                 	ld	b,16		; Set max
L05E2  1BAC    CD 05E2               	call	l05e2		; Assign string from stack
  1BAF    AF                    	xor	a
  1BB0    12                    	ld	(de),a
  1BB1    E1                    	pop	hl		; Load FIB
  1BB2    FD E5                 	push	iy
L1C4C  1BB4    CD 1C4C               	call	l1c4c		; Check legal FIB
  1BB7    C0                    	ret	nz		; Nope
  1BB8    E5                    	push	hl
L03F2  1BB9    CD 03F2               	call	l03f2		; Parse file
  1BBC    E1                    	pop	hl
  1BBD    E5                    	push	hl
FIB.FCBDIRLEN  1BBE    11 001C               	ld	de,FIB.FCB+DIRlen
  1BC1    19                    	add	hl,de		; Point to 2nd FCB
  1BC2    EB                    	ex	de,hl
L005C  1BC3    21 005C               	ld	hl,l005c
FDRVFNAMEFEXT  1BC6    01 000C               	ld	bc,Fdrv+Fname+Fext
  1BC9    ED B0                 	ldir			; Move new name
  1BCB    E1                    	pop	hl
FIB.FCB  1BCC    11 000C               	ld	de,FIB.FCB
  1BCF    19                    	add	hl,de		; Point to FCB
  1BD0    E5                    	push	hl
  1BD1    EB                    	ex	de,hl
.RENAME  1BD2    0E 17                 	ld	c,.rename
BDOS  1BD4    CD 0005               	call	BDOS		; Rename
  1BD7    D1                    	pop	de
  1BD8    3C                    	inc	a		; Test success
L1BE4  1BD9    28 09                 	jr	z,l1be4		; Nope
L005C  1BDB    21 005C               	ld	hl,l005c
FCBLEN  1BDE    01 0024               	ld	bc,FCBlen
  1BE1    ED B0                 	ldir			; Unpack new file
  1BE3    C9                    	ret
L1BE4  1BE4                          l1be4:
_NOFILE  1BE4    3E 01                 	ld	a,_NoFile	; Set error
L1BE6  1BE6                          l1be6:
L00D0  1BE6    32 00D0               	ld	(l00d0),a
  1BE9    C9                    	ret
                                ;
                                ; Perform executing new programs
                                ; Procedure EXECUTE(File)
                                ; ENTRY	Reg HL points to FIB
                                ;
L1BEA  1BEA                          l1bea:
SKIPTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-113


  1BEA    3E                    	db	skip
                                ;
                                ; Procedure CHAIN(File)
                                ;
L1BEB  1BEB                          l1beb:
  1BEB    AF                    	xor	a
L00E8  1BEC    32 00E8               	ld	(l00e8),a	; Set mode (0=CHAIN)
L1C4C  1BEF    CD 1C4C               	call	l1c4c		; Test device ok
  1BF2    C0                    	ret	nz		; Nope
L00D8  1BF3    3A 00D8               	ld	a,(l00d8)	; Test run mode
  1BF6    B7                    	or	a
_DIRERR  1BF7    3E 21                 	ld	a,_DirErr
L1BE6  1BF9    28 EB                 	jr	z,l1be6		; Must *NOT* be direct mode
L00E2  1BFB    2A 00E2               	ld	hl,(l00e2)	; Get FIB
FIB.FCB  1BFE    11 000C               	ld	de,FIB.FCB
  1C01    19                    	add	hl,de		; Point to FCB
L005C  1C02    11 005C               	ld	de,l005c
FCBLEN  1C05    01 0024               	ld	bc,FCBlen
  1C08    ED B0                 	ldir			; Move to standard FCB
L005C  1C0A    11 005C               	ld	de,l005c
.OPEN  1C0D    0E 0F                 	ld	c,.open
BDOS  1C0F    CD 0005               	call	BDOS		; Open file
  1C12    3C                    	inc	a
L1BE4  1C13    28 CF                 	jr	z,l1be4		; File not found
L1C33  1C15    21 1C33               	ld	hl,l1c33	; Point to loader
L00B0  1C18    11 00B0               	ld	de,l00b0
L0019  1C1B    01 0019               	ld	bc,l0019
  1C1E    ED B0                 	ldir			; Move loader to temporary location
TPA  1C20    11 0100               	ld	de,TPA		; Init loader address
L00E8  1C23    3A 00E8               	ld	a,(l00e8)	; Test mode
  1C26    B7                    	or	a
L1C2D  1C27    20 04                 	jr	nz,l1c2d
TPA  1C29    ED 5B 0101            	ld	de,(TPA+1)	; Change address for CHAIN
L1C2D  1C2D                          l1c2d:
TPA  1C2D    31 0100               	ld	sp,TPA		; Get local stack
L00B0  1C30    C3 00B0               	jp	l00b0		; Go load
                                ;
                                ; ############### Start of loader ###############
                                ;
                                ; Loader will be moved into 00B0H temporary loaction
                                ;
L1C33  1C33                          l1c33:
L00B0                                	.phase	l00b0
.L1C33  00B0                          .l1c33:
  00B0    D5                    	push	de
.SETDMA  00B1    0E 1A                 	ld	c,.setdma
BDOS  00B3    CD 0005               	call	BDOS		; Set disk buffer
L005C  00B6    11 005C               	ld	de,l005c
.RDSEQ  00B9    0E 14                 	ld	c,.rdseq
BDOS  00BB    CD 0005               	call	BDOS		; Read a code record
  00BE    D1                    	pop	de
RECLNG  00BF    21 0080               	ld	hl,RecLng
  00C2    19                    	add	hl,de		; Bump address
  00C3    EB                    	ex	de,hl
  00C4    B7                    	or	a		; Test more
.L1C33  00C5    28 E9                 	jr	z,.l1c33
TPATURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-114


  00C7    18 37                 	jr	TPA		; Start after loading
L0019.L1C33  0019                          l0019	equ	$-.l1c33
                                	.dephase
                                ;
                                ; ################ End of loader ################
                                ;
                                ; Check legal device for file operation
                                ; ENTRY	Reg HL points to FIB
                                ; EXIT	Zero flag set if legal device
                                ;	If illegal, IOerror 20H will be set
                                ;
L1C4C  1C4C                          l1c4c:
L00E2  1C4C    22 00E2               	ld	(l00e2),hl	; Save FIB
  1C4F    7E                    	ld	a,(hl)		; Get flag
FIBTYPE  1C50    E6 0F                 	and	FIBtype		; Mask it
  1C52    C8                    	ret	z		; 0000 menas file
_ILLIO  1C53    3E 20                 	ld	a,_IllIO
L00D0  1C55    32 00D0               	ld	(l00d0),a	; Set error
  1C58    C9                    	ret
                                ;
                                ; Load overlay file
                                ; ENTRY	Reg HL holds record procedure starts with
                                ;	Reg DE holds number of records to be read
                                ;
                                ; Overlay call follows:
                                ;	    2 Bytes hold last sector read
                                ;	   11 Bytes NAME.EXT of file
                                ;	n*128 Bytes record(s)
                                ;
L1C59  1C59                          l1c59:
L00E6  1C59    22 00E6               	ld	(l00e6),hl	; Save record
L00E8  1C5C    ED 53 00E8            	ld	(l00e8),de	; Save record count
  1C60    EB                    	ex	de,hl
  1C61    E1                    	pop	hl
L00E2  1C62    22 00E2               	ld	(l00e2),hl	; Save caller
  1C65    4E                    	ld	c,(hl)		; Fetch last sector
  1C66    73                    	ld	(hl),e		; Set new one
  1C67    23                    	inc	hl
  1C68    46                    	ld	b,(hl)
  1C69    72                    	ld	(hl),d
  1C6A    EB                    	ex	de,hl		; Compare bew:old
  1C6B    B7                    	or	a
  1C6C    ED 42                 	sbc	hl,bc
L1CCA  1C6E    28 5A                 	jr	z,l1cca		; Overlay already in memory
  1C70    EB                    	ex	de,hl
  1C71    23                    	inc	hl
L005C  1C72    11 005C               	ld	de,l005c
L00DC  1C75    3A 00DC               	ld	a,(l00dc)	; Get overlay drive
  1C78    12                    	ld	(de),a		; Store into standard FCB
  1C79    13                    	inc	de
FNAMEFEXT  1C7A    01 000B               	ld	bc,Fname+Fext
  1C7D    ED B0                 	ldir			; Move name to standard FCB
FCBLEN_EX  1C7F    06 18                 	ld	b,FCBlen-_ex
  1C81    AF                    	xor	a
L1C82  1C82                          l1c82:
  1C82    12                    	ld	(de),a		; Clear remainder of FCB
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-115


  1C83    13                    	inc	de
L1C82  1C84    10 FC                 	djnz	l1c82
  1C86    E5                    	push	hl		; Save address of buffer
L005C  1C87    11 005C               	ld	de,l005c
.OPEN  1C8A    0E 0F                 	ld	c,.open
BDOS  1C8C    CD 0005               	call	BDOS		; Open file
  1C8F    D1                    	pop	de		; Get back buffer address
  1C90    3C                    	inc	a		; Test success
L1CD2  1C91    28 3F                 	jr	z,l1cd2		; Nope
L00E6  1C93    2A 00E6               	ld	hl,(l00e6)	; Get start record
L005C_RRN  1C96    22 007D               	ld	(l005c+_rrn),hl	; Set for random record
L00E8  1C99    ED 4B 00E8            	ld	bc,(l00e8)	; Get record count
L1C9D  1C9D                          l1c9d:
  1C9D    C5                    	push	bc
  1C9E    D5                    	push	de
.SETDMA  1C9F    0E 1A                 	ld	c,.setdma
BDOS  1CA1    CD 0005               	call	BDOS		; Set disk buffer
L005C  1CA4    11 005C               	ld	de,l005c
.RNDRD  1CA7    0E 21                 	ld	c,.rndrd
BDOS  1CA9    CD 0005               	call	BDOS		; Read from file
  1CAC    D1                    	pop	de
  1CAD    C1                    	pop	bc
  1CAE    B7                    	or	a		; Verify no error
L1CD2  1CAF    20 21                 	jr	nz,l1cd2	; Error
L005C_RRN  1CB1    2A 007D               	ld	hl,(l005c+_rrn)
  1CB4    23                    	inc	hl		; Bump record
L005C_RRN  1CB5    22 007D               	ld	(l005c+_rrn),hl
RECLNG  1CB8    21 0080               	ld	hl,RecLng
  1CBB    19                    	add	hl,de		; Get next address
  1CBC    EB                    	ex	de,hl
  1CBD    0B                    	dec	bc
  1CBE    78                    	ld	a,b		; Test done
  1CBF    B1                    	or	c
L1C9D  1CC0    20 DB                 	jr	nz,l1c9d	; Nope
L005C  1CC2    11 005C               	ld	de,l005c
.CLOSE  1CC5    0E 10                 	ld	c,.close
BDOS  1CC7    CD 0005               	call	BDOS		; Close file
L1CCA  1CCA                          l1cca:
L00E2  1CCA    2A 00E2               	ld	hl,(l00e2)	; Get caller
FNAMEFEXT  1CCD    11 000D               	ld	de,2+Fname+Fext
  1CD0    19                    	add	hl,de		; Skip header
  1CD1    E9                    	jp	(hl)		; Enter overlay
L1CD2  1CD2                          l1cd2:
L00E2  1CD2    DD 2A 00E2            	ld	ix,(l00e2)	; Get caller's PC
_OVLERR  1CD6    3E F0                 	ld	a,_OVLerr
L2029  1CD8    C3 2029               	jp	l2029		; Abort
                                ;
                                ; Procedure OVRDRIVE(drive)
                                ; ENTRY	Reg HL holds drive (1=A, 2=B, etc)
                                ;
L1CDB  1CDB                          l1cdb:
L04C8  1CDB    CD 04C8               	call	l04c8		; Get byte from integer
  1CDE    FE 11                 	cp	'P'-'@'+1	; Test max
  1CE0    D0                    	ret	nc		; Exit on range error
L00DC  1CE1    32 00DC               	ld	(l00dc),a	; Set overlay drive
  1CE4    C9                    	ret
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-116


                                ;
                                ; Procedure NEW(pointer)
                                ; Procedure GETMEM(pointer,space)
                                ; ENTRY	Reg HL holds space required
                                ;	Variable pointer on stack
                                ;
L1CE5  1CE5                          l1ce5:
L00F0  1CE5    22 00F0               	ld	(l00f0),hl	; Save space required
  1CE8    EB                    	ex	de,hl
  1CE9    E1                    	pop	hl
  1CEA    E3                    	ex	(sp),hl
L00F2  1CEB    22 00F2               	ld	(l00f2),hl	; Save address of variable
  1CEE    13                    	inc	de
  1CEF    13                    	inc	de
  1CF0    13                    	inc	de
  1CF1    7B                    	ld	a,e
HEAPLEN  1CF2    E6 FC                 	and	-HeapLen	; Get modulo 4
  1CF4    5F                    	ld	e,a
L00DE  1CF5    21 00DE               	ld	hl,l00de
L00F8  1CF8    22 00F8               	ld	(l00f8),hl	; Init pointer
L00DE  1CFB    DD 2A 00DE            	ld	ix,(l00de)	; Get pointer to 1st free address
L1CFF  1CFF                          l1cff:
HEAPLOLEN  1CFF    DD 6E 02              	ld	l,(ix+HeapLOlen)
HEAPHILEN  1D02    DD 66 03              	ld	h,(ix+HeapHIlen)
  1D05    7D                    	ld	a,l		; Test assignment
  1D06    B4                    	or	h
L1D51  1D07    28 48                 	jr	z,l1d51		; Maybe free
  1D09    ED 52                 	sbc	hl,de		; Test gap
L1D1C  1D0B    30 0F                 	jr	nc,l1d1c
HEAPLOADR  1D0D    DD 6E 00              	ld	l,(ix+HeapLOadr); Get next address
HEAPHIADR  1D10    DD 66 01              	ld	h,(ix+HeapHIadr)
  1D13    E5                    	push	hl
L00F8  1D14    DD 22 00F8            	ld	(l00f8),ix	; Save last address
  1D18    DD E1                 	pop	ix		; Copy chain
L1CFF  1D1A    18 E3                 	jr	l1cff
L1D1C  1D1C                          l1d1c:
L1D28  1D1C    20 0A                 	jr	nz,l1d28	; Not same gap length
HEAPLOADR  1D1E    DD 5E 00              	ld	e,(ix+HeapLOadr); Get address if so
HEAPHIADR  1D21    DD 56 01              	ld	d,(ix+HeapHIadr)
  1D24    DD E5                 	push	ix
L1D43  1D26    18 1B                 	jr	l1d43		; Save state
L1D28  1D28                          l1d28:
  1D28    4D                    	ld	c,l		; Copy length
  1D29    44                    	ld	b,h
HEAPLOADR  1D2A    DD 6E 00              	ld	l,(ix+HeapLOadr); Get address
HEAPHIADR  1D2D    DD 66 01              	ld	h,(ix+HeapHIadr)
L1D30  1D30                          l1d30:
  1D30    DD E5                 	push	ix		; Save pointer
  1D32    DD 19                 	add	ix,de		; Advance
HEAPLOADR  1D34    DD 75 00              	ld	(ix+HeapLOadr),l; Set start values
HEAPHIADR  1D37    DD 74 01              	ld	(ix+HeapHIadr),h
HEAPLOLEN  1D3A    DD 71 02              	ld	(ix+HeapLOlen),c
HEAPHILEN  1D3D    DD 70 03              	ld	(ix+HeapHIlen),b
  1D40    DD E5                 	push	ix
  1D42    D1                    	pop	de		; Copy pointer
L1D43  1D43                          l1d43:
L00F8TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-117


  1D43    2A 00F8               	ld	hl,(l00f8)	; Get pointer
  1D46    73                    	ld	(hl),e		; Set new link
  1D47    23                    	inc	hl
  1D48    72                    	ld	(hl),d
  1D49    D1                    	pop	de
L00F2  1D4A    2A 00F2               	ld	hl,(l00f2)
  1D4D    73                    	ld	(hl),e		; Set into vriable
  1D4E    23                    	inc	hl
  1D4F    72                    	ld	(hl),d
  1D50    C9                    	ret
L1D51  1D51                          l1d51:
  1D51    DD E5                 	push	ix
  1D53    E1                    	pop	hl
  1D54    19                    	add	hl,de
L00C4  1D55    22 00C4               	ld	(l00c4),hl	; Set new heap pointer
L00F0  1D58    2A 00F0               	ld	hl,(l00f0)	; Get space
HEAPLEN  1D5B    01 0004               	ld	bc,HeapLen
  1D5E    09                    	add	hl,bc		; Get complete length
  1D5F    DD E5                 	push	ix
  1D61    C1                    	pop	bc
  1D62    09                    	add	hl,bc
L1D75  1D63    DA 1D75               	jp	c,l1d75		; Error if overlapping
L00C6  1D66    ED 4B 00C6            	ld	bc,(l00c6)	; Get recursion pointer
  1D6A    ED 42                 	sbc	hl,bc		; Test against it
  1D6C    01 0000               	ld	bc,0
  1D6F    21 0000               	ld	hl,0
L1D30  1D72    DA 1D30               	jp	c,l1d30
                                ;
                                ; Heap error
                                ;
L1D75  1D75                          l1d75:
_HEAPERR  1D75    3E FF                 	ld	a,_HeapErr
L2027  1D77    C3 2027               	jp	l2027		; Set error
                                ;
                                ; Procedure DISPOSE(pointer)
                                ; Procedure FREEMEM(pointer,space)
                                ; ENTRY	Reg HL holds space
                                ;	Variable pointer on stack
                                ;
L1D7A  1D7A                          l1d7a:
  1D7A    EB                    	ex	de,hl		; Save space
  1D7B    E1                    	pop	hl
  1D7C    E3                    	ex	(sp),hl		; Get variable pointer
  1D7D    7E                    	ld	a,(hl)		; Get dynamic pointer
  1D7E    23                    	inc	hl
  1D7F    66                    	ld	h,(hl)
  1D80    6F                    	ld	l,a
  1D81    13                    	inc	de		; Fix space
  1D82    13                    	inc	de
  1D83    13                    	inc	de
  1D84    7B                    	ld	a,e
HEAPLEN  1D85    E6 FC                 	and	-HeapLen	; Get modulo 4
  1D87    5F                    	ld	e,a
  1D88    EB                    	ex	de,hl
L00F0  1D89    22 00F0               	ld	(l00f0),hl	; Save length
L00DE  1D8C    2A 00DE               	ld	hl,(l00de)	; Load pointer to free heap
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-118


  1D8F    E5                    	push	hl
  1D90    DD E1                 	pop	ix
  1D92    B7                    	or	a
  1D93    ED 52                 	sbc	hl,de		; Check pointer addresses
L1DE9  1D95    30 52                 	jr	nc,l1de9
L1D97  1D97                          l1d97:
HEAPLOADR  1D97    DD 6E 00              	ld	l,(ix+HeapLOadr); Get address
HEAPHIADR  1D9A    DD 66 01              	ld	h,(ix+HeapHIadr)
  1D9D    E5                    	push	hl
  1D9E    B7                    	or	a
  1D9F    ED 52                 	sbc	hl,de		; Compare
L1DA7  1DA1    30 04                 	jr	nc,l1da7
  1DA3    DD E1                 	pop	ix
L1D97  1DA5    18 F0                 	jr	l1d97
L1DA7  1DA7                          l1da7:
  1DA7    E1                    	pop	hl
  1DA8    D5                    	push	de
  1DA9    FD E1                 	pop	iy
L00F0  1DAB    ED 4B 00F0            	ld	bc,(l00f0)	; Get length
HEAPLOLEN  1DAF    FD 71 02              	ld	(iy+HeapLOlen),c; Store it
HEAPHILEN  1DB2    FD 70 03              	ld	(iy+HeapHIlen),b
HEAPLOADR  1DB5    FD 75 00              	ld	(iy+HeapLOadr),l; Store address, too
HEAPHIADR  1DB8    FD 74 01              	ld	(iy+HeapHIadr),h
HEAPLOADR  1DBB    DD 73 00              	ld	(ix+HeapLOadr),e
HEAPHIADR  1DBE    DD 72 01              	ld	(ix+HeapHIadr),d
  1DC1    DD E5                 	push	ix
  1DC3    E1                    	pop	hl
HEAPLOLEN  1DC4    DD 4E 02              	ld	c,(ix+HeapLOlen); Get old length
HEAPHILEN  1DC7    DD 46 03              	ld	b,(ix+HeapHIlen)
L1E04  1DCA    CD 1E04               	call	l1e04		; Compare
L1DD8  1DCD    28 09                 	jr	z,l1dd8		; Match
HEAPLOADR  1DCF    DD 5E 00              	ld	e,(ix+HeapLOadr); Get address
HEAPHIADR  1DD2    DD 56 01              	ld	d,(ix+HeapHIadr)
  1DD5    D5                    	push	de
  1DD6    DD E1                 	pop	ix
L1DD8  1DD8                          l1dd8:
  1DD8    DD E5                 	push	ix
  1DDA    E1                    	pop	hl
HEAPLOLEN  1DDB    DD 4E 02              	ld	c,(ix+HeapLOlen)
HEAPHILEN  1DDE    DD 46 03              	ld	b,(ix+HeapHIlen)
HEAPLOADR  1DE1    DD 5E 00              	ld	e,(ix+HeapLOadr)
HEAPHIADR  1DE4    DD 56 01              	ld	d,(ix+HeapHIadr)
L1E04  1DE7    18 1B                 	jr	l1e04
L1DE9  1DE9                          l1de9:
L00DE  1DE9    2A 00DE               	ld	hl,(l00de)	; Get pointer to free heap
L00DE  1DEC    ED 53 00DE            	ld	(l00de),de	; Set new address
  1DF0    D5                    	push	de
  1DF1    DD E1                 	pop	ix
HEAPLOADR  1DF3    DD 75 00              	ld	(ix+HeapLOadr),l; Set chain
HEAPHIADR  1DF6    DD 74 01              	ld	(ix+HeapHIadr),h
L00F0  1DF9    ED 4B 00F0            	ld	bc,(l00f0)	; Get length
HEAPLOLEN  1DFD    DD 71 02              	ld	(ix+HeapLOlen),c
HEAPHILEN  1E00    DD 70 03              	ld	(ix+HeapHIlen),b
  1E03    EB                    	ex	de,hl
L1E04  1E04                          l1e04:
  1E04    09                    	add	hl,bc		; Bump next
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-119


  1E05    B7                    	or	a
  1E06    ED 52                 	sbc	hl,de		; Test same
  1E08    C0                    	ret	nz
  1E09    D5                    	push	de
  1E0A    FD E1                 	pop	iy		; Copy pointer
L00C4  1E0C    2A 00C4               	ld	hl,(l00c4)	; Get heap pointer
  1E0F    B7                    	or	a
  1E10    ED 52                 	sbc	hl,de		; Test top found
L1E2F  1E12    28 1B                 	jr	z,l1e2f
HEAPLOADR  1E14    FD 7E 00              	ld	a,(iy+HeapLOadr); Unpack address
HEAPLOADR  1E17    DD 77 00              	ld	(ix+HeapLOadr),a
HEAPHIADR  1E1A    FD 7E 01              	ld	a,(iy+HeapHIadr)
HEAPHIADR  1E1D    DD 77 01              	ld	(ix+HeapHIadr),a
HEAPLOLEN  1E20    FD 6E 02              	ld	l,(iy+HeapLOlen)
HEAPHILEN  1E23    FD 66 03              	ld	h,(iy+HeapHIlen)
  1E26    09                    	add	hl,bc
HEAPLOLEN  1E27    DD 75 02              	ld	(ix+HeapLOlen),l; Unpack new length
HEAPHILEN  1E2A    DD 74 03              	ld	(ix+HeapHIlen),h
  1E2D    AF                    	xor	a
  1E2E    C9                    	ret
L1E2F  1E2F                          l1e2f:
  1E2F    DD E5                 	push	ix
  1E31    E1                    	pop	hl
L00C4  1E32    22 00C4               	ld	(l00c4),hl	; Set new top heap pointer
HEAPLEN  1E35    06 04                 	ld	b,HeapLen
L1E37  1E37                          l1e37:
  1E37    36 00                 	ld	(hl),0		; Clear top
  1E39    23                    	inc	hl
L1E37  1E3A    10 FB                 	djnz	l1e37
  1E3C    C9                    	ret
                                ;
                                ; Get free memory
                                ; Function MEMAVAIL:integer
                                ; EXIT	Reg HL holds free memory in bytes
                                ;
L1E3D  1E3D                          l1e3d:
L1E4B  1E3D    CD 1E4B               	call	l1e4b		; Get memory
L00F4  1E40    2A 00F4               	ld	hl,(l00f4)	; Get available memory
  1E43    C9                    	ret
                                ;
                                ; Get max free memory
                                ; Function MAXAVAIL:integer
                                ; EXIT	Reg HL holds free memory in bytes
                                ;
L1E44  1E44                          l1e44:
L1E4B  1E44    CD 1E4B               	call	l1e4b		; Get memory
L00F6  1E47    2A 00F6               	ld	hl,(l00f6)	; Get max memory
  1E4A    C9                    	ret
                                ;
                                ; Get free memory
                                ;
L1E4B  1E4B                          l1e4b:
  1E4B    21 0000               	ld	hl,0
L00F4  1E4E    22 00F4               	ld	(l00f4),hl	; Init available memory
L00F6  1E51    22 00F6               	ld	(l00f6),hl
L00DE  1E54    DD 2A 00DE            	ld	ix,(l00de)	; Get pointer to free heap
L1E58TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-120


  1E58                          l1e58:
HEAPLOLEN  1E58    DD 4E 02              	ld	c,(ix+HeapLOlen)
HEAPHILEN  1E5B    DD 46 03              	ld	b,(ix+HeapHIlen)
  1E5E    79                    	ld	a,c
  1E5F    B0                    	or	b		; Test end of chain
L1E80  1E60    28 1E                 	jr	z,l1e80
L00F4  1E62    2A 00F4               	ld	hl,(l00f4)	; Get old available memory
  1E65    09                    	add	hl,bc		; Add length
L00F4  1E66    22 00F4               	ld	(l00f4),hl
L00F6  1E69    2A 00F6               	ld	hl,(l00f6)	; Get max
  1E6C    B7                    	or	a
  1E6D    ED 42                 	sbc	hl,bc		; Check it
L1E75  1E6F    30 04                 	jr	nc,l1e75
L00F6  1E71    ED 43 00F6            	ld	(l00f6),bc	; Set new max
L1E75  1E75                          l1e75:
HEAPLOADR  1E75    DD 6E 00              	ld	l,(ix+HeapLOadr); Get chain
HEAPHIADR  1E78    DD 66 01              	ld	h,(ix+HeapHIadr)
  1E7B    E5                    	push	hl
  1E7C    DD E1                 	pop	ix
L1E58  1E7E    18 D8                 	jr	l1e58		; Loop
L1E80  1E80                          l1e80:
L00C6  1E80    2A 00C6               	ld	hl,(l00c6)	; Get recursion pointer
  1E83    01 FFFB               	ld	bc,-5
  1E86    09                    	add	hl,bc		; Build free address
L00C4  1E87    ED 5B 00C4            	ld	de,(l00c4)	; Get heap pointer
  1E8B    B7                    	or	a
  1E8C    ED 52                 	sbc	hl,de		; Test any free
  1E8E    D8                    	ret	c
  1E8F    EB                    	ex	de,hl
L00F4  1E90    2A 00F4               	ld	hl,(l00f4)	; Get available memory
  1E93    19                    	add	hl,de		; Add gap
L00F4  1E94    22 00F4               	ld	(l00f4),hl
L00F6  1E97    2A 00F6               	ld	hl,(l00f6)	; Get max
  1E9A    B7                    	or	a
  1E9B    ED 52                 	sbc	hl,de		; Subtract
  1E9D    D0                    	ret	nc
L00F6  1E9E    ED 53 00F6            	ld	(l00f6),de	; Set new
  1EA2    C9                    	ret
                                ;
                                ; Mark heap
                                ; Procedure MARK(pointer)
                                ; ENTRY	Reg HL holds pointer
                                ;
L1EA3  1EA3                          l1ea3:
L00C4  1EA3    ED 5B 00C4            	ld	de,(l00c4)	; Get heap pointer
  1EA7    73                    	ld	(hl),e		; Store into variable
  1EA8    23                    	inc	hl
  1EA9    72                    	ld	(hl),d
  1EAA    C9                    	ret
                                ;
                                ; Release heap
                                ; Procedure RELEASE(pointer)
                                ; ENTRY	Reg HL holds pointer
                                ;
L1EAB  1EAB                          l1eab:
  1EAB    5E                    	ld	e,(hl)		; Load heap from variable
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-121


  1EAC    23                    	inc	hl
  1EAD    56                    	ld	d,(hl)
  1EAE    EB                    	ex	de,hl
                                ;
                                ; Init heap
                                ; ENTRY	Reg HL points to 1st free location
                                ;
L1EAF  1EAF                          l1eaf:
L00C4  1EAF    22 00C4               	ld	(l00c4),hl	; Set heap pointer
L00DE  1EB2    22 00DE               	ld	(l00de),hl
HEAPLEN  1EB5    06 04                 	ld	b,HeapLen
L1EB7  1EB7                          l1eb7:
  1EB7    36 00                 	ld	(hl),0		; Clear 4 bytes
  1EB9    23                    	inc	hl
L1EB7  1EBA    10 FB                 	djnz	l1eb7
  1EBC    C9                    	ret
                                ;
                                ; Convert number to string
                                ; Procedure STR(real,string)
                                ; ENTRY	Real pushed onto stack with formatting data
                                ;	Reg HL points to string
                                ;	Reg B holds length of string
                                ;
L1EBD  1EBD                          l1ebd:
SKIP  1EBD    3E                    	db	skip
                                ;
                                ; Procedure STR(integer,string)
                                ; ENTRY	Integer pushed onto stack with digit count
                                ;	Reg HL points to string
                                ;	Reg B holds length of string
                                ;
L1EBE  1EBE                          l1ebe:
  1EBE    AF                    	xor	a
  1EBF    4F                    	ld	c,a		; Save mode
L00E8  1EC0    22 00E8               	ld	(l00e8),hl	; Save string
  1EC3    AF                    	xor	a
  1EC4    77                    	ld	(hl),a		; Init to empty string
L00D0  1EC5    32 00D0               	ld	(l00d0),a	; Clear error
  1EC8    78                    	ld	a,b
L00EA  1EC9    32 00EA               	ld	(l00ea),a	; Save max length
L00E2  1ECC    2A 00E2               	ld	hl,(l00e2)
L00ED  1ECF    22 00ED               	ld	(l00ed),hl	; Save current FIB
L1F46  1ED2    21 1F46               	ld	hl,l1f46
L00E2  1ED5    22 00E2               	ld	(l00e2),hl	; Set RAM device
  1ED8    E1                    	pop	hl		; Get caller
L00E4  1ED9    22 00E4               	ld	(l00e4),hl
  1EDC    E1                    	pop	hl		; Get digit count/comma places
  1EDD    0C                    	inc	c		; Test mode
  1EDE    0D                    	dec	c
L1EE6  1EDF    20 05                 	jr	nz,l1ee6
L1726  1EE1    CD 1726               	call	l1726		; Get integer string
L1EE9  1EE4    18 03                 	jr	l1ee9
L1EE6  1EE6                          l1ee6:
L1779  1EE6    CD 1779               	call	l1779		; Get real string
L1EE9  1EE9                          l1ee9:
L00ED  1EE9    2A 00ED               	ld	hl,(l00ed)
L00E2TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-122


  1EEC    22 00E2               	ld	(l00e2),hl	; Restore FIB
L00E4  1EEF    2A 00E4               	ld	hl,(l00e4)	; Get caller
  1EF2    E9                    	jp	(hl)
                                ;
                                ; Convert string to number
                                ; Procedure VAL(string,real,result)
                                ; ENTRY	String and address of real pushed onto stack
                                ;	Reg HL points to result
                                ;
L1EF3  1EF3                          l1ef3:
SKIP  1EF3    3E                    	db	skip
                                ;
                                ; Procedure VAL(string,integer,result)
                                ; ENTRY	String and address of integer pushed onto stack
                                ;	Reg HL points to result
                                ;
L1EF4  1EF4                          l1ef4:
  1EF4    AF                    	xor	a
L00EC  1EF5    32 00EC               	ld	(l00ec),a	; Save mode
L00E8  1EF8    22 00E8               	ld	(l00e8),hl	; Save result
L00E2  1EFB    2A 00E2               	ld	hl,(l00e2)
L00ED  1EFE    22 00ED               	ld	(l00ed),hl	; Save current FIB
L1F46  1F01    21 1F46               	ld	hl,l1f46
L00E2  1F04    22 00E2               	ld	(l00e2),hl	; Set RAM FIB
  1F07    E1                    	pop	hl
L00E4  1F08    22 00E4               	ld	(l00e4),hl	; Save caller
  1F0B    E1                    	pop	hl
L00EA  1F0C    22 00EA               	ld	(l00ea),hl	; Save integer/real address
L005C  1F0F    21 005C               	ld	hl,l005c
  1F12    06 1E                 	ld	b,1eh
L05E2  1F14    CD 05E2               	call	l05e2		; Assign string from stack
  1F17    AF                    	xor	a
  1F18    12                    	ld	(de),a
L00EA  1F19    2A 00EA               	ld	hl,(l00ea)	; Get back variable pointer
L00EC  1F1C    3A 00EC               	ld	a,(l00ec)	; Test mode
  1F1F    B7                    	or	a
L1F27  1F20    20 05                 	jr	nz,l1f27
L164E  1F22    CD 164E               	call	l164e		; Convert to integer
L1F2A  1F25    18 03                 	jr	l1f2a
L1F27  1F27                          l1f27:
L1672  1F27    CD 1672               	call	l1672		; Convert to real
L1F2A  1F2A                          l1f2a:
L00D0  1F2A    21 00D0               	ld	hl,l00d0
  1F2D    7E                    	ld	a,(hl)		; Get IOResult
  1F2E    36 00                 	ld	(hl),0		; Clear
  1F30    B7                    	or	a
  1F31    67                    	ld	h,a
  1F32    6F                    	ld	l,a
L1F3D  1F33    28 08                 	jr	z,l1f3d		; Test error
  1F35    DD E5                 	push	ix
  1F37    E1                    	pop	hl		; Get last address
L005C  1F38    11 005C               	ld	de,l005c
  1F3B    ED 52                 	sbc	hl,de		; Get relative string error
L1F3D  1F3D                          l1f3d:
  1F3D    EB                    	ex	de,hl
L00E8  1F3E    2A 00E8               	ld	hl,(l00e8)	; Point to result
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-123


  1F41    73                    	ld	(hl),e		; Save error or success
  1F42    23                    	inc	hl
  1F43    72                    	ld	(hl),d
L1EE9  1F44    18 A3                 	jr	l1ee9		; Exit
                                ;
                                ; FIB for RAM storage
                                ;
L1F46  1F46                          l1f46:
..IN..OUTRAMDEVICE  1F46    C6                    	db	..in+..out+RAMdevice
  1F47    00                    	db	0
                                ;
                                ; Procedure RANDOMIZE
                                ;
L1F48  1F48                          l1f48:
  1F48    ED 5F                 	ld	a,r		; Get refresh counter
L00C8  1F4A    32 00CB               	ld	(l00c8+3),a	; Set for random
  1F4D    C9                    	ret
                                ;
                                ; Fill variable with constant value
                                ; Procedure FILLCHAR(var,num,val)
                                ; ENTRY	Reg HL holds value
                                ;	Count and variable address pushed onto stack
                                ;
L1F4E  1F4E                          l1f4e:
  1F4E    EB                    	ex	de,hl
  1F4F    DD E1                 	pop	ix
  1F51    C1                    	pop	bc		; Get count
  1F52    E1                    	pop	hl		; Get address
  1F53    78                    	ld	a,b
  1F54    B1                    	or	c		; Test count zero
L1F62  1F55    28 0B                 	jr	z,l1f62		; Skip if so
  1F57    73                    	ld	(hl),e		; Store value
  1F58    0B                    	dec	bc		; Fix count
  1F59    78                    	ld	a,b
  1F5A    B1                    	or	c		; Test count one
L1F62  1F5B    28 05                 	jr	z,l1f62		; Skip if so
  1F5D    54                    	ld	d,h		; Copy address
  1F5E    5D                    	ld	e,l
  1F5F    13                    	inc	de
L1F60  1F60                          l1f60:
  1F60    ED B0                 	ldir			; Move value for fill
L1F62  1F62                          l1f62:
  1F62    DD E9                 	jp	(ix)
                                ;
                                ; Move variable to another
                                ; Procedure MOVE(var1,var2,len)
                                ; ENTRY	Reg HL holds count
                                ;	Variables pushed onto stack
                                ;
L1F64  1F64                          l1f64:
  1F64    44                    	ld	b,h		; Copy count
  1F65    4D                    	ld	c,l
  1F66    DD E1                 	pop	ix
  1F68    D1                    	pop	de		; Get 2nd var
  1F69    E1                    	pop	hl		; Get 1st one
  1F6A    78                    	ld	a,b
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-124


  1F6B    B1                    	or	c
L1F62  1F6C    28 F4                 	jr	z,l1f62		; Test zero length
  1F6E    ED 52                 	sbc	hl,de
  1F70    19                    	add	hl,de		; Test overlapping
L1F60  1F71    30 ED                 	jr	nc,l1f60	; Move up if so
  1F73    0B                    	dec	bc
  1F74    09                    	add	hl,bc		; Point to top
  1F75    EB                    	ex	de,hl
  1F76    09                    	add	hl,bc
  1F77    EB                    	ex	de,hl
  1F78    03                    	inc	bc
  1F79    ED B8                 	lddr			; Move down
  1F7B    DD E9                 	jp	(ix)
                                ;
                                ; Get string from OS command line
                                ; Function PARAMSTR(num):any_string
                                ; ENTRY	Reg HL holds number of substring
                                ; EXIT	Selected string on stack
                                ;
L1F7D  1F7D                          l1f7d:
  1F7D    55                    	ld	d,l		; Get number
  1F7E    14                    	inc	d
  1F7F    15                    	dec	d
L1F85  1F80    28 03                 	jr	z,l1f85		; Skip if none
L1F9D  1F82    CD 1F9D               	call	l1f9d
L1F85  1F85                          l1f85:
  1F85    DD E1                 	pop	ix		; Free stack
  1F87    4F                    	ld	c,a		; Get length of string
  1F88    06 00                 	ld	b,0
  1F8A    2F                    	cpl
  1F8B    6F                    	ld	l,a
  1F8C    26 FF                 	ld	h,-1
  1F8E    39                    	add	hl,sp		; Build address on stack
  1F8F    F9                    	ld	sp,hl
  1F90    71                    	ld	(hl),c		; Store length
  1F91    23                    	inc	hl
  1F92    EB                    	ex	de,hl
  1F93    0C                    	inc	c		; Test any selected
  1F94    0D                    	dec	c
L1F99  1F95    28 02                 	jr	z,l1f99		; Nope
  1F97    ED B0                 	ldir			; Unpack it
L1F99  1F99                          l1f99:
  1F99    DD E9                 	jp	(ix)
                                ;
                                ; Get number of parameters in OS command line
                                ; Function PARAMCOUNT:integer;
                                ;
L1F9B  1F9B                          l1f9b:
  1F9B    16 00                 	ld	d,0		; Set dummy selection
                                ;
                                ; Get parameters of OS command line
                                ; ENTRY	Reg D holds number of substring selected
                                ; EXIT	Reg DE points to selected substring
                                ;	Accu   holds length of substring
                                ;	Reg HL holds index of substring
                                ;
L1F9DTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-125


  1F9D                          l1f9d:
L0080  1F9D    21 0080               	ld	hl,l0080	; Init pointer
MAXPARAMS  1FA0    3E 1F                 	ld	a,MaxParams	; Test parameter count
  1FA2    46                    	ld	b,(hl)
  1FA3    B8                    	cp	b
L1FA8  1FA4    30 02                 	jr	nc,l1fa8
MAXPARAMS  1FA6    06 1F                 	ld	b,MaxParams	; Truncate to max
L1FA8  1FA8                          l1fa8:
  1FA8    23                    	inc	hl
  1FA9    0E 00                 	ld	c,0		; Init count
L1FAB  1FAB                          l1fab:
  1FAB    04                    	inc	b
  1FAC    05                    	dec	b		; Test end
L1FBC  1FAD    28 0D                 	jr	z,l1fbc		; Yeap
  1FAF    7E                    	ld	a,(hl)
  1FB0    FE 20                 	cp	' '
L1FB8  1FB2    28 04                 	jr	z,l1fb8		; Skip white spaces
TAB  1FB4    FE 09                 	cp	tab
L1FBC  1FB6    20 04                 	jr	nz,l1fbc
L1FB8  1FB8                          l1fb8:
  1FB8    23                    	inc	hl
  1FB9    05                    	dec	b
L1FAB  1FBA    18 EF                 	jr	l1fab
L1FBC  1FBC                          l1fbc:
  1FBC    5D                    	ld	e,l		; Save pointer
L1FBD  1FBD                          l1fbd:
  1FBD    04                    	inc	b
  1FBE    05                    	dec	b		; Test done
L1FCE  1FBF    28 0D                 	jr	z,l1fce		; Yeap
  1FC1    7E                    	ld	a,(hl)
  1FC2    FE 20                 	cp	' '
L1FCE  1FC4    28 08                 	jr	z,l1fce		; Find white space
TAB  1FC6    FE 09                 	cp	tab
L1FCE  1FC8    28 04                 	jr	z,l1fce
  1FCA    23                    	inc	hl
  1FCB    05                    	dec	b
L1FBD  1FCC    18 EF                 	jr	l1fbd
L1FCE  1FCE                          l1fce:
  1FCE    7D                    	ld	a,l
  1FCF    93                    	sub	e		; Test same position
L1FD6  1FD0    28 04                 	jr	z,l1fd6
  1FD2    0C                    	inc	c		; Count up index
  1FD3    15                    	dec	d		; Test found
L1FAB  1FD4    20 D5                 	jr	nz,l1fab
L1FD6  1FD6                          l1fd6:
  1FD6    69                    	ld	l,c		; Get selected or last index
  1FD7    26 00                 	ld	h,0		; Make pointer relative
  1FD9    54                    	ld	d,h
  1FDA    C9                    	ret
                                ;
                                ; Procedure GOTOXY(x_val,y_val)
                                ; ENTRY	Reg HL holds y_val
                                ;	x_val on stack
                                ;
L1FDB  1FDB                          l1fdb:
  1FDB    D1                    	pop	de
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-126


  1FDC    C1                    	pop	bc
  1FDD    D5                    	push	de
  1FDE    2D                    	dec	l		; Fix row
  1FDF    61                    	ld	h,c
  1FE0    25                    	dec	h		; Fix column
L02A2  1FE1    C3 02A2               	jp	l02a2		; Position cursor
                                ;
                                ; Function UPCASE(char):char
                                ; ENTRY	Reg HL holds character
                                ; EXIT	Reg HL holds UPPER case character
                                ;
L1FE4  1FE4                          l1fe4:
  1FE4    7D                    	ld	a,l		; Get into accu
L04A6  1FE5    CD 04A6               	call	l04a6		; Convert to upper case
  1FE8    6F                    	ld	l,a		; Bring it back
  1FE9    C9                    	ret
                                ;
                                ; Execute BIOS function
                                ; Procedures	BIOS(func)
                                ;		BIOS(func,param)
                                ; Functions	BIOS(func):integer
                                ;		BIOS(func,param):integer
                                ;		BIOSHL(func,param):integer
                                ; ENTRY	Reg DE holds BIOS function
                                ;	Reg BC holds optional parameter
                                ; EXIT	Accu and reg HL hold result
                                ;
L1FEA  1FEA                          l1fea:
OS  1FEA    2A 0001               	ld	hl,(OS+1)	; Get base address
  1FED    19                    	add	hl,de		; Make executable
  1FEE    19                    	add	hl,de
  1FEF    19                    	add	hl,de
  1FF0    E9                    	jp	(hl)		; Execute
                                ;
                                ; Get IO result
                                ; Function IORESULT:integer
                                ; EXIT	Reg HL holds result
                                ;
L1FF1  1FF1                          l1ff1:
L00D0  1FF1    21 00D0               	ld	hl,l00d0	; Point to result
  1FF4    7E                    	ld	a,(hl)		; Get it
  1FF5    36 00                 	ld	(hl),0		; Clear after request
  1FF7    6F                    	ld	l,a
  1FF8    26 00                 	ld	h,0
  1FFA    C9                    	ret
                                ;
                                ; Control C entry - entered via RST after each statement
                                ;
L1FFB  1FFB                          l1ffb:
L0316  1FFB    CD 0316               	call	l0316		; Test key pressed
  1FFE    7C                    	ld	a,h
  1FFF    B5                    	or	l
  2000    C8                    	ret	z		; Nope
L00DD  2001    3A 00DD               	ld	a,(l00dd)	; Get $C mode
  2004    F5                    	push	af
  2005    AF                    	xor	a
L00DDTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-127


  2006    32 00DD               	ld	(l00dd),a	; Set $C-
L0320  2009    CD 0320               	call	l0320		; Read from keyboard
  200C    F1                    	pop	af
L00DD  200D    32 00DD               	ld	(l00dd),a	; Reset $C mode
  2010    7D                    	ld	a,l
CTRLC  2011    FE 03                 	cp	CtrlC		; Test Control-C
  2013    C0                    	ret	nz		; Nope
  2014    DD E1                 	pop	ix		; Fetch PC
L2016  2016                          l2016:
_CBRK  2016    11 0001               	ld	de,_CBRK	; Set CtrlC error
L202C  2019    18 11                 	jr	l202c		; Enter error routine
                                ;
                                ; Check IOResult after IO operation
                                ; (May be turned off by {$I-})
                                ;
L201B  201B                          l201b:
L00D0  201B    3A 00D0               	ld	a,(l00d0)	; Test any error
  201E    B7                    	or	a
  201F    C8                    	ret	z		; Nope
  2020    DD E1                 	pop	ix		; Get caller
  2022    5F                    	ld	e,a		; Save code
_IO  2023    16 01                 	ld	d,_IO		; Set mode
L202C  2025    18 05                 	jr	l202c
L2027  2027                          l2027:
  2027    DD E1                 	pop	ix		; Get caller
L2029  2029                          l2029:
  2029    5F                    	ld	e,a		; Save code
_RT  202A    16 02                 	ld	d,_RT		; Set mode
                                ;
                                ; Common error handler
                                ; ENTRY	Reg D holds error mode
                                ;	Reg E holds error code
                                ;	Reg IX holds callers address
                                ;
L202C  202C                          l202c:
  202C    D5                    	push	de
L037A  202D    CD 037A               	call	l037a		; Reset some things
  2030    D1                    	pop	de
  2031    AF                    	xor	a
L00DD  2032    32 00DD               	ld	(l00dd),a	; Set $C- mode
L00CE  2035    2A 00CE               	ld	hl,(l00ce)	; Get current PC
  2038    7C                    	ld	a,h		; Check zero
  2039    B5                    	or	l
  203A    DD E5                 	push	ix
  203C    E1                    	pop	hl
L00CC  203D    ED 4B 00CC            	ld	bc,(l00cc)	; Get base PC
  2041    ED 42                 	sbc	hl,bc		; Subtract for base
TPHEAD  2043    01 0015               	ld	bc,TPhead
  2046    09                    	add	hl,bc		; Fix for 0100h start
L00CE  2047    22 00CE               	ld	(l00ce),hl	; Set current PC
  204A    B7                    	or	a		; Look for previous zero
L2054  204B    20 07                 	jr	nz,l2054	; Nope
  204D    D5                    	push	de
  204E    D5                    	push	de
  204F    E5                    	push	hl
L00D9  2050    CD 00D9               	call	l00d9		; Do restart
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-128


  2053    D1                    	pop	de
L2054  2054                          l2054:
  2054    7A                    	ld	a,d
  2055    B7                    	or	a		; Test user break
L206C  2056    20 14                 	jr	nz,l206c
L0200  2058    CD 0200               	call	l0200		; Tell control C
  205B    5E 43                 	db	'^C'
CRLF  205D    0D 0A                 	db	cr,lf	
  205F    55 73 65 72           	db	'User break'
  2063    20 62 72 65           
  2067    61 6B                 
NULL  2069    00                    	db	null
L2097  206A    18 2B                 	jr	l2097
L206C  206C                          l206c:
  206C    3D                    	dec	a		; Test I/O error
L207A  206D    20 0B                 	jr	nz,l207a
L0200  206F    CD 0200               	call	l0200		; Tell I/O error
CRLF  2072    0D 0A                 	db	cr,lf	
  2074    49 2F 4F              	db	'I/O'
NULL  2077    00                    	db	null
L2088  2078    18 0E                 	jr	l2088
L207A  207A                          l207a:
L0200  207A    CD 0200               	call	l0200		; Tell run time error
CRLF  207D    0D 0A                 	db	cr,lf	
  207F    52 75 6E 2D           	db	'Run-time'
  2083    74 69 6D 65           
NULL  2087    00                    	db	null
L2088  2088                          l2088:
L0200  2088    CD 0200               	call	l0200
  208B    20 65 72 72           	db	' error '
  208F    6F 72 20              
NULL  2092    00                    	db	null
  2093    7B                    	ld	a,e
L04B4  2094    CD 04B4               	call	l04b4		; Print error byte
L2097  2097                          l2097:
L0200  2097    CD 0200               	call	l0200		; Tell current PC
  209A    2C 20 50 43           	db	', PC='
  209E    3D                    
NULL  209F    00                    	db	null
L00CE  20A0    2A 00CE               	ld	hl,(l00ce)	; Get current PC
L04AF  20A3    CD 04AF               	call	l04af		; Print hex
L20BD  20A6    18 15                 	jr	l20bd		; Abort
                                ;
                                ; Process memory error
                                ;
L20A8  20A8                          l20a8:
L0200  20A8    CD 0200               	call	l0200		; Tell error
  20AB    4E 6F 74 20           	db	'Not enough memory'
  20AF    65 6E 6F 75           
  20B3    67 68 20 6D           
  20B7    65 6D 6F 72           
  20BB    79                    
NULL  20BC    00                    	db	null
                                ;
                                ; Error detected, tell abort and break
                                ;
L20BDTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-129


  20BD                          l20bd:
L0200  20BD    CD 0200               	call	l0200		; Tell it
CRLF  20C0    0D 0A                 	db	cr,lf	
  20C2    50 72 6F 67           	db	'Program aborted'
  20C6    72 61 6D 20           
  20CA    61 62 6F 72           
  20CE    74 65 64              
CRLFNULL  20D1    0D 0A 00              	db	cr,lf,null	
                                ;
                                ; Halt program
                                ;
L20D4  20D4                          l20d4:
L00D8  20D4    3A 00D8               	ld	a,(l00d8)	; Test run mode
  20D7    B7                    	or	a
OS  20D8    CA 0000               	jp	z,OS
OS  20DB    C3 0000               	jp	OS		; Always exit .COM file
                                ;
                                ; Restart after error
                                ;
L20DE  20DE                          l20de:
  20DE    E1                    	pop	hl		; Get PC
  20DF    D1                    	pop	de		; Clean stack
  20E0    D1                    	pop	de
  20E1    E9                    	jp	(hl)		; Restart
                                
                                ;
                                ; This file implements the interface between the CP/M CCP
                                ; and the compiler
                                ;
                                ; Entered here thru cold start (RTL resides before)
                                ;
L20E2  20E2                          l20e2:
L20E5  20E2    CD 2196               	call	l20e5		; Set up environment
L215E  20E5    CD 2188               	call	l215e
STDFCBFDRVFNAME  20E8    21 0065               	ld	hl,STDFCB+Fdrv+Fname
  20EB    7E                    	ld	a,(hl)		; Test extension
  20EC    FE 20                 	cp	' '
DEFPAS  20EE    CC 21AD               	call	z,DefPAS	; Set default .PAS
L44F9  20F1    11 26BD               	ld	de,l44f9
STDFCBFDRV  20F4    21 005D               	ld	hl,STDFCB+Fdrv
  20F7    7E                    	ld	a,(hl)
  20F8    FE 20                 	cp	' '		; Test input
NOCCP  20FA    28 18                 	jr	z,NoCCP		; Should be	
  20FC    2B                    	dec	hl
FDRVFNAMEFEXT  20FD    01 000C               	ld	bc,Fdrv+Fname+Fext
  2100    ED B0                 	ldir			; Unpack main file
CCP  2102    21 0080               	ld	hl,CCP
  2105    44                    	ld	b,h
  2106    4E                    	ld	c,(hl)
  2107    23                    	inc	hl
SCANCCP  2108    CD 21B6               	call	ScanCCP		; Scan line for options
L2DA4  210B    CD 2308               	call	l2da4		; Read message file if found
L2827  210E    CD 246A               	call	l2827		; Compile
OS  2111    C3 0000               	jp	OS
NOCCP  2114                          NoCCP:
L0200  2114    CD 0200               	call	l0200		; Tell no input
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-130


  2117    43 6F 6D 6D           	db	'Command version of TURBO Pascal v3.0'
  211B    61 6E 64 20           
  211F    76 65 72 73           
  2123    69 6F 6E 20           
  2127    6F 66 20 54           
  212B    55 52 42 4F           
  212F    20 50 61 73           
  2133    63 61 6C 20           
  2137    76 33 2E 30           
CRLFLF  213B    0D 0A 0A              	db	cr,lf,lf
  213E    43 61 6C 6C           	db	'Call it:'
  2142    20 69 74 3A           
CRLFLF  2146    0D 0A 0A              	db	cr,lf,lf
TAB  2149    09 54 55 52           	db	tab,'TURBOCOM SOURCE_file{.PAS} {/Sstr_addr} {/Eend_addr} {/H}}'
  214D    42 4F 43 4F           
  2151    4D 20 53 4F           
  2155    55 52 43 45           
  2159    5F 66 69 6C           
  215D    65 7B 2E 50           
  2161    41 53 7D 20           
  2165    7B 2F 53 73           
  2169    74 72 5F 61           
  216D    64 64 72 7D           
  2171    20 7B 2F 45           
  2175    65 6E 64 5F           
  2179    61 64 64 72           
  217D    7D 20 7B 2F           
  2181    48 7D 7D              
NULL  2184    00                    	db	null
OS  2185    C3 0000               	jp	OS
                                ;
                                ; init a bit
                                ;
L215E  2188                          l215e:
TPATOP  2188    2A 0006               	ld	hl,(TPAtop)	; Fetch top of memory
MEMGAP  218B    01 FD3C               	ld	bc,-MEMGAP
  218E    09                    	add	hl,bc
L44F6  218F    22 26BB               	ld	(l44f6),hl	; Set for available memory
L2D8F  2192    CD 2656               	call	l2d8f		; Init session
  2195    C9                    	ret
                                ;
                                ; Set up environment
                                ;
L20E5  2196                          l20e5:
TPATOP  2196    2A 0006               	ld	hl,(TPAtop)	; Get top of memory
  2199    C1                    	pop	bc
  219A    F9                    	ld	sp,hl		; Set for stack
  219B    C5                    	push	bc
STKSPC  219C    11 FC00               	ld	de,-StkSpc
  219F    19                    	add	hl,de		; Allow some space
L4548  21A0    22 270A               	ld	(l4548),hl	; Set top of memory
L7AD7  21A3    21 5BF4               	ld	hl,l7ad7	; Get top of used memory
  21A6    01 0000               	ld	bc,256*0+0	; No break, no interrupt
L0364  21A9    CD 0364               	call	l0364		; Init pointers
  21AC    C9                    	ret
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-131


                                ; Set default .PAS
                                ;
DEFPAS  21AD                          DefPAS:
  21AD    36 50                 	ld	(hl),'P'	; Simple one
  21AF    23                    	inc	hl
  21B0    36 41                 	ld	(hl),'A'
  21B2    23                    	inc	hl
  21B3    36 53                 	ld	(hl),'S'
  21B5    C9                    	ret
                                ;
                                ; Scan line for options
                                ;
                                ; On entry ^HL points to command line and reg BC holds length of it
                                ;
SCANCCP  21B6                          ScanCCP:
  21B6    3E 2F                 	ld	a,'/'
  21B8    ED B1                 	cpir			; Find delimiter
  21BA    C0                    	ret	nz		; None
  21BB    7E                    	ld	a,(hl)		; Get character
  21BC    FE 48                 	cp	'H'		; Test chain
ISEND  21BE    20 08                 	jr	nz,isEnd	; Nope try next
                                ;
                                ; Option /H : Set .CHN instead of .COM file
                                ;
L44F3  21C0    32 26B8               	ld	(l44f3),a	; Set chain
  21C3    23                    	inc	hl		; Skip option
  21C4    0D                    	dec	c		; Test more
SCANCCP  21C5    20 EF                 	jr	nz,ScanCCP
  21C7    C9                    	ret
ISEND  21C8                          isEnd:
  21C8    FE 45                 	cp	'E'		; Test end address
ISSTRT  21CA    20 11                 	jr	nz,isStrt	; Nope try next
                                ;
                                ; Option /Eaaaa : Define end address
                                ;
  21CC    23                    	inc	hl		; Skip option
  21CD    0D                    	dec	c		; Test count
OPTERR  21CE    28 22                 	jr	z,OptErr
HEXIN  21D0    CD 2294               	call	hexin		; Get address
L44F6  21D3    ED 53 26BB            	ld	(l44f6),de	; Set end address
CHECKRTLADDR  21D7    CD 2257               	call	CheckRTLaddr	; Check address
SCANCCP  21DA    20 DA                 	jr	nz,ScanCCP
  21DC    C9                    	ret
ISSTRT  21DD                          isStrt:
  21DD    FE 53                 	cp	'S'		; Test start address
OPTERR  21DF    20 11                 	jr	nz,OptErr
                                ;
                                ; Option /Saaaa : Define start address
                                ;
  21E1    23                    	inc	hl		; Skip option
  21E2    0D                    	dec	c		; Test count
OPTERR  21E3    28 0D                 	jr	z,OptErr
HEXIN  21E5    CD 2294               	call	hexin		; Get address
L44F4  21E8    ED 53 26B9            	ld	(l44f4),de	; Set end address
CHECKRTLADDR  21EC    CD 2257               	call	CheckRTLaddr	; Check address
SCANCCP  21EF    20 C5                 	jr	nz,ScanCCP
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-132


  21F1    C9                    	ret
OPTERR  21F2                          OptErr:
L0200  21F2    CD 0200               	call	l0200		; Tell no input
  21F5    49 6E 76 61           	db	'Invalid option found.'
  21F9    6C 69 64 20           
  21FD    6F 70 74 69           
  2201    6F 6E 20 66           
  2205    6F 75 6E 64           
  2209    2E                    
CRLF  220A    0D 0A                 	db	cr,lf
  220C    53 75 70 70           	db	'Supports /H for chain file, /Saaaa for start and /Eaaaa for end address'
  2210    6F 72 74 73           
  2214    20 2F 48 20           
  2218    66 6F 72 20           
  221C    63 68 61 69           
  2220    6E 20 66 69           
  2224    6C 65 2C 20           
  2228    2F 53 61 61           
  222C    61 61 20 66           
  2230    6F 72 20 73           
  2234    74 61 72 74           
  2238    20 61 6E 64           
  223C    20 2F 45 61           
  2240    61 61 61 20           
  2244    66 6F 72 20           
  2248    65 6E 64 20           
  224C    61 64 64 72           
  2250    65 73 73              
NULL  2253    00                    	db	null
OS  2254    C3 0000               	jp	OS
                                ;
                                ; Check address in reg DE against Run Time Library address
                                ;
CHECKRTLADDR  2257                          CheckRTLaddr:
  2257    08                    	ex	af,af'
  2258    D5                    	push	de
  2259    E5                    	push	hl
  225A    EB                    	ex	de,hl
L20E2  225B    11 20E2               	ld	de,l20e2
  225E    B7                    	or	a
  225F    ED 52                 	sbc	hl,de		; Verify above RTL
  2261    E1                    	pop	hl
  2262    D1                    	pop	de
ILLADDR  2263    38 02                 	jr	c,IllAddr	; Bad one
  2265    08                    	ex	af,af'
  2266    C9                    	ret
ILLADDR  2267                          IllAddr:
L0200  2267    CD 0200               	call	l0200
  226A    2F                    	db	'/'
$ILLADDR  226B                          $IllAddr:
  226B    78 61 64 64           	db	'xaddress must not be below hex '
  226F    72 65 73 73           
  2273    20 6D 75 73           
  2277    74 20 6E 6F           
  227B    74 20 62 65           
  227F    20 62 65 6C           
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-133


  2283    6F 77 20 68           
  2287    65 78 20              
NULL  228A    00                    	db	null
L20E2  228B    21 20E2               	ld	hl,l20e2
L04AF  228E    CD 04AF               	call	l04af		; Print hex
OS  2291    C3 0000               	jp	OS
                                ;
                                ; Get hex address from ^HL to DE, remaining length in reg BC
                                ;
                                ; Zero flag set of no more characters in line
                                ;
HEXIN  2294                          hexin:
$ILLADDR  2294    32 226B               	ld	($IllAddr),a	; Save in case of error
  2297    EB                    	ex	de,hl		; Unpack pointers
  2298    41                    	ld	b,c		; Get length
.HEXIN  2299    CD 22A3               	call	.hexin
  229C    48                    	ld	c,b		; Get remaining length
  229D    06 00                 	ld	b,0
  229F    EB                    	ex	de,hl		; Get result
  22A0    0C                    	inc	c
  22A1    0D                    	dec	c
  22A2    C9                    	ret
                                ;
.HEXIN  22A3                          .hexin:
  22A3    21 0000               	ld	hl,0		; Init value
  22A6    04                    	inc	b
  22A7    05                    	dec	b
  22A8    C8                    	ret	z
ENDHEX  22A9                          EndHex:
ASCII2BIN  22A9    CD 22B6               	call	ASCII2Bin	; Get binary
  22AC    D0                    	ret	nc
  22AD    29                    	add	hl,hl		; Shift four places
  22AE    29                    	add	hl,hl
  22AF    29                    	add	hl,hl
  22B0    29                    	add	hl,hl
  22B1    B5                    	or	l		; Insert digit
  22B2    6F                    	ld	l,a
ENDHEX  22B3    10 F4                 	djnz	EndHex
  22B5    C9                    	ret
                                ;
                                ; Convert ASCII to nibble - C set if range ok
                                ;
ASCII2BIN  22B6                          ASCII2Bin:
  22B6    1A                    	ld	a,(de)		; Get character
  22B7    13                    	inc	de
  22B8    D6 30                 	sub	'0'		; Strip off ASCII
  22BA    FE 0A                 	cp	9+1		; Test decimal
  22BC    D8                    	ret	c		; Yeap
  22BD    D6 07                 	sub	'A'-'0'-10	; Fix for hex
  22BF    FE 10                 	cp	15+1		; Verify correct range
  22C1    C9                    	ret
                                ;
                                ; Indicate error line
                                ;
PRSRCLINE  22C2                          PrSrcline::
L79D7  22C2    3A 5AF4               	ld	a,(l79d7)	; Test any in line
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-134


  22C5    B7                    	or	a
  22C6    C8                    	ret	z		; Nope, ignore this routine
L0200  22C7    CD 0200               	call	l0200		; Close line
CRLFLF  22CA    0D 0A 0A              	db	cr,lf,lf
  22CD    53 6F 75 72           	db	'Source line: '
  22D1    63 65 20 6C           
  22D5    69 6E 65 3A           
  22D9    20                    
CRLFLFNULL  22DA    0D 0A 0A 00           	db	cr,lf,lf,null
L79D7  22DE    21 5AF4               	ld	hl,l79d7	; Get start of source line
..PRC  22E1                          ..prc:
  22E1    7E                    	ld	a,(hl)
  22E2    B7                    	or	a
END.PRE  22E3    28 06                 	jr	z,end.pre
L03C9  22E5    CD 03C9               	call	l03c9		; Print it
  22E8    23                    	inc	hl
..PRC  22E9    18 F6                 	jr	..prc
END.PRE  22EB                          end.pre:
L0200  22EB    CD 0200               	call	l0200		; Close line
CRLFNULL  22EE    0D 0A 00              	db	cr,lf,null
ERRPOS  22F1    3A 2306               	ld	a,(errpos)	; Get error position
  22F4    B7                    	or	a
  22F5    C8                    	ret	z		; It is at the beginning
  22F6    47                    	ld	b,a
PR.ERRIND  22F7                          pr.errind:
  22F7    3E 2D                 	ld	a,'-'
L03C9  22F9    CD 03C9               	call	l03c9
PR.ERRIND  22FC    10 F9                 	djnz	pr.errind
L0200  22FE    CD 0200               	call	l0200		; Indicate position
CRLFNULL  2301    5E 0D 0A 00           	db	'^',cr,lf,null
  2305    C9                    	ret
                                ;
ERRPOS  2306                          errpos:
  2306                          	ds	2
                                ;
                                ; Read error message file
                                ; 
L2DA4  2308                          l2da4:
L429E  2308    2A 26A8               	ld	hl,(l429e)	; Get base of message file
L4544  230B    22 2706               	ld	(l4544),hl	; Set as start of text
L217D  230E    21 2338               	ld	hl,l217d	; Point to filename
FDRVFNAMEFEXT  2311    01 000C               	ld	bc,Fdrv+Fname+Fext
L005C  2314    11 005C               	ld	de,l005c
  2317    ED B0                 	ldir			; Unpack .MSG file
.OPEN  2319    0E 0F                 	ld	c,.open
L26D3  231B    CD 2435               	call	l26d3		; Open file
  231E    C6 01                 	add	a,1
  2320    9F                    	sbc	a,a		; Indicate file ok
  2321    EE FF                 	xor	11111111b	; Toggle bits
L4541  2323    32 2705               	ld	(l4541),a	; Set error message file read
L2DCF  2326    28 06                 	jr	z,l2dcf		; Not found
L005C  2328    11 005C               	ld	de,l005c
L2518  232B    CD 2388               	call	l2518		; Load text file
L2DCF  232E                          l2dcf:
L4546  232E    2A 2708               	ld	hl,(l4546)	; Get end of text
EOF  2331    36 1A                 	ld	(hl),eof
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-135


  2333    23                    	inc	hl
L4544  2334    22 2706               	ld	(l4544),hl	; Set start of text
  2337    C9                    	ret
                                ;
L217D  2338                          l217d:
  2338    00 54 55 52           	db	0,'TURBO   MSG'
  233C    42 4F 20 20           
  2340    20 4D 53 47           
                                
L232E  2344                          l232e:
L0200  2344    CD 0200               	call	l0200		; Tell free memory
  2347    46 72 65 65           	db	'Free: '
  234B    3A 20                 
NULL  234D    00                    	db	null
                                ;
                                ; Print decimal free bytes and hex addresses
                                ; ENTRY	Reg HL holds  end  address
                                ;	Reg DE holds start address
                                ;
L2338  234E                          l2338:
  234E    E5                    	push	hl
  234F    D5                    	push	de
  2350    B7                    	or	a
  2351    ED 52                 	sbc	hl,de		; Calculate difference
L2E5C  2353    CD 2688               	call	l2e5c		; Print it
L0200  2356    CD 0200               	call	l0200		; Tell bytes
  2359    20 62 79 74           	db	' bytes ('
  235D    65 73 20 28           
NULL  2361    00                    	db	null
  2362    E1                    	pop	hl		; Get start address
L04AF  2363    CD 04AF               	call	l04af		; Print hex
  2366    3E 2D                 	ld	a,'-'
L03C9  2368    CD 03C9               	call	l03c9		; Give delimiter
  236B    E1                    	pop	hl		; Get end address
L04AF  236C    CD 04AF               	call	l04af		; Print hex
  236F    3E 29                 	ld	a,')'
L03C9  2371    CD 03C9               	call	l03c9		; Give closure
L01E1  2374    C3 01E1               	jp	l01e1		; Give new line
                                ;
                                ; Init a bit and load wirk file into memory
                                ;
L2D50  2377                          l2d50:
L451D  2377    11 26E1               	ld	de,l451d
L44F9  237A    21 26BD               	ld	hl,l44f9	; Point to main file
FCBLEN  237D    01 0024               	ld	bc,FCBlen
  2380    ED B0                 	ldir			; Unpack to work file
L2D8F  2382    CD 2656               	call	l2d8f		; Init session
L451D  2385    11 26E1               	ld	de,l451d
                                ;
                                ; Load text file
                                ; ENTRY	Reg DE points to FCB
                                ; EXIT	Reg HL points to  end  of memory
                                ;
L2518  2388                          l2518:
L4544  2388    2A 2706               	ld	hl,(l4544)	; Get start of text
L4460  238B    22 26B0               	ld	(l4460),hl	; Set block start pointer
L4462TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-136


  238E    22 26B2               	ld	(l4462),hl	; Set block end pointer
L4450  2391    22 26AA               	ld	(l4450),hl	; Set current memory pointer
L4454  2394    22 26AC               	ld	(l4454),hl	; Set block pointer
L4458  2397    22 26AE               	ld	(l4458),hl	; Set edit pointer
L446A  239A    22 26B6               	ld	(l446a),hl	; Set start of screen
L4548  239D    ED 4B 270A            	ld	bc,(l4548)	; Get top of available memory
L253B  23A1    CD 23AB               	call	l253b		; Load file
CR  23A4    36 0D                 	ld	(hl),cr		; Close last line
  23A6    23                    	inc	hl
L4546  23A7    22 2708               	ld	(l4546),hl	; Set end of text
  23AA    C9                    	ret
                                ;
                                ; Load a file
                                ; ENTRY	Reg BC holds last available address
                                ;	Reg DE holds FCB
                                ;	Reg HL holds start address
                                ; EXIT	Reg HL holds end address
                                ;
L253B  23AB                          l253b:
  23AB    E5                    	push	hl
  23AC    C5                    	push	bc
  23AD    D5                    	push	de
L0200  23AE    CD 0200               	call	l0200		; Tell action
CRLF  23B1    0D 0A                 	db	cr,lf
  23B3    4C 6F 61 64           	db	'Loading '
  23B7    69 6E 67 20           
NULL  23BB    00                    	db	null
L2DF8  23BC    CD 2660               	call	l2df8		; Tell name of file
L005C  23BF    11 005C               	ld	de,l005c
L26DC  23C2    CD 243B               	call	l26dc		; Clear FCB
  23C5    E1                    	pop	hl
L0024  23C6    01 0024               	ld	bc,l0024
  23C9    ED B0                 	ldir
.OPEN  23CB    0E 0F                 	ld	c,.open
L26D3  23CD    CD 2435               	call	l26d3		; Open file
L2560  23D0                          l2560:
  23D0    F5                    	push	af
L7957  23D1    11 5A74               	ld	de,l7957
.SETDMA  23D4    0E 1A                 	ld	c,.setdma
L7265  23D6    CD 53A6               	call	l7265		; Set disk buffer
  23D9    F1                    	pop	af
  23DA    C1                    	pop	bc
  23DB    E1                    	pop	hl
  23DC    3C                    	inc	a		; Test file found
L25A0  23DD    28 2A                 	jr	z,l25a0		; Nope
L7B6D  23DF    ED 43 5C8A            	ld	(l7b6d),bc	; Set last memory address
L2573  23E3                          l2573:
L7B6D  23E3    ED 4B 5C8A            	ld	bc,(l7b6d)	; Get last memory address
  23E7    05                    	dec	b
  23E8    B7                    	or	a
  23E9    ED 42                 	sbc	hl,bc		; Test room in memory
  23EB    09                    	add	hl,bc
L25D4  23EC    30 32                 	jr	nc,l25d4
  23EE    E5                    	push	hl
.RDSEQ  23EF    0E 14                 	ld	c,.rdseq
L26D3  23F1    CD 2435               	call	l26d3		; Read record from file
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-137


  23F4    E1                    	pop	hl
  23F5    B7                    	or	a		; Test end of file
  23F6    C0                    	ret	nz		; Yeap
L7957  23F7    11 5A74               	ld	de,l7957	; Point to buffer
RECLNG  23FA    06 80                 	ld	b,RecLng
L258D  23FC                          l258d:
  23FC    1A                    	ld	a,(de)		; Scan for EOF
NOMSB  23FD    E6 7F                 	and	NOMSB
EOF  23FF    FE 1A                 	cp	eof
  2401    C8                    	ret	z
  2402    77                    	ld	(hl),a		; Unpack data
  2403    23                    	inc	hl
  2404    13                    	inc	de
L258D  2405    10 F5                 	djnz	l258d
L2573  2407    18 DA                 	jr	l2573
                                ;
                                ; Tell file not found
                                ;
L25A0  2409                          l25a0:
L0200  2409    CD 0200               	call	l0200
CRLF  240C    0D 0A                 	db	cr,lf
  240E    46 69 6C 65           	db	'File not found'
  2412    20 6E 6F 74           
  2416    20 66 6F 75           
  241A    6E 64                 
NULL  241C    00                    	db	null
OS  241D    C3 0000               	jp	OS		; Exit
                                ;
                                ; Tell file too big
                                ;
L25D4  2420                          l25d4:
L0200  2420    CD 0200               	call	l0200
CRLF  2423    0D 0A                 	db	cr,lf
  2425    46 69 6C 65           	db	'File too big'
  2429    20 74 6F 6F           
  242D    20 62 69 67           
NULL  2431    00                    	db	null
OS  2432    C3 0000               	jp	OS		; Exit
                                ;
                                ; Do OS call with standard FCB
                                ;
L26D3  2435                          l26d3:
L005C  2435    11 005C               	ld	de,l005c
L7265  2438    C3 53A6               	jp	l7265		; Do file call
                                ;
                                ; Clear FCB ^DE
                                ;
L26DC  243B                          l26dc:
  243B    D5                    	push	de
_EX  243C    21 000C               	ld	hl,_ex
  243F    19                    	add	hl,de		; Point to extent
  2440    36 00                 	ld	(hl),0		; Clear it
  2442    54                    	ld	d,h
  2443    5D                    	ld	e,l
  2444    13                    	inc	de
FCBLEN_EX  2445    01 0017               	ld	bc,FCBlen-_ex-1
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-138


  2448    ED B0                 	ldir			; Clear remainder
  244A    D1                    	pop	de
  244B    C9                    	ret
                                ;
                                ; Load file into memory
                                ;
L27D7  244C                          l27d7:
L2D50  244C    CD 2377               	call	l2d50		; Get file
L44F9  244F    21 26BD               	ld	hl,l44f9
L7933  2452    11 5A50               	ld	de,l7933
FCBLEN  2455    01 0024               	ld	bc,FCBlen
  2458    ED B0                 	ldir			; Unpack file
TPATOP  245A    2A 0006               	ld	hl,(TPAtop)
L790A  245D    22 5A27               	ld	(l790a),hl	; Set end of code
L281D  2460                          l281d:
L4546  2460    2A 2708               	ld	hl,(l4546)	; Get end of text
EOF  2463    36 1A                 	ld	(hl),eof	; Set end of file
  2465    23                    	inc	hl
L7904  2466    22 5A21               	ld	(l7904),hl	; Set for code start address
  2469    C9                    	ret
                                ;
                                ; Prepare compilation
                                ;
L2827  246A                          l2827:
L27D7  246A    CD 244C               	call	l27d7		; Load file into memory
L44F3  246D    3A 26B8               	ld	a,(l44f3)	; Get compile mode
  2470    B7                    	or	a		; Test compile to .COM file
  2471    F5                    	push	af
L283C  2472    20 07                 	jr	nz,l283c	; Nope
  2474    3E 43                 	ld	a,'C'		; Load .COM
  2476    21 4D4F               	ld	hl,'O'+'M'*256
L2841  2479    18 05                 	jr	l2841
L283C  247B                          l283c:
  247B    3E 43                 	ld	a,'C'		; Load .CHN
  247D    21 4E48               	ld	hl,'H'+'N'*256
L2841  2480                          l2841:
L7933FDRVFNAME  2480    32 5A59               	ld	(l7933+Fdrv+Fname),a
L7933FDRVFNAME  2483    22 5A5A               	ld	(l7933+Fdrv+Fname+1),hl
L44F4  2486    2A 26B9               	ld	hl,(l44f4)	; Get start address of compiler
L7904  2489    22 5A21               	ld	(l7904),hl	; Save
L44F6  248C    2A 26BB               	ld	hl,(l44f6)	; Get top of available memory
L790A  248F    22 5A27               	ld	(l790a),hl	; Save also
L7933  2492    11 5A50               	ld	de,l7933
  2495    D5                    	push	de
L26DC  2496    CD 243B               	call	l26dc		; Clear FCB
.DELETE  2499    0E 13                 	ld	c,.delete
L7265  249B    CD 53A6               	call	l7265		; Delete file
  249E    D1                    	pop	de
.MAKE  249F    0E 16                 	ld	c,.make
L7265  24A1    CD 53A6               	call	l7265		; Create new file
  24A4    3C                    	inc	a		; Test success
L2A5A  24A5    CA 2588               	jp	z,l2a5a		; Nope, error
  24A8    F1                    	pop	af		; Get back .COM or .CHN
TPA  24A9    21 0100               	ld	hl,TPA
L2877  24AC    28 03                 	jr	z,l2877		; Got .COM
L7904  24AE    2A 5A21               	ld	hl,(l7904)	; Get code start address
L2877TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-139


  24B1                          l2877:
L7902  24B1    22 5A1F               	ld	(l7902),hl	; Save for current PC
  24B4    EB                    	ex	de,hl
L287B  24B5                          l287b:
L7904  24B5    2A 5A21               	ld	hl,(l7904)	; Get code start address
  24B8    37                    	scf
  24B9    ED 52                 	sbc	hl,de		; Test end reached
L28A9  24BB    38 26                 	jr	c,l28a9		; Yeap
L7904  24BD    2A 5A21               	ld	hl,(l7904)	; Get code start address
TPA  24C0    22 0101               	ld	(TPA+1),hl	; Set as start address
  24C3    D5                    	push	de
.SETDMA  24C4    0E 1A                 	ld	c,.setdma
L7265  24C6    CD 53A6               	call	l7265		; Set disk buffer
.WRSEQ  24C9    0E 15                 	ld	c,.wrseq
L7933  24CB    11 5A50               	ld	de,l7933
L7265  24CE    CD 53A6               	call	l7265		; Write record to file
  24D1    D1                    	pop	de
L20E2  24D2    21 20E2               	ld	hl,l20e2
TPA  24D5    22 0101               	ld	(TPA+1),hl	; Reset start address
  24D8    B7                    	or	a		; Test I/O success
L2A5A  24D9    C2 2588               	jp	nz,l2a5a	; Error, disk full
RECLNG  24DC    21 0080               	ld	hl,RecLng
  24DF    19                    	add	hl,de		; Advance buffer
  24E0    EB                    	ex	de,hl
L287B  24E1    18 D2                 	jr	l287b
L28A9  24E3                          l28a9:
L0200  24E3    CD 0200               	call	l0200		; Tell compiling
CRLF  24E6    0D 0A                 	db	cr,lf
  24E8    43 6F 6D 70           	db	'Compiling '
  24EC    69 6C 69 6E           
  24F0    67 20                 
NULL  24F2    00                    	db	null
L7933  24F3    11 5A50               	ld	de,l7933
L0200  24F6    CD 0200               	call	l0200		; Indicate file
  24F9    20 2D 2D 3E           	db	' --> '
  24FD    20                    
NULL  24FE    00                    	db	null
L2DF8  24FF    CD 2660               	call	l2df8		; Tell name of file
L01E1  2502    CD 01E1               	call	l01e1		; Give new line
L454A  2505    CD 270C               	call	l454a		; Compile
L7901  2508    3A 5A1E               	ld	a,(l7901)	; Get error code
_ABORT  250B    FE CA                 	cp	_ABORT		; Test abort
L28FA  250D    20 1D                 	jr	nz,l28fa	; Nope
L0200  250F    CD 0200               	call	l0200		; Tell abortion
CRLFLF  2512    0D 0A 0A              	db	cr,lf,lf
  2515    43 6F 6D 70           	db	'Compilation aborted'
  2519    69 6C 61 74           
  251D    69 6F 6E 20           
  2521    61 62 6F 72           
  2525    74 65 64              
NULL  2528    00                    	db	null
OS  2529    C3 0000               	jp	OS		; Enter menue
L28FA  252C                          l28fa:
L0200  252C    CD 0200               	call	l0200		; Tell lines
  252F    20 6C 69 6E           	db	' lines'
  2533    65 73                 
CRLFLFNULLTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-140


  2535    0D 0A 0A 00           	db	cr,lf,lf,null
L7901  2539    3A 5A1E               	ld	a,(l7901)	; Get error code
  253C    B7                    	or	a		; Test any error
L2970  253D    20 3E                 	jr	nz,l2970	; Yeap
L7904  253F    2A 5A21               	ld	hl,(l7904)	; Get code start address
L20E2  2542    11 20E2               	ld	de,l20e2	; Get start of application
  2545    B7                    	or	a
  2546    ED 52                 	sbc	hl,de
  2548    19                    	add	hl,de
L232E  2549    C4 2344               	call	nz,l232e	; Tell free
L293A  254C                          l293a:
L0200  254C    CD 0200               	call	l0200
  254F    43 6F 64 65           	db	'Code: '
  2553    3A 20                 
NULL  2555    00                    	db	null
L7904  2556    ED 5B 5A21            	ld	de,(l7904)	; Get code start address
L7906  255A    2A 5A23               	ld	hl,(l7906)	; Get code end address
  255D    E5                    	push	hl
  255E    2B                    	dec	hl
L2338  255F    CD 234E               	call	l2338		; Tell free bytes
  2562    D1                    	pop	de
L7908  2563    2A 5A25               	ld	hl,(l7908)	; Get start of data
  2566    E5                    	push	hl
L232E  2567    CD 2344               	call	l232e		; Tell free
  256A    D1                    	pop	de
  256B    13                    	inc	de
L790A  256C    2A 5A27               	ld	hl,(l790a)	; Get end of code
L0200  256F    CD 0200               	call	l0200
  2572    44 61 74 61           	db	'Data: '
  2576    3A 20                 
NULL  2578    00                    	db	null
L2338  2579    CD 234E               	call	l2338		; Tell free bytes
  257C    C9                    	ret
                                ;
                                ; Process compiler error
                                ;
L2970  257D                          l2970:
_DSKFULL  257D    FE FA                 	cp	_DskFull	; Test disk error
L2A5A  257F    30 07                 	jr	nc,l2a5a	; Error, disk full
DISPNOMSG  2581    CD 25A5               	call	DispNoMsg	; Display number and optional message
PRSRCLINE  2584    CD 22C2               	call	PrSrcline	; Print error line
  2587    C9                    	ret
                                ;
                                ; Process disk full
                                ;
L2A5A  2588                          l2a5a:
L0200  2588    CD 0200               	call	l0200		; Tell error
  258B    44 69 73 6B           	db	'Disk or directory full'
  258F    20 6F 72 20           
  2593    64 69 72 65           
  2597    63 74 6F 72           
  259B    79 20 66 75           
  259F    6C 6C                 
NULL  25A1    00                    	db	null
OS  25A2    C3 0000               	jp	OS		; Exit
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-141


                                ; Display number and optional message
                                ;
DISPNOMSG  25A5                          DispNoMsg:
  25A5    47                    	ld	b,a		; Save error number
L0200  25A6    CD 0200               	call	l0200		; Tell error
  25A9    45 72 72 6F           	db	'Error '
  25AD    72 20                 
NULL  25AF    00                    	db	null
  25B0    26 00                 	ld	h,0
  25B2    68                    	ld	l,b		; Build 16 bit number
  25B3    C5                    	push	bc
L2E61  25B4    CD 268D               	call	l2e61		; Print it
  25B7    C1                    	pop	bc
L4541  25B8    3A 2705               	ld	a,(l4541)	; Test error message file read
  25BB    B7                    	or	a
  25BC    C8                    	ret	z		; No message file
L429E  25BD    2A 26A8               	ld	hl,(l429e)	; Get base of message file
L2995  25C0                          l2995:
  25C0    7E                    	ld	a,(hl)		; Get character
EOF  25C1    FE 1A                 	cp	eof		; Test end of message
  25C3    C8                    	ret	z		; Yeap
  25C4    FE 20                 	cp	' '		; Test control
L29AD  25C6    38 0F                 	jr	c,l29ad		; Yeap, skip it
  25C8    D6 30                 	sub	'0'		; Build number - always two digits
  25CA    4F                    	ld	c,a
  25CB    87                    	add	a,a
  25CC    87                    	add	a,a
  25CD    81                    	add	a,c
  25CE    87                    	add	a,a
  25CF    23                    	inc	hl
  25D0    86                    	add	a,(hl)		; Combine number
  25D1    D6 30                 	sub	'0'		; Fix it
  25D3    23                    	inc	hl
  25D4    B8                    	cp	b		; Test message found
L29B6  25D5    28 09                 	jr	z,l29b6		; Got it
L29AD  25D7                          l29ad:
  25D7    7E                    	ld	a,(hl)
  25D8    23                    	inc	hl
CR  25D9    FE 0D                 	cp	cr		; Skip to end of line
L29AD  25DB    20 FA                 	jr	nz,l29ad
  25DD    23                    	inc	hl
L2995  25DE    18 E0                 	jr	l2995		; Try next line
L29B6  25E0                          l29b6:
L0200  25E0    CD 0200               	call	l0200		; Tell result
  25E3    3A 20                 	db	': '
NULL  25E5    00                    	db	null
L29BC  25E6                          l29bc:
  25E6    7E                    	ld	a,(hl)		; Get character
CR  25E7    FE 0D                 	cp	cr		; Test end of text
  25E9    C8                    	ret	z		; That's all
  25EA    FE 20                 	cp	' '		; Test combined message
L29E6  25EC    30 21                 	jr	nc,l29e6	; Nope
L429E  25EE    ED 5B 26A8            	ld	de,(l429e)	; Get base of message file
L29C9  25F2                          l29c9:
  25F2    1A                    	ld	a,(de)		; Get character
  25F3    13                    	inc	de
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-142


  25F4    FE 20                 	cp	' '		; Test printable
L29DD  25F6    30 0E                 	jr	nc,l29dd	; Yeap, skip it
  25F8    BE                    	cp	(hl)		; Test extension found
L29DD  25F9    20 0B                 	jr	nz,l29dd	; Nope
L29D2  25FB                          l29d2:
  25FB    1A                    	ld	a,(de)		; Get from extended part
CR  25FC    FE 0D                 	cp	cr		; Test end of line
L29E9  25FE    28 12                 	jr	z,l29e9		; Yeap
L03C9  2600    CD 03C9               	call	l03c9		; Put substring to console
  2603    13                    	inc	de
L29D2  2604    18 F5                 	jr	l29d2
L29DD  2606                          l29dd:
  2606    1A                    	ld	a,(de)
  2607    13                    	inc	de
CR  2608    FE 0D                 	cp	cr		; Skip this line
L29DD  260A    20 FA                 	jr	nz,l29dd
  260C    13                    	inc	de
L29C9  260D    18 E3                 	jr	l29c9
L29E6  260F                          l29e6:
L03C9  260F    CD 03C9               	call	l03c9		; Put to console
L29E9  2612                          l29e9:
  2612    23                    	inc	hl
L29BC  2613    18 D1                 	jr	l29bc		; Loop on
                                ;
                                ; Ask for YES or NO - Z set is NO
                                ;
L2D01  2615                          l2d01:
L0200  2615    CD 0200               	call	l0200		; Tell what we does expect
  2618    20 28 59 2F           	db	' (Y/N)? '
  261C    4E 29 3F 20           
NULL  2620    00                    	db	null
L2D0D  2621                          l2d0d:
L03E1  2621    CD 03E1               	call	l03e1		; Read character
L04A6  2624    CD 04A6               	call	l04a6		; Convert to upper case
  2627    FE 59                 	cp	'Y'		; Test YES
L2D1B  2629    28 04                 	jr	z,l2d1b
  262B    FE 4E                 	cp	'N'		; Test NO
L2D0D  262D    20 F2                 	jr	nz,l2d0d
L2D1B  262F                          l2d1b:
L03C9  262F    CD 03C9               	call	l03c9		; Put to console
  2632    D6 4E                 	sub	'N'
  2634    C9                    	ret
                                ;
                                ; Build file <name>.PAS
                                ;
L2D2A  2635                          l2d2a:
  2635    3E 50                 	ld	a,'P'		; Set .PAS
  2637    21 5341               	ld	hl,'A'+'S'*256
L2D2F  263A                          l2d2f:
L005CFDRVFNAME  263A    32 0065               	ld	(l005c+Fdrv+Fname),a
L005CFDRVFNAME  263D    22 0066               	ld	(l005c+Fdrv+Fname+1),hl
  2640    0E 00                 	ld	c,0		; Set no wild card
L0406  2642    CD 0406               	call	l0406		; Parse file
L005C  2645    3A 005C               	ld	a,(l005c)	; Test drive given
  2648    B7                    	or	a
  2649    C0                    	ret	nz		; Yeap
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-143


  264A    D5                    	push	de
.RETDSK  264B    0E 19                 	ld	c,.retdsk
L7265  264D    CD 53A6               	call	l7265		; Return current disk
  2650    3C                    	inc	a
L005C  2651    32 005C               	ld	(l005c),a	; Set disk
  2654    D1                    	pop	de
  2655    C9                    	ret
                                ;
                                ; Init session
                                ;
L2D8F  2656                          l2d8f:
L4544  2656    2A 2706               	ld	hl,(l4544)	; Get start of text
  2659    36 20                 	ld	(hl),' '	; Clear it
  265B    23                    	inc	hl
L4546  265C    22 2708               	ld	(l4546),hl	; Save pointer
  265F    C9                    	ret
                                ;
                                ; Tell name of file ^DE
                                ;
L2DF8  2660                          l2df8:
  2660    13                    	inc	de
  2661    1A                    	ld	a,(de)		; Get name
  2662    1B                    	dec	de
  2663    B7                    	or	a		; Test defined
  2664    C8                    	ret	z		; Nope
  2665    1A                    	ld	a,(de)		; Get drive
  2666    C6 40                 	add	a,'A'-1
  2668    FE 40                 	cp	'A'-1		; Test default drive
L03C9  266A    C4 03C9               	call	nz,l03c9	; Put to console if not
  266D    3E 3A                 	ld	a,':'
L03C9  266F    C4 03C9               	call	nz,l03c9	; Give delimiter
FNAMEFEXT  2672    06 0B                 	ld	b,Fname+Fext	; Set length
L2E0C  2674                          l2e0c:
  2674    13                    	inc	de
  2675    1A                    	ld	a,(de)		; Get character
NOMSB  2676    E6 7F                 	and	NOMSB		; Strip off attribute
  2678    FE 20                 	cp	' '		; Test blank
L03C9  267A    C4 03C9               	call	nz,l03c9	; Put to console if not
  267D    78                    	ld	a,b
FEXT  267E    FE 04                 	cp	Fext+1		; Test extension follows
  2680    3E 2E                 	ld	a,'.'
L03C9  2682    CC 03C9               	call	z,l03c9		; Put delimiter to console if so
L2E0C  2685    10 ED                 	djnz	l2e0c
  2687    C9                    	ret
                                ;
                                ; Print integer in reg HL fixed sized
                                ;
L2E5C  2688                          l2e5c:
  2688    11 FFFB               	ld	de,-5		; Set size
L2E64  268B    18 03                 	jr	l2e64
                                ;
                                ; Print integer number in reg HL
                                ;
L2E61  268D                          l2e61:
  268D    11 FFFF               	ld	de,-1		; Set no size
L2E64  2690                          l2e64:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-144


  2690    DD E5                 	push	ix
  2692    FD E5                 	push	iy
  2694    E5                    	push	hl
  2695    D5                    	push	de
L149B  2696    CD 149B               	call	l149b		; Set standard device
  2699    E1                    	pop	hl
L1726  269A    CD 1726               	call	l1726		; Write integer
  269D    FD E1                 	pop	iy
  269F    DD E1                 	pop	ix
  26A1    C9                    	ret
                                ;
                                ; Type work file
                                ;
L3135  26A2                          l3135:
L451D  26A2    11 26E1               	ld	de,l451d
L2DF8  26A5    C3 2660               	jp	l2df8		; Tell name of file
                                ;
L429E  26A8                          l429e:
L7BF5  26A8    5D12                  	dw	l7bf5		; Base of message file
L4450  26AA                          l4450:
  26AA    0000                  	dw	0		; Current memory pointer
L4454  26AC                          l4454:
  26AC    0000                  	dw	0		; Block pointer
L4458  26AE                          l4458:
  26AE    0000                  	dw	0		; Edit pointer
L4460  26B0                          l4460:
  26B0    0000                  	dw	0		; Block start pointer
L4462  26B2                          l4462:
  26B2    0000                  	dw	0		; Block end pointer
L4468  26B4                          l4468:
  26B4    0000                  	dw	0		; Temporary edit pointer
L446A  26B6                          l446a:
  26B6    0000                  	dw	0		; Start of screen
L44F3  26B8                          l44f3:
  26B8    00                    	db	0		; Compile flag:
                                				;  = 0: Compile to COM-file
                                				; <> 0: Compile to CHN-file
L44F4  26B9                          l44f4:
L20E2  26B9    20E2                  	dw	l20e2		; Start address of compiler
L44F6  26BB                          l44f6:
  26BB    0000                  	dw	0		; Top of available memory
L44F9  26BD                          l44f9:
FCBLEN  26BD                          	ds	FCBlen		; Main file
L451D  26E1                          l451d:
FCBLEN  26E1                          	ds	FCBlen
L4541  2705                          l4541:
  2705    00                    	db	0		; Error message file flag (0 is not read)
L4544  2706                          l4544:
L7BF5  2706    5D12                  	dw	l7bf5		; Start of text
L4546  2708                          l4546:
L7BF5  2708    5D12                  	dw	l7bf5		; End of text
L4548  270A                          l4548:
  270A    0000                  	dw	0		; Top of available memory
                                ;
                                ; %%%%%%%%%%%%%%%%%%%%%%
                                ; %%% COMPILER ENTRY %%%
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-145


                                ; %%%%%%%%%%%%%%%%%%%%%%
                                ;
L454A  270C                          l454a:
L7B71  270C    ED 73 5C8E            	ld	(l7b71),sp	; Save stack
L4546  2710    2A 2708               	ld	hl,(l4546)	; Get end of text
  2713    23                    	inc	hl
L7BDF  2714    22 5CFC               	ld	(l7bdf),hl	; Save for memory top
  2717    24                    	inc	h		; Allow a gap of 1024 bytes
  2718    24                    	inc	h
  2719    24                    	inc	h
  271A    24                    	inc	h
L7BE1  271B    22 5CFE               	ld	(l7be1),hl	; Save for top of .COM file
L790A  271E    2A 5A27               	ld	hl,(l790a)	; Get end of code
L7908  2721    22 5A25               	ld	(l7908),hl	; Save for start of data
  2724    AF                    	xor	a
  2725    67                    	ld	h,a
  2726    6F                    	ld	l,a
L7B91  2727    32 5CAE               	ld	(l7b91),a	; Clear ????
L7B92  272A    32 5CAF               	ld	(l7b92),a	; Clear ????
L7B94  272D    32 5CB1               	ld	(l7b94),a	; Clear ????
L7BA2  2730    32 5CBF               	ld	(l7ba2),a	; Clear end of file
L7BA0  2733    32 5CBD               	ld	(l7ba0),a	; Clear end on break [option U+]
L7BE3  2736    32 5D00               	ld	(l7be3),a	; Clear back fix level
L790E  2739    32 5A2B               	ld	(l790e),a	; Enable memory read
L7B96  273C    32 5CB3               	ld	(l7b96),a	; Clear OVERLAY number
L7BDB  273F    32 5CF8               	ld	(l7bdb),a	; Clear file access
L7BDD  2742    22 5CFA               	ld	(l7bdd),hl	; Clear record base
L7BEF  2745    22 5D0C               	ld	(l7bef),hl	; Clear line count
L718F  2748    CD 52D0               	call	l718f		; Test abort
  274B    2B                    	dec	hl
L7933_RRN  274C    22 5A71               	ld	(l7933+_rrn),hl	; Set highest record
_CHAR  274F    3E 0D                 	ld	a,_Char+1
L7B93  2751    32 5CB0               	ld	(l7b93),a	; Set special type
_ROPT_UOPT  2754    3E F5                 	ld	a,NOT (_Ropt+_Uopt)
L7B9D  2756    32 5CBA               	ld	(l7b9d),a	; Set default options
DEFWITH  2759    3E 04                 	ld	a,2*DefWITH
L7BC7  275B    32 5CE4               	ld	(l7bc7),a	; Set depth for WITH
L4544  275E    2A 2706               	ld	hl,(l4544)	; Get start of text
L7BD7  2761    22 5CF4               	ld	(l7bd7),hl	; Init source pointer
L7BD9  2764    22 5CF6               	ld	(l7bd9),hl
L79D7  2767    DD 21 5AF4            	ld	ix,l79d7	; Init start of line
NULL  276B    DD 36 00 00           	ld	(ix+0),null	; Set line empty
L7904  276F    2A 5A21               	ld	hl,(l7904)	; Get code start address
L6CC2  2772    CD 4E1B               	call	l6cc2		; Check chaining
L4548  2775    2A 270A               	ld	hl,(l4548)	; Get top of available memory
  2778    2B                    	dec	hl
L7B77  2779    22 5C94               	ld	(l7b77),hl	; Save
  277C    54                    	ld	d,h
  277D    5D                    	ld	e,l
LENLAB  277E    01 01B4               	ld	bc,LenLab	; Get length of internal table
  2781    B7                    	or	a
  2782    ED 42                 	sbc	hl,bc
L7B73  2784    22 5C90               	ld	(l7b73),hl	; Init label pointers
L7B75  2787    22 5C92               	ld	(l7b75),hl
L7B7B  278A    22 5C98               	ld	(l7b7b),hl
L6BC7  278D    CD 4D3E               	call	l6bc7		; Check enough memory
L731FLENLABTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-146


  2790    21 55F0               	ld	hl,l731f+LenLab-1
  2793    ED B8                 	lddr			; Unpack symbol table
L45EA  2795    CD 27A6               	call	l45ea		; Go compile
L6C96  2798    CD 4DEF               	call	l6c96		; Fix back level
L6CFD  279B    CD 4E51               	call	l6cfd		; Write record
L45E2  279E                          l45e2:
L7906  279E    FD 22 5A23            	ld	(l7906),iy	; Save new top of code
  27A2    AF                    	xor	a
L72E3  27A3    C3 5404               	jp	l72e3		; Set special zero error
                                ;
                                ; Do the compiler task
                                ;
L45EA  27A6                          l45ea:
L6F95  27A6    CD 50E9               	call	l6f95		; Process line
L6E76  27A9    CD 4FCA               	call	l6e76		; Find PROGRAM
L7529  27AC    5647                  	dw	l7529
L460A  27AE    20 16                 	jr	nz,l460a	; Nope
L4692  27B0    CD 2846               	call	l4692		; Build dummy label
L6F1B  27B3    CD 506F               	call	l6f1b		; Test (
L4607  27B6    20 0B                 	jr	nz,l4607	; Nope
L45FC  27B8                          l45fc:
L4692  27B8    CD 2846               	call	l4692		; Build dummy label
L6F13  27BB    CD 5067               	call	l6f13		; Test ,
L45FC  27BE    28 F8                 	jr	z,l45fc		; Yeap, get next dummy
L6F6E  27C0    CD 50C2               	call	l6f6e		; Verify )
L4607  27C3                          l4607:
L6F48  27C3    CD 509C               	call	l6f48		; Verify ;
L460A  27C6                          l460a:
.LD.SP  27C6    3E 31                 	ld	a,.LD.SP
TPA  27C8    21 0100               	ld	hl,TPA
L6B94  27CB    CD 4D2A               	call	l6b94		; Set LD SP,TPA
L79D7  27CE    21 5AF4               	ld	hl,l79d7	; Get start of source line
L0080  27D1    11 0080               	ld	de,l0080
L6C30  27D4    CD 4D9A               	call	l6c30		; Allow space for loader
L6B92  27D7    CD 4D28               	call	l6b92		; Set LD HL,L79D7
L7B9D  27DA    3A 5CBA               	ld	a,(l7b9d)	; Get options
.COPT  27DD    CB 7F                 	bit	.Copt,a		; Test $C+
  27DF    16 00                 	ld	d,0
L462E  27E1    28 01                 	jr	z,l462e		; Nope
  27E3    15                    	dec	d
L462E  27E4                          l462e:
  27E4    D5                    	push	de		; Save flag
.LD.BC  27E5    3E 01                 	ld	a,.LD.BC
L6B9C  27E7    CD 4D32               	call	l6b9c		; Set LD BC,FLAG
  27EA    FD E5                 	push	iy		; Save PC
L6B97  27EC    CD 4D2D               	call	l6b97		; Set dummy word
L0364  27EF    21 0364               	ld	hl,l0364
L6B86  27F2    CD 4D1C               	call	l6b86		; Set CALL INIPRG
.LD.HL  27F5    3E 21                 	ld	a,.LD.HL
L6B9C  27F7    CD 4D32               	call	l6b9c		; Set LD HL,1STFREE
  27FA    FD E5                 	push	iy		; Save PC
L6B97  27FC    CD 4D2D               	call	l6b97		; Set dummy word
.LD.DE  27FF    3E 11                 	ld	a,.LD.DE
L6B9C  2801    CD 4D32               	call	l6b9c		; Set LD DE,LASTFREE
  2804    FD E5                 	push	iy		; Save PC
L6B97  2806    CD 4D2D               	call	l6b97		; Set dummy word
L790ATURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-147


  2809    2A 5A27               	ld	hl,(l790a)	; Get end of code
L6B8A  280C    CD 4D20               	call	l6b8a		; Set LD BC,TOPRAM
  280F    26 01                 	ld	h,1
.LD.A  2811    2E 3E                 	ld	l,.LD.A
L6B97  2813    CD 4D2D               	call	l6b97		; Set LD A,FLAG
L04D4  2816    21 04D4               	ld	hl,l04d4
L6B86  2819    CD 4D1C               	call	l6b86		; Set CALL RANGCHK
L469E  281C    CD 2852               	call	l469e		; Do a block
L52FC  281F    CD 3492               	call	l52fc
  2822    DD 7E 00              	ld	a,(ix+0)
  2825    FE 2E                 	cp	'.'		; Verify closing .
L72DA  2827    CD 53FB               	call	l72da
_DOTEXP  282A    0A                    	db	_DotExp
L20D4  282B    21 20D4               	ld	hl,l20d4
L6B82  282E    CD 4D18               	call	l6b82		; Set JP HALT
  2831    E1                    	pop	hl		; Get back PC for LASTFREE
L7908  2832    ED 5B 5A25            	ld	de,(l7908)	; Get start of data
L6C42  2836    CD 4DAC               	call	l6c42		; Store back
  2839    E1                    	pop	hl		; Get back PC for 1STFREE
L6C3F  283A    CD 4DA9               	call	l6c3f		; Store back current PC
  283D    E1                    	pop	hl		; Get back PC for FLAG
  283E    D1                    	pop	de		; Get FLAG
L7BA0  283F    3A 5CBD               	ld	a,(l7ba0)	; Get end on break flag [option U+]
  2842    5F                    	ld	e,a
L6C42  2843    C3 4DAC               	jp	l6c42		; Store it back
                                ;
                                ; Build dummy label
                                ;
L4692  2846                          l4692:
L7B73  2846    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  2849    E5                    	push	hl		; Save it
L6D87  284A    CD 4EDB               	call	l6d87		; Get label
  284D    E1                    	pop	hl
L7B73  284E    22 5C90               	ld	(l7b73),hl	; Restore label pointer
  2851    C9                    	ret
                                ;
                                ; Perform a block
                                ;
L469E  2852                          l469e:
L7BC7  2852    3A 5CE4               	ld	a,(l7bc7)	; Get depth for WITH
  2855    F5                    	push	af
  2856    87                    	add	a,a		; Double it
  2857    5F                    	ld	e,a
  2858    16 00                 	ld	d,0
L6C30  285A    CD 4D9A               	call	l6c30		; Allocate space for it
  285D    E5                    	push	hl
L6B77  285E    CD 4D0D               	call	l6b77		; Set JP
  2861    FD E5                 	push	iy		; Save PC
  2863    E5                    	push	hl
L6B97  2864    CD 4D2D               	call	l6b97		; Set dummy word
L46B3  2867                          l46b3:
L6E5A  2867    CD 4FAE               	call	l6e5a		; Find statement
_BYTE  286A    01                    	db	_Byte
L7584  286B    56A2                  	dw	l7584
L72DA  286D    CD 53FB               	call	l72da		; Must be
_BEGINEXP  2870    0C                    	db	_BEGINexp
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-148


  2871    7E                    	ld	a,(hl)		; Get type
L46BE  2872                          l46be:
_LABEL  2872    FE 01                 	cp	_Label		; Test LABEL
L46C7  2874    20 05                 	jr	nz,l46c7	; Nope
L488E  2876    CD 2A24               	call	l488e		; Process it
L46B3  2879    18 EC                 	jr	l46b3
L46C7  287B                          l46c7:
_CONST  287B    FE 02                 	cp	_Const		; Test CONST
L46D0  287D    20 05                 	jr	nz,l46d0	; Nope
L48B7  287F    CD 2A4D               	call	l48b7		; Process it
L46BE  2882    18 EE                 	jr	l46be
L46D0  2884                          l46d0:
_TYPE  2884    FE 03                 	cp	_Type		; Test TYPE
L46D9  2886    20 05                 	jr	nz,l46d9	; Nope
L4AEB  2888    CD 2C81               	call	l4aeb		; Process it
L46BE  288B    18 E5                 	jr	l46be
L46D9  288D                          l46d9:
_VAR  288D    FE 04                 	cp	_Var		; Test VAR
L46E6  288F    20 09                 	jr	nz,l46e6	; Nope
L4B2A  2891    CD 2CC0               	call	l4b2a		; Process it
L7908  2894    2A 5A25               	ld	hl,(l7908)	; Get start of data
  2897    E3                    	ex	(sp),hl
L46BE  2898    18 D8                 	jr	l46be
L46E6  289A                          l46e6:
_OVERLY  289A    FE 07                 	cp	_Overly		; Test OVERLAY
L485E  289C    C2 29F4               	jp	nz,l485e
L7933FDRV  289F    21 5A51               	ld	hl,l7933+Fdrv
L7BB2  28A2    11 5CCF               	ld	de,l7bb2
FNAME  28A5    01 0008               	ld	bc,Fname
  28A8    ED B0                 	ldir			; Copy name of file
L7B96  28AA    21 5CB3               	ld	hl,l7b96	; Point to OVERLAY number
  28AD    7E                    	ld	a,(hl)		; Get current number
  28AE    34                    	inc	(hl)		; Advance it
  28AF    EB                    	ex	de,hl		; Get pointer to extension
  28B0    36 30                 	ld	(hl),'0'	; Init extension
  28B2    23                    	inc	hl
  28B3    06 2F                 	ld	b,'0'-1		; Init tens
L4709  28B5                          l4709:
  28B5    04                    	inc	b		; Divide by ten
  28B6    D6 0A                 	sub	10
L4709  28B8    30 FB                 	jr	nc,l4709
  28BA    70                    	ld	(hl),b		; Save tens
  28BB    23                    	inc	hl
  28BC    C6 3A                 	add	a,'9'+1		; Calculate units
  28BE    77                    	ld	(hl),a		; Save it
L1C59  28BF    21 1C59               	ld	hl,l1c59
L6B86  28C2    CD 4D1C               	call	l6b86		; Set CALL OVERLAY
  28C5    21 FFFF               	ld	hl,-1
L6B97  28C8    CD 4D2D               	call	l6b97		; Save word
L7BB2  28CB    21 5CCF               	ld	hl,l7bb2	; Point to name
FNAMEFEXT  28CE    06 0B                 	ld	b,Fname+Fext
L4724  28D0                          l4724:
  28D0    7E                    	ld	a,(hl)
L6B9C  28D1    CD 4D32               	call	l6b9c		; Store name and extension
  28D4    23                    	inc	hl
L4724  28D5    10 F9                 	djnz	l4724
L6C96TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-149


  28D7    CD 4DEF               	call	l6c96		; Fix back level
  28DA    AF                    	xor	a
L7BE3  28DB    32 5D00               	ld	(l7be3),a	; Set back fix level
L6CFD  28DE    CD 4E51               	call	l6cfd		; Write record
L7BDD  28E1    2A 5CFA               	ld	hl,(l7bdd)	; Get record base
  28E4    E5                    	push	hl
L7902  28E5    2A 5A1F               	ld	hl,(l7902)	; Get code pointer
  28E8    E5                    	push	hl
L7BB0  28E9    2A 5CCD               	ld	hl,(l7bb0)	; Get length of overlay
  28EC    E5                    	push	hl
L7902  28ED    FD 22 5A1F            	ld	(l7902),iy	; Set code pointer
  28F1    21 0000               	ld	hl,0
L7BB0  28F4    22 5CCD               	ld	(l7bb0),hl	; Clear length of overlay
FCBLEN  28F7    21 FFDC               	ld	hl,-FCBlen
  28FA    39                    	add	hl,sp		; Let some space on stack for FCB
  28FB    F9                    	ld	sp,hl
  28FC    EB                    	ex	de,hl
L7933  28FD    21 5A50               	ld	hl,l7933
FCBLEN  2900    01 0024               	ld	bc,FCBlen
  2903    ED B0                 	ldir			; Unpack current FCB
L7BB2  2905    21 5CCF               	ld	hl,l7bb2
L7933FDRV  2908    11 5A51               	ld	de,l7933+Fdrv
FNAMEFEXT  290B    01 000B               	ld	bc,Fname+Fext
  290E    ED B0                 	ldir			; Copy overlay FCB to .COM FCB
  2910    EB                    	ex	de,hl
FCBLENFDRVFNAMEFEXT  2911    06 18                 	ld	b,FCBlen-Fdrv-Fname-Fext
L4773  2913                          l4773:
  2913    36 00                 	ld	(hl),0		; Clear remainder of FCB
  2915    23                    	inc	hl
L4773  2916    10 FB                 	djnz	l4773
L7933  2918    11 5A50               	ld	de,l7933
  291B    D5                    	push	de
.DELETE  291C    0E 13                 	ld	c,.delete
L7265  291E    CD 53A6               	call	l7265		; Delete file
  2921    D1                    	pop	de
.MAKE  2922    0E 16                 	ld	c,.make
L7265  2924    CD 53A6               	call	l7265		; Create new one
  2927    3C                    	inc	a
L72D4  2928    CD 53F5               	call	l72d4		; Must be success
_NOOVL  292B    5C                    	db	_NoOvl
  292C    AF                    	xor	a
L7BDB  292D    32 5CF8               	ld	(l7bdb),a	; Clear file access
L7BDC  2930    32 5CF9               	ld	(l7bdc),a	; Clear record pointer
L7908  2933    2A 5A25               	ld	hl,(l7908)	; Get start of data
L7BAB  2936    22 5CC8               	ld	(l7bab),hl	; Set for overlay
L4799  2939                          l4799:
L6E5A  2939    CD 4FAE               	call	l6e5a		; Find PROCEDURE or FUNCTION
  293C    01                    	db	1
L75A7  293D    56C5                  	dw	l75a7
L72DA  293F    CD 53FB               	call	l72da		; Must be either
_SUBEXP  2942    10                    	db	_SUBexp
  2943    7E                    	ld	a,(hl)		; Get type
  2944    FD E5                 	push	iy
L7933_RRN  2946    2A 5A71               	ld	hl,(l7933+_rrn)	; Get current record
L7BDD  2949    22 5CFA               	ld	(l7bdd),hl	; Set record base
L7908  294C    2A 5A25               	ld	hl,(l7908)	; Get start of data
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-150


  294F    E5                    	push	hl
L7BAB  2950    2A 5CC8               	ld	hl,(l7bab)	; Get address of overlay data
  2953    E5                    	push	hl
  2954    1E FF                 	ld	e,-1
L4B3A  2956    CD 2CD0               	call	l4b3a		; Perform PROCEDURE/FUNCTION
  2959    44                    	ld	b,h
  295A    4D                    	ld	c,l
  295B    D1                    	pop	de		; Get back overlay data
L7908  295C    2A 5A25               	ld	hl,(l7908)	; Get start of data
  295F    B7                    	or	a
  2960    ED 52                 	sbc	hl,de		; Test min
  2962    19                    	add	hl,de
L47C6  2963    38 01                 	jr	c,l47c6
  2965    EB                    	ex	de,hl		; Swap addresses
L47C6  2966                          l47c6:
L7BAB  2966    22 5CC8               	ld	(l7bab),hl	; Set address of overlay data
  2969    E1                    	pop	hl
L7908  296A    22 5A25               	ld	(l7908),hl	; Set start of data
  296D    D1                    	pop	de
  296E    C5                    	push	bc
  296F    D5                    	push	de
L6C96  2970    CD 4DEF               	call	l6c96		; Yeap, fix back level
  2973    AF                    	xor	a
L7BE3  2974    32 5D00               	ld	(l7be3),a	; Reset back fix level
  2977    D1                    	pop	de
  2978    D5                    	push	de
L47DD  2979                          l47dd:
  2979    FD E5                 	push	iy		; Copy code pointer
  297B    E1                    	pop	hl
  297C    B7                    	or	a
  297D    ED 52                 	sbc	hl,de		; Get difference
  297F    7D                    	ld	a,l
RECLNG  2980    E6 7F                 	and	RecLng-1	; Test record boundary
L47EE  2982    28 06                 	jr	z,l47ee		; Yeap
  2984    AF                    	xor	a
L6B9C  2985    CD 4D32               	call	l6b9c		; Fill remainder with zeroes
L47DD  2988    18 EF                 	jr	l47dd
L47EE  298A                          l47ee:
  298A    29                    	add	hl,hl		; Calculate lenght in bytes
  298B    5C                    	ld	e,h
  298C    16 00                 	ld	d,0
  298E    CB 12                 	rl	d
L7BB0  2990    2A 5CCD               	ld	hl,(l7bb0)	; Get length of overlay
  2993    ED 52                 	sbc	hl,de		; Test max
L47FF  2995    30 04                 	jr	nc,l47ff
L7BB0  2997    ED 53 5CCD            	ld	(l7bb0),de	; Set new length
L47FF  299B                          l47ff:
  299B    FD E1                 	pop	iy		; Get back PC
  299D    E1                    	pop	hl
  299E    23                    	inc	hl
  299F    73                    	ld	(hl),e		; Save record
  29A0    23                    	inc	hl
  29A1    72                    	ld	(hl),d
L6E76  29A2    CD 4FCA               	call	l6e76		; Find more OVERLAY
L759F  29A5    56BD                  	dw	l759f
L4799  29A7    28 90                 	jr	z,l4799		; Yeap
L7BABTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-151


  29A9    2A 5CC8               	ld	hl,(l7bab)	; Get address of overlay data
L7908  29AC    22 5A25               	ld	(l7908),hl	; Set start of data
L7933  29AF    11 5A50               	ld	de,l7933
.CLOSE  29B2    0E 10                 	ld	c,.close
L7265  29B4    CD 53A6               	call	l7265		; Close file
  29B7    21 0000               	ld	hl,0
  29BA    39                    	add	hl,sp		; Copy stack
L7933  29BB    11 5A50               	ld	de,l7933
FCBLEN  29BE    01 0024               	ld	bc,FCBlen
  29C1    ED B0                 	ldir			; Get back original .COM FCB
  29C3    F9                    	ld	sp,hl
L7BB0  29C4    ED 5B 5CCD            	ld	de,(l7bb0)	; Get length of overlay
  29C8    E1                    	pop	hl
L7BB0  29C9    22 5CCD               	ld	(l7bb0),hl	; Set new length
  29CC    E1                    	pop	hl
L7902  29CD    22 5A1F               	ld	(l7902),hl	; Set code pointer
  29D0    E1                    	pop	hl
L7BDD  29D1    22 5CFA               	ld	(l7bdd),hl	; Set record base
  29D4    AF                    	xor	a
L7BDB  29D5    32 5CF8               	ld	(l7bdb),a	; Clear file access
  29D8    21 FFFF               	ld	hl,-1
L7933_RRN  29DB    22 5A71               	ld	(l7933+_rrn),hl	; Set highest record number
  29DE    FD E5                 	push	iy
  29E0    E1                    	pop	hl
L6CC2  29E1    CD 4E1B               	call	l6cc2		; Check chaining
L484E  29E4                          l484e:
RECLNG  29E4    06 80                 	ld	b,RecLng
L4850  29E6                          l4850:
  29E6    AF                    	xor	a
L6B9C  29E7    CD 4D32               	call	l6b9c		; Clear record
L4850  29EA    10 FA                 	djnz	l4850
  29EC    1B                    	dec	de
  29ED    7A                    	ld	a,d		; Test all done
  29EE    B3                    	or	e
L484E  29EF    20 F3                 	jr	nz,l484e
L46B3  29F1    C3 2867               	jp	l46b3
L485E  29F4                          l485e:
_BEGIN  29F4    FE 08                 	cp	_Begin		; Test BEGIN
L486A  29F6    28 08                 	jr	z,l486a		; Yeap
  29F8    1E 00                 	ld	e,0
L4B3A  29FA    CD 2CD0               	call	l4b3a		; Perform PROCEDURE/FUNCTION
L46B3  29FD    C3 2867               	jp	l46b3
L486A  2A00                          l486a:
L4E8A  2A00    CD 3020               	call	l4e8a		; Process it
  2A03    D1                    	pop	de
  2A04    E1                    	pop	hl
  2A05    D5                    	push	de
  2A06    FD E5                 	push	iy		; Copy PC
  2A08    D1                    	pop	de
  2A09    1B                    	dec	de		; Fix it
  2A0A    1B                    	dec	de
  2A0B    B7                    	or	a
  2A0C    ED 52                 	sbc	hl,de		; Calculate size
  2A0E    19                    	add	hl,de
L4880  2A0F    28 05                 	jr	z,l4880
L6C3F  2A11    CD 4DA9               	call	l6c3f		; Store back PC
L4884TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-152


  2A14    18 04                 	jr	l4884
L4880  2A16                          l4880:
  2A16    2B                    	dec	hl
L6CC2  2A17    CD 4E1B               	call	l6cc2		; Check chaining
L4884  2A1A                          l4884:
  2A1A    D1                    	pop	de
  2A1B    E1                    	pop	hl
L7BCA  2A1C    22 5CE7               	ld	(l7bca),hl
  2A1F    F1                    	pop	af
L7BC6  2A20    32 5CE3               	ld	(l7bc6),a
  2A23    C9                    	ret
                                ;
                                ; Process LABEL
                                ;
L488E  2A24                          l488e:
  2A24    11 0100               	ld	de,256*1+0
L6D75  2A27    CD 4EC9               	call	l6d75		; Put to table
  2A2A    DD 7E 00              	ld	a,(ix+0)
L7282  2A2D    CD 53C3               	call	l7282		; Test valid character
L6D8D  2A30    CD 4EE1               	call	l6d8d		; Build label
L7B94  2A33    3A 5CB1               	ld	a,(l7b94)	; Get ???
L6D7A  2A36    CD 4ECE               	call	l6d7a		; Put to label
  2A39    06 03                 	ld	b,3
L48A5  2A3B                          l48a5:
  2A3B    3E FF                 	ld	a,-1
L6D7A  2A3D    CD 4ECE               	call	l6d7a		; Set end
L48A5  2A40    10 F9                 	djnz	l48a5
L6DC6  2A42    CD 4F1A               	call	l6dc6		; Set label pointer
L6F13  2A45    CD 5067               	call	l6f13		; Test ,
L488E  2A48    28 DA                 	jr	z,l488e		; Yeap
L6F48  2A4A    C3 509C               	jp	l6f48		; Verify ;
                                ;
                                ; Process CONST
                                ;
L48B7  2A4D                          l48b7:
L7B73  2A4D    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  2A50    E5                    	push	hl
  2A51    11 0000               	ld	de,256*0+0
L6D75  2A54    CD 4EC9               	call	l6d75		; Put to table
L6D87  2A57    CD 4EDB               	call	l6d87		; Get label
L6F23  2A5A    CD 5077               	call	l6f23		; Test =
L4901  2A5D    20 38                 	jr	nz,l4901	; Nope, must be : then
L6A0D  2A5F    CD 4BA3               	call	l6a0d		; Get constant
  2A62    78                    	ld	a,b		; Get type
L6D7A  2A63    CD 4ECE               	call	l6d7a		; Store into table
  2A66    78                    	ld	a,b		; Get back type
_REAL  2A67    FE 09                 	cp	_Real		; Test real
L48E3  2A69    20 0E                 	jr	nz,l48e3	; Nope
  2A6B    D9                    	exx
  2A6C    E5                    	push	hl		; Save reals
  2A6D    D5                    	push	de
  2A6E    C5                    	push	bc
  2A6F    06 03                 	ld	b,3		; Set word count
L48DB  2A71                          l48db:
  2A71    D1                    	pop	de		; Get part of real
L6D75  2A72    CD 4EC9               	call	l6d75		; Put to table
L48DBTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-153


  2A75    10 FA                 	djnz	l48db
L48FA  2A77    18 17                 	jr	l48fa
L48E3  2A79                          l48e3:
_STRING  2A79    FE 08                 	cp	_String		; Test string
L48F6  2A7B    20 0F                 	jr	nz,l48f6	; Nope, must be integer
L7A57  2A7D    21 5B74               	ld	hl,l7a57	; Get buffer
  2A80    79                    	ld	a,c		; Get length
  2A81    0C                    	inc	c		; Fix it
L48EC  2A82                          l48ec:
L6D7A  2A82    CD 4ECE               	call	l6d7a		; Put to table
  2A85    7E                    	ld	a,(hl)
  2A86    23                    	inc	hl
  2A87    0D                    	dec	c
L48EC  2A88    20 F8                 	jr	nz,l48ec
L48FA  2A8A    18 04                 	jr	l48fa
L48F6  2A8C                          l48f6:
  2A8C    EB                    	ex	de,hl		; Get integer
L6D75  2A8D    CD 4EC9               	call	l6d75		; Put to table
L48FA  2A90                          l48fa:
L6DC6  2A90    CD 4F1A               	call	l6dc6		; Set label pointer
  2A93    16 02                 	ld	d,2
L4928  2A95    18 27                 	jr	l4928
L4901  2A97                          l4901:
L6F40  2A97    CD 5094               	call	l6f40		; Verify :
  2A9A    AF                    	xor	a
L6D7A  2A9B    CD 4ECE               	call	l6d7a		; Store zero in table
L6D72  2A9E    CD 4EC6               	call	l6d72		; Store PC to table
L7B73  2AA1    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  2AA4    E5                    	push	hl
L6D75  2AA5    CD 4EC9               	call	l6d75		; Put to table
L6DC6  2AA8    CD 4F1A               	call	l6dc6		; Set label pointer
L4F9B  2AAB    CD 3131               	call	l4f9b		; Get type
  2AAE    E1                    	pop	hl		; Get back label pointer
L7B5A  2AAF    ED 5B 5C77            	ld	de,(l7b5a)	; Get type table
  2AB3    72                    	ld	(hl),d		; Store into
  2AB4    2B                    	dec	hl
  2AB5    73                    	ld	(hl),e
L6F76  2AB6    CD 50CA               	call	l6f76		; Verify =
L4937  2AB9    CD 2ACD               	call	l4937		; Assign constant
  2ABC    16 04                 	ld	d,4
L4928  2ABE                          l4928:
  2ABE    E1                    	pop	hl		; Get back label pointer
  2ABF    72                    	ld	(hl),d		; Put into
L6F48  2AC0    CD 509C               	call	l6f48		; Verify ;
L6E5A  2AC3    CD 4FAE               	call	l6e5a		; Find statement
  2AC6    01                    	db	1
L7584  2AC7    56A2                  	dw	l7584
L48B7  2AC9    20 82                 	jr	nz,l48b7	; Nope
  2ACB    7E                    	ld	a,(hl)		; Get type
  2ACC    C9                    	ret
                                ;
                                ; Process presetted constant
                                ;
L4937  2ACD                          l4937:
L7B5C  2ACD    3A 5C79               	ld	a,(l7b5c)	; Get type
_PTR  2AD0    FE 04                 	cp	_Ptr		; Test valid
L4946TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-154


  2AD2    38 08                 	jr	c,l4946		; May not be a file
_STRING  2AD4    FE 08                 	cp	_String
L4946  2AD6    30 04                 	jr	nc,l4946
L72E1  2AD8    CD 5402               	call	l72e1
_INVFILPTR  2ADB    3D                    	db	_InvFilPtr
L4946  2ADC                          l4946:
_ARRAY  2ADC    FE 01                 	cp	_Array		; Test ARRAY constant
L49A1  2ADE    20 57                 	jr	nz,l49a1	; Nope
L6D2A  2AE0    CD 4E7E               	call	l6d2a		; Save environment
L7B60  2AE3    2A 5C7D               	ld	hl,(l7b60)	; Get hi set limit
L5271  2AE6    CD 3407               	call	l5271		; Load name
L7B6D  2AE9    2A 5C8A               	ld	hl,(l7b6d)	; Get last memory address
L7B6B  2AEC    ED 5B 5C88            	ld	de,(l7b6b)
  2AF0    B7                    	or	a
  2AF1    ED 52                 	sbc	hl,de
  2AF3    23                    	inc	hl
  2AF4    E5                    	push	hl
L7B5E  2AF5    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
L5287  2AF8    CD 341D               	call	l5287		; Get name
  2AFB    D1                    	pop	de
L7B5C  2AFC    3A 5C79               	ld	a,(l7b5c)	; Get type
_CHAR  2AFF    FE 0C                 	cp	_Char		; Test character
L4978  2B01    20 0B                 	jr	nz,l4978
  2B03    7A                    	ld	a,d		; Test byte
  2B04    B7                    	or	a
L4978  2B05    20 07                 	jr	nz,l4978	; Nope
L6F1B  2B07    CD 506F               	call	l6f1b		; Test (
L498A  2B0A    20 14                 	jr	nz,l498a	; Nope
L497B  2B0C    18 03                 	jr	l497b
L4978  2B0E                          l4978:
L6F66  2B0E    CD 50BA               	call	l6f66		; Verify (
L497B  2B11                          l497b:
  2B11    D5                    	push	de
L4937  2B12    CD 2ACD               	call	l4937		; Recursive assign constant
  2B15    D1                    	pop	de
  2B16    1B                    	dec	de
  2B17    7A                    	ld	a,d
  2B18    B3                    	or	e
L499A  2B19    28 15                 	jr	z,l499a
L6F5E  2B1B    CD 50B2               	call	l6f5e		; Verify ,
L497B  2B1E    18 F1                 	jr	l497b
L498A  2B20                          l498a:
  2B20    D5                    	push	de
L69FD  2B21    CD 4B93               	call	l69fd		; Get string constant
  2B24    D1                    	pop	de
  2B25    79                    	ld	a,c		; Get length
  2B26    BB                    	cp	e
L72DA  2B27    CD 53FB               	call	l72da		; Verify valid length
_STRCONST  2B2A    32                    	db	_StrConst
L6B62  2B2B    CD 4CF8               	call	l6b62		; Store string
L499D  2B2E    18 03                 	jr	l499d
L499A  2B30                          l499a:
L6F6E  2B30    CD 50C2               	call	l6f6e		; Verify )
L499D  2B33                          l499d:
L6D49  2B33    CD 4E9D               	call	l6d49		; Get back environment
  2B36    C9                    	ret
L49A1TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-155


  2B37                          l49a1:
_RECORD  2B37    FE 02                 	cp	_Record		; Test RECORD constant
L49FA  2B39    20 55                 	jr	nz,l49fa	; Nope
L6D2A  2B3B    CD 4E7E               	call	l6d2a		; Save environment
L6F66  2B3E    CD 50BA               	call	l6f66		; Verify (
L7B5D  2B41    3A 5C7A               	ld	a,(l7b5d)
  2B44    4F                    	ld	c,a
L7B62  2B45    2A 5C7F               	ld	hl,(l7b62)	; Get length of type
  2B48    E5                    	push	hl
  2B49    21 0000               	ld	hl,0
L49B6  2B4C                          l49b6:
  2B4C    C5                    	push	bc
  2B4D    E5                    	push	hl
_PTR  2B4E    06 04                 	ld	b,_Ptr
L6E54  2B50    CD 4FA8               	call	l6e54		; Get pointer label
L72DA  2B53    CD 53FB               	call	l72da		; Should be found
_UNDEF  2B56    29                    	db	_Undef
L5276  2B57    CD 340C               	call	l5276		; Get values and name
  2B5A    D1                    	pop	de
L7B58  2B5B    2A 5C75               	ld	hl,(l7b58)	; Get value
  2B5E    B7                    	or	a
  2B5F    ED 52                 	sbc	hl,de
  2B61    19                    	add	hl,de
L72DA  2B62    CD 53FB               	call	l72da		; Verify valid size
_INVSETORDER  2B65    45                    	db	_InvSetOrder
L7B62  2B66    ED 5B 5C7F            	ld	de,(l7b62)	; Get length of type
  2B6A    19                    	add	hl,de
  2B6B    E5                    	push	hl
L6F40  2B6C    CD 5094               	call	l6f40		; Verify :
L4937  2B6F    CD 2ACD               	call	l4937		; Assign constant recursively
  2B72    E1                    	pop	hl
  2B73    C1                    	pop	bc
L6F0F  2B74    CD 5063               	call	l6f0f		; Test ;
L49B6  2B77    28 D3                 	jr	z,l49b6		; Yeap
L6F6E  2B79    CD 50C2               	call	l6f6e		; Verify )
  2B7C    D1                    	pop	de
  2B7D    EB                    	ex	de,hl
  2B7E    B7                    	or	a
  2B7F    ED 52                 	sbc	hl,de
L49EB  2B81                          l49eb:
  2B81    7C                    	ld	a,h		; Test zero
  2B82    B5                    	or	l
L49F6  2B83    28 07                 	jr	z,l49f6		; Yeap
  2B85    AF                    	xor	a
L6B9C  2B86    CD 4D32               	call	l6b9c		; Fill zeroes
  2B89    2B                    	dec	hl
L49EB  2B8A    18 F5                 	jr	l49eb
L49F6  2B8C                          l49f6:
L6D49  2B8C    CD 4E9D               	call	l6d49		; Get back environment
  2B8F    C9                    	ret
L49FA  2B90                          l49fa:
_SET  2B90    FE 03                 	cp	_Set		; Test SET constant
L4A7A  2B92    20 7C                 	jr	nz,l4a7a	; Nope
L6D2A  2B94    CD 4E7E               	call	l6d2a		; Save environment
L7B62  2B97    2A 5C7F               	ld	hl,(l7b62)	; Get length of type
L7B6F  2B9A    22 5C8C               	ld	(l7b6f),hl
L7B5ETURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-156


  2B9D    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
L5287  2BA0    CD 341D               	call	l5287		; Get name
L6F30  2BA3    CD 5084               	call	l6f30		; Verify [
L7BA9  2BA6    DD 22 5CC6            	ld	(l7ba9),ix	; Save line pointer
L0581  2BAA    CD 0581               	call	l0581		; Initialize a set on stack
L7BA9  2BAD    DD 2A 5CC6            	ld	ix,(l7ba9)	; Get back line pointer
L6EF7  2BB1    CD 504B               	call	l6ef7		; Test ]
L4A4B  2BB4    28 2B                 	jr	z,l4a4b		; Yeap
L4A20  2BB6                          l4a20:
L4ACA  2BB6    CD 2C60               	call	l4aca
  2BB9    E5                    	push	hl
L6E76  2BBA    CD 4FCA               	call	l6e76		; Find ..
L7580  2BBD    569E                  	dw	l7580
L4A37  2BBF    20 0C                 	jr	nz,l4a37	; Nope
L4ACA  2BC1    CD 2C60               	call	l4aca
L7BA9  2BC4    DD 22 5CC6            	ld	(l7ba9),ix	; Save source pointer
L059B  2BC8    CD 059B               	call	l059b		; Init a contiguous set value
L4A3F  2BCB    18 08                 	jr	l4a3f
L4A37  2BCD                          l4a37:
  2BCD    E1                    	pop	hl
L7BA9  2BCE    DD 22 5CC6            	ld	(l7ba9),ix	; Save source pointer
L0591  2BD2    CD 0591               	call	l0591		; Init one set element
L4A3F  2BD5                          l4a3f:
L7BA9  2BD5    DD 2A 5CC6            	ld	ix,(l7ba9)	; Get back source pointer
L6F13  2BD9    CD 5067               	call	l6f13		; Test ,
L4A20  2BDC    28 D8                 	jr	z,l4a20		; Yeap
L6F38  2BDE    CD 508C               	call	l6f38		; Verify ]
L4A4B  2BE1                          l4a4b:
L7A57  2BE1    21 5B74               	ld	hl,l7a57
SET.LEN  2BE4    01 0020               	ld	bc,set.len
L7BA9  2BE7    DD 22 5CC6            	ld	(l7ba9),ix	; Save source pointer
L0612  2BEB    CD 0612               	call	l0612		; Assign set variable
L7BA9  2BEE    DD 2A 5CC6            	ld	ix,(l7ba9)	; Get back source pointer
L7A57  2BF2    21 5B74               	ld	hl,l7a57
L7B5E  2BF5    3A 5C7B               	ld	a,(l7b5e)	; Get lo set limit
  2BF8    1F                    	rra			; Divide by 8
  2BF9    1F                    	rra
  2BFA    1F                    	rra
SET.LEN  2BFB    E6 1F                 	and	set.len-1	; Get modulo
  2BFD    5F                    	ld	e,a
  2BFE    16 00                 	ld	d,0
  2C00    19                    	add	hl,de		; Build pointer
L7B6F  2C01    3A 5C8C               	ld	a,(l7b6f)	; Get length
  2C04    47                    	ld	b,a
L4A6F  2C05                          l4a6f:
  2C05    7E                    	ld	a,(hl)		; Get bytes
L6B9C  2C06    CD 4D32               	call	l6b9c		; Store them
  2C09    23                    	inc	hl
L4A6F  2C0A    10 F9                 	djnz	l4a6f
L6D49  2C0C    CD 4E9D               	call	l6d49		; Get back environment
  2C0F    C9                    	ret
L4A7A  2C10                          l4a7a:
_STRING  2C10    FE 08                 	cp	_String		; Test STRING constant
L4A99  2C12    20 1B                 	jr	nz,l4a99	; Nope
L69FD  2C14    CD 4B93               	call	l69fd		; Get string constant
L7B62  2C17    3A 5C7F               	ld	a,(l7b62)	; Get length of string
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-157


  2C1A    3D                    	dec	a
  2C1B    91                    	sub	c
  2C1C    47                    	ld	b,a
L4A8D  2C1D    30 04                 	jr	nc,l4a8d
  2C1F    81                    	add	a,c
  2C20    4F                    	ld	c,a		; Set length
  2C21    06 00                 	ld	b,0
L4A8D  2C23                          l4a8d:
L6B5E  2C23    CD 4CF4               	call	l6b5e		; Put string
  2C26    04                    	inc	b
L4A91  2C27                          l4a91:
  2C27    05                    	dec	b
  2C28    C8                    	ret	z
  2C29    AF                    	xor	a
L6B9C  2C2A    CD 4D32               	call	l6b9c		; Fill zeroes
L4A91  2C2D    18 F8                 	jr	l4a91
L4A99  2C2F                          l4a99:
_REAL  2C2F    FE 09                 	cp	_Real		; Test REAL constant
L4ABC  2C31    20 1F                 	jr	nz,l4abc	; Nope
L69EA  2C33    CD 4B80               	call	l69ea		; Get constant
  2C36    78                    	ld	a,b		; Get type
_REAL  2C37    FE 09                 	cp	_Real		; Test real
L4AAF  2C39    28 0A                 	jr	z,l4aaf		; Yeap
_INTEG  2C3B    FE 0A                 	cp	_Integ		; Test integer
L72DA  2C3D    CD 53FB               	call	l72da		; Should be
_INTREALCEXP  2C40    19                    	db	_IntRealCexp
L1008  2C41    CD 1008               	call	l1008		; Convert to real
  2C44    D9                    	exx
L4AAF  2C45                          l4aaf:
  2C45    D9                    	exx
  2C46    C5                    	push	bc
  2C47    D5                    	push	de
  2C48    E5                    	push	hl
REAL.LEN  2C49    06 03                 	ld	b,real.len/2	; Set word count
L4AB5  2C4B                          l4ab5:
  2C4B    E1                    	pop	hl
L6B97  2C4C    CD 4D2D               	call	l6b97		; Save real number
L4AB5  2C4F    10 FA                 	djnz	l4ab5
  2C51    C9                    	ret
L4ABC  2C52                          l4abc:
L4ACA  2C52    CD 2C60               	call	l4aca
L7B62  2C55    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  2C58    3D                    	dec	a
  2C59    7D                    	ld	a,l
L6B9C  2C5A    CA 4D32               	jp	z,l6b9c		; Set byte
L6B97  2C5D    C3 4D2D               	jp	l6b97		; Or set word
                                ;
                                ;
                                ;
L4ACA  2C60                          l4aca:
L69EA  2C60    CD 4B80               	call	l69ea		; Get constant
L7B5C  2C63    3A 5C79               	ld	a,(l7b5c)	; Get type
  2C66    B8                    	cp	b		; Verify same types
L72DA  2C67    CD 53FB               	call	l72da
_INVTYPE  2C6A    2C                    	db	_InvType
L7B5E  2C6B    ED 5B 5C7B            	ld	de,(l7b5e)	; Get lo set limit
L728DTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-158


  2C6F    CD 53CE               	call	l728d		; Compare
L4AE7  2C72    38 09                 	jr	c,l4ae7		; Out of range
L7B60  2C74    ED 5B 5C7D            	ld	de,(l7b60)	; Get hi set limit
L728D  2C78    CD 53CE               	call	l728d		; Compare
  2C7B    D8                    	ret	c
  2C7C    C8                    	ret	z
L4AE7  2C7D                          l4ae7:
L72E1  2C7D    CD 5402               	call	l72e1
_CONSTRANGE  2C80    2D                    	db	_ConstRange
                                ;
                                ; Process TYPE
                                ;
L4AEB  2C81                          l4aeb:
L7B73  2C81    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  2C84    E5                    	push	hl
L4AEF  2C85                          l4aef:
L7B73  2C85    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  2C88    E5                    	push	hl
  2C89    11 0000               	ld	de,0
L6D75  2C8C    CD 4EC9               	call	l6d75		; Put to table
L6D87  2C8F    CD 4EDB               	call	l6d87		; Get label
L7B73  2C92    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  2C95    E5                    	push	hl
L6D75  2C96    CD 4EC9               	call	l6d75		; Put to table
L6DC6  2C99    CD 4F1A               	call	l6dc6		; Set label pointer
L6F76  2C9C    CD 50CA               	call	l6f76		; Verify =
L4F9B  2C9F    CD 3131               	call	l4f9b		; Get type
  2CA2    E1                    	pop	hl
L7B5A  2CA3    ED 5B 5C77            	ld	de,(l7b5a)	; Get type table
  2CA7    72                    	ld	(hl),d		; Store into
  2CA8    2B                    	dec	hl
  2CA9    73                    	ld	(hl),e
  2CAA    E1                    	pop	hl
  2CAB    36 03                 	ld	(hl),3
L6F48  2CAD    CD 509C               	call	l6f48		; Verify ;
L6E5A  2CB0    CD 4FAE               	call	l6e5a		; Find statement
_BYTE  2CB3    01                    	db	_Byte
L7584  2CB4    56A2                  	dw	l7584
L4AEF  2CB6    20 CD                 	jr	nz,l4aef	; Nope
  2CB8    7E                    	ld	a,(hl)		; Fetch type
  2CB9    E1                    	pop	hl
  2CBA    F5                    	push	af
L5295  2CBB    CD 342B               	call	l5295
  2CBE    F1                    	pop	af
  2CBF    C9                    	ret
                                ;
                                ; Process VAR
                                ;
L4B2A  2CC0                          l4b2a:
L4F35  2CC0    CD 30CB               	call	l4f35
L6F48  2CC3    CD 509C               	call	l6f48		; Verify ;
L6E5A  2CC6    CD 4FAE               	call	l6e5a		; Find statement
_BYTE  2CC9    01                    	db	_Byte
L7584  2CCA    56A2                  	dw	l7584
L4B2A  2CCC    20 F2                 	jr	nz,l4b2a	; Nope
  2CCE    7E                    	ld	a,(hl)		; Fetch type
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-159


  2CCF    C9                    	ret
                                ;
                                ; Perform PROCEDURE/FUNCTION
                                ;
                                ; Accu holds PROCEDURE or FUNCTION
                                ; Reg E holds overlay flag (-1)
                                ;
L4B3A  2CD0                          l4b3a:
  2CD0    47                    	ld	b,a
  2CD1    0E 00                 	ld	c,0
_PROC  2CD3    D6 05                 	sub	_Proc		; Get type
L7B97  2CD5    32 5CB4               	ld	(l7b97),a	; 0 is PROCEDURE
  2CD8    7B                    	ld	a,e		; Get overlay
L7B99  2CD9    32 5CB6               	ld	(l7b99),a	; 0 is normal
L7B9D  2CDC    3A 5CBA               	ld	a,(l7b9d)	; Get options
L7B9E  2CDF    32 5CBB               	ld	(l7b9e),a	; Set local options
  2CE2    C5                    	push	bc
L6DDB  2CE3    CD 4F2F               	call	l6ddb
L4C61  2CE6    CA 2DF7               	jp	z,l4c61
  2CE9    D1                    	pop	de
L6D75  2CEA    CD 4EC9               	call	l6d75		; Put to table
L6D87  2CED    CD 4EDB               	call	l6d87		; Get label
L7B7B  2CF0    2A 5C98               	ld	hl,(l7b7b)	; Get current label pointer
  2CF3    E5                    	push	hl
L7B75  2CF4    2A 5C92               	ld	hl,(l7b75)	; Get previous label pointer
L7B7B  2CF7    22 5C98               	ld	(l7b7b),hl
L7B73  2CFA    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  2CFD    E5                    	push	hl
L6D75  2CFE    CD 4EC9               	call	l6d75		; Put to table
L6D75  2D01    CD 4EC9               	call	l6d75		; Multiple
L6D75  2D04    CD 4EC9               	call	l6d75
L6D75  2D07    CD 4EC9               	call	l6d75
L7BDD  2D0A    ED 5B 5CFA            	ld	de,(l7bdd)	; Get record base
L6D75  2D0E    CD 4EC9               	call	l6d75		; Put to table
  2D11    11 0000               	ld	de,0
L6D75  2D14    CD 4EC9               	call	l6d75		; Put to table
L6F1B  2D17    CD 506F               	call	l6f1b		; Test (
  2D1A    06 00                 	ld	b,0		; Clear parameter count
L4BDA  2D1C    20 52                 	jr	nz,l4bda	; Nope
L4B88  2D1E                          l4b88:
  2D1E    C5                    	push	bc
L7B73  2D1F    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  2D22    E5                    	push	hl
L6D75  2D23    CD 4EC9               	call	l6d75		; Put to table
L6D75  2D26    CD 4EC9               	call	l6d75		; Twice
L6E76  2D29    CD 4FCA               	call	l6e76		; Find VAR
L7595  2D2C    56B3                  	dw	l7595
  2D2E    01 0000               	ld	bc,0
L4B9E  2D31    20 01                 	jr	nz,l4b9e	; Nope
  2D33    0D                    	dec	c		; Indicate VAR
L4B9E  2D34                          l4b9e:
  2D34    C5                    	push	bc
L6D87  2D35    CD 4EDB               	call	l6d87		; Get label
  2D38    C1                    	pop	bc
  2D39    04                    	inc	b		; Count parameters
L6F13  2D3A    CD 5067               	call	l6f13		; Test ,
L4B9ETURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-160


  2D3D    28 F5                 	jr	z,l4b9e		; Yeap
  2D3F    C5                    	push	bc
L6F0B  2D40    CD 505F               	call	l6f0b		; Test :
L4BB8  2D43    20 09                 	jr	nz,l4bb8	; Nope
  2D45    79                    	ld	a,c
L7B8F  2D46    32 5CAC               	ld	(l7b8f),a	; Save state
L4F18  2D49    CD 30AE               	call	l4f18		; Get variable
L4BC3  2D4C    18 0B                 	jr	l4bc3
L4BB8  2D4E                          l4bb8:
  2D4E    0C                    	inc	c		; Verify not VAR
L72DA  2D4F    CD 53FB               	call	l72da
_SEMIEXP  2D52    02                    	db	_SemiExp
L750B  2D53    21 5630               	ld	hl,l750b+7
L7B5A  2D56    22 5C77               	ld	(l7b5a),hl	; Init type table
L4BC3  2D59                          l4bc3:
  2D59    C1                    	pop	bc
  2D5A    E1                    	pop	hl
  2D5B    70                    	ld	(hl),b
  2D5C    2B                    	dec	hl
  2D5D    71                    	ld	(hl),c
L7B5A  2D5E    ED 5B 5C77            	ld	de,(l7b5a)	; Get type table
  2D62    2B                    	dec	hl
  2D63    72                    	ld	(hl),d		; Store into
  2D64    2B                    	dec	hl
  2D65    73                    	ld	(hl),e
  2D66    C1                    	pop	bc
  2D67    04                    	inc	b
L6F0F  2D68    CD 5063               	call	l6f0f		; Test ;
L4B88  2D6B    28 B1                 	jr	z,l4b88		; Yeap
L6F6E  2D6D    CD 50C2               	call	l6f6e		; Verify )
L4BDA  2D70                          l4bda:
  2D70    C5                    	push	bc
L7B97  2D71    3A 5CB4               	ld	a,(l7b97)
  2D74    B7                    	or	a		; Test PROCEDURE
L4C07  2D75    28 26                 	jr	z,l4c07		; Yeap
L6F40  2D77    CD 5094               	call	l6f40		; Verify :
  2D7A    AF                    	xor	a
L7B8F  2D7B    32 5CAC               	ld	(l7b8f),a
L4F18  2D7E    CD 30AE               	call	l4f18		; Get variable
L7B5C  2D81    3A 5C79               	ld	a,(l7b5c)	; Get type
_STRING  2D84    FE 08                 	cp	_String		; Test range
L4BF8  2D86    30 06                 	jr	nc,l4bf8
_PTR  2D88    FE 04                 	cp	_Ptr		; Should be pointer
L72DA  2D8A    CD 53FB               	call	l72da
_INVRESULT  2D8D    30                    	db	_InvResult
L4BF8  2D8E                          l4bf8:
  2D8E    C1                    	pop	bc
  2D8F    E1                    	pop	hl
  2D90    E5                    	push	hl
  2D91    C5                    	push	bc
  2D92    11 FFFC               	ld	de,-4
  2D95    19                    	add	hl,de		; Fix pointer
L7B5A  2D96    ED 5B 5C77            	ld	de,(l7b5a)	; Get type table
  2D9A    72                    	ld	(hl),d		; Store into
  2D9B    2B                    	dec	hl
  2D9C    73                    	ld	(hl),e
L4C07TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-161


  2D9D                          l4c07:
  2D9D    C1                    	pop	bc
  2D9E    D1                    	pop	de
  2D9F    E1                    	pop	hl
L7B7B  2DA0    22 5C98               	ld	(l7b7b),hl	; Restore current label pointer
  2DA3    D5                    	push	de
  2DA4    C5                    	push	bc
L6DC6  2DA5    CD 4F1A               	call	l6dc6		; Set label pointer
L6F48  2DA8    CD 509C               	call	l6f48		; Verify ;
L7B99  2DAB    3A 5CB6               	ld	a,(l7b99)
  2DAE    B7                    	or	a		; Test overlay
L4C44  2DAF    20 29                 	jr	nz,l4c44	; Yeap
L6E76  2DB1    CD 4FCA               	call	l6e76		; Find FORWARD
L7533  2DB4    5651                  	dw	l7533
L4C2C  2DB6    20 0A                 	jr	nz,l4c2c	; Nope
  2DB8    FD E5                 	push	iy		; Copy PC
  2DBA    D1                    	pop	de
L6B82  2DBB    CD 4D18               	call	l6b82		; Set JP <addr>
  2DBE    3E FF                 	ld	a,-1
L4C38  2DC0    18 0C                 	jr	l4c38
L4C2C  2DC2                          l4c2c:
L6E76  2DC2    CD 4FCA               	call	l6e76		; Find EXTERNAL
L753A  2DC5    5658                  	dw	l753a
L4C44  2DC7    20 11                 	jr	nz,l4c44	; Nope
L69F2  2DC9    CD 4B88               	call	l69f2		; Get integer constant
  2DCC    EB                    	ex	de,hl
  2DCD    AF                    	xor	a
L4C38  2DCE                          l4c38:
  2DCE    C1                    	pop	bc
  2DCF    E1                    	pop	hl
  2DD0    77                    	ld	(hl),a		; Store values
  2DD1    2B                    	dec	hl
  2DD2    70                    	ld	(hl),b
  2DD3    2B                    	dec	hl
  2DD4    72                    	ld	(hl),d		; Set address
  2DD5    2B                    	dec	hl
  2DD6    73                    	ld	(hl),e
L6F48  2DD7    C3 509C               	jp	l6f48		; Verify ;
L4C44  2DDA                          l4c44:
  2DDA    C1                    	pop	bc
  2DDB    E1                    	pop	hl
  2DDC    E5                    	push	hl
  2DDD    36 00                 	ld	(hl),0		; Set values
  2DDF    2B                    	dec	hl
  2DE0    70                    	ld	(hl),b
  2DE1    2B                    	dec	hl
  2DE2    FD E5                 	push	iy		; Copy PC
  2DE4    D1                    	pop	de
L7B99  2DE5    3A 5CB6               	ld	a,(l7b99)
  2DE8    B7                    	or	a		; Test overlay
L4C5B  2DE9    28 06                 	jr	z,l4c5b		; Nope
  2DEB    EB                    	ex	de,hl
  2DEC    01 FFF0               	ld	bc,-16
  2DEF    09                    	add	hl,bc		; Fix value
  2DF0    EB                    	ex	de,hl
L4C5B  2DF1                          l4c5b:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-162


  2DF1    72                    	ld	(hl),d		; Save address
  2DF2    2B                    	dec	hl
  2DF3    73                    	ld	(hl),e
  2DF4    E1                    	pop	hl
L4C76  2DF5    18 15                 	jr	l4c76
L4C61  2DF7                          l4c61:
  2DF7    7E                    	ld	a,(hl)
  2DF8    B7                    	or	a
L72D4  2DF9    CD 53F5               	call	l72d4		; Verify label not found
_DOUBLELAB  2DFC    2B                    	db	_DoubleLab
L7B99  2DFD    3A 5CB6               	ld	a,(l7b99)
  2E00    B7                    	or	a		; Test overlay (0 is not)
L72DA  2E01    CD 53FB               	call	l72da		; Verify not FORWARD overlay
_OVLFORW  2E04    4C                    	db	_OvlFORW
L6E96  2E05    CD 4FEA               	call	l6e96		; Set new pointer
  2E08    D1                    	pop	de
L6F48  2E09    CD 509C               	call	l6f48		; Verify ;
L4C76  2E0C                          l4c76:
  2E0C    EB                    	ex	de,hl
L7B9D  2E0D    3A 5CBA               	ld	a,(l7b9d)	; Get option
L7908  2E10    2A 5A25               	ld	hl,(l7908)	; Get start of data
.AOPT  2E13    CB 57                 	bit	.Aopt,a		; Test $A+ - absolute code for recursion
L4C84  2E15    28 03                 	jr	z,l4c84		; Yeap
  2E17    21 0000               	ld	hl,0
L4C84  2E1A                          l4c84:
L7B83  2E1A    22 5CA0               	ld	(l7b83),hl
L7B7B  2E1D    2A 5C98               	ld	hl,(l7b7b)	; Get current label pointer
  2E20    E5                    	push	hl
L7B73  2E21    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
L7B7B  2E24    22 5C98               	ld	(l7b7b),hl	; Into current
  2E27    E5                    	push	hl
  2E28    EB                    	ex	de,hl
  2E29    7E                    	ld	a,(hl)
  2E2A    36 00                 	ld	(hl),0
  2E2C    2B                    	dec	hl
  2E2D    46                    	ld	b,(hl)
  2E2E    2B                    	dec	hl
  2E2F    56                    	ld	d,(hl)
  2E30    2B                    	dec	hl
  2E31    5E                    	ld	e,(hl)
  2E32    2B                    	dec	hl
  2E33    B7                    	or	a
L4CA7  2E34    28 07                 	jr	z,l4ca7
  2E36    E5                    	push	hl
  2E37    EB                    	ex	de,hl
  2E38    23                    	inc	hl
L6C3F  2E39    CD 4DA9               	call	l6c3f		; Store back PC
  2E3C    E1                    	pop	hl
L4CA7  2E3D                          l4ca7:
L7B97  2E3D    3A 5CB4               	ld	a,(l7b97)
  2E40    B7                    	or	a		; Test PROCEDURE
L4CD2  2E41    28 25                 	jr	z,l4cd2		; Yeap
  2E43    56                    	ld	d,(hl)
  2E44    2B                    	dec	hl
  2E45    5E                    	ld	e,(hl)
  2E46    2B                    	dec	hl
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-163


  2E47    E5                    	push	hl
  2E48    EB                    	ex	de,hl
L5287  2E49    CD 341D               	call	l5287		; Get name
L7B5C  2E4C    3A 5C79               	ld	a,(l7b5c)	; Get type
L7B87  2E4F    32 5CA4               	ld	(l7b87),a
L7B62  2E52    2A 5C7F               	ld	hl,(l7b62)	; Get length of type
  2E55    7D                    	ld	a,l
L7B88  2E56    32 5CA5               	ld	(l7b88),a	; save lo
  2E59    EB                    	ex	de,hl
L6C30  2E5A    CD 4D9A               	call	l6c30		; Allocate space
L7B89  2E5D    22 5CA6               	ld	(l7b89),hl
  2E60    EB                    	ex	de,hl
  2E61    E1                    	pop	hl
  2E62    72                    	ld	(hl),d
  2E63    2B                    	dec	hl
  2E64    73                    	ld	(hl),e
  2E65    2B                    	dec	hl
L4CD6  2E66    18 04                 	jr	l4cd6
L4CD2  2E68                          l4cd2:
  2E68    11 FFFC               	ld	de,-4
  2E6B    19                    	add	hl,de
L4CD6  2E6C                          l4cd6:
  2E6C    11 FFFC               	ld	de,-4
  2E6F    19                    	add	hl,de
  2E70    E5                    	push	hl
  2E71    0E 00                 	ld	c,0
  2E73    78                    	ld	a,b
  2E74    B7                    	or	a
L4D2B  2E75    28 4A                 	jr	z,l4d2b
L4CE1  2E77                          l4ce1:
  2E77    7E                    	ld	a,(hl)
  2E78    81                    	add	a,c
  2E79    4F                    	ld	c,a
  2E7A    C5                    	push	bc
  2E7B    46                    	ld	b,(hl)
  2E7C    2B                    	dec	hl
  2E7D    7E                    	ld	a,(hl)
L7B8F  2E7E    32 5CAC               	ld	(l7b8f),a
  2E81    2B                    	dec	hl
  2E82    56                    	ld	d,(hl)		; Get type table
  2E83    2B                    	dec	hl
  2E84    5E                    	ld	e,(hl)
  2E85    2B                    	dec	hl
  2E86    E5                    	push	hl
  2E87    EB                    	ex	de,hl
L7B5A  2E88    22 5C77               	ld	(l7b5a),hl	; Save type table
L5287  2E8B    CD 341D               	call	l5287		; Get name
L7B73  2E8E    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  2E91    E3                    	ex	(sp),hl
  2E92    C5                    	push	bc
L4CFD  2E93                          l4cfd:
  2E93    C5                    	push	bc
  2E94    11 0400               	ld	de,4*256+0
L6D75  2E97    CD 4EC9               	call	l6d75		; Put to table
L4D04  2E9A                          l4d04:
  2E9A    7E                    	ld	a,(hl)
L6D7ATURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-164


  2E9B    CD 4ECE               	call	l6d7a		; Store into table
_MB  2E9E    CB 7E                 	bit	_MB,(hl)	; Test end of table
  2EA0    2B                    	dec	hl
L4D04  2EA1    28 F7                 	jr	z,l4d04		; Nope
  2EA3    E5                    	push	hl
L6D7A  2EA4    CD 4ECE               	call	l6d7a		; Store last byte into table
L6D75  2EA7    CD 4EC9               	call	l6d75		; Put to table
L6D75  2EAA    CD 4EC9               	call	l6d75
L6DC6  2EAD    CD 4F1A               	call	l6dc6		; Set label pointer
  2EB0    E1                    	pop	hl
  2EB1    C1                    	pop	bc
L4CFD  2EB2    10 DF                 	djnz	l4cfd
  2EB4    C1                    	pop	bc
  2EB5    E3                    	ex	(sp),hl
  2EB6    AF                    	xor	a
L7B90  2EB7    32 5CAD               	ld	(l7b90),a
L4F52  2EBA    CD 30E8               	call	l4f52
  2EBD    E1                    	pop	hl
  2EBE    C1                    	pop	bc
L4CE1  2EBF    10 B6                 	djnz	l4ce1
L4D2B  2EC1                          l4d2b:
  2EC1    41                    	ld	b,c
  2EC2    C5                    	push	bc
L7B73  2EC3    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  2EC6    E5                    	push	hl
L7B83  2EC7    2A 5CA0               	ld	hl,(l7b83)
  2ECA    E5                    	push	hl
L7B89  2ECB    2A 5CA6               	ld	hl,(l7b89)
  2ECE    E5                    	push	hl
L7B87  2ECF    3A 5CA4               	ld	a,(l7b87)
  2ED2    F5                    	push	af
L7B88  2ED3    3A 5CA5               	ld	a,(l7b88)
  2ED6    F5                    	push	af
L7B97  2ED7    3A 5CB4               	ld	a,(l7b97)	; Get PROCEDURE/FUNCTION flag
  2EDA    F5                    	push	af		; Save it
L7B94  2EDB    21 5CB1               	ld	hl,l7b94	; Point to ???
  2EDE    34                    	inc	(hl)
L469E  2EDF    CD 2852               	call	l469e		; Perform a block
  2EE2    F1                    	pop	af
L7B97  2EE3    32 5CB4               	ld	(l7b97),a	; Reset flag
  2EE6    F1                    	pop	af
L7B88  2EE7    32 5CA5               	ld	(l7b88),a
  2EEA    F1                    	pop	af
L7B87  2EEB    32 5CA4               	ld	(l7b87),a
  2EEE    E1                    	pop	hl
L7B89  2EEF    22 5CA6               	ld	(l7b89),hl
  2EF2    E1                    	pop	hl
L7B83  2EF3    22 5CA0               	ld	(l7b83),hl
L7B85  2EF6    ED 53 5CA2            	ld	(l7b85),de
  2EFA    7C                    	ld	a,h
  2EFB    B5                    	or	l
L4D79  2EFC    28 11                 	jr	z,l4d79
  2EFE    ED 52                 	sbc	hl,de
L4D79  2F00    28 0D                 	jr	z,l4d79
L6B8A  2F02    CD 4D20               	call	l6b8a		; Set LD BC,val16
  2F05    EB                    	ex	de,hl
L6B92TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-165


  2F06    CD 4D28               	call	l6b92		; Set LD HL,val16
L0508  2F09    21 0508               	ld	hl,l0508	; Set recursion routine
L6B86  2F0C    CD 4D1C               	call	l6b86		; Set CALL RECUR
L4D79  2F0F                          l4d79:
  2F0F    E1                    	pop	hl
  2F10    C1                    	pop	bc
  2F11    04                    	inc	b
  2F12    05                    	dec	b
L4DF3  2F13    CA 2F89               	jp	z,l4df3
L6B50  2F16    CD 4CE6               	call	l6b50		; Set POP IY
@L1  2F19    02                    	db	@L1
$I1  2F1A                          $I1:
  2F1A    FD E1                 	POP	IY
@L1$I1  0002                          @L1	equ	$-$I1
L4D86  2F1C                          l4d86:
  2F1C    C5                    	push	bc
  2F1D    23                    	inc	hl
  2F1E    5E                    	ld	e,(hl)
  2F1F    23                    	inc	hl
  2F20    56                    	ld	d,(hl)
  2F21    19                    	add	hl,de
  2F22    E5                    	push	hl
  2F23    2B                    	dec	hl
  2F24    2B                    	dec	hl
L4D8F  2F25                          l4d8f:
_MB  2F25    CB 7E                 	bit	_MB,(hl)	; Test end of string
  2F27    2B                    	dec	hl
L4D8F  2F28    28 FB                 	jr	z,l4d8f		; Nope
L5276  2F2A    CD 340C               	call	l5276		; Get values and name
L7B57  2F2D    3A 5C74               	ld	a,(l7b57)
  2F30    B7                    	or	a
L4DD4  2F31    20 37                 	jr	nz,l4dd4
L7B5C  2F33    3A 5C79               	ld	a,(l7b5c)	; Get type
_SET  2F36    FE 03                 	cp	_Set
L4DBD  2F38    38 19                 	jr	c,l4dbd
L4DE6  2F3A    28 40                 	jr	z,l4de6
_PTR  2F3C    FE 04                 	cp	_Ptr
L4DE3  2F3E    28 39                 	jr	z,l4de3
_STRING  2F40    FE 08                 	cp	_String
L4DBD  2F42    38 0F                 	jr	c,l4dbd
L4DE6  2F44    28 36                 	jr	z,l4de6
_INTEG  2F46    FE 0A                 	cp	_Integ
L4DE3  2F48    30 2F                 	jr	nc,l4de3
L6B50  2F4A    CD 4CE6               	call	l6b50		; Set POP sequence
@L2  2F4D    03                    	db	@L2
$I2  2F4E                          $I2:
  2F4E    E1                    	POP	HL
  2F4F    D1                    	POP	DE
  2F50    C1                    	POP	BC
@L2$I2  0003                          @L2	equ	$-$I2
L4DE6  2F51    18 29                 	jr	l4de6
L4DBD  2F53                          l4dbd:
L6B73  2F53    CD 4D09               	call	l6b73		; Set POP HL
L7B58  2F56    2A 5C75               	ld	hl,(l7b58)	; Get value
L6B8E  2F59    CD 4D24               	call	l6b8e		; Set LD DE,val16
L7B62  2F5C    2A 5C7F               	ld	hl,(l7b62)	; Get length of type
L6B8ATURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-166


  2F5F    CD 4D20               	call	l6b8a		; Set LD BC,val16
L6B50  2F62    CD 4CE6               	call	l6b50		; Set LDIR
@L3  2F65    02                    	db	@L3
$I3  2F66                          $I3:
  2F66    ED B0                 	LDIR
@L3$I3  0002                          @L3	equ	$-$I3
L4DE9  2F68    18 15                 	jr	l4de9
L4DD4  2F6A                          l4dd4:
  2F6A    AF                    	xor	a
L7B57  2F6B    32 5C74               	ld	(l7b57),a
_PTR  2F6E    3E 04                 	ld	a,_Ptr
L7B5C  2F70    32 5C79               	ld	(l7b5c),a	; Set POINTER
  2F73    21 0002               	ld	hl,2
L7B62  2F76    22 5C7F               	ld	(l7b62),hl	; Set length of pointer type
L4DE3  2F79                          l4de3:
L6B73  2F79    CD 4D09               	call	l6b73		; Set POP HL
L4DE6  2F7C                          l4de6:
L661B  2F7C    CD 47B1               	call	l661b
L4DE9  2F7F                          l4de9:
  2F7F    E1                    	pop	hl
  2F80    C1                    	pop	bc
L4D86  2F81    10 99                 	djnz	l4d86
L6B50  2F83    CD 4CE6               	call	l6b50		; Set PUSH IY
@L4  2F86    02                    	db	@L4
$I4  2F87                          $I4:
  2F87    FD E5                 	PUSH	IY
@L4$I4  0002                          @L4	equ	$-$I4
L4DF3  2F89                          l4df3:
L52FC  2F89    CD 3492               	call	l52fc
L7B94  2F8C    21 5CB1               	ld	hl,l7b94	; Point to ???
  2F8F    35                    	dec	(hl)
L7B97  2F90    3A 5CB4               	ld	a,(l7b97)
  2F93    B7                    	or	a		; Test PROCEDURE
L4E46  2F94    28 46                 	jr	z,l4e46		; Yeap
L7B89  2F96    2A 5CA6               	ld	hl,(l7b89)
L7B87  2F99    3A 5CA4               	ld	a,(l7b87)
_STRING  2F9C    FE 08                 	cp	_String
L4E24  2F9E    20 1A                 	jr	nz,l4e24
  2FA0    47                    	ld	b,a
L6B50  2FA1    CD 4CE6               	call	l6b50		; Set POP IY
@L5  2FA4    02                    	db	@L5
$I5  2FA5                          $I5:
  2FA5    FD E1                 	POP	IY
@L5$I5  0002                          @L5	equ	$-$I5
.LD.HL  2FA7    3E 21                 	ld	a,.LD.HL
L6B94  2FA9    CD 4D2A               	call	l6b94		; Set LD HL,val16
L053A  2FAC    21 053A               	ld	hl,l053a
L6B86  2FAF    CD 4D1C               	call	l6b86		; Move string to stack
L6B50  2FB2    CD 4CE6               	call	l6b50
@L6  2FB5    02                    	db	@L6
$I6  2FB6                          $I6:
  2FB6    FD E5                 	PUSH	IY
@L6$I6  0002                          @L6	equ	$-$I6
L4E46  2FB8    18 22                 	jr	l4e46
L4E24  2FBA                          l4e24:
_REAL  2FBA    FE 09                 	cp	_Real
L4E35TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-167


  2FBC    20 0D                 	jr	nz,l4e35
.LD.HL  2FBE    3E 21                 	ld	a,.LD.HL
L6B94  2FC0    CD 4D2A               	call	l6b94		; Set LD HL,val16
L052C  2FC3    21 052C               	ld	hl,l052c
L6B86  2FC6    CD 4D1C               	call	l6b86		; Set load real
L4E46  2FC9    18 11                 	jr	l4e46
L4E35  2FCB                          l4e35:
.LD@HL  2FCB    3E 2A                 	ld	a,.LD@HL
L6B94  2FCD    CD 4D2A               	call	l6b94		; Set LD HL,(adr16)
L7B88  2FD0    3A 5CA5               	ld	a,(l7b88)
  2FD3    3D                    	dec	a
L4E46  2FD4    20 06                 	jr	nz,l4e46
L6B50  2FD6    CD 4CE6               	call	l6b50		; Set LD H,0
@L7  2FD9    02                    	db	@L7
$I7  2FDA                          $I7:
  2FDA    26 00                 	LD	H,0
@L7$I7  0002                          @L7	equ	$-$I7
L4E46  2FDC                          l4e46:
L7B83  2FDC    2A 5CA0               	ld	hl,(l7b83)
  2FDF    7C                    	ld	a,h
  2FE0    B5                    	or	l
L4E74  2FE1    28 27                 	jr	z,l4e74
L7B85  2FE3    ED 5B 5CA2            	ld	de,(l7b85)
  2FE7    ED 52                 	sbc	hl,de
L4E74  2FE9    28 1F                 	jr	z,l4e74
L7B97  2FEB    3A 5CB4               	ld	a,(l7b97)
  2FEE    B7                    	or	a		; Test PROCEDURE
L4E65  2FEF    28 0A                 	jr	z,l4e65		; Yeap
L7B87  2FF1    3A 5CA4               	ld	a,(l7b87)
_STRING  2FF4    FE 08                 	cp	_String
.EXX  2FF6    3E D9                 	ld	a,.EXX
L6B9C  2FF8    C4 4D32               	call	nz,l6b9c	; Set EXX
L4E65  2FFB                          l4e65:
L6B8A  2FFB    CD 4D20               	call	l6b8a		; Set LD BC,val16
  2FFE    EB                    	ex	de,hl
L6B8E  2FFF    CD 4D24               	call	l6b8e		; Set LD DE,val16
L0522  3002    21 0522               	ld	hl,l0522
L6B82  3005    CD 4D18               	call	l6b82		; Set end of recursive routine
L4E79  3008    18 05                 	jr	l4e79
L4E74  300A                          l4e74:
L6B50  300A    CD 4CE6               	call	l6b50		; Set RET
@L8  300D    01                    	db	@L8
$I8  300E                          $I8:
  300E    C9                    	RET
@L8$I8  0001                          @L8	equ	$-$I8
L4E79  300F                          l4e79:
L6F48  300F    CD 509C               	call	l6f48		; Verify ;
  3012    D1                    	pop	de
  3013    E1                    	pop	hl
L7B73  3014    22 5C90               	ld	(l7b73),hl	; Set label pointers
L7B75  3017    22 5C92               	ld	(l7b75),hl
  301A    E1                    	pop	hl
L7B7B  301B    22 5C98               	ld	(l7b7b),hl	; Restore current label pointer
  301E    EB                    	ex	de,hl
  301F    C9                    	ret
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-168


                                ; Process BEGIN
                                ;
L4E8A  3020                          l4e8a:
L7B73  3020    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
L4E8D  3023                          l4e8d:
L7B7B  3023    ED 5B 5C98            	ld	de,(l7b7b)	; Get current label pointer
  3027    B7                    	or	a
  3028    ED 52                 	sbc	hl,de
  302A    19                    	add	hl,de
  302B    C8                    	ret	z		; End on level 0
  302C    23                    	inc	hl
  302D    5E                    	ld	e,(hl)
  302E    23                    	inc	hl
  302F    56                    	ld	d,(hl)
  3030    19                    	add	hl,de
  3031    7E                    	ld	a,(hl)
  3032    FE 06                 	cp	6
L4EA4  3034    28 04                 	jr	z,l4ea4
  3036    FE 05                 	cp	5
L4E8D  3038    20 E9                 	jr	nz,l4e8d
L4EA4  303A                          l4ea4:
  303A    E5                    	push	hl
  303B    2B                    	dec	hl
  303C    2B                    	dec	hl
L4EA7  303D                          l4ea7:
_MB  303D    CB 7E                 	bit	_MB,(hl)	; Find end of string
  303F    2B                    	dec	hl
L4EA7  3040    28 FB                 	jr	z,l4ea7
  3042    7E                    	ld	a,(hl)		; Get type
  3043    B7                    	or	a
L72DA  3044    CD 53FB               	call	l72da		; Maybe undefined FORWARD
_UNDEFFORW  3047    49                    	db	_UndefFORW
  3048    E1                    	pop	hl
L4E8D  3049    18 D8                 	jr	l4e8d
                                ;
                                ;
                                ;
L4EB5  304B                          l4eb5:
L7B73  304B    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  304E    E5                    	push	hl
  304F    06 00                 	ld	b,0
L4EBB  3051                          l4ebb:
  3051    C5                    	push	bc
_PTR  3052    16 04                 	ld	d,_Ptr	; Set type
L7B91  3054    3A 5CAE               	ld	a,(l7b91)	; Get ???
  3057    5F                    	ld	e,a
L6D75  3058    CD 4EC9               	call	l6d75		; Put to table
L6D87  305B    CD 4EDB               	call	l6d87		; Get label
L6D7A  305E    CD 4ECE               	call	l6d7a		; Store into table
L6D75  3061    CD 4EC9               	call	l6d75		; Put to table
L6D75  3064    CD 4EC9               	call	l6d75		; Twice
L6DC6  3067    CD 4F1A               	call	l6dc6		; Set label pointer
  306A    C1                    	pop	bc
  306B    04                    	inc	b
L6F13  306C    CD 5067               	call	l6f13		; Test ,
L4EBB  306F    28 E0                 	jr	z,l4ebb		; Yeap
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-169


  3071    E1                    	pop	hl
  3072    C9                    	ret
                                ;
                                ;
                                ;
L4EDD  3073                          l4edd:
L7B73  3073    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  3076    E5                    	push	hl
L4F9B  3077    CD 3131               	call	l4f9b		; Get type
  307A    E1                    	pop	hl
L5295  307B    CD 342B               	call	l5295
L6E76  307E    CD 4FCA               	call	l6e76		; Test ABSOLUTE
L7562  3081    5680                  	dw	l7562
  3083    3E 00                 	ld	a,0
L4F14  3085    20 23                 	jr	nz,l4f14	; Nope
L7B91  3087    3A 5CAE               	ld	a,(l7b91)	; Get ???
  308A    B7                    	or	a
L72DA  308B    CD 53FB               	call	l72da
_INVALABS  308E    4B                    	db	_InvalABS
_PTR  308F    01 0400               	ld	bc,256*_Ptr+0
L6E54  3092    CD 4FA8               	call	l6e54		; Find label
L4F0C  3095    20 0B                 	jr	nz,l4f0c	; Nope
  3097    7E                    	ld	a,(hl)
L7B8F  3098    32 5CAC               	ld	(l7b8f),a
  309B    2B                    	dec	hl
  309C    56                    	ld	d,(hl)
  309D    2B                    	dec	hl
  309E    5E                    	ld	e,(hl)
  309F    EB                    	ex	de,hl
L4F0F  30A0    18 03                 	jr	l4f0f
L4F0C  30A2                          l4f0c:
L69F2  30A2    CD 4B88               	call	l69f2		; Get integer constant
L4F0F  30A5                          l4f0f:
L7B7F  30A5    22 5C9C               	ld	(l7b7f),hl	; Store value
  30A8    3E FF                 	ld	a,-1
L4F14  30AA                          l4f14:
L7B90  30AA    32 5CAD               	ld	(l7b90),a
  30AD    C9                    	ret
                                ;
                                ; Process variable on PROCEDURE and FUNCTION
                                ;
L4F18  30AE                          l4f18:
L4FC8  30AE    CD 315E               	call	l4fc8		; Get simple type
L72DA  30B1    CD 53FB               	call	l72da		; Verify ok
_TYPEEXP  30B4    24                    	db	_TypeExp
  30B5    AF                    	xor	a
L7B90  30B6    32 5CAD               	ld	(l7b90),a
L7B8F  30B9    3A 5CAC               	ld	a,(l7b8f)
  30BC    B7                    	or	a
  30BD    C0                    	ret	nz
L7B5C  30BE    3A 5C79               	ld	a,(l7b5c)	; Get type
_RECF  30C1    FE 05                 	cp	_RecF
  30C3    D8                    	ret	c
_STRING  30C4    FE 08                 	cp	_String
  30C6    D0                    	ret	nc
L72E1  30C7    CD 5402               	call	l72e1		; Files must be VAR
_VARFILETURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-170


  30CA    43                    	db	_VarFile
                                ;
                                ;
                                ;
L4F35  30CB                          l4f35:
L4EB5  30CB    CD 304B               	call	l4eb5
  30CE    E5                    	push	hl
  30CF    C5                    	push	bc
L6F40  30D0    CD 5094               	call	l6f40		; Verify :
  30D3    AF                    	xor	a
L7B8F  30D4    32 5CAC               	ld	(l7b8f),a
L4EDD  30D7    CD 3073               	call	l4edd
  30DA    C1                    	pop	bc
L7B90  30DB    3A 5CAD               	ld	a,(l7b90)
  30DE    B7                    	or	a
L4F51  30DF    28 06                 	jr	z,l4f51
  30E1    78                    	ld	a,b
  30E2    3D                    	dec	a
L72DA  30E3    CD 53FB               	call	l72da		; Invalid ABSOLUTE
_INVALABS  30E6    4B                    	db	_InvalABS
L4F51  30E7                          l4f51:
  30E7    E1                    	pop	hl
L4F52  30E8                          l4f52:
  30E8    C5                    	push	bc
  30E9    E5                    	push	hl
L7B8F  30EA    3A 5CAC               	ld	a,(l7b8f)
  30ED    21 0002               	ld	hl,2
  30F0    B7                    	or	a
L4F60  30F1    20 03                 	jr	nz,l4f60
L7B62  30F3    2A 5C7F               	ld	hl,(l7b62)	; Get length of type
L4F60  30F6                          l4f60:
  30F6    EB                    	ex	de,hl
L7B91  30F7    3A 5CAE               	ld	a,(l7b91)	; Get ???
  30FA    B7                    	or	a
L4F72  30FB    20 0B                 	jr	nz,l4f72
L7B90  30FD    3A 5CAD               	ld	a,(l7b90)
  3100    B7                    	or	a
L4F72  3101    20 05                 	jr	nz,l4f72
L6C30  3103    CD 4D9A               	call	l6c30		; Allocate space
L4F7B  3106    18 09                 	jr	l4f7b
L4F72  3108                          l4f72:
L7B7F  3108    2A 5C9C               	ld	hl,(l7b7f)
  310B    E5                    	push	hl
  310C    19                    	add	hl,de
L7B7F  310D    22 5C9C               	ld	(l7b7f),hl
  3110    E1                    	pop	hl
L4F7B  3111                          l4f7b:
  3111    EB                    	ex	de,hl
  3112    E1                    	pop	hl
  3113    2B                    	dec	hl
L4F7E  3114                          l4f7e:
  3114    2B                    	dec	hl
_MB  3115    CB 7E                 	bit	_MB,(hl)
L4F7E  3117    28 FB                 	jr	z,l4f7e
  3119    2B                    	dec	hl
L7B8F  311A    3A 5CAC               	ld	a,(l7b8f)
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-171


  311D    77                    	ld	(hl),a
  311E    2B                    	dec	hl
  311F    72                    	ld	(hl),d
  3120    2B                    	dec	hl
  3121    73                    	ld	(hl),e
  3122    2B                    	dec	hl
L7B5A  3123    ED 5B 5C77            	ld	de,(l7b5a)	; Get type table
  3127    72                    	ld	(hl),d		; Store into
  3128    2B                    	dec	hl
  3129    73                    	ld	(hl),e
  312A    2B                    	dec	hl
  312B    2B                    	dec	hl
  312C    2B                    	dec	hl
  312D    C1                    	pop	bc
L4F52  312E    10 B8                 	djnz	l4f52
  3130    C9                    	ret
                                ;
                                ; Get a TYPE
                                ;
L4F9B  3131                          l4f9b:
L4FC8  3131    CD 315E               	call	l4fc8		; Test simple type
  3134    C8                    	ret	z
L6E76  3135    CD 4FCA               	call	l6e76		; Skip possible PACKED
L7542  3138    5660                  	dw	l7542
L4FDB  313A    CD 3171               	call	l4fdb		; Check ARRAY
  313D    C8                    	ret	z
L5039  313E    CD 31CF               	call	l5039		; Check RECORD
  3141    C8                    	ret	z
L5106  3142    CD 329C               	call	l5106		; Check SET
  3145    C8                    	ret	z
L5140  3146    CD 32D6               	call	l5140		; Check ^
  3149    C8                    	ret	z
L516B  314A    CD 3301               	call	l516b		; Check FILE
  314D    C8                    	ret	z
L51A5  314E    CD 333B               	call	l51a5		; Check STRING
  3151    C8                    	ret	z
L51C5  3152    CD 335B               	call	l51c5		; Test SCALAR ()
  3155    C8                    	ret	z
L5210  3156    CD 33A6               	call	l5210		; Test RANGE ..
  3159    C8                    	ret	z
L72E1  315A    CD 5402               	call	l72e1		; Type declaration expected
_TYPEEXP  315D    24                    	db	_TypeExp
                                ;
                                ; Get SIMPLE TYPE
                                ; EXIT	Zero set if found
                                ;
L4FC8  315E                          l4fc8:
  315E    01 0300               	ld	bc,256*3+0
L6E54  3161    CD 4FA8               	call	l6e54		; Get from table
  3164    C0                    	ret	nz		; Not found
  3165    56                    	ld	d,(hl)		; Fetch type table
  3166    2B                    	dec	hl
  3167    5E                    	ld	e,(hl)
  3168    EB                    	ex	de,hl
L7B5A  3169    22 5C77               	ld	(l7b5a),hl	; Save type
L5287  316C    CD 341D               	call	l5287		; Get name
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-172


  316F    AF                    	xor	a		; Set success
  3170    C9                    	ret
                                ;
                                ; Look for ARRAY
                                ;
L4FDB  3171                          l4fdb:
L6E76  3171    CD 4FCA               	call	l6e76		; Test ARRAY
L7548  3174    5666                  	dw	l7548
  3176    C0                    	ret	nz		; Nope
L6F30  3177    CD 5084               	call	l6f30		; Verify [
  317A    06 00                 	ld	b,0
L4FE6  317C                          l4fe6:
  317C    C5                    	push	bc
L523B  317D    CD 33D1               	call	l523b
  3180    C1                    	pop	bc
L7B5A  3181    2A 5C77               	ld	hl,(l7b5a)	; Get type table
  3184    E5                    	push	hl
L7B60  3185    2A 5C7D               	ld	hl,(l7b60)	; Get hi limit
L7B5E  3188    ED 5B 5C7B            	ld	de,(l7b5e)	; Get lo limit
  318C    B7                    	or	a
  318D    ED 52                 	sbc	hl,de
  318F    23                    	inc	hl
  3190    7C                    	ld	a,h
  3191    B5                    	or	l
L72D4  3192    CD 53F5               	call	l72d4		; Verify not same
_MEMOVFL  3195    62                    	db	_MemOvfl
  3196    E5                    	push	hl
  3197    04                    	inc	b
L6F13  3198    CD 5067               	call	l6f13		; Test ,
L4FE6  319B    28 DF                 	jr	z,l4fe6		; Yeap
  319D    C5                    	push	bc
L6F38  319E    CD 508C               	call	l6f38		; Verify ]
L6F88  31A1    CD 50DC               	call	l6f88
L4F9B  31A4    CD 3131               	call	l4f9b		; Get type
  31A7    C1                    	pop	bc
L5012  31A8                          l5012:
L7B5A  31A8    2A 5C77               	ld	hl,(l7b5a)	; Get type table
L7B5E  31AB    22 5C7B               	ld	(l7b5e),hl	; Set as lo limit
L7B62  31AE    2A 5C7F               	ld	hl,(l7b62)	; Get length of type
  31B1    D1                    	pop	de
  31B2    C5                    	push	bc
L729A  31B3    CD 53DB               	call	l729a		; Multiply numbers
L72C8  31B6    CD 53EF               	call	l72c8		; Check compiler overflow
_MEMOVFL  31B9    62                    	db	_MemOvfl
  31BA    C1                    	pop	bc
L7B62  31BB    22 5C7F               	ld	(l7b62),hl	; Set length of type
  31BE    E1                    	pop	hl
L7B60  31BF    22 5C7D               	ld	(l7b60),hl	; Set hi limit
_ARRAY  31C2    3E 01                 	ld	a,_Array
L7B5C  31C4    32 5C79               	ld	(l7b5c),a	; Set ARRAY
  31C7    C5                    	push	bc
L5254  31C8    CD 33EA               	call	l5254		; Put to table
  31CB    C1                    	pop	bc
L5012  31CC    10 DA                 	djnz	l5012
  31CE    C9                    	ret
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-173


                                ; Look for RECORD
                                ;
L5039  31CF                          l5039:
L6E76  31CF    CD 4FCA               	call	l6e76		; Test RECORD
L7554  31D2    5672                  	dw	l7554
  31D4    C0                    	ret	nz		; Nope
L7B9A  31D5    3A 5CB7               	ld	a,(l7b9a)
  31D8    F5                    	push	af
L7B91  31D9    3A 5CAE               	ld	a,(l7b91)	; Get ???
  31DC    F5                    	push	af
L7B92  31DD    21 5CAF               	ld	hl,l7b92	; Point to ???
  31E0    34                    	inc	(hl)
  31E1    7E                    	ld	a,(hl)
L7B91  31E2    32 5CAE               	ld	(l7b91),a	; Set ???
L7B7F  31E5    2A 5C9C               	ld	hl,(l7b7f)
  31E8    E5                    	push	hl
L7B81  31E9    2A 5C9E               	ld	hl,(l7b81)
  31EC    E5                    	push	hl
L0000  31ED    21 0000               	ld	hl,l0000
L7B7F  31F0    22 5C9C               	ld	(l7b7f),hl
L7B81  31F3    22 5C9E               	ld	(l7b81),hl
  31F6    AF                    	xor	a
L7B9A  31F7    32 5CB7               	ld	(l7b9a),a
L508B  31FA    CD 3221               	call	l508b
L7B81  31FD    2A 5C9E               	ld	hl,(l7b81)
L7B62  3200    22 5C7F               	ld	(l7b62),hl	; Set length of type
  3203    E1                    	pop	hl
L7B81  3204    22 5C9E               	ld	(l7b81),hl
  3207    E1                    	pop	hl
L7B7F  3208    22 5C9C               	ld	(l7b7f),hl
L7B91  320B    3A 5CAE               	ld	a,(l7b91)	; Get ???
L7B5D  320E    32 5C7A               	ld	(l7b5d),a
  3211    F1                    	pop	af
L7B91  3212    32 5CAE               	ld	(l7b91),a	; Set ???
  3215    F1                    	pop	af
L7B9A  3216    32 5CB7               	ld	(l7b9a),a
_RECORD  3219    3E 02                 	ld	a,_Record
L7B5C  321B    32 5C79               	ld	(l7b5c),a	; Set RECORD
L5254  321E    C3 33EA               	jp	l5254
                                ;
                                ;
                                ;
L508B  3221                          l508b:
L50F9  3221    CD 328F               	call	l50f9
  3224    C8                    	ret	z
L6E76  3225    CD 4FCA               	call	l6e76		; Test CASE
L75DA  3228    56F8                  	dw	l75da
L50B0  322A    28 1A                 	jr	z,l50b0		; Yeap
L4F35  322C    CD 30CB               	call	l4f35
L7B7F  322F    2A 5C9C               	ld	hl,(l7b7f)
L7B81  3232    ED 5B 5C9E            	ld	de,(l7b81)
  3236    B7                    	or	a
  3237    ED 52                 	sbc	hl,de
L50A9  3239    38 04                 	jr	c,l50a9
  323B    19                    	add	hl,de
L7B81  323C    22 5C9E               	ld	(l7b81),hl
L50A9TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-174


  323F                          l50a9:
L6F0F  323F    CD 5063               	call	l6f0f		; Test ;
L508B  3242    28 DD                 	jr	z,l508b		; Yeap
L50E8  3244    18 38                 	jr	l50e8
L50B0  3246                          l50b0:
L4FC8  3246    CD 315E               	call	l4fc8
L4F35  3249    C4 30CB               	call	nz,l4f35
L6F88  324C    CD 50DC               	call	l6f88
L50B9  324F                          l50b9:
L50F9  324F    CD 328F               	call	l50f9
  3252    C8                    	ret	z
L7B7F  3253    2A 5C9C               	ld	hl,(l7b7f)
  3256    E5                    	push	hl
L50C1  3257                          l50c1:
L69EA  3257    CD 4B80               	call	l69ea		; Get constant
L6F13  325A    CD 5067               	call	l6f13		; Test ,
L50C1  325D    28 F8                 	jr	z,l50c1		; Yeap
L6F40  325F    CD 5094               	call	l6f40		; Verify :
L6F66  3262    CD 50BA               	call	l6f66		; Verify (
L7B9A  3265    3A 5CB7               	ld	a,(l7b9a)
  3268    F5                    	push	af
  3269    3E FF                 	ld	a,0ffh
L7B9A  326B    32 5CB7               	ld	(l7b9a),a
L508B  326E    CD 3221               	call	l508b
  3271    F1                    	pop	af
L7B9A  3272    32 5CB7               	ld	(l7b9a),a
  3275    E1                    	pop	hl
L7B7F  3276    22 5C9C               	ld	(l7b7f),hl
L6F0F  3279    CD 5063               	call	l6f0f		; Test ;
L50B9  327C    28 D1                 	jr	z,l50b9		; Yeap
L50E8  327E                          l50e8:
L7B9A  327E    3A 5CB7               	ld	a,(l7b9a)
  3281    B7                    	or	a
L6F6E  3282    C2 50C2               	jp	nz,l6f6e	; Verify )
L6E76  3285    CD 4FCA               	call	l6e76		; Find END
L7530  3288    564E                  	dw	l7530
  328A    C8                    	ret	z		; Yeap
L72E1  328B    CD 5402               	call	l72e1
_END  328E    0E                    	db	_End
L50F9  328F                          l50f9:
L7B9A  328F    3A 5CB7               	ld	a,(l7b9a)
  3292    B7                    	or	a
L6F1F  3293    C2 5073               	jp	nz,l6f1f
L6E76  3296    CD 4FCA               	call	l6e76		; Find END
L7530  3299    564E                  	dw	l7530
  329B    C9                    	ret
                                ;
                                ; Check SET
                                ;
L5106  329C                          l5106:
L6E76  329C    CD 4FCA               	call	l6e76		; Test SET
L7551  329F    566F                  	dw	l7551
  32A1    C0                    	ret	nz		; Nope
L6F88  32A2    CD 50DC               	call	l6f88
L523B  32A5    CD 33D1               	call	l523b
L7B60  32A8    2A 5C7D               	ld	hl,(l7b60)	; Get hi set limit
L7B5ETURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-175


  32AB    ED 5B 5C7B            	ld	de,(l7b5e)	; Get lo set limit
  32AF    7C                    	ld	a,h
  32B0    B2                    	or	d
L72DA  32B1    CD 53FB               	call	l72da
_ILLSETRANGE  32B4    46                    	db	_IllSetRange
  32B5    CB 3D                 	srl	l
  32B7    CB 3D                 	srl	l
  32B9    CB 3D                 	srl	l
  32BB    CB 3B                 	srl	e
  32BD    CB 3B                 	srl	e
  32BF    CB 3B                 	srl	e
  32C1    7D                    	ld	a,l
  32C2    3C                    	inc	a
  32C3    93                    	sub	e
  32C4    6F                    	ld	l,a
L7B62  32C5    22 5C7F               	ld	(l7b62),hl	; Set length of type
L7B5A  32C8    2A 5C77               	ld	hl,(l7b5a)	; Get type table
L7B5E  32CB    22 5C7B               	ld	(l7b5e),hl	; Set lo set limit
_SET  32CE    3E 03                 	ld	a,_Set
L7B5C  32D0    32 5C79               	ld	(l7b5c),a	; Set SET
L5254  32D3    C3 33EA               	jp	l5254
                                ;
                                ; Check ^
                                ;
L5140  32D6                          l5140:
L6F27  32D6    CD 507B               	call	l6f27
  32D9    C0                    	ret	nz
L0000  32DA    11 0000               	ld	de,l0000
L6D75  32DD    CD 4EC9               	call	l6d75		; Put to table
L7B73  32E0    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  32E3    E5                    	push	hl
L6DBA  32E4    CD 4F0E               	call	l6dba
L6DC6  32E7    CD 4F1A               	call	l6dc6		; Set label pointer
  32EA    E1                    	pop	hl
L7B5E  32EB    22 5C7B               	ld	(l7b5e),hl	; Set lo set limit
_PTR  32EE    3E 04                 	ld	a,_Ptr
L7B5C  32F0    32 5C79               	ld	(l7b5c),a	; Set POINTER
  32F3    3E FF                 	ld	a,0ffh
L7B5D  32F5    32 5C7A               	ld	(l7b5d),a
L0002  32F8    21 0002               	ld	hl,l0002
L7B62  32FB    22 5C7F               	ld	(l7b62),hl	; Set length of type
L5254  32FE    C3 33EA               	jp	l5254
                                ;
                                ; Check FILE
                                ;
L516B  3301                          l516b:
L6E76  3301    CD 4FCA               	call	l6e76		; Find FILE
L754D  3304    566B                  	dw	l754d
  3306    C0                    	ret	nz		; Nope
L6E76  3307    CD 4FCA               	call	l6e76		; Find OF
L7560  330A    567E                  	dw	l7560
L5197  330C    20 1F                 	jr	nz,l5197	; Nope
L4F9B  330E    CD 3131               	call	l4f9b		; Get type
L7B5C  3311    3A 5C79               	ld	a,(l7b5c)	; Get type
_RECF  3314    FE 05                 	cp	_RecF
L518A  3316    38 08                 	jr	c,l518a
_STRINGTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-176


  3318    FE 08                 	cp	_String
L518A  331A    30 04                 	jr	nc,l518a
L72E1  331C    CD 5402               	call	l72e1
_FILEF  331F    44                    	db	_FileF
L518A  3320                          l518a:
L7B5A  3320    2A 5C77               	ld	hl,(l7b5a)	; Get type table
L7B5E  3323    22 5C7B               	ld	(l7b5e),hl	; Set lo set limit
_RECF  3326    3E 05                 	ld	a,_RecF
L00B0  3328    21 00B0               	ld	hl,l00b0
L519C  332B    18 05                 	jr	l519c
L5197  332D                          l5197:
_UNTF  332D    3E 07                 	ld	a,_UntF
L0030  332F    21 0030               	ld	hl,l0030
L519C  3332                          l519c:
L7B5C  3332    32 5C79               	ld	(l7b5c),a	; Set type
L7B62  3335    22 5C7F               	ld	(l7b62),hl	; Set length of type
L5254  3338    C3 33EA               	jp	l5254
                                ;
                                ; Check STRING
                                ;
L51A5  333B                          l51a5:
L6E76  333B    CD 4FCA               	call	l6e76		; Find STRING
L755A  333E    5678                  	dw	l755a
  3340    C0                    	ret	nz		; Nope
L6F30  3341    CD 5084               	call	l6f30		; Verify [
L69F2  3344    CD 4B88               	call	l69f2		; Get integer constant
  3347    24                    	inc	h
  3348    25                    	dec	h
L72DA  3349    CD 53FB               	call	l72da
_ILLSTRGLEN  334C    31                    	db	_IllStrgLen
  334D    2C                    	inc	l
  334E    2D                    	dec	l
L72D4  334F    CD 53F5               	call	l72d4
_ILLSTRGLEN  3352    31                    	db	_IllStrgLen
L6F38  3353    CD 508C               	call	l6f38		; Verify ]
  3356    23                    	inc	hl
_STRING  3357    3E 08                 	ld	a,_String
L519C  3359    18 D7                 	jr	l519c
                                ;
                                ; Test SCALAR ()
                                ;
L51C5  335B                          l51c5:
L6F1B  335B    CD 506F               	call	l6f1b		; Test (
  335E    C0                    	ret	nz		; Nope
LFFFF  335F    21 FFFF               	ld	hl,lffff
L51CC  3362                          l51cc:
  3362    E5                    	push	hl
L0200  3363    11 0200               	ld	de,l0200
L6D75  3366    CD 4EC9               	call	l6d75		; Put to table
L6D87  3369    CD 4EDB               	call	l6d87		; Get label
L7B93  336C    3A 5CB0               	ld	a,(l7b93)	; Get type
L6D7A  336F    CD 4ECE               	call	l6d7a
  3372    D1                    	pop	de
  3373    13                    	inc	de
  3374    D5                    	push	de
L6D75  3375    CD 4EC9               	call	l6d75		; Put to table
L6DC6TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-177


  3378    CD 4F1A               	call	l6dc6		; Set label pointer
  337B    E1                    	pop	hl
L6F13  337C    CD 5067               	call	l6f13		; Test ,
L51CC  337F    28 E1                 	jr	z,l51cc		; Yeap
L6F6E  3381    CD 50C2               	call	l6f6e		; Verify )
  3384    E5                    	push	hl
L7B93  3385    21 5CB0               	ld	hl,l7b93	; Point to type
  3388    7E                    	ld	a,(hl)
  3389    34                    	inc	(hl)
  338A    E1                    	pop	hl
L0000  338B    11 0000               	ld	de,l0000
L51F8  338E                          l51f8:
L7B5C  338E    32 5C79               	ld	(l7b5c),a	; Set type
L7B5E  3391    ED 53 5C7B            	ld	(l7b5e),de	; Set lo set limit
L7B60  3395    22 5C7D               	ld	(l7b60),hl	; Set hi set limit
  3398    7A                    	ld	a,d
  3399    B4                    	or	h
L0001  339A    21 0001               	ld	hl,l0001
L520A  339D    28 01                 	jr	z,l520a
  339F    23                    	inc	hl
L520A  33A0                          l520a:
L7B62  33A0    22 5C7F               	ld	(l7b62),hl	; Set length of type
L5254  33A3    C3 33EA               	jp	l5254
                                ;
                                ; Test RANGE ..
                                ;
L5210  33A6                          l5210:
L6A0D  33A6    CD 4BA3               	call	l6a0d		; Get constant
  33A9    C0                    	ret	nz
  33AA    78                    	ld	a,b
  33AB    F5                    	push	af
  33AC    FE 0A                 	cp	0ah
L72C8  33AE    CD 53EF               	call	l72c8
_ILLSKALAR  33B1    33                    	db	_IllSkalar
  33B2    E5                    	push	hl
L6E76  33B3    CD 4FCA               	call	l6e76		; Find ..
L7580  33B6    569E                  	dw	l7580
L72DA  33B8    CD 53FB               	call	l72da
_TWODOTS  33BB    0B                    	db	_TwoDots
L69EA  33BC    CD 4B80               	call	l69ea		; Get constant
  33BF    D1                    	pop	de
  33C0    F1                    	pop	af
  33C1    F5                    	push	af
  33C2    B8                    	cp	b
L72DA  33C3    CD 53FB               	call	l72da
_INVTYPE  33C6    2C                    	db	_InvType
L728D  33C7    CD 53CE               	call	l728d		; Compare
L72C8  33CA    CD 53EF               	call	l72c8		; Verify upper > lower
_ILLLIMIT  33CD    34                    	db	_IllLimit
  33CE    F1                    	pop	af
L51F8  33CF    18 BD                 	jr	l51f8
                                ;
                                ;
                                ;
L523B  33D1                          l523b:
L5210  33D1    CD 33A6               	call	l5210
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-178


  33D4    C8                    	ret	z
L51C5  33D5    CD 335B               	call	l51c5
  33D8    C8                    	ret	z
L4FC8  33D9    CD 315E               	call	l4fc8
L72DA  33DC    CD 53FB               	call	l72da
_SIMTYP  33DF    1E                    	db	_SimTyp
L7B5C  33E0    3A 5C79               	ld	a,(l7b5c)	; Get type
_INTEG  33E3    FE 0A                 	cp	_Integ
  33E5    D0                    	ret	nc
L72E1  33E6    CD 5402               	call	l72e1
_SIMTYP  33E9    1E                    	db	_SimTyp
L5254  33EA                          l5254:
L0800  33EA    11 0800               	ld	de,l0800
L6D75  33ED    CD 4EC9               	call	l6d75		; Put to table
L7B73  33F0    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
L7B5A  33F3    22 5C77               	ld	(l7b5a),hl	; Save into type table
L7B5C  33F6    21 5C79               	ld	hl,l7b5c	; Point to type
  33F9    06 08                 	ld	b,8
L5265  33FB                          l5265:
  33FB    7E                    	ld	a,(hl)
L6D7A  33FC    CD 4ECE               	call	l6d7a
  33FF    23                    	inc	hl
L5265  3400    10 F9                 	djnz	l5265
L6DC6  3402    CD 4F1A               	call	l6dc6		; Set label pointer
  3405    AF                    	xor	a
  3406    C9                    	ret
                                ;
                                ;
                                ;
L5271  3407                          l5271:
L7B69  3407    11 5C86               	ld	de,l7b69
L528A  340A    18 14                 	jr	l528a
                                ;
                                ; Get values and name
                                ;
L5276  340C                          l5276:
  340C    7E                    	ld	a,(hl)
  340D    2B                    	dec	hl
L7B57  340E    32 5C74               	ld	(l7b57),a
  3411    56                    	ld	d,(hl)
  3412    2B                    	dec	hl
  3413    5E                    	ld	e,(hl)
  3414    2B                    	dec	hl
L7B58  3415    ED 53 5C75            	ld	(l7b58),de	; Set value
  3419    56                    	ld	d,(hl)
  341A    2B                    	dec	hl
  341B    5E                    	ld	e,(hl)
  341C    EB                    	ex	de,hl
                                ;
                                ; Get name
                                ;
L5287  341D                          l5287:
L7B5C  341D    11 5C79               	ld	de,l7b5c	; Point to type
L528A  3420                          l528a:
  3420    C5                    	push	bc
  3421    06 08                 	ld	b,8
L528DTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-179


  3423                          l528d:
  3423    7E                    	ld	a,(hl)
  3424    12                    	ld	(de),a
  3425    2B                    	dec	hl
  3426    13                    	inc	de
L528D  3427    10 FA                 	djnz	l528d
  3429    C1                    	pop	bc
  342A    C9                    	ret
                                ;
                                ;
                                ;
L5295  342B                          l5295:
L7B79  342B    22 5C96               	ld	(l7b79),hl
L7B73  342E    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
L529B  3431                          l529b:
L7B79  3431    ED 4B 5C96            	ld	bc,(l7b79)
  3435    B7                    	or	a
  3436    ED 42                 	sbc	hl,bc
  3438    09                    	add	hl,bc
  3439    C8                    	ret	z
  343A    23                    	inc	hl
  343B    4E                    	ld	c,(hl)
  343C    23                    	inc	hl
  343D    46                    	ld	b,(hl)
  343E    09                    	add	hl,bc
  343F    7E                    	ld	a,(hl)
  3440    FE 08                 	cp	8
L529B  3442    20 ED                 	jr	nz,l529b
  3444    36 00                 	ld	(hl),0
  3446    E5                    	push	hl
  3447    2B                    	dec	hl
  3448    2B                    	dec	hl
  3449    7E                    	ld	a,(hl)
  344A    FE 04                 	cp	4
L52F8  344C    20 40                 	jr	nz,l52f8
  344E    2B                    	dec	hl
  344F    7E                    	ld	a,(hl)
  3450    B7                    	or	a
L52F8  3451    28 3B                 	jr	z,l52f8
  3453    36 00                 	ld	(hl),0
  3455    2B                    	dec	hl
  3456    E5                    	push	hl
  3457    5E                    	ld	e,(hl)
  3458    2B                    	dec	hl
  3459    56                    	ld	d,(hl)
L7B73  345A    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
L52C7  345D                          l52c7:
L7B77  345D    ED 4B 5C94            	ld	bc,(l7b77)	; Get top of available memory
  3461    B7                    	or	a
  3462    ED 42                 	sbc	hl,bc
  3464    09                    	add	hl,bc
L72D4  3465    CD 53F5               	call	l72d4
_INKPOINTER  3468    2A                    	db	_InkPointer
  3469    23                    	inc	hl
  346A    4E                    	ld	c,(hl)
  346B    23                    	inc	hl
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-180


  346C    46                    	ld	b,(hl)
  346D    09                    	add	hl,bc
  346E    7E                    	ld	a,(hl)
  346F    FE 03                 	cp	3
L52C7  3471    20 EA                 	jr	nz,l52c7
  3473    E5                    	push	hl
  3474    D5                    	push	de
  3475    2B                    	dec	hl
  3476    2B                    	dec	hl
L52E1  3477                          l52e1:
  3477    1A                    	ld	a,(de)
  3478    BE                    	cp	(hl)
L52E9  3479    28 04                 	jr	z,l52e9
  347B    D1                    	pop	de
  347C    E1                    	pop	hl
L52C7  347D    18 DE                 	jr	l52c7
L52E9  347F                          l52e9:
  347F    CB 7E                 	bit	7,(hl)
  3481    2B                    	dec	hl
  3482    1B                    	dec	de
L52E1  3483    28 F2                 	jr	z,l52e1
  3485    C1                    	pop	bc
  3486    C1                    	pop	bc
  3487    46                    	ld	b,(hl)
  3488    2B                    	dec	hl
  3489    4E                    	ld	c,(hl)
  348A    E1                    	pop	hl
  348B    71                    	ld	(hl),c
  348C    2B                    	dec	hl
  348D    70                    	ld	(hl),b
L52F8  348E                          l52f8:
  348E    E1                    	pop	hl
L529B  348F    C3 3431               	jp	l529b
                                ;
                                ;
                                ;
L52FC  3492                          l52fc:
  3492    AF                    	xor	a
L7B95  3493    32 5CB2               	ld	(l7b95),a
L7BC9  3496    32 5CE6               	ld	(l7bc9),a
L5377  3499    CD 350D               	call	l5377
L7BA4  349C    FD 22 5CC1            	ld	(l7ba4),iy
L6B82  34A0    CD 4D18               	call	l6b82
L7B73  34A3    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
L5310  34A6                          l5310:
L7B75  34A6    ED 5B 5C92            	ld	de,(l7b75)	; Get previous label pointer
  34AA    B7                    	or	a
  34AB    ED 52                 	sbc	hl,de
  34AD    19                    	add	hl,de
L5363  34AE    30 49                 	jr	nc,l5363
  34B0    23                    	inc	hl
  34B1    4E                    	ld	c,(hl)
  34B2    23                    	inc	hl
  34B3    46                    	ld	b,(hl)
  34B4    23                    	inc	hl
  34B5    7E                    	ld	a,(hl)
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-181


  34B6    23                    	inc	hl
  34B7    5E                    	ld	e,(hl)
  34B8    23                    	inc	hl
  34B9    56                    	ld	d,(hl)
  34BA    E5                    	push	hl
  34BB    C5                    	push	bc
  34BC    47                    	ld	b,a
  34BD    7A                    	ld	a,d
  34BE    B3                    	or	e
L533A  34BF    28 0F                 	jr	z,l533a
  34C1    EB                    	ex	de,hl
  34C2    2B                    	dec	hl
  34C3    7E                    	ld	a,(hl)
  34C4    4F                    	ld	c,a
  34C5    3C                    	inc	a
L72D4  34C6    CD 53F5               	call	l72d4
_UNKLABEL  34C9    28                    	db	_UnkLabel
  34CA    2B                    	dec	hl
  34CB    56                    	ld	d,(hl)
  34CC    2B                    	dec	hl
  34CD    5E                    	ld	e,(hl)
L5340  34CE    18 06                 	jr	l5340
L533A  34D0                          l533a:
L7BA4  34D0    ED 5B 5CC1            	ld	de,(l7ba4)
  34D4    0E 00                 	ld	c,0
L5340  34D6                          l5340:
  34D6    E1                    	pop	hl
  34D7    78                    	ld	a,b
  34D8    91                    	sub	c
L534A  34D9    20 05                 	jr	nz,l534a
L6C42  34DB    CD 4DAC               	call	l6c42
L5360  34DE    18 16                 	jr	l5360
L534A  34E0                          l534a:
L72C8  34E0    CD 53EF               	call	l72c8
_ILLGOTO  34E3    47                    	db	_IllGOTO
  34E4    D5                    	push	de
  34E5    F5                    	push	af
L6C3F  34E6    CD 4DA9               	call	l6c3f		; Store back PC
  34E9    F1                    	pop	af
  34EA    47                    	ld	b,a
L5355  34EB                          l5355:
L6B73  34EB    CD 4D09               	call	l6b73		; Set POP HL
L5355  34EE    10 FB                 	djnz	l5355
.JP  34F0    3E C3                 	ld	a,.JP
  34F2    E1                    	pop	hl
L6B94  34F3    CD 4D2A               	call	l6b94
L5360  34F6                          l5360:
  34F6    E1                    	pop	hl
L5310  34F7    18 AD                 	jr	l5310
L5363  34F9                          l5363:
L7BA4  34F9    2A 5CC1               	ld	hl,(l7ba4)
  34FC    23                    	inc	hl
  34FD    FD E5                 	push	iy
  34FF    D1                    	pop	de
  3500    1B                    	dec	de
  3501    1B                    	dec	de
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-182


  3502    B7                    	or	a
  3503    ED 52                 	sbc	hl,de
  3505    19                    	add	hl,de
L6C3F  3506    C2 4DA9               	jp	nz,l6c3f	; Store back PC
  3509    2B                    	dec	hl
L6CC2  350A    C3 4E1B               	jp	l6cc2		; Check chaining
                                ;
                                ; Statement BEGIN
                                ;
L5377  350D                          l5377:
L5385  350D    CD 351B               	call	l5385		; Process a statement
L6E76  3510    CD 4FCA               	call	l6e76		; Find END
L7530  3513    564E                  	dw	l7530
  3515    C8                    	ret	z
L6F50  3516    CD 50A4               	call	l6f50
L5377  3519    18 F2                 	jr	l5377
                                ;
                                ; Process a statement
                                ;
L5385  351B                          l5385:
  351B    3E FF                 	ld	a,0ffh
L7B98  351D    32 5CB5               	ld	(l7b98),a
L7B9D  3520    3A 5CBA               	ld	a,(l7b9d)	; Get options
L7B9E  3523    32 5CBB               	ld	(l7b9e),a	; Set local options
.UOPT  3526    CB 5F                 	bit	.Uopt,a		; Test $U+
L539C  3528    28 08                 	jr	z,l539c		; Nope
RST  352A    3E FF                 	ld	a,RST
L7BA0  352C    32 5CBD               	ld	(l7ba0),a	; Set end on break flag [option U+]
L6B9C  352F    CD 4D32               	call	l6b9c		; Insert RST
L539C  3532                          l539c:
L6E5A  3532    CD 4FAE               	call	l6e5a		; Find statement
  3535    02                    	db	2
L75BB  3536    56D9                  	dw	l75bb
L53CB  3538    28 27                 	jr	z,l53cb		; Yeap
L67B2  353A    CD 4948               	call	l67b2
L57EA  353D    CA 3980               	jp	z,l57ea
  3540    01 0500               	ld	bc,256*5+0
L6E54  3543    CD 4FA8               	call	l6e54
L573D  3546    CA 38D3               	jp	z,l573d
  3549    01 0100               	ld	bc,256*1+0
L6E54  354C    CD 4FA8               	call	l6e54
L53D0  354F    28 15                 	jr	z,l53d0
  3551    01 0600               	ld	bc,256*6+0
L6E54  3554    CD 4FA8               	call	l6e54
L591F  3557    CA 3AB5               	jp	z,l591f
L6E5A  355A    CD 4FAE               	call	l6e5a		; Find procedure
  355D    02                    	db	2
L7638  355E    5756                  	dw	l7638
  3560    C0                    	ret	nz		; Nope
L53CB  3561                          l53cb:
  3561    5E                    	ld	e,(hl)		; Fetch address
  3562    23                    	inc	hl
  3563    56                    	ld	d,(hl)
  3564    EB                    	ex	de,hl
  3565    E9                    	jp	(hl)		; Go
L53D0  3566                          l53d0:
L6F40TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-183


  3566    CD 5094               	call	l6f40		; Verify :
L7B94  3569    3A 5CB1               	ld	a,(l7b94)	; Get ???
  356C    BE                    	cp	(hl)
L72DA  356D    CD 53FB               	call	l72da
_ILLLABEL  3570    48                    	db	_IllLabel
  3571    2B                    	dec	hl
  3572    7E                    	ld	a,(hl)
  3573    3C                    	inc	a
L72DA  3574    CD 53FB               	call	l72da
_DOUBLELAB  3577    2B                    	db	_DoubleLab
L7B95  3578    3A 5CB2               	ld	a,(l7b95)
  357B    77                    	ld	(hl),a
  357C    FD E5                 	push	iy
  357E    D1                    	pop	de
  357F    2B                    	dec	hl
  3580    72                    	ld	(hl),d
  3581    2B                    	dec	hl
  3582    73                    	ld	(hl),e
L5385  3583    18 96                 	jr	l5385
                                ;
                                ; Statement IF
                                ;
L53EF  3585                          l53ef:
L5EB0  3585    CD 4046               	call	l5eb0
L6B50  3588    CD 4CE6               	call	l6b50		; Set BIT 0,L ! JP Z,addr
@L9  358B    03                    	db	@L9
$I9  358C                          $I9:
_LB  358C    CB 45                 	BIT	_LB,L
.JPZ  358E    CA                    	db	.JPZ
@L9$I9  0003                          @L9	equ	$-$I9
  358F    FD E5                 	push	iy
L6B97  3591    CD 4D2D               	call	l6b97
L6E76  3594    CD 4FCA               	call	l6e76		; Find THEN
L756A  3597    5688                  	dw	l756a
L72DA  3599    CD 53FB               	call	l72da
_STRIDX  359C    11                    	db	_StrIdx
L5385  359D    CD 351B               	call	l5385		; Process a statement
L6E76  35A0    CD 4FCA               	call	l6e76		; Find ELSE
L756E  35A3    568C                  	dw	l756e
L5420  35A5    20 0F                 	jr	nz,l5420	; Nope
L6B77  35A7    CD 4D0D               	call	l6b77		; Set JP
  35AA    E1                    	pop	hl
  35AB    FD E5                 	push	iy
L6B97  35AD    CD 4D2D               	call	l6b97
L6C3F  35B0    CD 4DA9               	call	l6c3f		; Store back PC
L5385  35B3    CD 351B               	call	l5385		; Process a statement
L5420  35B6                          l5420:
  35B6    E1                    	pop	hl
L6C3F  35B7    C3 4DA9               	jp	l6c3f		; Store back PC
                                ;
                                ; Statement WHILE
                                ;
L5424  35BA                          l5424:
  35BA    FD E5                 	push	iy
L5EB0  35BC    CD 4046               	call	l5eb0
L6E76  35BF    CD 4FCA               	call	l6e76		; Find DO
L7572TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-184


  35C2    5690                  	dw	l7572
L72DA  35C4    CD 53FB               	call	l72da
_NODO  35C7    0D                    	db	_NoDO
L6B50  35C8    CD 4CE6               	call	l6b50		; Set BIT 0,L ! JP Z,addr
@L10  35CB    03                    	db	@L10
$I10  35CC                          $I10:
_LB  35CC    CB 45                 	BIT	_LB,L
.JPZ  35CE    CA                    	db	.JPZ
@L10$I10  0003                          @L10	equ	$-$I10
  35CF    FD E5                 	push	iy
L6B97  35D1    CD 4D2D               	call	l6b97
L5385  35D4    CD 351B               	call	l5385		; Process a statement
  35D7    D1                    	pop	de
  35D8    E1                    	pop	hl
.JP  35D9    3E C3                 	ld	a,.JP
L6B94  35DB    CD 4D2A               	call	l6b94
  35DE    EB                    	ex	de,hl
L6C3F  35DF    C3 4DA9               	jp	l6c3f		; Store back PC
                                ;
                                ; Statement REPEAT
                                ;
L544C  35E2                          l544c:
  35E2    FD E5                 	push	iy
L544E  35E4                          l544e:
L5385  35E4    CD 351B               	call	l5385		; Process a statement
L6E76  35E7    CD 4FCA               	call	l6e76		; Find UNTIL
L7574  35EA    5692                  	dw	l7574
L545D  35EC    28 05                 	jr	z,l545d		; Yeap
L6F50  35EE    CD 50A4               	call	l6f50
L544E  35F1    18 F1                 	jr	l544e
L545D  35F3                          l545d:
L5EB0  35F3    CD 4046               	call	l5eb0
L6B50  35F6    CD 4CE6               	call	l6b50
@L11  35F9    03                    	db	@L11
$I11  35FA                          $I11:
_LB  35FA    CB 45                 	BIT	_LB,L
.JPZ  35FC    CA                    	db	.JPZ
@L11$I11  0003                          @L11	equ	$-$I11
  35FD    E1                    	pop	hl
L6B97  35FE    C3 4D2D               	jp	l6b97
                                ;
                                ; Statement FOR
                                ;
L546B  3601                          l546b:
  3601    01 0400               	ld	bc,256*4+0
L6E54  3604    CD 4FA8               	call	l6e54
L72DA  3607    CD 53FB               	call	l72da
_UNDEF  360A    29                    	db	_Undef
L5276  360B    CD 340C               	call	l5276
L7B57  360E    3A 5C74               	ld	a,(l7b57)
  3611    B7                    	or	a
L5485  3612    20 07                 	jr	nz,l5485
L7B5C  3614    3A 5C79               	ld	a,(l7b5c)	; Get type
_INTEG  3617    FE 0A                 	cp	_Integ
L5489  3619    30 04                 	jr	nc,l5489
L5485  361B                          l5485:
L72E1TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-185


  361B    CD 5402               	call	l72e1
_SIMTYP  361E    1E                    	db	_SimTyp
L5489  361F                          l5489:
L6D2A  361F    CD 4E7E               	call	l6d2a		; Save environment
L7B5C  3622    3A 5C79               	ld	a,(l7b5c)	; Get type
  3625    F5                    	push	af
L6F7E  3626    CD 50D2               	call	l6f7e
L5EE8  3629    CD 407E               	call	l5ee8
L6B6F  362C    CD 4D05               	call	l6b6f		; Set PUSH HL
  362F    F1                    	pop	af
  3630    F5                    	push	af
  3631    B8                    	cp	b
L72DA  3632    CD 53FB               	call	l72da
_INVTYPE  3635    2C                    	db	_InvType
L6E5A  3636    CD 4FAE               	call	l6e5a		; Find TO or DOWNTO
  3639    01                    	db	1
L75F5  363A    5713                  	dw	l75f5
L72DA  363C    CD 53FB               	call	l72da
_NODOWN_TO  363F    12                    	db	_NoDOWN_TO
  3640    5E                    	ld	e,(hl)		; Get instruction
  3641    D5                    	push	de
L5EE8  3642    CD 407E               	call	l5ee8
  3645    D1                    	pop	de
  3646    F1                    	pop	af
  3647    D5                    	push	de
  3648    B8                    	cp	b
L72DA  3649    CD 53FB               	call	l72da
_INVTYPE  364C    2C                    	db	_InvType
L6E76  364D    CD 4FCA               	call	l6e76		; Find DO
L7572  3650    5690                  	dw	l7572
L72DA  3652    CD 53FB               	call	l72da
_NODO  3655    0D                    	db	_NoDO
L6B50  3656    CD 4CE6               	call	l6b50		; Set POP DE
@L12  3659    01                    	db	@L12
$I12  365A                          $I12:
  365A    D1                    	POP	DE
@L12$I12  0001                          @L12	equ	$-$I12
  365B    D1                    	pop	de
L6D63  365C    CD 4EB7               	call	l6d63
  365F    D5                    	push	de
  3660    7B                    	ld	a,e
L0666  3661    21 0666               	ld	hl,l0666	; Set up FOR .. TO loop
  3664    FE 23                 	cp	'#'
L54D5  3666    28 03                 	jr	z,l54d5
L0676  3668    21 0676               	ld	hl,l0676	; Set up FOR .. DOWNTO loop
L54D5  366B                          l54d5:
L6B86  366B    CD 4D1C               	call	l6b86		; Set CALL <loop>
  366E    FD E5                 	push	iy
L6B50  3670    CD 4CE6               	call	l6b50		; Set code sequence
@L13  3673    06                    	db	@L13
$I13  3674                          $I13:
  3674    7A                    	LD	A,D
  3675    B3                    	OR	E
  3676    CA 0000               	JP	Z,$-$
  3679    D5                    	PUSH	DE
@L13$I13  0006                          @L13	equ	$-$I13
L661BTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-186


  367A    CD 47B1               	call	l661b
L7B95  367D    21 5CB2               	ld	hl,l7b95
  3680    34                    	inc	(hl)
L5385  3681    CD 351B               	call	l5385		; Process a statement
L7B95  3684    21 5CB2               	ld	hl,l7b95
  3687    35                    	dec	(hl)
  3688    E1                    	pop	hl
  3689    D1                    	pop	de
L6D49  368A    CD 4E9D               	call	l6d49		; Get back environment
  368D    E5                    	push	hl
L7B58  368E    2A 5C75               	ld	hl,(l7b58)	; Get value
.LD@HL  3691    3E 2A                 	ld	a,.LD@HL
L6B94  3693    CD 4D2A               	call	l6b94
L7B62  3696    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  3699    3D                    	dec	a
L550C  369A    20 06                 	jr	nz,l550c
L6B50  369C    CD 4CE6               	call	l6b50		; Set LD H,0
@L14  369F    02                    	db	@L14
$I14  36A0                          $I14:
  36A0    26 00                 	LD	H,0
@L14$I14  0002                          @L14	equ	$-$I14
L550C  36A2                          l550c:
  36A2    7B                    	ld	a,e		; Get byte
L6B9C  36A3    CD 4D32               	call	l6b9c		; Store it
L6B50  36A6    CD 4CE6               	call	l6b50		; Set code sequence
@L15  36A9    03                    	db	@L15
$I15  36AA                          $I15:
  36AA    D1                    	POP	DE
  36AB    1B                    	DEC	DE
.JP  36AC    C3                    	db	.JP
@L15$I15  0003                          @L15	equ	$-$I15
  36AD    E1                    	pop	hl
L6B97  36AE    CD 4D2D               	call	l6b97
  36B1    23                    	inc	hl
  36B2    23                    	inc	hl
  36B3    23                    	inc	hl
L6C3F  36B4    C3 4DA9               	jp	l6c3f		; Store back PC
                                ;
                                ; Statement CASE
                                ;
L5521  36B7                          l5521:
L5EBB  36B7    CD 4051               	call	l5ebb
L7B9C  36BA    32 5CB9               	ld	(l7b9c),a
  36BD    AF                    	xor	a
L7B9B  36BE    32 5CB8               	ld	(l7b9b),a
L6F88  36C1    CD 50DC               	call	l6f88
  36C4    06 00                 	ld	b,0
  36C6    C5                    	push	bc
L5531  36C7                          l5531:
  36C7    06 01                 	ld	b,1
L5533  36C9                          l5533:
  36C9    C5                    	push	bc
L7B9B  36CA    21 5CB8               	ld	hl,l7b9b
  36CD    CB 7E                 	bit	7,(hl)
L5549  36CF    28 0E                 	jr	z,l5549
L6B50  36D1    CD 4CE6               	call	l6b50		; Set ADD HL,DE
@L16TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-187


  36D4    01                    	db	@L16
$I16  36D5                          $I16:
  36D5    19                    	ADD	HL,DE
@L16$I16  0001                          @L16	equ	$-$I16
  36D6    CB 66                 	bit	4,(hl)
L5549  36D8    28 05                 	jr	z,l5549
L6B50  36DA    CD 4CE6               	call	l6b50		; Set ADD HL,BC
@L17  36DD    01                    	db	@L17
$I17  36DE                          $I17:
  36DE    09                    	ADD	HL,BC
@L17$I17  0001                          @L17	equ	$-$I17
L5549  36DF                          l5549:
L69EA  36DF    CD 4B80               	call	l69ea		; Get constant
L7B9C  36E2    3A 5CB9               	ld	a,(l7b9c)
  36E5    B8                    	cp	b
L72DA  36E6    CD 53FB               	call	l72da
_ILLCASE  36E9    2E                    	db	_IllCASE
L6B8E  36EA    CD 4D24               	call	l6b8e		; Set LD DE,val16
  36ED    E5                    	push	hl
L6E76  36EE    CD 4FCA               	call	l6e76		; Find ..
L7580  36F1    569E                  	dw	l7580
  36F3    E1                    	pop	hl
L5582  36F4    20 22                 	jr	nz,l5582	; Nope
  36F6    E5                    	push	hl
L69EA  36F7    CD 4B80               	call	l69ea		; Get constant
L7B9C  36FA    3A 5CB9               	ld	a,(l7b9c)
  36FD    B8                    	cp	b
L72DA  36FE    CD 53FB               	call	l72da
_ILLCASE  3701    2E                    	db	_IllCASE
  3702    D1                    	pop	de
  3703    B7                    	or	a
  3704    ED 52                 	sbc	hl,de
  3706    23                    	inc	hl
L6B8A  3707    CD 4D20               	call	l6b8a
L6B50  370A    CD 4CE6               	call	l6b50		; Set sequence
@L18  370D    06                    	db	@L18
$I18  370E                          $I18:
  370E    B7                    	OR	A
  370F    ED 52                 	SBC	HL,DE
  3711    B7                    	OR	A
  3712    ED 42                 	SBC	HL,BC
@L18$I18  0006                          @L18	equ	$-$I18
  3714    3E DA                 	ld	a,0dah
L558B  3716    18 09                 	jr	l558b
L5582  3718                          l5582:
L6B50  3718    CD 4CE6               	call	l6b50		; Set sequence
@L19  371B    03                    	db	@L19
$I19  371C                          $I19:
  371C    B7                    	OR	A
  371D    ED 52                 	SBC	HL,DE
@L19$I19  0003                          @L19	equ	$-$I19
  371F    3E CA                 	ld	a,0cah
L558B  3721                          l558b:
L7B9B  3721    32 5CB8               	ld	(l7b9b),a
L6F0B  3724    CD 505F               	call	l6f0b		; Test :
  3727    C1                    	pop	bc
L55A5TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-188


  3728    28 11                 	jr	z,l55a5
L7B9B  372A    3A 5CB8               	ld	a,(l7b9b)	; Get byte
L6B9C  372D    CD 4D32               	call	l6b9c		; Store it
  3730    FD E5                 	push	iy
L6B97  3732    CD 4D2D               	call	l6b97
L6F5E  3735    CD 50B2               	call	l6f5e		; Verify ,
  3738    04                    	inc	b
L5533  3739    18 8E                 	jr	l5533
L55A5  373B                          l55a5:
  373B    FD E5                 	push	iy
  373D    D1                    	pop	de
  373E    13                    	inc	de
  373F    13                    	inc	de
  3740    13                    	inc	de
L55AB  3741                          l55ab:
  3741    05                    	dec	b
L55B4  3742    28 06                 	jr	z,l55b4
  3744    E1                    	pop	hl
L6C42  3745    CD 4DAC               	call	l6c42
L55AB  3748    18 F7                 	jr	l55ab
L55B4  374A                          l55b4:
L7B9B  374A    3A 5CB8               	ld	a,(l7b9b)	; Get byte
  374D    CB 9F                 	res	3,a		; Fix it
L6B9C  374F    CD 4D32               	call	l6b9c		; Store
  3752    C1                    	pop	bc
  3753    FD E5                 	push	iy
  3755    04                    	inc	b
  3756    C5                    	push	bc
L6B97  3757    CD 4D2D               	call	l6b97
L7B9B  375A    3A 5CB8               	ld	a,(l7b9b)
  375D    F5                    	push	af
L7B9C  375E    3A 5CB9               	ld	a,(l7b9c)
  3761    F5                    	push	af
L5385  3762    CD 351B               	call	l5385		; Process a statement
  3765    F1                    	pop	af
L7B9C  3766    32 5CB9               	ld	(l7b9c),a
  3769    F1                    	pop	af
L7B9B  376A    32 5CB8               	ld	(l7b9b),a
L6F0F  376D    CD 5063               	call	l6f0f		; Test ;
  3770    1E 01                 	ld	e,1
L55DF  3772    28 01                 	jr	z,l55df		; Yeap
  3774    1D                    	dec	e
L55DF  3775                          l55df:
  3775    D5                    	push	de
L6E76  3776    CD 4FCA               	call	l6e76		; Find END
L7530  3779    564E                  	dw	l7530
  377B    D1                    	pop	de
L561E  377C    28 36                 	jr	z,l561e
L6B77  377E    CD 4D0D               	call	l6b77		; Set JP
  3781    C1                    	pop	bc
  3782    E1                    	pop	hl
  3783    FD E5                 	push	iy
  3785    C5                    	push	bc
  3786    D5                    	push	de
L6B97  3787    CD 4D2D               	call	l6b97
L6C3F  378A    CD 4DA9               	call	l6c3f		; Store back PC
L6E76TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-189


  378D    CD 4FCA               	call	l6e76		; Find ELSE
L756E  3790    568C                  	dw	l756e
  3792    D1                    	pop	de
L560F  3793    28 10                 	jr	z,l560f		; Yeap
  3795    1D                    	dec	e
L5531  3796    CA 36C7               	jp	z,l5531
L7B98  3799    3A 5CB5               	ld	a,(l7b98)
  379C    B7                    	or	a
L72D4  379D    CD 53F5               	call	l72d4
_END  37A0    0E                    	db	_End
L72E1  37A1    CD 5402               	call	l72e1
_UNDEF  37A4    29                    	db	_Undef
L560F  37A5                          l560f:
L5385  37A5    CD 351B               	call	l5385		; Process a statement
L6E76  37A8    CD 4FCA               	call	l6e76		; Find END
L7530  37AB    564E                  	dw	l7530
L561E  37AD    28 05                 	jr	z,l561e		; Yeap
L6F50  37AF    CD 50A4               	call	l6f50
L560F  37B2    18 F1                 	jr	l560f
L561E  37B4                          l561e:
  37B4    C1                    	pop	bc
L561F  37B5                          l561f:
  37B5    E1                    	pop	hl
L6C3F  37B6    CD 4DA9               	call	l6c3f		; Store back PC
L561F  37B9    10 FA                 	djnz	l561f
  37BB    C9                    	ret
                                ;
                                ; Statement GOTO
                                ;
L5626  37BC                          l5626:
  37BC    01 0100               	ld	bc,256*1+0
L6E54  37BF    CD 4FA8               	call	l6e54
L72DA  37C2    CD 53FB               	call	l72da
_UNKLABEL  37C5    28                    	db	_UnkLabel
L7B94  37C6    3A 5CB1               	ld	a,(l7b94)
  37C9    BE                    	cp	(hl)
L72DA  37CA    CD 53FB               	call	l72da
_ILLLABEL  37CD    48                    	db	_IllLabel
  37CE    EB                    	ex	de,hl
L5639  37CF                          l5639:
L6D75  37CF    CD 4EC9               	call	l6d75		; Put to table
L7B95  37D2    3A 5CB2               	ld	a,(l7b95)
L6D7A  37D5    CD 4ECE               	call	l6d7a
L6B77  37D8    CD 4D0D               	call	l6b77		; Set JP
  37DB    FD E5                 	push	iy
  37DD    D1                    	pop	de
L6D75  37DE    CD 4EC9               	call	l6d75		; Put to table
L6B97  37E1    C3 4D2D               	jp	l6b97
                                ;
                                ; Statement WITH
                                ;
L564E  37E4                          l564e:
L7BC9  37E4    3A 5CE6               	ld	a,(l7bc9)
  37E7    F5                    	push	af
L5652  37E8                          l5652:
L7BC6  37E8    3A 5CE3               	ld	a,(l7bc6)
L7BC9TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-190


  37EB    21 5CE6               	ld	hl,l7bc9
  37EE    BE                    	cp	(hl)
L72D4  37EF    CD 53F5               	call	l72d4
_TOOMANYWITH  37F2    61                    	db	_TooManyWITH
L677F  37F3    CD 4915               	call	l677f
L7B5C  37F6    3A 5C79               	ld	a,(l7b5c)	; Get type
_RECORD  37F9    FE 02                 	cp	_Record
L72DA  37FB    CD 53FB               	call	l72da
_RECVAREXP  37FE    1D                    	db	_RecVarExp
L7BC9  37FF    21 5CE6               	ld	hl,l7bc9
  3802    5E                    	ld	e,(hl)
  3803    16 00                 	ld	d,0
  3805    34                    	inc	(hl)
L7BCC  3806    21 5CE9               	ld	hl,l7bcc
  3809    19                    	add	hl,de
L7B5D  380A    3A 5C7A               	ld	a,(l7b5d)
  380D    77                    	ld	(hl),a
L7BCA  380E    2A 5CE7               	ld	hl,(l7bca)
  3811    19                    	add	hl,de
  3812    19                    	add	hl,de
.LDHL@  3813    3E 22                 	ld	a,.LDHL@
L6B94  3815    CD 4D2A               	call	l6b94
L6F13  3818    CD 5067               	call	l6f13		; Test ,
L5652  381B    28 CB                 	jr	z,l5652		; Yeap
L6E76  381D    CD 4FCA               	call	l6e76		; Find DO
L7572  3820    5690                  	dw	l7572
L72DA  3822    CD 53FB               	call	l72da
_NODO  3825    0D                    	db	_NoDO
L5385  3826    CD 351B               	call	l5385		; Process a statement
  3829    F1                    	pop	af
L7BC9  382A    32 5CE6               	ld	(l7bc9),a
  382D    C9                    	ret
                                ;
                                ; Statement INLINE
                                ;
L5698  382E                          l5698:
L6F66  382E    CD 50BA               	call	l6f66		; Verify (
L569B  3831                          l569b:
  3831    3E 3E                 	ld	a,'>'
L6F29  3833    CD 507D               	call	l6f29
  3836    3E 02                 	ld	a,2
L56AE  3838    28 0A                 	jr	z,l56ae
  383A    3E 3C                 	ld	a,'<'
L6F29  383C    CD 507D               	call	l6f29
  383F    3E 01                 	ld	a,1
L56AE  3841    28 01                 	jr	z,l56ae
  3843    AF                    	xor	a
L56AE  3844                          l56ae:
L7BA6  3844    32 5CC3               	ld	(l7ba6),a
  3847    AF                    	xor	a
  3848    67                    	ld	h,a
  3849    6F                    	ld	l,a
  384A    47                    	ld	b,a
L56B5  384B                          l56b5:
  384B    C5                    	push	bc
  384C    E5                    	push	hl
L6A0DTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-191


  384D    CD 4BA3               	call	l6a0d		; Get constant
L56C5  3850    20 09                 	jr	nz,l56c5
  3852    78                    	ld	a,b
  3853    FE 0A                 	cp	0ah
L5702  3855    28 41                 	jr	z,l5702
L72E1  3857    CD 5402               	call	l72e1
_INTCONST  385A    16                    	db	_IntConst
L56C5  385B                          l56c5:
L7BA6  385B    21 5CC3               	ld	hl,l7ba6
  385E    7E                    	ld	a,(hl)
  385F    B7                    	or	a
L56CE  3860    20 02                 	jr	nz,l56ce
  3862    36 02                 	ld	(hl),2
L56CE  3864                          l56ce:
  3864    3E 2A                 	ld	a,'*'
L6F29  3866    CD 507D               	call	l6f29
L56DA  3869    20 05                 	jr	nz,l56da
  386B    FD E5                 	push	iy
  386D    E1                    	pop	hl
L5702  386E    18 28                 	jr	l5702
L56DA  3870                          l56da:
  3870    01 0400               	ld	bc,256*4+0
L6E54  3873    CD 4FA8               	call	l6e54
L56EA  3876    20 08                 	jr	nz,l56ea
L5276  3878    CD 340C               	call	l5276
L7B58  387B    2A 5C75               	ld	hl,(l7b58)	; Get value
L5702  387E    18 18                 	jr	l5702
L56EA  3880                          l56ea:
  3880    01 0500               	ld	bc,256*5+0
L6E54  3883    CD 4FA8               	call	l6e54
L56FC  3886    28 0A                 	jr	z,l56fc
  3888    01 0600               	ld	bc,256*6+0
L6E54  388B    CD 4FA8               	call	l6e54
L72DA  388E    CD 53FB               	call	l72da
_ILLINLINE  3891    4A                    	db	_IllINLINE
L56FC  3892                          l56fc:
  3892    2B                    	dec	hl
  3893    2B                    	dec	hl
  3894    56                    	ld	d,(hl)
  3895    2B                    	dec	hl
  3896    5E                    	ld	e,(hl)
  3897    EB                    	ex	de,hl
L5702  3898                          l5702:
  3898    D1                    	pop	de
  3899    C1                    	pop	bc
  389A    05                    	dec	b
L570A  389B    20 03                 	jr	nz,l570a
L6A30  389D    CD 4BC6               	call	l6a30
L570A  38A0                          l570a:
  38A0    19                    	add	hl,de
  38A1    06 00                 	ld	b,0
  38A3    3E 2B                 	ld	a,'+'
L6F29  38A5    CD 507D               	call	l6f29
L56B5  38A8    28 A1                 	jr	z,l56b5
  38AA    04                    	inc	b
  38AB    3E 2D                 	ld	a,'-'
L6F29TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-192


  38AD    CD 507D               	call	l6f29
L56B5  38B0    28 99                 	jr	z,l56b5
L7BA6  38B2    3A 5CC3               	ld	a,(l7ba6)
  38B5    FE 01                 	cp	1
L5729  38B7    28 06                 	jr	z,l5729
L572F  38B9    30 0A                 	jr	nc,l572f
  38BB    24                    	inc	h
  38BC    25                    	dec	h
L572F  38BD    20 06                 	jr	nz,l572f
L5729  38BF                          l5729:
  38BF    7D                    	ld	a,l		; Get byte
L6B9C  38C0    CD 4D32               	call	l6b9c		; Store it
L5732  38C3    18 03                 	jr	l5732
L572F  38C5                          l572f:
L6B97  38C5    CD 4D2D               	call	l6b97
L5732  38C8                          l5732:
  38C8    3E 2F                 	ld	a,'/'
L6F29  38CA    CD 507D               	call	l6f29
L569B  38CD    CA 3831               	jp	z,l569b
L6F6E  38D0    C3 50C2               	jp	l6f6e		; Verify )
L573D  38D3                          l573d:
  38D3    2B                    	dec	hl
  38D4    46                    	ld	b,(hl)
  38D5    2B                    	dec	hl
  38D6    56                    	ld	d,(hl)
  38D7    2B                    	dec	hl
  38D8    5E                    	ld	e,(hl)
  38D9    2B                    	dec	hl
  38DA    D5                    	push	de
  38DB    56                    	ld	d,(hl)
  38DC    2B                    	dec	hl
  38DD    5E                    	ld	e,(hl)
  38DE    2B                    	dec	hl
  38DF    D5                    	push	de
  38E0    2B                    	dec	hl
  38E1    2B                    	dec	hl
  38E2    56                    	ld	d,(hl)
  38E3    2B                    	dec	hl
  38E4    5E                    	ld	e,(hl)
  38E5    2B                    	dec	hl
  38E6    D5                    	push	de
  38E7    56                    	ld	d,(hl)
  38E8    2B                    	dec	hl
  38E9    5E                    	ld	e,(hl)
  38EA    2B                    	dec	hl
  38EB    D5                    	push	de
  38EC    04                    	inc	b
  38ED    05                    	dec	b
L57D6  38EE    CA 396C               	jp	z,l57d6
L6F66  38F1    CD 50BA               	call	l6f66		; Verify (
L575E  38F4                          l575e:
  38F4    C5                    	push	bc
  38F5    46                    	ld	b,(hl)
  38F6    2B                    	dec	hl
  38F7    7E                    	ld	a,(hl)
  38F8    2B                    	dec	hl
L7B57TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-193


  38F9    32 5C74               	ld	(l7b57),a
  38FC    56                    	ld	d,(hl)
  38FD    2B                    	dec	hl
  38FE    5E                    	ld	e,(hl)
  38FF    2B                    	dec	hl
  3900    48                    	ld	c,b
L576B  3901                          l576b:
  3901    CB 7E                 	bit	7,(hl)
  3903    2B                    	dec	hl
L576B  3904    28 FB                 	jr	z,l576b
L576B  3906    10 F9                 	djnz	l576b
  3908    41                    	ld	b,c
  3909    E5                    	push	hl
  390A    EB                    	ex	de,hl
L5287  390B    CD 341D               	call	l5287		; Get name
L5778  390E                          l5778:
  390E    C5                    	push	bc
L7B57  390F    3A 5C74               	ld	a,(l7b57)
  3912    B7                    	or	a
L57A9  3913    20 2A                 	jr	nz,l57a9
L7B5C  3915    3A 5C79               	ld	a,(l7b5c)	; Get type
_SET  3918    FE 03                 	cp	_Set
L57A1  391A    38 1B                 	jr	c,l57a1
L5E84  391C    CD 401A               	call	l5e84
L5864  391F    CD 39FA               	call	l5864
L7B5C  3922    3A 5C79               	ld	a,(l7b5c)	; Get type
_PTR  3925    FE 04                 	cp	_Ptr
L57BD  3927    28 2A                 	jr	z,l57bd
_REAL  3929    FE 09                 	cp	_Real
L57C0  392B    38 29                 	jr	c,l57c0
L57BD  392D    20 24                 	jr	nz,l57bd
L6B50  392F    CD 4CE6               	call	l6b50		; Set sequence
@L20  3932    02                    	db	@L20
$I20  3933                          $I20:
  3933    C5                    	PUSH	BC
  3934    D5                    	PUSH	DE
@L20$I20  0002                          @L20	equ	$-$I20
L57BD  3935    18 1C                 	jr	l57bd
L57A1  3937                          l57a1:
L6D2A  3937    CD 4E7E               	call	l6d2a		; Save environment
L6749  393A    CD 48DF               	call	l6749
L57AF  393D    18 06                 	jr	l57af
L57A9  393F                          l57a9:
L6D2A  393F    CD 4E7E               	call	l6d2a		; Save environment
L677F  3942    CD 4915               	call	l677f
L57AF  3945                          l57af:
L6D5D  3945    CD 4EB1               	call	l6d5d
L7B69  3948    3A 5C86               	ld	a,(l7b69)
  394B    FE 00                 	cp	0
L58C5  394D    C4 3A5B               	call	nz,l58c5
L6D49  3950    CD 4E9D               	call	l6d49		; Get back environment
L57BD  3953                          l57bd:
L6B6F  3953    CD 4D05               	call	l6b6f		; Set PUSH HL
L57C0  3956                          l57c0:
  3956    C1                    	pop	bc
  3957    05                    	dec	b
L57C9TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-194


  3958    28 05                 	jr	z,l57c9
L6F5E  395A    CD 50B2               	call	l6f5e		; Verify ,
L5778  395D    18 AF                 	jr	l5778
L57C9  395F                          l57c9:
  395F    E1                    	pop	hl
  3960    C1                    	pop	bc
  3961    05                    	dec	b
L57D3  3962    28 05                 	jr	z,l57d3
L6F5E  3964    CD 50B2               	call	l6f5e		; Verify ,
L575E  3967    18 8B                 	jr	l575e
L57D3  3969                          l57d3:
L6F6E  3969    CD 50C2               	call	l6f6e		; Verify )
L57D6  396C                          l57d6:
  396C    D1                    	pop	de
  396D    E1                    	pop	hl
  396E    7A                    	ld	a,d
  396F    B3                    	or	e
L57E3  3970    28 07                 	jr	z,l57e3
L6B92  3972    CD 4D28               	call	l6b92		; Set LD HL,val16
  3975    EB                    	ex	de,hl
L6B8E  3976    CD 4D24               	call	l6b8e		; Set LD DE,val16
L57E3  3979                          l57e3:
  3979    D1                    	pop	de
  397A    E1                    	pop	hl
.CALL  397B    3E CD                 	ld	a,.CALL
L6B94  397D    C3 4D2A               	jp	l6b94
L57EA  3980                          l57ea:
L7B5C  3980    3A 5C79               	ld	a,(l7b5c)	; Get type
  3983    FE 00                 	cp	0
L57F9  3985    28 08                 	jr	z,l57f9
_RECF  3987    FE 05                 	cp	_RecF
L57FD  3989    38 08                 	jr	c,l57fd
_STRING  398B    FE 08                 	cp	_String
L57FD  398D    30 04                 	jr	nc,l57fd
L57F9  398F                          l57f9:
L72E1  398F    CD 5402               	call	l72e1
_ILLASS  3992    36                    	db	_IllAss
L57FD  3993                          l57fd:
L7BBD  3993    3A 5CDA               	ld	a,(l7bbd)
  3996    CB 4F                 	bit	1,a
L5812  3998    20 0E                 	jr	nz,l5812
  399A    CB 47                 	bit	0,a
L580A  399C    28 02                 	jr	z,l580a
  399E    3E FF                 	ld	a,0ffh
L580A  39A0                          l580a:
L7BBE  39A0    2A 5CDB               	ld	hl,(l7bbe)
L7B58  39A3    22 5C75               	ld	(l7b58),hl	; Set value
L581A  39A6    18 08                 	jr	l581a
L5812  39A8                          l5812:
L678B  39A8    CD 4921               	call	l678b
L6B6F  39AB    CD 4D05               	call	l6b6f		; Set PUSH HL
  39AE    3E 01                 	ld	a,1
L581A  39B0                          l581a:
L7B57  39B0    32 5C74               	ld	(l7b57),a
L6F7E  39B3    CD 50D2               	call	l6f7e
L7B5C  39B6    3A 5C79               	ld	a,(l7b5c)	; Get type
_SETTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-195


  39B9    FE 03                 	cp	_Set
L593A  39BB    D2 3AD0               	jp	nc,l593a
L6D2A  39BE    CD 4E7E               	call	l6d2a		; Save environment
L6749  39C1    CD 48DF               	call	l6749
L6D43  39C4    CD 4E97               	call	l6d43
L58C5  39C7    CD 3A5B               	call	l58c5
L7B64  39CA    3A 5C81               	ld	a,(l7b64)
  39CD    3D                    	dec	a
L5852  39CE    28 18                 	jr	z,l5852
  39D0    3C                    	inc	a
L5845  39D1    28 08                 	jr	z,l5845
L6B50  39D3    CD 4CE6               	call	l6b50		; Set LD DE,(adr)
@L21  39D6    02                    	db	@L21
$I21  39D7                          $I21:
.LD@DE  39D7    5BED                  	dw	.LD@DE
@L21$I21  0002                          @L21	equ	$-$I21
L584A  39D9    18 05                 	jr	l584a
L5845  39DB                          l5845:
L6B50  39DB    CD 4CE6               	call	l6b50
@L22  39DE    01                    	db	@L22
$I22  39DF                          $I22:
.LD.DE  39DF    11                    	db	.LD.DE		; Set LD DE,adr
@L22$I22  0001                          @L22	equ	$-$I22
L584A  39E0                          l584a:
L7B65  39E0    2A 5C82               	ld	hl,(l7b65)
L6B97  39E3    CD 4D2D               	call	l6b97
L5857  39E6    18 05                 	jr	l5857
L5852  39E8                          l5852:
L6B50  39E8    CD 4CE6               	call	l6b50		; Set POP DE
@L23  39EB    01                    	db	@L23
$I23  39EC                          $I23:
  39EC    D1                    	pop	de
@L23$I23  0001                          @L23	equ	$-$I23
L5857  39ED                          l5857:
L7B6F  39ED    2A 5C8C               	ld	hl,(l7b6f)
L6B8A  39F0    CD 4D20               	call	l6b8a
L6B50  39F3    CD 4CE6               	call	l6b50		; Set LDIR
@L24  39F6    02                    	db	@L24
$I24  39F7                          $I24:
  39F7    ED B0                 	LDIR
@L24$I24  0002                          @L24	equ	$-$I24
  39F9    C9                    	ret
L5864  39FA                          l5864:
L7B5C  39FA    3A 5C79               	ld	a,(l7b5c)	; Get type
_REAL  39FD    FE 09                 	cp	_Real
L5877  39FF    20 0C                 	jr	nz,l5877
  3A01    78                    	ld	a,b
_INTEG  3A02    FE 0A                 	cp	_Integ
L589D  3A04    20 2D                 	jr	nz,l589d
  3A06    06 09                 	ld	b,9
L1008  3A08    21 1008               	ld	hl,l1008
L589A  3A0B    18 23                 	jr	l589a
L5877  3A0D                          l5877:
_STRING  3A0D    FE 08                 	cp	_String
L588C  3A0F    20 11                 	jr	nz,l588c
  3A11    78                    	ld	a,b
_CHARTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-196


  3A12    FE 0C                 	cp	_Char
L589D  3A14    20 1D                 	jr	nz,l589d
  3A16    06 08                 	ld	b,8
L6B50  3A18    CD 4CE6               	call	l6b50		; Set sequence
@L25  3A1B    04                    	db	@L25
$I25  3A1C                          $I25:
  3A1C    65                    	LD	H,L
  3A1D    2E 01                 	LD	L,1
  3A1F    E5                    	PUSH	HL
@L25$I25  0004                          @L25	equ	$-$I25
L589D  3A20    18 11                 	jr	l589d
L588C  3A22                          l588c:
_CHAR  3A22    FE 0C                 	cp	_Char
L589D  3A24    20 0D                 	jr	nz,l589d
  3A26    78                    	ld	a,b
_STRING  3A27    FE 08                 	cp	_String
L589D  3A29    20 08                 	jr	nz,l589d
  3A2B    06 0C                 	ld	b,0ch
L0996  3A2D    21 0996               	ld	hl,l0996	; Set check assignment
L589A  3A30                          l589a:
L6B86  3A30    CD 4D1C               	call	l6b86		; Set CALL <check>
L589D  3A33                          l589d:
L7B5C  3A33    3A 5C79               	ld	a,(l7b5c)	; Get type
  3A36    B8                    	cp	b
L58C1  3A37    20 1E                 	jr	nz,l58c1
  3A39    FE 03                 	cp	3
L58B1  3A3B    20 0A                 	jr	nz,l58b1
  3A3D    79                    	ld	a,c
  3A3E    B7                    	or	a
  3A3F    C8                    	ret	z
L7B5E  3A40    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
  3A43    BE                    	cp	(hl)
  3A44    C8                    	ret	z
L58C1  3A45    18 10                 	jr	l58c1
L58B1  3A47                          l58b1:
  3A47    FE 04                 	cp	4
  3A49    C0                    	ret	nz
L7B8B  3A4A    2A 5CA8               	ld	hl,(l7b8b)
  3A4D    7C                    	ld	a,h
  3A4E    B5                    	or	l
  3A4F    C8                    	ret	z
L7B5E  3A50    ED 5B 5C7B            	ld	de,(l7b5e)	; Get lo set limit
  3A54    ED 52                 	sbc	hl,de
  3A56    C8                    	ret	z
L58C1  3A57                          l58c1:
L72E1  3A57    CD 5402               	call	l72e1
_INVTYPE  3A5A    2C                    	db	_InvType
L58C5  3A5B                          l58c5:
L7B5C  3A5B    3A 5C79               	ld	a,(l7b5c)	; Get type
  3A5E    FE 00                 	cp	0
L591B  3A60    28 4F                 	jr	z,l591b
  3A62    0E BF                 	ld	c,0bfh
_INTEG  3A64    FE 0A                 	cp	_Integ
L5906  3A66    30 34                 	jr	nc,l5906
  3A68    0E 83                 	ld	c,83h
_STRING  3A6A    FE 08                 	cp	_String
L58E3TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-197


  3A6C    20 0B                 	jr	nz,l58e3
L7B9E  3A6E    3A 5CBB               	ld	a,(l7b9e)	; Get local options
.VOPT  3A71    CB 6F                 	bit	.Vopt,a		; Test $V+
L5906  3A73    20 27                 	jr	nz,l5906	; Yeap
  3A75    0E 80                 	ld	c,80h
L5906  3A77    18 23                 	jr	l5906
L58E3  3A79                          l58e3:
_TXTF  3A79    FE 06                 	cp	_TxtF
L5906  3A7B    30 1F                 	jr	nc,l5906
  3A7D    0E B3                 	ld	c,0b3h
_SET  3A7F    FE 03                 	cp	_Set
L5906  3A81    30 19                 	jr	nc,l5906
  3A83    0E C3                 	ld	c,0c3h
_RECORD  3A85    FE 02                 	cp	_Record
L5906  3A87    30 13                 	jr	nc,l5906
L7B60  3A89    2A 5C7D               	ld	hl,(l7b60)	; Get hi set limit
  3A8C    7C                    	ld	a,h
  3A8D    B5                    	or	l
  3A8E    0E BF                 	ld	c,0bfh
L5906  3A90    20 0A                 	jr	nz,l5906
L7B6D  3A92    2A 5C8A               	ld	hl,(l7b6d)	; Get last memory address
  3A95    7E                    	ld	a,(hl)
  3A96    FE 0A                 	cp	0ah
L591B  3A98    20 17                 	jr	nz,l591b
  3A9A    0E B3                 	ld	c,0b3h
L5906  3A9C                          l5906:
L7B5C  3A9C    21 5C79               	ld	hl,l7b5c	; Point to type
L7B69  3A9F    11 5C86               	ld	de,l7b69
  3AA2    06 08                 	ld	b,8
L590E  3AA4                          l590e:
  3AA4    CB 11                 	rl	c
L5916  3AA6    30 04                 	jr	nc,l5916
  3AA8    1A                    	ld	a,(de)
  3AA9    BE                    	cp	(hl)
L591B  3AAA    20 05                 	jr	nz,l591b
L5916  3AAC                          l5916:
  3AAC    23                    	inc	hl
  3AAD    13                    	inc	de
L590E  3AAE    10 F4                 	djnz	l590e
  3AB0    C9                    	ret
L591B  3AB1                          l591b:
L72E1  3AB1    CD 5402               	call	l72e1
_INVTYPE  3AB4    2C                    	db	_InvType
L591F  3AB5                          l591f:
LFFFC  3AB5    11 FFFC               	ld	de,lfffc
  3AB8    19                    	add	hl,de
  3AB9    56                    	ld	d,(hl)
  3ABA    2B                    	dec	hl
  3ABB    5E                    	ld	e,(hl)
  3ABC    2B                    	dec	hl
  3ABD    D5                    	push	de
  3ABE    56                    	ld	d,(hl)
  3ABF    2B                    	dec	hl
  3AC0    5E                    	ld	e,(hl)
L7B58  3AC1    ED 53 5C75            	ld	(l7b58),de	; Set value
  3AC5    E1                    	pop	hl
L5287TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-198


  3AC6    CD 341D               	call	l5287		; Get name
  3AC9    AF                    	xor	a
L7B57  3ACA    32 5C74               	ld	(l7b57),a
L6F7E  3ACD    CD 50D2               	call	l6f7e
L593A  3AD0                          l593a:
L5E84  3AD0    CD 401A               	call	l5e84
L5864  3AD3    CD 39FA               	call	l5864
L661B  3AD6    C3 47B1               	jp	l661b
                                ;
                                ; Procedure ASSIGN(FileVar,String)
                                ;
L5943  3AD9                          l5943:
L5A0C  3AD9    CD 3BA2               	call	l5a0c
L1370  3ADC    21 1370               	ld	hl,l1370
  3ADF    FE 06                 	cp	6
L5955  3AE1    20 08                 	jr	nz,l5955
L136F  3AE3    21 136F               	ld	hl,l136f
L5955  3AE6    CD 3AEB               	call	l5955
L5989  3AE9    18 34                 	jr	l5989
L5955  3AEB                          l5955:
  3AEB    E5                    	push	hl
L6B6F  3AEC    CD 4D05               	call	l6b6f		; Set PUSH HL
L6F5E  3AEF    CD 50B2               	call	l6f5e		; Verify ,
L5ED0  3AF2    CD 4066               	call	l5ed0
  3AF5    E1                    	pop	hl
L5960  3AF6                          l5960:
L6F6E  3AF6    CD 50C2               	call	l6f6e		; Verify )
L6B86  3AF9    C3 4D1C               	jp	l6b86		; Set CALL <...>
                                ;
                                ; Procedure RENAME(FileVar,String)
                                ;
L5966  3AFC                          l5966:
L5A0C  3AFC    CD 3BA2               	call	l5a0c
L1BA5  3AFF    21 1BA5               	ld	hl,l1ba5
L5955  3B02    CD 3AEB               	call	l5955
L5989  3B05    18 18                 	jr	l5989
                                ;
                                ; Procedure ERASE(FileVar)
                                ;
L5971  3B07                          l5971:
L5A0C  3B07    CD 3BA2               	call	l5a0c
L1B93  3B0A    21 1B93               	ld	hl,l1b93
L5960  3B0D    18 E7                 	jr	l5960
                                ;
                                ; Procedure CHAIN(FileVar)
                                ;
L5979  3B0F                          l5979:
L1BEB  3B0F    21 1BEB               	ld	hl,l1beb
L5981  3B12    18 03                 	jr	l5981
                                ;
                                ; Procedure EXECUTE(FileVar)
                                ;
L597E  3B14                          l597e:
L1BEA  3B14    21 1BEA               	ld	hl,l1bea
L5981  3B17                          l5981:
  3B17    E5                    	push	hl
L5A0CTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-199


  3B18    CD 3BA2               	call	l5a0c
L5985  3B1B                          l5985:
  3B1B    E1                    	pop	hl
L5986  3B1C                          l5986:
L5960  3B1C    CD 3AF6               	call	l5960
L5989  3B1F                          l5989:
L5ABE  3B1F    C3 3C54               	jp	l5abe
                                ;
                                ; Procedure SEEK(FileVar,Integer)
                                ;
L598C  3B22                          l598c:
L5A0C  3B22    CD 3BA2               	call	l5a0c
  3B25    FE 06                 	cp	6
L72D4  3B27    CD 53F5               	call	l72d4
_ILLTXTFILE  3B2A    3F                    	db	_IllTxtFile
L19D5  3B2B    21 19D5               	ld	hl,l19d5
  3B2E    FE 05                 	cp	5
L599F  3B30    28 03                 	jr	z,l599f
L1B6F  3B32    21 1B6F               	ld	hl,l1b6f
L599F  3B35                          l599f:
  3B35    E5                    	push	hl
L6B6F  3B36    CD 4D05               	call	l6b6f		; Set PUSH HL
L6F5E  3B39    CD 50B2               	call	l6f5e		; Verify ,
L5E97  3B3C    CD 402D               	call	l5e97
L5985  3B3F    18 DA                 	jr	l5985
                                ;
                                ; Procedure FLUSH(FileVar)
                                ;
L59AB  3B41                          l59ab:
L5A0C  3B41    CD 3BA2               	call	l5a0c
  3B44    FE 05                 	cp	5
L72DA  3B46    CD 53FB               	call	l72da
_ILLFILETYPE  3B49    40                    	db	_IllFileType
L19A5  3B4A    21 19A5               	ld	hl,l19a5
L5986  3B4D    18 CD                 	jr	l5986
                                ;
                                ; Procedure RESET(FileVar,String)
                                ;
L59B9  3B4F                          l59b9:
L59FA  3B4F    21 3B90               	ld	hl,l59fa
L59C1  3B52    18 03                 	jr	l59c1
                                ;
                                ; Procedure REWRITE(FileVar,String)
                                ;
L59BE  3B54                          l59be:
L5A00  3B54    21 3B96               	ld	hl,l5a00
L59C1  3B57                          l59c1:
  3B57    E5                    	push	hl
L5A0C  3B58    CD 3BA2               	call	l5a0c
L7B5C  3B5B    3A 5C79               	ld	a,(l7b5c)	; Get type
_RECF  3B5E    FE 05                 	cp	_RecF
L59D8  3B60    20 0C                 	jr	nz,l59d8
L7B5E  3B62    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
L5271  3B65    CD 3407               	call	l5271		; Load name
L7B6F  3B68    2A 5C8C               	ld	hl,(l7b6f)
L6B8E  3B6B    CD 4D24               	call	l6b8e		; Set LD DE,val16
L59D8TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-200


  3B6E                          l59d8:
  3B6E    E1                    	pop	hl
L59E1  3B6F    18 06                 	jr	l59e1
                                ;
                                ; Procedure CLOSE(FileVar)
                                ;
L59DB  3B71                          l59db:
L5A0C  3B71    CD 3BA2               	call	l5a0c
L5A06  3B74    21 3B9C               	ld	hl,l5a06
L59E1  3B77                          l59e1:
L6F6E  3B77    CD 50C2               	call	l6f6e		; Verify )
L59E9  3B7A    CD 3B7F               	call	l59e9
L5989  3B7D    18 A0                 	jr	l5989
L59E9  3B7F                          l59e9:
L7B5C  3B7F    3A 5C79               	ld	a,(l7b5c)	; Get type
_RECF  3B82    D6 05                 	sub	_RecF
  3B84    87                    	add	a,a
  3B85    5F                    	ld	e,a
  3B86    16 00                 	ld	d,0
  3B88    19                    	add	hl,de
  3B89    5E                    	ld	e,(hl)
  3B8A    23                    	inc	hl
  3B8B    56                    	ld	d,(hl)
  3B8C    EB                    	ex	de,hl
L6B86  3B8D    C3 4D1C               	jp	l6b86		; Set CALL <...>
L59FA  3B90                          l59fa:
L1811  3B90    1811                  	dw	l1811		; Record file
L13FF  3B92    13FF                  	dw	l13ff		; Text file
L1A70  3B94    1A70                  	dw	l1a70		; Untyped file
L5A00  3B96                          l5a00:
L1810  3B96    1810                  	dw	l1810
L13FE  3B98    13FE                  	dw	l13fe
L1A6F  3B9A    1A6F                  	dw	l1a6f
L5A06  3B9C                          l5a06:
L187A  3B9C    187A                  	dw	l187a
L1469  3B9E    1469                  	dw	l1469
L1AB0  3BA0    1AB0                  	dw	l1ab0
L5A0C  3BA2                          l5a0c:
L6F66  3BA2    CD 50BA               	call	l6f66		; Verify (
L5A17  3BA5    CD 3BAD               	call	l5a17
  3BA8    C8                    	ret	z
L72E1  3BA9    CD 5402               	call	l72e1
_FILEVAREXP  3BAC    15                    	db	_FileVarExp
L5A17  3BAD                          l5a17:
L67B2  3BAD    CD 4948               	call	l67b2
  3BB0    37                    	scf
  3BB1    C0                    	ret	nz
L7B5C  3BB2    3A 5C79               	ld	a,(l7b5c)	; Get type
_RECF  3BB5    FE 05                 	cp	_RecF
L5A2F  3BB7    38 0C                 	jr	c,l5a2f
_STRING  3BB9    FE 08                 	cp	_String
L5A2F  3BBB    30 08                 	jr	nc,l5a2f
L678B  3BBD    CD 4921               	call	l678b
  3BC0    AF                    	xor	a
L7B5C  3BC1    3A 5C79               	ld	a,(l7b5c)	; Get back type
  3BC4    C9                    	ret
L5A2FTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-201


  3BC5                          l5a2f:
  3BC5    AF                    	xor	a
  3BC6    3D                    	dec	a
  3BC7    C9                    	ret
                                ;
                                ; Procedure READLN(FileVar,Variables)
                                ;
L5A32  3BC8                          l5a32:
SKIP  3BC8    3E                    	db	skip
                                ;
                                ; Procedure READ(FileVar,Variables)
                                ;
L5A33  3BC9                          l5a33:
  3BC9    AF                    	xor	a
L7BA3  3BCA    32 5CC0               	ld	(l7ba3),a
L6F1B  3BCD    CD 506F               	call	l6f1b		; Test (
L5A41  3BD0    28 05                 	jr	z,l5a41		; Yeap
L5ACA  3BD2    CD 3C60               	call	l5aca
L5AB4  3BD5    18 73                 	jr	l5ab4
L5A41  3BD7                          l5a41:
L5A17  3BD7    CD 3BAD               	call	l5a17
L5A63  3BDA    38 1D                 	jr	c,l5a63
L5A5B  3BDC    20 13                 	jr	nz,l5a5b
  3BDE    FE 05                 	cp	5
L5BD8  3BE0    CA 3D6E               	jp	z,l5bd8
  3BE3    FE 06                 	cp	6
L72DA  3BE5    CD 53FB               	call	l72da
_NOUNTYPEFILE  3BE8    41                    	db	_NoUntypeFile
L14A9  3BE9    21 14A9               	ld	hl,l14a9
L6B86  3BEC    CD 4D1C               	call	l6b86		; Set CALL FILECHECK
L5AAC  3BEF    18 51                 	jr	l5aac
L5A5B  3BF1                          l5a5b:
L678B  3BF1    CD 4921               	call	l678b
L5ACA  3BF4    CD 3C60               	call	l5aca
L5A69  3BF7    18 06                 	jr	l5a69
L5A63  3BF9                          l5a63:
L5ACA  3BF9    CD 3C60               	call	l5aca
L5A66  3BFC                          l5a66:
L677F  3BFC    CD 4915               	call	l677f
L5A69  3BFF                          l5a69:
L7B5C  3BFF    3A 5C79               	ld	a,(l7b5c)	; Get type
_STRING  3C02    FE 08                 	cp	_String
L5A78  3C04    38 08                 	jr	c,l5a78
_BOOL  3C06    FE 0B                 	cp	_Bool
L5A78  3C08    28 04                 	jr	z,l5a78
_CHAR  3C0A    FE 0D                 	cp	_Char+1
L5A7C  3C0C    38 04                 	jr	c,l5a7c
L5A78  3C0E                          l5a78:
L72E1  3C0E    CD 5402               	call	l72e1
_INVIO  3C11    42                    	db	_InvIO
L5A7C  3C12                          l5a7c:
_STRING  3C12    FE 08                 	cp	_String
L5A8F  3C14    20 0F                 	jr	nz,l5a8f
L7B62  3C16    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  3C19    3D                    	dec	a
  3C1A    67                    	ld	h,a
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-202


  3C1B    2E 06                 	ld	l,6
L6B97  3C1D    CD 4D2D               	call	l6b97
L168E  3C20    21 168E               	ld	hl,l168e
L5AA9  3C23    18 1A                 	jr	l5aa9
L5A8F  3C25                          l5a8f:
L1672  3C25    21 1672               	ld	hl,l1672
_REAL  3C28    FE 09                 	cp	_Real
L5AA9  3C2A    28 13                 	jr	z,l5aa9
L1644  3C2C    21 1644               	ld	hl,l1644
_CHAR  3C2F    FE 0C                 	cp	_Char
L5AA9  3C31    28 0C                 	jr	z,l5aa9
L164E  3C33    21 164E               	ld	hl,l164e
L7B62  3C36    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  3C39    3D                    	dec	a
L5AA9  3C3A    20 03                 	jr	nz,l5aa9
L164D  3C3C    21 164D               	ld	hl,l164d
L5AA9  3C3F                          l5aa9:
L6B86  3C3F    CD 4D1C               	call	l6b86		; Set CALL <read>
L5AAC  3C42                          l5aac:
L6F13  3C42    CD 5067               	call	l6f13		; Test ,
L5A66  3C45    28 B5                 	jr	z,l5a66		; Yeap
L6F6E  3C47    CD 50C2               	call	l6f6e		; Verify )
L5AB4  3C4A                          l5ab4:
L16AB  3C4A    21 16AB               	ld	hl,l16ab
L5AB7  3C4D                          l5ab7:
L7BA3  3C4D    3A 5CC0               	ld	a,(l7ba3)
  3C50    B7                    	or	a
L6B86  3C51    C4 4D1C               	call	nz,l6b86	; Set CALL NEWLINE
L5ABE  3C54                          l5abe:
L7B9E  3C54    3A 5CBB               	ld	a,(l7b9e)	; Get local options
.IOPT  3C57    CB 47                 	bit	.Iopt,a		; Test $I+
  3C59    C8                    	ret	z		; Nope
L201B  3C5A    21 201B               	ld	hl,l201b
L6B86  3C5D    C3 4D1C               	jp	l6b86		; Set CALL CHECKIO
L5ACA  3C60                          l5aca:
L149B  3C60    21 149B               	ld	hl,l149b
L7B9E  3C63    3A 5CBB               	ld	a,(l7b9e)	; Get local options
.BOPT  3C66    CB 77                 	bit	.Bopt,a		; Test $B+
L5AE4  3C68    28 10                 	jr	z,l5ae4		; Nope
L14CC  3C6A    21 14CC               	ld	hl,l14cc
L7BA3  3C6D    3A 5CC0               	ld	a,(l7ba3)
  3C70    B7                    	or	a
L5AE4  3C71    28 07                 	jr	z,l5ae4
L14CB  3C73    21 14CB               	ld	hl,l14cb
  3C76    AF                    	xor	a
L7BA3  3C77    32 5CC0               	ld	(l7ba3),a
L5AE4  3C7A                          l5ae4:
L6B86  3C7A    C3 4D1C               	jp	l6b86		; Set CALL <read>
                                ;
                                ; Procedure WRITELN(FileVar,Variables)
                                ;
L5AE7  3C7D                          l5ae7:
SKIP  3C7D    3E                    	db	skip
                                ;
                                ; Procedure WRITE(FileVar,Variables)
                                ;
L5AE8TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-203


  3C7E                          l5ae8:
  3C7E    AF                    	xor	a
L7BA3  3C7F    32 5CC0               	ld	(l7ba3),a
L6F1B  3C82    CD 506F               	call	l6f1b		; Test (
L5AFA  3C85    28 09                 	jr	z,l5afa		; Yeap
L149B  3C87    21 149B               	ld	hl,l149b
L6B86  3C8A    CD 4D1C               	call	l6b86		; Set CALL STDIO
L5BD2  3C8D    C3 3D68               	jp	l5bd2
L5AFA  3C90                          l5afa:
L5A17  3C90    CD 3BAD               	call	l5a17
L5B20  3C93    38 21                 	jr	c,l5b20
L5B15  3C95    20 14                 	jr	nz,l5b15
  3C97    FE 05                 	cp	5
L5BDD  3C99    CA 3D73               	jp	z,l5bdd
  3C9C    FE 06                 	cp	6
L72DA  3C9E    CD 53FB               	call	l72da
_NOUNTYPEFILE  3CA1    41                    	db	_NoUntypeFile
L14BA  3CA2    21 14BA               	ld	hl,l14ba
L6B86  3CA5    CD 4D1C               	call	l6b86		; Set CALL CHECKWRFILE
L5BC9  3CA8    C3 3D5F               	jp	l5bc9
L5B15  3CAB                          l5b15:
L620F  3CAB    CD 43A5               	call	l620f
L149B  3CAE    21 149B               	ld	hl,l149b
L6B86  3CB1    CD 4D1C               	call	l6b86		; Set CALL STDIO
L5B4F  3CB4    18 2F                 	jr	l5b4f
L5B20  3CB6                          l5b20:
L149B  3CB6    21 149B               	ld	hl,l149b
L6B86  3CB9    CD 4D1C               	call	l6b86		; Set CALL STDIO
L5B26  3CBC                          l5b26:
L6A5C  3CBC    CD 4BF2               	call	l6a5c
L5B4C  3CBF    20 21                 	jr	nz,l5b4c
  3CC1    78                    	ld	a,b
  3CC2    FE 08                 	cp	8
L5B47  3CC4    20 17                 	jr	nz,l5b47
  3CC6    DD 7E 00              	ld	a,(ix+0)
  3CC9    FE 2C                 	cp	','
L5B3B  3CCB    28 04                 	jr	z,l5b3b
  3CCD    FE 29                 	cp	')'
L5B47  3CCF    20 0C                 	jr	nz,l5b47
L5B3B  3CD1                          l5b3b:
L17BA  3CD1    21 17BA               	ld	hl,l17ba
L6B86  3CD4    CD 4D1C               	call	l6b86		; Set CALL IMSTRG
L6B5E  3CD7    CD 4CF4               	call	l6b5e
L5BC9  3CDA    C3 3D5F               	jp	l5bc9
L5B47  3CDD                          l5b47:
L6201  3CDD    CD 4397               	call	l6201
L5B4F  3CE0    18 03                 	jr	l5b4f
L5B4C  3CE2                          l5b4c:
L5EE8  3CE2    CD 407E               	call	l5ee8
L5B4F  3CE5                          l5b4f:
  3CE5    78                    	ld	a,b
  3CE6    FE 08                 	cp	8
L5B58  3CE8    38 04                 	jr	c,l5b58
  3CEA    FE 0D                 	cp	0dh
L5B5C  3CEC    38 04                 	jr	c,l5b5c
L5B58  3CEE                          l5b58:
L72E1TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-204


  3CEE    CD 5402               	call	l72e1
_INVIO  3CF1    42                    	db	_InvIO
L5B5C  3CF2                          l5b5c:
  3CF2    FE 0C                 	cp	0ch
L5B6A  3CF4    20 0A                 	jr	nz,l5b6a
L6F0B  3CF6    CD 505F               	call	l6f0b		; Test :
L5BA6  3CF9    20 41                 	jr	nz,l5ba6
L5EDD  3CFB    CD 4073               	call	l5edd
L5B72  3CFE    18 08                 	jr	l5b72
L5B6A  3D00                          l5b6a:
L6148  3D00    CD 42DE               	call	l6148
L6F0B  3D03    CD 505F               	call	l6f0b		; Test :
L5B8B  3D06    20 19                 	jr	nz,l5b8b
L5B72  3D08                          l5b72:
  3D08    C5                    	push	bc
L5E97  3D09    CD 402D               	call	l5e97
  3D0C    C1                    	pop	bc
  3D0D    78                    	ld	a,b
  3D0E    FE 09                 	cp	9
L5BA6  3D10    20 2A                 	jr	nz,l5ba6
L6F0B  3D12    CD 505F               	call	l6f0b		; Test :
L5B9D  3D15    20 1C                 	jr	nz,l5b9d
  3D17    C5                    	push	bc
L6B6F  3D18    CD 4D05               	call	l6b6f		; Set PUSH HL
L5E97  3D1B    CD 402D               	call	l5e97
  3D1E    C1                    	pop	bc
L5BA6  3D1F    18 1B                 	jr	l5ba6
L5B8B  3D21                          l5b8b:
L0000  3D21    21 0000               	ld	hl,l0000
  3D24    78                    	ld	a,b
  3D25    FE 09                 	cp	9
L5B95  3D27    20 02                 	jr	nz,l5b95
  3D29    2E 12                 	ld	l,12h
L5B95  3D2B                          l5b95:
L6B92  3D2B    CD 4D28               	call	l6b92		; Set LD HL,val16
  3D2E    78                    	ld	a,b
  3D2F    FE 09                 	cp	9
L5BA6  3D31    20 09                 	jr	nz,l5ba6
L5B9D  3D33                          l5b9d:
L6B6F  3D33    CD 4D05               	call	l6b6f		; Set PUSH HL
LFFFF  3D36    21 FFFF               	ld	hl,lffff
L6B92  3D39    CD 4D28               	call	l6b92		; Set LD HL,val16
L5BA6  3D3C                          l5ba6:
  3D3C    78                    	ld	a,b
L17AA  3D3D    21 17AA               	ld	hl,l17aa
  3D40    FE 08                 	cp	8
L5BC6  3D42    28 18                 	jr	z,l5bc6
L1779  3D44    21 1779               	ld	hl,l1779
  3D47    FE 09                 	cp	9
L5BC6  3D49    28 11                 	jr	z,l5bc6
L1726  3D4B    21 1726               	ld	hl,l1726
  3D4E    FE 0A                 	cp	0ah
L5BC6  3D50    28 0A                 	jr	z,l5bc6
L178B  3D52    21 178B               	ld	hl,l178b
  3D55    FE 0B                 	cp	0bh
L5BC6  3D57    28 03                 	jr	z,l5bc6
L1722TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-205


  3D59    21 1722               	ld	hl,l1722
L5BC6  3D5C                          l5bc6:
L6B86  3D5C    CD 4D1C               	call	l6b86		; Set CALL <wrtype>
L5BC9  3D5F                          l5bc9:
L6F13  3D5F    CD 5067               	call	l6f13		; Test ,
L5B26  3D62    CA 3CBC               	jp	z,l5b26		; Yeap
L6F6E  3D65    CD 50C2               	call	l6f6e		; Verify )
L5BD2  3D68                          l5bd2:
L17CD  3D68    21 17CD               	ld	hl,l17cd
L5AB7  3D6B    C3 3C4D               	jp	l5ab7
L5BD8  3D6E                          l5bd8:
L18B6  3D6E    21 18B6               	ld	hl,l18b6
L5BE0  3D71    18 03                 	jr	l5be0
L5BDD  3D73                          l5bdd:
L18DC  3D73    21 18DC               	ld	hl,l18dc
L5BE0  3D76                          l5be0:
L7BA7  3D76    22 5CC4               	ld	(l7ba7),hl
L7BA3  3D79    3A 5CC0               	ld	a,(l7ba3)
  3D7C    B7                    	or	a
L72DA  3D7D    CD 53FB               	call	l72da
_MUSTTEXTFILE  3D80    23                    	db	_MustTextFile
L18A4  3D81    21 18A4               	ld	hl,l18a4
L6B86  3D84    CD 4D1C               	call	l6b86		; Set CALL PREPRECWR
L7B5E  3D87    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
L5271  3D8A    CD 3407               	call	l5271		; Load name
L5BF7  3D8D                          l5bf7:
L6F13  3D8D    CD 5067               	call	l6f13		; Test ,
L5C10  3D90    20 14                 	jr	nz,l5c10	; Nope
L6D24  3D92    CD 4E78               	call	l6d24
L677F  3D95    CD 4915               	call	l677f
L6D43  3D98    CD 4E97               	call	l6d43
L58C5  3D9B    CD 3A5B               	call	l58c5
L7BA7  3D9E    2A 5CC4               	ld	hl,(l7ba7)
L6B86  3DA1    CD 4D1C               	call	l6b86		; Set CALL <write>
L5BF7  3DA4    18 E7                 	jr	l5bf7
L5C10  3DA6                          l5c10:
L6F6E  3DA6    CD 50C2               	call	l6f6e		; Verify )
L5ABE  3DA9    C3 3C54               	jp	l5abe
                                ;
                                ; Procedure BLOCKREAD(FileVar,Variable,Integer[,Integer])
                                ;
L5C16  3DAC                          l5c16:
L1AF1  3DAC    21 1AF1               	ld	hl,l1af1
L1ABE  3DAF    11 1ABE               	ld	de,l1abe
L5C24  3DB2    18 06                 	jr	l5c24
                                ;
                                ; Procedure BLOCKWRITE(FileVar,Variable,Integer[,Integer])
                                ;
L5C1E  3DB4                          l5c1e:
L1AED  3DB4    21 1AED               	ld	hl,l1aed
L1ABA  3DB7    11 1ABA               	ld	de,l1aba
L5C24  3DBA                          l5c24:
  3DBA    E5                    	push	hl
  3DBB    D5                    	push	de
L5A0C  3DBC    CD 3BA2               	call	l5a0c
  3DBF    FE 07                 	cp	7
L72DATURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-206


  3DC1    CD 53FB               	call	l72da
_UNTFILEEXP  3DC4    25                    	db	_UntFileExp
L6B6F  3DC5    CD 4D05               	call	l6b6f		; Set PUSH HL
L6F5E  3DC8    CD 50B2               	call	l6f5e		; Verify ,
L677F  3DCB    CD 4915               	call	l677f
L6B6F  3DCE    CD 4D05               	call	l6b6f		; Set PUSH HL
L6F5E  3DD1    CD 50B2               	call	l6f5e		; Verify ,
L5E97  3DD4    CD 402D               	call	l5e97
L6F13  3DD7    CD 5067               	call	l6f13		; Test ,
  3DDA    D1                    	pop	de
  3DDB    E1                    	pop	hl
L5C4B  3DDC    28 03                 	jr	z,l5c4b		; Yeap
  3DDE    D5                    	push	de
L5C63  3DDF    18 18                 	jr	l5c63
L5C4B  3DE1                          l5c4b:
  3DE1    E5                    	push	hl
L6B6F  3DE2    CD 4D05               	call	l6b6f		; Set PUSH HL
L677F  3DE5    CD 4915               	call	l677f
L7B5C  3DE8    3A 5C79               	ld	a,(l7b5c)	; Get type
_INTEG  3DEB    FE 0A                 	cp	_Integ
L5C5F  3DED    20 06                 	jr	nz,l5c5f
L7B62  3DEF    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  3DF2    3D                    	dec	a
L5C63  3DF3    20 04                 	jr	nz,l5c63
L5C5F  3DF5                          l5c5f:
L72E1  3DF5    CD 5402               	call	l72e1
_INTVAREXP  3DF8    18                    	db	_IntVarExp
L5C63  3DF9                          l5c63:
L5985  3DF9    C3 3B1B               	jp	l5985
                                ;
                                ; Procedure DELETE(String,Integer,Integer)
                                ;
L5C66  3DFC                          l5c66:
L6F66  3DFC    CD 50BA               	call	l6f66		; Verify (
L5CAD  3DFF    CD 3E43               	call	l5cad
L6B6F  3E02    CD 4D05               	call	l6b6f		; Set PUSH HL
L6F5E  3E05    CD 50B2               	call	l6f5e		; Verify ,
L5E97  3E08    CD 402D               	call	l5e97
L6B6F  3E0B    CD 4D05               	call	l6b6f		; Set PUSH HL
L6F5E  3E0E    CD 50B2               	call	l6f5e		; Verify ,
L5E97  3E11    CD 402D               	call	l5e97
L08F3  3E14    21 08F3               	ld	hl,l08f3	; Set DELETE
L5C81  3E17                          l5c81:
L6F6E  3E17    CD 50C2               	call	l6f6e		; Verify )
L6B86  3E1A    C3 4D1C               	jp	l6b86		; Set CALL <string_procedure>
                                ;
                                ; Procedure INSERT(String,String,Integer)
                                ;
L5C87  3E1D                          l5c87:
L6F66  3E1D    CD 50BA               	call	l6f66		; Verify (
L5ED0  3E20    CD 4066               	call	l5ed0
L6F5E  3E23    CD 50B2               	call	l6f5e		; Verify ,
L5CAD  3E26    CD 3E43               	call	l5cad
L6B6F  3E29    CD 4D05               	call	l6b6f		; Set PUSH HL
L7B62  3E2C    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  3E2F    3D                    	dec	a
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-207


  3E30    67                    	ld	h,a
  3E31    2E 06                 	ld	l,6
  3E33    E5                    	push	hl
L6F5E  3E34    CD 50B2               	call	l6f5e		; Verify ,
L5E97  3E37    CD 402D               	call	l5e97
  3E3A    E1                    	pop	hl
L6B97  3E3B    CD 4D2D               	call	l6b97
L0920  3E3E    21 0920               	ld	hl,l0920
L5C81  3E41    18 D4                 	jr	l5c81		; Set INSERT
L5CAD  3E43                          l5cad:
L677F  3E43    CD 4915               	call	l677f
L7B5C  3E46    3A 5C79               	ld	a,(l7b5c)	; Get type
_STRING  3E49    FE 08                 	cp	_String
  3E4B    C8                    	ret	z
L72E1  3E4C    CD 5402               	call	l72e1
_STRGVAREXP  3E4F    22                    	db	_StrgVarExp
                                ;
                                ; Procedure STR(Num,String)
                                ;
L5CBA  3E50                          l5cba:
L6F66  3E50    CD 50BA               	call	l6f66		; Verify (
L5EA2  3E53    CD 4038               	call	l5ea2
L6148  3E56    CD 42DE               	call	l6148
L6F0B  3E59    CD 505F               	call	l6f0b		; Test :
L5CE4  3E5C    20 1C                 	jr	nz,l5ce4
  3E5E    C5                    	push	bc
L5E97  3E5F    CD 402D               	call	l5e97
L6B6F  3E62    CD 4D05               	call	l6b6f		; Set PUSH HL
  3E65    C1                    	pop	bc
  3E66    78                    	ld	a,b
  3E67    FE 0A                 	cp	0ah
L5D02  3E69    28 2D                 	jr	z,l5d02
L6F0B  3E6B    CD 505F               	call	l6f0b		; Test :
L5CF9  3E6E    20 1F                 	jr	nz,l5cf9
  3E70    C5                    	push	bc
L5E97  3E71    CD 402D               	call	l5e97
L6B6F  3E74    CD 4D05               	call	l6b6f		; Set PUSH HL
  3E77    C1                    	pop	bc
L5D02  3E78    18 1E                 	jr	l5d02
L5CE4  3E7A                          l5ce4:
L0000  3E7A    21 0000               	ld	hl,l0000
  3E7D    78                    	ld	a,b
  3E7E    FE 0A                 	cp	0ah
L5CEE  3E80    28 02                 	jr	z,l5cee
  3E82    2E 12                 	ld	l,12h
L5CEE  3E84                          l5cee:
L6B92  3E84    CD 4D28               	call	l6b92		; Set LD HL,val16
L6B6F  3E87    CD 4D05               	call	l6b6f		; Set PUSH HL
  3E8A    78                    	ld	a,b
  3E8B    FE 0A                 	cp	0ah
L5D02  3E8D    28 09                 	jr	z,l5d02
L5CF9  3E8F                          l5cf9:
LFFFF  3E8F    21 FFFF               	ld	hl,lffff
L6B92  3E92    CD 4D28               	call	l6b92		; Set LD HL,val16
L6B6F  3E95    CD 4D05               	call	l6b6f		; Set PUSH HL
L5D02  3E98                          l5d02:
L6F5ETURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-208


  3E98    CD 50B2               	call	l6f5e		; Verify ,
  3E9B    C5                    	push	bc
L5CAD  3E9C    CD 3E43               	call	l5cad
L7B62  3E9F    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  3EA2    3D                    	dec	a
  3EA3    67                    	ld	h,a
  3EA4    2E 06                 	ld	l,6
L6B97  3EA6    CD 4D2D               	call	l6b97
  3EA9    C1                    	pop	bc
L1EBE  3EAA    21 1EBE               	ld	hl,l1ebe
  3EAD    78                    	ld	a,b
  3EAE    FE 0A                 	cp	0ah
L5D1F  3EB0    28 03                 	jr	z,l5d1f
L1EBD  3EB2    21 1EBD               	ld	hl,l1ebd
L5D1F  3EB5                          l5d1f:
L5C81  3EB5    C3 3E17               	jp	l5c81
                                ;
                                ; Procedure VAL(String,Integer,Integer)
                                ;
L5D22  3EB8                          l5d22:
L6F66  3EB8    CD 50BA               	call	l6f66		; Verify (
L5ED0  3EBB    CD 4066               	call	l5ed0
L6F5E  3EBE    CD 50B2               	call	l6f5e		; Verify ,
L677F  3EC1    CD 4915               	call	l677f
L7B5C  3EC4    3A 5C79               	ld	a,(l7b5c)	; Get type
_REAL  3EC7    FE 09                 	cp	_Real
L5D45  3EC9    28 10                 	jr	z,l5d45
_INTEG  3ECB    FE 0A                 	cp	_Integ
L5D41  3ECD    20 08                 	jr	nz,l5d41
L7B62  3ECF    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  3ED2    3D                    	dec	a
  3ED3    3E 0A                 	ld	a,0ah
L5D45  3ED5    20 04                 	jr	nz,l5d45
L5D41  3ED7                          l5d41:
L72E1  3ED7    CD 5402               	call	l72e1
_NUMVAREXP  3EDA    1B                    	db	_NumVarExp
L5D45  3EDB                          l5d45:
  3EDB    F5                    	push	af
L6B6F  3EDC    CD 4D05               	call	l6b6f		; Set PUSH HL
L6F5E  3EDF    CD 50B2               	call	l6f5e		; Verify ,
L677F  3EE2    CD 4915               	call	l677f
L7B5C  3EE5    3A 5C79               	ld	a,(l7b5c)	; Get type
_INTEG  3EE8    FE 0A                 	cp	_Integ
L5D5C  3EEA    20 06                 	jr	nz,l5d5c
L7B62  3EEC    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  3EEF    3D                    	dec	a
L5D60  3EF0    20 04                 	jr	nz,l5d60
L5D5C  3EF2                          l5d5c:
L72E1  3EF2    CD 5402               	call	l72e1
_INTVAREXP  3EF5    18                    	db	_IntVarExp
L5D60  3EF6                          l5d60:
  3EF6    F1                    	pop	af
L1EF4  3EF7    21 1EF4               	ld	hl,l1ef4
  3EFA    FE 0A                 	cp	0ah
L5D1F  3EFC    28 B7                 	jr	z,l5d1f
L1EF3  3EFE    21 1EF3               	ld	hl,l1ef3
L5D1FTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-209


  3F01    18 B2                 	jr	l5d1f
                                ;
                                ; Procedure GOTOXY(Integer,Integer)
                                ;
L5D6D  3F03                          l5d6d:
L6F66  3F03    CD 50BA               	call	l6f66		; Verify (
L5E97  3F06    CD 402D               	call	l5e97
L1FDB  3F09    21 1FDB               	ld	hl,l1fdb
L5D76  3F0C                          l5d76:
  3F0C    E5                    	push	hl
L6B6F  3F0D    CD 4D05               	call	l6b6f		; Set PUSH HL
L6F5E  3F10    CD 50B2               	call	l6f5e		; Verify ,
L5E97  3F13    CD 402D               	call	l5e97
  3F16    E1                    	pop	hl
L5DB1  3F17    18 2E                 	jr	l5db1
                                ;
                                ; Procedure RANDOMIZE
                                ;
L5D83  3F19                          l5d83:
L1F48  3F19    21 1F48               	ld	hl,l1f48
L6B86  3F1C    C3 4D1C               	jp	l6b86		; Set CALL RANDOMIZE
                                ;
                                ; Procedure DELAY(Integer)
                                ;
L5D89  3F1F                          l5d89:
L6F66  3F1F    CD 50BA               	call	l6f66		; Verify (
L5E97  3F22    CD 402D               	call	l5e97
L021D  3F25    21 021D               	ld	hl,l021d
L5DB1  3F28    18 1D                 	jr	l5db1		; Set call to delay
                                ;
                                ; Procedure GETMEM(Variable,Integer)
                                ;
L5D94  3F2A                          l5d94:
L5DE3  3F2A    CD 3F79               	call	l5de3
L6F5E  3F2D    CD 50B2               	call	l6f5e		; Verify ,
L5E97  3F30    CD 402D               	call	l5e97
L5DAE  3F33    18 0F                 	jr	l5dae
                                ;
                                ; Procedure NEW(Variable)
                                ;
L5D9F  3F35                          l5d9f:
L5DE3  3F35    CD 3F79               	call	l5de3
L7B5E  3F38    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
L5271  3F3B    CD 3407               	call	l5271		; Load name
L7B6F  3F3E    2A 5C8C               	ld	hl,(l7b6f)
L6B92  3F41    CD 4D28               	call	l6b92		; Set LD HL,val16
L5DAE  3F44                          l5dae:
L1CE5  3F44    21 1CE5               	ld	hl,l1ce5
L5DB1  3F47                          l5db1:
L5960  3F47    C3 3AF6               	jp	l5960
                                ;
                                ; Procedure FREEMEM(Variable,Integer)
                                ;
L5DB4  3F4A                          l5db4:
L5DE3  3F4A    CD 3F79               	call	l5de3
L6F5E  3F4D    CD 50B2               	call	l6f5e		; Verify ,
L5E97TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-210


  3F50    CD 402D               	call	l5e97
L5DCE  3F53    18 0F                 	jr	l5dce
                                ;
                                ; Procedure DISPOSE(Variable)
                                ;
L5DBF  3F55                          l5dbf:
L5DE3  3F55    CD 3F79               	call	l5de3
L7B5E  3F58    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
L5271  3F5B    CD 3407               	call	l5271		; Load name
L7B6F  3F5E    2A 5C8C               	ld	hl,(l7b6f)
L6B92  3F61    CD 4D28               	call	l6b92		; Set LD HL,val16
L5DCE  3F64                          l5dce:
L1D7A  3F64    21 1D7A               	ld	hl,l1d7a
L5960  3F67    C3 3AF6               	jp	l5960
                                ;
                                ; Procedure MARK(Variable)
                                ;
L5DD4  3F6A                          l5dd4:
L1EA3  3F6A    21 1EA3               	ld	hl,l1ea3
L5DDC  3F6D    18 03                 	jr	l5ddc
                                ;
                                ; Procedure RELEASE(Variable)
                                ;
L5DD9  3F6F                          l5dd9:
L1EAB  3F6F    21 1EAB               	ld	hl,l1eab
L5DDC  3F72                          l5ddc:
  3F72    E5                    	push	hl
L5DE9  3F73    CD 3F7F               	call	l5de9
  3F76    E1                    	pop	hl
L5DB1  3F77    18 CE                 	jr	l5db1
L5DE3  3F79                          l5de3:
L5DE9  3F79    CD 3F7F               	call	l5de9
L6B6F  3F7C    C3 4D05               	jp	l6b6f		; Set PUSH HL
L5DE9  3F7F                          l5de9:
L6F66  3F7F    CD 50BA               	call	l6f66		; Verify (
L677F  3F82    CD 4915               	call	l677f
L7B5C  3F85    3A 5C79               	ld	a,(l7b5c)	; Get type
_PTR  3F88    FE 04                 	cp	_Ptr
  3F8A    C8                    	ret	z
L72E1  3F8B    CD 5402               	call	l72e1
_PTRVAREXP  3F8E    1C                    	db	_PtrVarExp
                                ;
                                ; Procedure OVRDRIVE(Integer)
                                ;
L5DF9  3F8F                          l5df9:
L6F66  3F8F    CD 50BA               	call	l6f66		; Verify (
L5E97  3F92    CD 402D               	call	l5e97
L1CDB  3F95    21 1CDB               	ld	hl,l1cdb
L5960  3F98    C3 3AF6               	jp	l5960
                                ;
                                ; Procedure MOVE(Integer,Integer,Integer)
                                ;
L5E05  3F9B                          l5e05:
L6F66  3F9B    CD 50BA               	call	l6f66		; Verify (
L677F  3F9E    CD 4915               	call	l677f
L6B6F  3FA1    CD 4D05               	call	l6b6f		; Set PUSH HL
L6F5ETURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-211


  3FA4    CD 50B2               	call	l6f5e		; Verify ,
L677F  3FA7    CD 4915               	call	l677f
L1F64  3FAA    21 1F64               	ld	hl,l1f64
L5D76  3FAD    C3 3F0C               	jp	l5d76
                                ;
                                ; Procedure FILLCHAR(Integer,Integer,Byte)
                                ;
L5E1A  3FB0                          l5e1a:
L6F66  3FB0    CD 50BA               	call	l6f66		; Verify (
L677F  3FB3    CD 4915               	call	l677f
L6B6F  3FB6    CD 4D05               	call	l6b6f		; Set PUSH HL
L6F5E  3FB9    CD 50B2               	call	l6f5e		; Verify ,
L5E97  3FBC    CD 402D               	call	l5e97
L6B6F  3FBF    CD 4D05               	call	l6b6f		; Set PUSH HL
L6F5E  3FC2    CD 50B2               	call	l6f5e		; Verify ,
L5EBB  3FC5    CD 4051               	call	l5ebb
L1F4E  3FC8    21 1F4E               	ld	hl,l1f4e
L5DB1  3FCB    C3 3F47               	jp	l5db1
                                ;
                                ; Procedure CRTINIT
                                ;
L5E38  3FCE                          l5e38:
L030A  3FCE    21 030A               	ld	hl,l030a
L5E45  3FD1    18 08                 	jr	l5e45		; Set call to lead in
                                ;
                                ; Procedure CRTEXIT
                                ;
L5E3D  3FD3                          l5e3d:
L0310  3FD3    21 0310               	ld	hl,l0310
L5E45  3FD6    18 03                 	jr	l5e45		; Set call to lead out
                                ;
                                ; Procedure CLRSCR
                                ;
L5E42  3FD8                          l5e42:
L023E  3FD8    21 023E               	ld	hl,l023e	; Set call to clear screen
L5E45  3FDB                          l5e45:
L6B86  3FDB    C3 4D1C               	jp	l6b86		; Set CALL <crt_procedure>
                                ;
                                ; Procedure CLREOL
                                ;
L5E48  3FDE                          l5e48:
L0299  3FDE    21 0299               	ld	hl,l0299	; Set call to clear to end of line
L5E45  3FE1    18 F8                 	jr	l5e45
                                ;
                                ; Procedure NORMVIDEO or HIGHVIDEO
                                ;
L5E4D  3FE3                          l5e4d:
L0284  3FE3    21 0284               	ld	hl,l0284	; Set call to normal video
L5E45  3FE6    18 F3                 	jr	l5e45
                                ;
                                ; Procedure LOWVIDEO
                                ;
L5E52  3FE8                          l5e52:
L026B  3FE8    21 026B               	ld	hl,l026b	; Set call to low video
L5E45  3FEB    18 EE                 	jr	l5e45
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-212


                                ; Procedure INSLINE
                                ;
L5E57  3FED                          l5e57:
L0262  3FED    21 0262               	ld	hl,l0262	; Set call to insert line
L5E45  3FF0    18 E9                 	jr	l5e45
                                ;
                                ; Procedure DELLINE
                                ;
L5E5C  3FF2                          l5e5c:
L0259  3FF2    21 0259               	ld	hl,l0259	; Set call to delete line
L5E45  3FF5    18 E4                 	jr	l5e45
                                ;
                                ; Procedure EXIT
                                ;
L5E61  3FF7                          l5e61:
OS  3FF7    11 0000               	ld	de,OS		; Set call to exit
L5639  3FFA    C3 37CF               	jp	l5639
                                ;
                                ; Procedure HALT
                                ;
L5E67  3FFD                          l5e67:
L20D4  3FFD    21 20D4               	ld	hl,l20d4
L6B82  4000    C3 4D18               	jp	l6b82		; Set call to HALT program
                                ;
                                ; Procedure PORT(Integer,Integer)
                                ;
L5E6D  4003                          l5e6d:
L5E8E  4003    CD 4024               	call	l5e8e
L6B50  4006    CD 4CE6               	call	l6b50		; Set sequence
@L26  4009    03                    	db	@L26
$I26  400A                          $I26:
  400A    C1                    	POP	BC
  400B    ED 69                 	OUT	(C),L
@L26$I26  0003                          @L26	equ	$-$I26
  400D    C9                    	ret
                                ;
                                ; Procedure STACKPTR
                                ;
L5E78  400E                          l5e78:
L6F7E  400E    CD 50D2               	call	l6f7e
L5E97  4011    CD 402D               	call	l5e97
L6B50  4014    CD 4CE6               	call	l6b50	; Set LD SP,HL
@L27  4017    01                    	db	@L27
$I27  4018                          $I27:
  4018    F9                    	LD	SP,HL
@L27$I27  0001                          @L27	equ	$-$I27
  4019    C9                    	ret
L5E84  401A                          l5e84:
L6D2A  401A    CD 4E7E               	call	l6d2a		; Save environment
L5EE8  401D    CD 407E               	call	l5ee8
L6D49  4020    CD 4E9D               	call	l6d49		; Get back environment
  4023    C9                    	ret
L5E8E  4024                          l5e8e:
L65D5  4024    CD 476B               	call	l65d5
L6F7E  4027    CD 50D2               	call	l6f7e
L6B6F  402A    CD 4D05               	call	l6b6f		; Set PUSH HL
L5E97TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-213


  402D                          l5e97:
L5EE8  402D    CD 407E               	call	l5ee8
  4030    78                    	ld	a,b
  4031    FE 0A                 	cp	0ah
  4033    C8                    	ret	z
L72E1  4034    CD 5402               	call	l72e1
_INTEXPR  4037    17                    	db	_IntExpr
L5EA2  4038                          l5ea2:
L5EE8  4038    CD 407E               	call	l5ee8
  403B    78                    	ld	a,b
  403C    FE 0A                 	cp	0ah
  403E    C8                    	ret	z
  403F    FE 09                 	cp	9
  4041    C8                    	ret	z
L72E1  4042    CD 5402               	call	l72e1
_NUMEXPREXP  4045    1A                    	db	_NumExprExp
L5EB0  4046                          l5eb0:
L5EE8  4046    CD 407E               	call	l5ee8
  4049    78                    	ld	a,b
  404A    FE 0B                 	cp	0bh
  404C    C8                    	ret	z
L72E1  404D    CD 5402               	call	l72e1
_BOOLEXP  4050    14                    	db	_BoolExp
L5EBB  4051                          l5ebb:
L5EE8  4051    CD 407E               	call	l5ee8
L5EBE  4054                          l5ebe:
  4054    78                    	ld	a,b
  4055    FE 0A                 	cp	0ah
  4057    D0                    	ret	nc
  4058    FE 08                 	cp	8
L72DA  405A    CD 53FB               	call	l72da
_SIMPEXPR  405D    1F                    	db	_SimpExpr
  405E    06 0C                 	ld	b,0ch
L0996  4060    21 0996               	ld	hl,l0996
L6B86  4063    C3 4D1C               	jp	l6b86		; Set CALL CHECKASSIGNMENT
L5ED0  4066                          l5ed0:
L5EE8  4066    CD 407E               	call	l5ee8
  4069    78                    	ld	a,b
  406A    FE 08                 	cp	8
  406C    C8                    	ret	z
  406D    FE 0C                 	cp	0ch
L72DA  406F    CD 53FB               	call	l72da
_STRGEXPEXP  4072    21                    	db	_StrgExpExp
L5EDD  4073                          l5edd:
  4073    06 08                 	ld	b,8
L6B50  4075    CD 4CE6               	call	l6b50		; Set sequence
@L28  4078    04                    	db	@L28
$I28  4079                          $I28:
  4079    65                    	LD	H,L
  407A    2E 01                 	LD	L,1
  407C    E5                    	PUSH	HL
@L28$I28  0004                          @L28	equ	$-$I28
  407D    C9                    	ret
L5EE8  407E                          l5ee8:
L5F98  407E    CD 412E               	call	l5f98
L5EEB  4081                          l5eeb:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-214


  4081    C5                    	push	bc
L6E5A  4082    CD 4FAE               	call	l6e5a		; Find relation
  4085    01                    	db	1
L7625  4086    5743                  	dw	l7625
  4088    C1                    	pop	bc
  4089    C0                    	ret	nz		; Nope
  408A    7E                    	ld	a,(hl)		; Get code
  408B    3C                    	inc	a		; Test IN
L5F34  408C    28 3C                 	jr	z,l5f34		; Yeap
  408E    3D                    	dec	a
  408F    F5                    	push	af
  4090    C5                    	push	bc
L6148  4091    CD 42DE               	call	l6148
L7B8B  4094    2A 5CA8               	ld	hl,(l7b8b)
  4097    E5                    	push	hl
L5F98  4098    CD 412E               	call	l5f98
  409B    E1                    	pop	hl
L7B8D  409C    22 5CAA               	ld	(l7b8d),hl
  409F    D1                    	pop	de
L6160  40A0    CD 42F6               	call	l6160
  40A3    F1                    	pop	af
  40A4    5F                    	ld	e,a
  40A5    16 00                 	ld	d,0
L5F68  40A7    21 40FE               	ld	hl,l5f68
  40AA    19                    	add	hl,de
  40AB    78                    	ld	a,b
  40AC    FE 03                 	cp	3
L5F28  40AE    28 0E                 	jr	z,l5f28
  40B0    23                    	inc	hl
  40B1    23                    	inc	hl
  40B2    FE 09                 	cp	9
L5F28  40B4    28 08                 	jr	z,l5f28
  40B6    23                    	inc	hl
  40B7    23                    	inc	hl
  40B8    FE 08                 	cp	8
L5F28  40BA    28 02                 	jr	z,l5f28
  40BC    23                    	inc	hl
  40BD    23                    	inc	hl
L5F28  40BE                          l5f28:
  40BE    5E                    	ld	e,(hl)
  40BF    23                    	inc	hl
  40C0    56                    	ld	d,(hl)
  40C1    7A                    	ld	a,d
  40C2    B3                    	or	e
L72D4  40C3    CD 53F5               	call	l72d4
_ILLOPS  40C6    2F                    	db	_IllOps
  40C7    EB                    	ex	de,hl
L5F62  40C8    18 2E                 	jr	l5f62
L5F34  40CA                          l5f34:
  40CA    78                    	ld	a,b
  40CB    FE 0A                 	cp	0ah
L5F47  40CD    30 0E                 	jr	nc,l5f47
  40CF    FE 08                 	cp	8
L72DA  40D1    CD 53FB               	call	l72da
_ILLOPS  40D4    2F                    	db	_IllOps
L0996  40D5    21 0996               	ld	hl,l0996
L6B86TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-215


  40D8    CD 4D1C               	call	l6b86		; Set CALL CHECKASSIGNMENT
  40DB    06 0C                 	ld	b,0ch
L5F47  40DD                          l5f47:
  40DD    C5                    	push	bc
L6B6F  40DE    CD 4D05               	call	l6b6f		; Set PUSH HL
L5F98  40E1    CD 412E               	call	l5f98
  40E4    D1                    	pop	de
  40E5    78                    	ld	a,b
  40E6    FE 03                 	cp	3
L72DA  40E8    CD 53FB               	call	l72da
_ILLOPS  40EB    2F                    	db	_IllOps
  40EC    79                    	ld	a,c
  40ED    B7                    	or	a
L5F5F  40EE    28 05                 	jr	z,l5f5f
  40F0    BA                    	cp	d
L72DA  40F1    CD 53FB               	call	l72da
_INVTYPE  40F4    2C                    	db	_InvType
L5F5F  40F5                          l5f5f:
L134F  40F5    21 134F               	ld	hl,l134f
L5F62  40F8                          l5f62:
L6B86  40F8    CD 4D1C               	call	l6b86		; Set CALL <set>
  40FB    06 0B                 	ld	b,0bh
  40FD    C9                    	ret
L5F68  40FE                          l5f68:
L12E1  40FE    12E1                  	dw	l12e1
L0688  4100    0688                  	dw	l0688		; Real =
L068D  4102    068D                  	dw	l068d		; String =
L067F  4104    067F                  	dw	l067f		; Integer =
L12DD  4106    12DD                  	dw	l12dd
L069B  4108    069B                  	dw	l069b		; Real <>
L06A0  410A    06A0                  	dw	l06a0		; String <>
L0692  410C    0692                  	dw	l0692		; Integer <>
L1300  410E    1300                  	dw	l1300
L06AE  4110    06AE                  	dw	l06ae		; Real >=
L06B3  4112    06B3                  	dw	l06b3		; String >=
L06A5  4114    06A5                  	dw	l06a5		; Integer >=
L12FC  4116    12FC                  	dw	l12fc
L06C2  4118    06C2                  	dw	l06c2		; Real <=
L06C7  411A    06C7                  	dw	l06c7		; String <=
L06B8  411C    06B8                  	dw	l06b8		; Integer <=
L0000  411E    0000                  	dw	l0000
L06D6  4120    06D6                  	dw	l06d6		; Real >
L06DB  4122    06DB                  	dw	l06db		; String >
L06CC  4124    06CC                  	dw	l06cc		; Integer >
L0000  4126    0000                  	dw	l0000
L06E9  4128    06E9                  	dw	l06e9		; Real <
L06EE  412A    06EE                  	dw	l06ee		; String <
L06E0  412C    06E0                  	dw	l06e0		; Integer <
L5F98  412E                          l5f98:
L6054  412E    CD 41EA               	call	l6054
L5F9B  4131                          l5f9b:
  4131    C5                    	push	bc
L6E5A  4132    CD 4FAE               	call	l6e5a		; Find operator
  4135    01                    	db	1
L7619  4136    5737                  	dw	l7619
  4138    C1                    	pop	bc
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-216


  4139    C0                    	ret	nz		; Nope
  413A    78                    	ld	a,b
  413B    FE 04                 	cp	4
L72D4  413D    CD 53F5               	call	l72d4
_ILLOPS  4140    2F                    	db	_IllOps
  4141    7E                    	ld	a,(hl)		; Get operator
  4142    F5                    	push	af
  4143    C5                    	push	bc
L6148  4144    CD 42DE               	call	l6148
L6054  4147    CD 41EA               	call	l6054
  414A    D1                    	pop	de
  414B    F1                    	pop	af		; Get back operator
  414C    F5                    	push	af
  414D    B7                    	or	a		; Test +
L5FC9  414E    20 0F                 	jr	nz,l5fc9	; Nope
  4150    78                    	ld	a,b
  4151    FE 0C                 	cp	0ch
L5FC9  4153    20 0A                 	jr	nz,l5fc9
L6B50  4155    CD 4CE6               	call	l6b50		; Set sequence
@L29  4158    04                    	db	@L29
$I29  4159                          $I29:
  4159    65                    	LD	H,L
  415A    2E 01                 	LD	L,1
  415C    E5                    	PUSH	HL
@L29$I29  0004                          @L29	equ	$-$I29
  415D    06 08                 	ld	b,8
L5FC9  415F                          l5fc9:
L6160  415F    CD 42F6               	call	l6160
  4162    F1                    	pop	af		; Get back operator
  4163    FE 02                 	cp	2		; Test -
L601B  4165    30 4A                 	jr	nc,l601b	; Nope, OR or XOR
  4167    F5                    	push	af
  4168    78                    	ld	a,b
L1318  4169    21 1318               	ld	hl,l1318
L1326  416C    11 1326               	ld	de,l1326
  416F    FE 03                 	cp	3
L6006  4171    28 29                 	jr	z,l6006
L09E9  4173    21 09E9               	ld	hl,l09e9	; Set add reals
L09F2  4176    11 09F2               	ld	de,l09f2	; Set subtract reals
  4179    FE 09                 	cp	9
L6006  417B    28 1F                 	jr	z,l6006
  417D    FE 08                 	cp	8
L6010  417F    28 25                 	jr	z,l6010
  4181    FE 0A                 	cp	0ah
L72DA  4183    CD 53FB               	call	l72da
_ILLOPS  4186    2F                    	db	_IllOps
  4187    F1                    	pop	af
  4188    3D                    	dec	a
L5FFC  4189    28 07                 	jr	z,l5ffc
L6B50  418B    CD 4CE6               	call	l6b50		; Set ADD HL,DE
@L30  418E    01                    	db	@L30
$I30  418F                          $I30:
  418F    19                    	ADD	HL,DE
@L30$I30  0001                          @L30	equ	$-$I30
L5F9B  4190    18 9F                 	jr	l5f9b
L5FFC  4192                          l5ffc:
L6B50TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-217


  4192    CD 4CE6               	call	l6b50		; Set sequence
@L31  4195    04                    	db	@L31
$I31  4196                          $I31:
  4196    EB                    	EX	DE,HL
  4197    B7                    	OR	A
  4198    ED 52                 	SBC	HL,DE
@L31$I31  0004                          @L31	equ	$-$I31
L5F9B  419A    18 95                 	jr	l5f9b
L6006  419C                          l6006:
  419C    F1                    	pop	af
  419D    3D                    	dec	a
L600B  419E    20 01                 	jr	nz,l600b
  41A0    EB                    	ex	de,hl
L600B  41A1                          l600b:
L6B86  41A1    CD 4D1C               	call	l6b86		; Set CALL <string>
L5F9B  41A4    18 8B                 	jr	l5f9b
L6010  41A6                          l6010:
  41A6    F1                    	pop	af
  41A7    3D                    	dec	a
L72D4  41A8    CD 53F5               	call	l72d4
_ILLOPS  41AB    2F                    	db	_IllOps
L083D  41AC    21 083D               	ld	hl,l083d
L600B  41AF    18 F0                 	jr	l600b		; Set add two strings
L601B  41B1                          l601b:
  41B1    78                    	ld	a,b
L6039  41B2    20 1B                 	jr	nz,l6039	; Must be XOR
  41B4    FE 0B                 	cp	0bh
L602F  41B6    28 0D                 	jr	z,l602f
  41B8    FE 0A                 	cp	0ah
L72DA  41BA    CD 53FB               	call	l72da
_ILLOPS  41BD    2F                    	db	_IllOps
L6B50  41BE    CD 4CE6               	call	l6b50		; Set OR
@L32  41C1    03                    	db	@L32
$I32  41C2                          $I32:
  41C2    7C                    	LD	A,H
  41C3    B2                    	OR	D
  41C4    67                    	LD	H,A
@L32$I32  0003                          @L32	equ	$-$I32
L602F  41C5                          l602f:
L6B50  41C5    CD 4CE6               	call	l6b50		; Set OR
@L33  41C8    03                    	db	@L33
$I33  41C9                          $I33:
  41C9    7D                    	LD	A,L
  41CA    B3                    	OR	E
  41CB    6F                    	LD	L,A
@L33$I33  0003                          @L33	equ	$-$I33
L5F9B  41CC    C3 4131               	jp	l5f9b
L6039  41CF                          l6039:
  41CF    FE 0B                 	cp	0bh
L604A  41D1    28 0D                 	jr	z,l604a
  41D3    FE 0A                 	cp	0ah
L72DA  41D5    CD 53FB               	call	l72da
_ILLOPS  41D8    2F                    	db	_IllOps
L6B50  41D9    CD 4CE6               	call	l6b50		; Set XOR
@L34  41DC    03                    	db	@L34
$I34  41DD                          $I34:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-218


  41DD    7C                    	LD	A,H
  41DE    AA                    	XOR	D
  41DF    67                    	LD	H,A
@L34$I34  0003                          @L34	equ	$-$I34
L604A  41E0                          l604a:
L6B50  41E0    CD 4CE6               	call	l6b50		; Set XOR
@L35  41E3    03                    	db	@L35
$I35  41E4                          $I35:
  41E4    7D                    	LD	A,L
  41E5    AB                    	XOR	E
  41E6    6F                    	LD	L,A
@L35$I35  0003                          @L35	equ	$-$I35
L5F9B  41E7    C3 4131               	jp	l5f9b
L6054  41EA                          l6054:
L60E9  41EA    CD 427F               	call	l60e9
L6057  41ED                          l6057:
  41ED    C5                    	push	bc
L6E5A  41EE    CD 4FAE               	call	l6e5a		; Find operator
  41F1    01                    	db	1
L7600  41F2    571E                  	dw	l7600
  41F4    C1                    	pop	bc
  41F5    C0                    	ret	nz		; Nope
  41F6    78                    	ld	a,b
  41F7    FE 04                 	cp	4
L72D4  41F9    CD 53F5               	call	l72d4
_ILLOPS  41FC    2F                    	db	_IllOps
  41FD    7E                    	ld	a,(hl)		; Get operator
  41FE    F5                    	push	af
  41FF    C5                    	push	bc
L6148  4200    CD 42DE               	call	l6148
L60E9  4203    CD 427F               	call	l60e9
  4206    D1                    	pop	de
  4207    F1                    	pop	af		; Get back operator
  4208    F5                    	push	af
  4209    3D                    	dec	a		; Test /
L6083  420A    20 0D                 	jr	nz,l6083	; Nope
  420C    78                    	ld	a,b
  420D    FE 0A                 	cp	0ah
L6083  420F    20 08                 	jr	nz,l6083
L1008  4211    21 1008               	ld	hl,l1008
L6B86  4214    CD 4D1C               	call	l6b86		; Set CALL INT_TO_FLP
  4217    06 09                 	ld	b,9
L6083  4219                          l6083:
L6160  4219    CD 42F6               	call	l6160
  421C    F1                    	pop	af		; Get back operator
  421D    5F                    	ld	e,a
  421E    78                    	ld	a,b
  421F    1C                    	inc	e		; Test *
  4220    1D                    	dec	e
L60A9  4221    20 1C                 	jr	nz,l60a9	; Nope
L1333  4223    21 1333               	ld	hl,l1333
  4226    FE 03                 	cp	3
L60A4  4228    28 10                 	jr	z,l60a4
L06F5  422A    21 06F5               	ld	hl,l06f5	; Set integer multiply
  422D    FE 0A                 	cp	0ah
L60A4  422F    28 09                 	jr	z,l60a4
L09FATURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-219


  4231    21 09FA               	ld	hl,l09fa	; Set real multiply
L609E  4234                          l609e:
  4234    FE 09                 	cp	9
L72DA  4236    CD 53FB               	call	l72da
_ILLOPS  4239    2F                    	db	_IllOps
L60A4  423A                          l60a4:
L6B86  423A    CD 4D1C               	call	l6b86		; Set CALL <real>
L6057  423D    18 AE                 	jr	l6057
L60A9  423F                          l60a9:
L09FF  423F    21 09FF               	ld	hl,l09ff	; Set real division
  4242    1D                    	dec	e		; Test /
L609E  4243    28 EF                 	jr	z,l609e		; Yeap
  4245    1D                    	dec	e		; Test AND
L60CC  4246    20 1A                 	jr	nz,l60cc	; Nope
  4248    FE 0B                 	cp	0bh
L60C3  424A    28 0D                 	jr	z,l60c3
  424C    FE 0A                 	cp	0ah
L72DA  424E    CD 53FB               	call	l72da
_ILLOPS  4251    2F                    	db	_IllOps
L6B50  4252    CD 4CE6               	call	l6b50		; Set AND
@L36  4255    03                    	db	@L36
$I36  4256                          $I36:
  4256    7C                    	LD	A,H
  4257    A2                    	AND	D
  4258    67                    	LD	H,A
@L36$I36  0003                          @L36	equ	$-$I36
L60C3  4259                          l60c3:
L6B50  4259    CD 4CE6               	call	l6b50		; Set AND
@L37  425C    03                    	db	@L37
$I37  425D                          $I37:
  425D    7D                    	LD	A,L
  425E    A3                    	AND	E
  425F    6F                    	LD	L,A
@L37$I37  0003                          @L37	equ	$-$I37
L6057  4260    18 8B                 	jr	l6057
L60CC  4262                          l60cc:
  4262    FE 0A                 	cp	0ah
L72DA  4264    CD 53FB               	call	l72da
_ILLOPS  4267    2F                    	db	_IllOps
L070F  4268    21 070F               	ld	hl,l070f	; Set integer DIV
  426B    1D                    	dec	e		; Test DIV
L60A4  426C    28 CC                 	jr	z,l60a4		; Yeap
L0745  426E    21 0745               	ld	hl,l0745	; Set integer MOD
  4271    1D                    	dec	e		; Test MOD
L60A4  4272    28 C6                 	jr	z,l60a4
L074E  4274    21 074E               	ld	hl,l074e	; Set SHL
  4277    1D                    	dec	e		; Test SHL
L60A4  4278    28 C0                 	jr	z,l60a4
L0756  427A    21 0756               	ld	hl,l0756	; Set SHR
L60A4  427D    18 BB                 	jr	l60a4
L60E9  427F                          l60e9:
L6E76  427F    CD 4FCA               	call	l6e76		; Find NOT
L7579  4282    5697                  	dw	l7579
L6112  4284    20 22                 	jr	nz,l6112	; Nope
L6112  4286    CD 42A8               	call	l6112
  4289    78                    	ld	a,b
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-220


  428A    FE 0A                 	cp	0ah
L6107  428C    28 0F                 	jr	z,l6107
  428E    FE 0B                 	cp	0bh
L72DA  4290    CD 53FB               	call	l72da
_ILLOPS  4293    2F                    	db	_IllOps
L6B50  4294    CD 4CE6               	call	l6b50		; Set sequence
@L38  4297    04                    	db	@L38
$I38  4298                          $I38:
  4298    7D                    	LD	A,L
  4299    EE 01                 	XOR	1
  429B    6F                    	LD	L,A
@L38$I38  0004                          @L38	equ	$-$I38
  429C    C9                    	ret
L6107  429D                          l6107:
L6B50  429D    CD 4CE6               	call	l6b50		; Set sequence
@L39  42A0    06                    	db	@L39
$I39  42A1                          $I39:
  42A1    7D                    	LD	A,L
  42A2    2F                    	CPL
  42A3    6F                    	LD	L,A
  42A4    7C                    	LD	A,H
  42A5    2F                    	CPL
  42A6    67                    	LD	H,A
@L39$I39  0006                          @L39	equ	$-$I39
  42A7    C9                    	ret
L6112  42A8                          l6112:
L7BA1  42A8    3A 5CBE               	ld	a,(l7ba1)
  42AB    F5                    	push	af
L6A39  42AC    CD 4BCF               	call	l6a39
  42AF    7B                    	ld	a,e
L7BA1  42B0    32 5CBE               	ld	(l7ba1),a
L621D  42B3    CD 43B3               	call	l621d
L7BA1  42B6    3A 5CBE               	ld	a,(l7ba1)
  42B9    5F                    	ld	e,a
L6A4A  42BA    CD 4BE0               	call	l6a4a
L6143  42BD    28 1A                 	jr	z,l6143
  42BF    78                    	ld	a,b
  42C0    FE 0A                 	cp	0ah
L613B  42C2    20 0D                 	jr	nz,l613b
L6B50  42C4    CD 4CE6               	call	l6b50		; Set sequence
@L40  42C7    07                    	db	@L40
$I40  42C8                          $I40:
  42C8    7D                    	LD	A,L
  42C9    2F                    	CPL
  42CA    6F                    	LD	L,A
  42CB    7C                    	LD	A,H
  42CC    2F                    	CPL
  42CD    67                    	LD	H,A
  42CE    23                    	INC	HL
@L40$I40  0007                          @L40	equ	$-$I40
L6143  42CF    18 08                 	jr	l6143
L613B  42D1                          l613b:
L6B50  42D1    CD 4CE6               	call	l6b50		; Set sequence
@L41  42D4    04                    	db	@L41
$I41  42D5                          $I41:
  42D5    78                    	LD	A,B
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-221


  42D6    EE 80                 	XOR	80H
  42D8    47                    	LD	B,A
@L41$I41  0004                          @L41	equ	$-$I41
L6143  42D9                          l6143:
  42D9    F1                    	pop	af
L7BA1  42DA    32 5CBE               	ld	(l7ba1),a
  42DD    C9                    	ret
L6148  42DE                          l6148:
  42DE    78                    	ld	a,b
  42DF    FE 0A                 	cp	0ah
L615D  42E1    30 10                 	jr	nc,l615d
  42E3    FE 04                 	cp	4
L615D  42E5    28 0C                 	jr	z,l615d
  42E7    FE 08                 	cp	8
  42E9    C8                    	ret	z
  42EA    FE 03                 	cp	3
  42EC    C8                    	ret	z
L6B50  42ED    CD 4CE6               	call	l6b50		; Set sequence
@L42  42F0    02                    	db	@L42
$I42  42F1                          $I42:
  42F1    C5                    	PUSH	BC
  42F2    D5                    	PUSH	DE
@L42$I42  0002                          @L42	equ	$-$I42
L615D  42F3                          l615d:
L6B6F  42F3    C3 4D05               	jp	l6b6f		; Set PUSH HL
L6160  42F6                          l6160:
  42F6    7A                    	ld	a,d
  42F7    FE 09                 	cp	9
L6174  42F9    20 0F                 	jr	nz,l6174
  42FB    78                    	ld	a,b
  42FC    FE 0A                 	cp	0ah
L6187  42FE    20 1D                 	jr	nz,l6187
L1008  4300    21 1008               	ld	hl,l1008
L6B86  4303    CD 4D1C               	call	l6b86		; Set CALL INT_TO_FLP
  4306    06 09                 	ld	b,9
L6187  4308    18 13                 	jr	l6187
L6174  430A                          l6174:
  430A    FE 08                 	cp	8
L6187  430C    20 0F                 	jr	nz,l6187
  430E    78                    	ld	a,b
  430F    FE 0C                 	cp	0ch
L6187  4311    20 0A                 	jr	nz,l6187
L6B50  4313    CD 4CE6               	call	l6b50		; Set sequence
@L43  4316    04                    	db	@L43
$I43  4317                          $I43:
  4317    65                    	LD	H,L
  4318    2E 01                 	LD	L,1
  431A    E5                    	PUSH	HL
@L43$I43  0004                          @L43	equ	$-$I43
  431B    06 08                 	ld	b,8
L6187  431D                          l6187:
  431D    78                    	ld	a,b
  431E    FE 09                 	cp	9
L6193  4320    20 07                 	jr	nz,l6193
L6B50  4322    CD 4CE6               	call	l6b50		; Set EXX
@L44  4325    01                    	db	@L44
$I44TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-222


  4326                          $I44:
  4326    D9                    	EXX
@L44$I44  0001                          @L44	equ	$-$I44
L61A4  4327    18 11                 	jr	l61a4
L6193  4329                          l6193:
  4329    FE 08                 	cp	8
L61A4  432B    20 0D                 	jr	nz,l61a4
  432D    7A                    	ld	a,d
  432E    FE 0C                 	cp	0ch
L61A4  4330    20 08                 	jr	nz,l61a4
L09A2  4332    21 09A2               	ld	hl,l09a2
L6B86  4335    CD 4D1C               	call	l6b86		; Set CALL CHR_TO_STRG
  4338    16 08                 	ld	d,8
L61A4  433A                          l61a4:
  433A    7A                    	ld	a,d
  433B    FE 0A                 	cp	0ah
L61BC  433D    28 13                 	jr	z,l61bc
L61CE  433F    30 23                 	jr	nc,l61ce
  4341    FE 04                 	cp	4
L61CE  4343    28 1F                 	jr	z,l61ce
  4345    FE 09                 	cp	9
L61D3  4347    38 20                 	jr	c,l61d3
L6B50  4349    CD 4CE6               	call	l6b50		; Set sequence
@L45  434C    03                    	db	@L45
$I45  434D                          $I45:
  434D    E1                    	POP	HL
  434E    D1                    	POP	DE
  434F    C1                    	POP	BC
@L45$I45  0003                          @L45	equ	$-$I45
L61D3  4350    18 17                 	jr	l61d3
L61BC  4352                          l61bc:
  4352    78                    	ld	a,b
  4353    FE 09                 	cp	9
L61CE  4355    20 0D                 	jr	nz,l61ce
L6B73  4357    CD 4D09               	call	l6b73		; Set POP HL
L1008  435A    21 1008               	ld	hl,l1008
L6B86  435D    CD 4D1C               	call	l6b86		; Set CALL INT_TO_FLP
  4360    16 09                 	ld	d,9
L61D3  4362    18 05                 	jr	l61d3
L61CE  4364                          l61ce:
L6B50  4364    CD 4CE6               	call	l6b50		; Set POP DE
@L46  4367    01                    	db	@L46
$I46  4368                          $I46:
  4368    D1                    	POP	DE
@L46$I46  0001                          @L46	equ	$-$I46
L61D3  4369                          l61d3:
  4369    78                    	ld	a,b
  436A    BA                    	cp	d
L72DA  436B    CD 53FB               	call	l72da
_INVTYPE  436E    2C                    	db	_InvType
  436F    FE 03                 	cp	3
L61EA  4371    20 0D                 	jr	nz,l61ea
  4373    7B                    	ld	a,e
  4374    B9                    	cp	c
  4375    C8                    	ret	z
  4376    B7                    	or	a
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-223


  4377    C8                    	ret	z
  4378    79                    	ld	a,c
  4379    4B                    	ld	c,e
  437A    B7                    	or	a
  437B    C8                    	ret	z
L72E1  437C    CD 5402               	call	l72e1
_INVTYPE  437F    2C                    	db	_InvType
L61EA  4380                          l61ea:
  4380    FE 04                 	cp	4
  4382    C0                    	ret	nz
L7B8B  4383    2A 5CA8               	ld	hl,(l7b8b)
  4386    7C                    	ld	a,h
  4387    B5                    	or	l
  4388    C8                    	ret	z
L7B8D  4389    ED 5B 5CAA            	ld	de,(l7b8d)
  438D    7A                    	ld	a,d
  438E    B3                    	or	e
  438F    C8                    	ret	z
  4390    ED 52                 	sbc	hl,de
  4392    C8                    	ret	z
L72E1  4393    CD 5402               	call	l72e1
_INVTYPE  4396    2C                    	db	_InvType
L6201  4397                          l6201:
L5EEB  4397    11 4081               	ld	de,l5eeb
  439A    D5                    	push	de
L5F9B  439B    11 4131               	ld	de,l5f9b
  439E    D5                    	push	de
L6057  439F    11 41ED               	ld	de,l6057
  43A2    D5                    	push	de
L622D  43A3    18 1E                 	jr	l622d
L620F  43A5                          l620f:
L5EEB  43A5    11 4081               	ld	de,l5eeb
  43A8    D5                    	push	de
L5F9B  43A9    11 4131               	ld	de,l5f9b
  43AC    D5                    	push	de
L6057  43AD    11 41ED               	ld	de,l6057
  43B0    D5                    	push	de
L6276  43B1    18 59                 	jr	l6276
L621D  43B3                          l621d:
L6A5C  43B3    CD 4BF2               	call	l6a5c
L6257  43B6    20 35                 	jr	nz,l6257
L7BA1  43B8    3A 5CBE               	ld	a,(l7ba1)
  43BB    5F                    	ld	e,a
L6A1F  43BC    CD 4BB5               	call	l6a1f
  43BF    AF                    	xor	a
L7BA1  43C0    32 5CBE               	ld	(l7ba1),a
L622D  43C3                          l622d:
  43C3    78                    	ld	a,b
  43C4    FE 09                 	cp	9
L6249  43C6    20 17                 	jr	nz,l6249
  43C8    D9                    	exx
  43C9    C5                    	push	bc
  43CA    D5                    	push	de
  43CB    E5                    	push	hl
  43CC    01 0331               	ld	bc,256*3+031h
L6239  43CF                          l6239:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-224


  43CF    79                    	ld	a,c
  43D0    D6 10                 	sub	10h
  43D2    4F                    	ld	c,a		; Get byte
L6B9C  43D3    CD 4D32               	call	l6b9c		; Store it
  43D6    E1                    	pop	hl
L6B97  43D7    CD 4D2D               	call	l6b97
L6239  43DA    10 F3                 	djnz	l6239
  43DC    06 09                 	ld	b,9
  43DE    C9                    	ret
L6249  43DF                          l6249:
  43DF    FE 08                 	cp	8
L6B92  43E1    C2 4D28               	jp	nz,l6b92	; Set LD HL,val16
L054D  43E4    21 054D               	ld	hl,l054d
L6B86  43E7    CD 4D1C               	call	l6b86		; Move immediate string to stack
L6B5E  43EA    C3 4CF4               	jp	l6b5e
L6257  43ED                          l6257:
  43ED    01 0600               	ld	bc,256*6+0
L6E54  43F0    CD 4FA8               	call	l6e54
L6271  43F3    20 12                 	jr	nz,l6271
L573D  43F5    CD 38D3               	call	l573d
  43F8    EB                    	ex	de,hl
L5287  43F9    CD 341D               	call	l5287		; Get name
L7B5E  43FC    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
L7B8B  43FF    22 5CA8               	ld	(l7b8b),hl
L7B5C  4402    3A 5C79               	ld	a,(l7b5c)	; Get type
  4405    47                    	ld	b,a
  4406    C9                    	ret
L6271  4407                          l6271:
L67B2  4407    CD 4948               	call	l67b2
L62D2  440A    20 5C                 	jr	nz,l62d2
L6276  440C                          l6276:
L7B5C  440C    3A 5C79               	ld	a,(l7b5c)	; Get type
_STRING  440F    FE 08                 	cp	_String
L6285  4411    30 08                 	jr	nc,l6285
_SET  4413    FE 03                 	cp	_Set
L6285  4415    28 04                 	jr	z,l6285
_PTR  4417    FE 04                 	cp	_Ptr
L629D  4419    20 18                 	jr	nz,l629d
L6285  441B                          l6285:
L66DA  441B    CD 4870               	call	l66da
L7B5E  441E    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
L7B8B  4421    22 5CA8               	ld	(l7b8b),hl
L7B5C  4424    3A 5C79               	ld	a,(l7b5c)	; Get type
  4427    47                    	ld	b,a
_SET  4428    FE 03                 	cp	_Set
  442A    C0                    	ret	nz
L5287  442B    CD 341D               	call	l5287		; Get name
L7B5C  442E    3A 5C79               	ld	a,(l7b5c)	; Get type
  4431    4F                    	ld	c,a
  4432    C9                    	ret
L629D  4433                          l629d:
_ARRAY  4433    FE 01                 	cp	_Array
L72DA  4435    CD 53FB               	call	l72da
_NOSTRUKTVAR  4438    3E                    	db	_NoStruktVar
L678B  4439    CD 4921               	call	l678b
L7B5E  443C    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-225


  443F    7E                    	ld	a,(hl)
  4440    FE 0C                 	cp	0ch
L72DA  4442    CD 53FB               	call	l72da
_NOSTRUKTVAR  4445    3E                    	db	_NoStruktVar
L7B60  4446    2A 5C7D               	ld	hl,(l7b60)	; Get hi set limit
  4449    7E                    	ld	a,(hl)
  444A    FE 0A                 	cp	0ah
L72DA  444C    CD 53FB               	call	l72da
_NOSTRUKTVAR  444F    3E                    	db	_NoStruktVar
L7B62  4450    2A 5C7F               	ld	hl,(l7b62)	; Get length of type
  4453    7C                    	ld	a,h
  4454    B7                    	or	a
L72DA  4455    CD 53FB               	call	l72da
_NOSTRUKTVAR  4458    3E                    	db	_NoStruktVar
  4459    65                    	ld	h,l
  445A    2E 06                 	ld	l,6
L6B97  445C    CD 4D2D               	call	l6b97
L0638  445F    21 0638               	ld	hl,l0638
L6B86  4462    CD 4D1C               	call	l6b86		; Set set to stack
  4465    06 08                 	ld	b,8
  4467    C9                    	ret
L62D2  4468                          l62d2:
L6EE0  4468    CD 5034               	call	l6ee0
L631C  446B    20 45                 	jr	nz,l631c
L0581  446D    21 0581               	ld	hl,l0581
L6B86  4470    CD 4D1C               	call	l6b86		; Initialize a set on stack
L6EF7  4473    CD 504B               	call	l6ef7		; Test ]
L0300  4476    01 0300               	ld	bc,l0300
  4479    C8                    	ret	z		; Yeap
L62E4  447A                          l62e4:
  447A    C5                    	push	bc
L5EBB  447B    CD 4051               	call	l5ebb
  447E    78                    	ld	a,b
  447F    C1                    	pop	bc
  4480    0C                    	inc	c
  4481    0D                    	dec	c
L62EF  4482    20 01                 	jr	nz,l62ef
  4484    4F                    	ld	c,a
L62EF  4485                          l62ef:
  4485    B9                    	cp	c
L72DA  4486    CD 53FB               	call	l72da
_INVTYPE  4489    2C                    	db	_InvType
  448A    C5                    	push	bc
L6E76  448B    CD 4FCA               	call	l6e76		; Find ..
L7580  448E    569E                  	dw	l7580
L0591  4490    21 0591               	ld	hl,l0591
L6310  4493    20 11                 	jr	nz,l6310	; Nope, init one set element
L6B6F  4495    CD 4D05               	call	l6b6f		; Set PUSH HL
L5EBB  4498    CD 4051               	call	l5ebb
  449B    78                    	ld	a,b
  449C    C1                    	pop	bc
  449D    C5                    	push	bc
  449E    B9                    	cp	c
L72DA  449F    CD 53FB               	call	l72da
_INVTYPE  44A2    2C                    	db	_InvType
L059B  44A3    21 059B               	ld	hl,l059b	; Init a contiguous set value
L6310TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-226


  44A6                          l6310:
L6B86  44A6    CD 4D1C               	call	l6b86		; Set CALL <set>
  44A9    C1                    	pop	bc
L6F13  44AA    CD 5067               	call	l6f13		; Test ,
L62E4  44AD    28 CB                 	jr	z,l62e4		; Yeap
L6F38  44AF    C3 508C               	jp	l6f38		; Verify ]
L631C  44B2                          l631c:
L6F1B  44B2    CD 506F               	call	l6f1b		; Test (
L6327  44B5    20 06                 	jr	nz,l6327	; Nope
L5EE8  44B7    CD 407E               	call	l5ee8
L6F6E  44BA    C3 50C2               	jp	l6f6e		; Verify )
L6327  44BD                          l6327:
L6E5A  44BD    CD 4FAE               	call	l6e5a		; Find function
  44C0    02                    	db	2
L77B1  44C1    58CF                  	dw	l77b1
L6335  44C3    20 06                 	jr	nz,l6335	; Nope
  44C5    5E                    	ld	e,(hl)
  44C6    23                    	inc	hl
  44C7    56                    	ld	d,(hl)
  44C8    EB                    	ex	de,hl
  44C9    AF                    	xor	a
  44CA    E9                    	jp	(hl)
L6335  44CB                          l6335:
L6E76  44CB    CD 4FCA               	call	l6e76		; Find NIL
L757C  44CE    569A                  	dw	l757c
L6345  44D0    20 09                 	jr	nz,l6345	; Nope
L0000  44D2    21 0000               	ld	hl,l0000
L6B92  44D5    CD 4D28               	call	l6b92		; Set LD HL,val16
L642E  44D8    C3 45C4               	jp	l642e
L6345  44DB                          l6345:
  44DB    01 0300               	ld	bc,256*3+0
L6E54  44DE    CD 4FA8               	call	l6e54
L72DA  44E1    CD 53FB               	call	l72da
_UNDEF  44E4    29                    	db	_Undef
  44E5    56                    	ld	d,(hl)
  44E6    2B                    	dec	hl
  44E7    5E                    	ld	e,(hl)
  44E8    1A                    	ld	a,(de)
  44E9    FE 0A                 	cp	0ah
L72C8  44EB    CD 53EF               	call	l72c8
_SIMTYP  44EE    1E                    	db	_SimTyp
  44EF    F5                    	push	af
L65EF  44F0    CD 4785               	call	l65ef
  44F3    F1                    	pop	af
  44F4    47                    	ld	b,a
  44F5    C9                    	ret
                                ;
                                ; Function SQR(Num)
                                ;
L6360  44F6                          l6360:
L65E7  44F6    CD 477D               	call	l65e7
L06F3  44F9    21 06F3               	ld	hl,l06f3	; Set integer SQR
  44FC    78                    	ld	a,b
  44FD    FE 0A                 	cp	0ah
L636E  44FF    28 03                 	jr	z,l636e
L09F7  4501    21 09F7               	ld	hl,l09f7	; Set real SQR
L636ETURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-227


  4504                          l636e:
L6B86  4504    C3 4D1C               	jp	l6b86		; Set CALL <real>
                                ;
                                ; Function ABS(Num)
                                ;
L6371  4507                          l6371:
L65E7  4507    CD 477D               	call	l65e7
  450A    78                    	ld	a,b
  450B    FE 0A                 	cp	0ah
L6380  450D    28 07                 	jr	z,l6380
L6B50  450F    CD 4CE6               	call	l6b50		; Set RES 7,B
@L47  4512    02                    	db	@L47
$I47  4513                          $I47:
  4513    CB B8                 	RES	7,B
@L47$I47  0002                          @L47	equ	$-$I47
  4515    C9                    	ret
L6380  4516                          l6380:
L0780  4516    21 0780               	ld	hl,l0780	; Set integer ABS
L63CF  4519    18 4A                 	jr	l63cf
                                ;
                                ; Function SQRT(Num)
                                ;
L6385  451B                          l6385:
L0C46  451B    21 0C46               	ld	hl,l0c46
L63AB  451E    18 21                 	jr	l63ab
                                ;
                                ; Function SIN(Num)
                                ;
L638A  4520                          l638a:
L0C87  4520    21 0C87               	ld	hl,l0c87
L63AB  4523    18 1C                 	jr	l63ab
                                ;
                                ; Function COS(Num)
                                ;
L638F  4525                          l638f:
L0C7F  4525    21 0C7F               	ld	hl,l0c7f
L63AB  4528    18 17                 	jr	l63ab
                                ;
                                ; Function ARCTAN(Num)
                                ;
L6394  452A                          l6394:
L0E46  452A    21 0E46               	ld	hl,l0e46
L63AB  452D    18 12                 	jr	l63ab
                                ;
                                ; Function LN(Num)
                                ;
L6399  452F                          l6399:
L0D2B  452F    21 0D2B               	ld	hl,l0d2b
L63AB  4532    18 0D                 	jr	l63ab
                                ;
                                ; Function EXP(Num)
                                ;
L639E  4534                          l639e:
L0DB6  4534    21 0DB6               	ld	hl,l0db6
L63AB  4537    18 08                 	jr	l63ab
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-228


                                ; Function INT(Num)
                                ;
L63A3  4539                          l63a3:
L0BFD  4539    21 0BFD               	ld	hl,l0bfd
L63AB  453C    18 03                 	jr	l63ab
                                ;
                                ; Function FRAC(Num)
                                ;
L63A8  453E                          l63a8:
L0C34  453E    21 0C34               	ld	hl,l0c34
L63AB  4541                          l63ab:
  4541    E5                    	push	hl
L65E7  4542    CD 477D               	call	l65e7
L1008  4545    21 1008               	ld	hl,l1008
  4548    78                    	ld	a,b
  4549    FE 0A                 	cp	0ah
L6B86  454B    CC 4D1C               	call	z,l6b86		; Set CALL INT_TO_FLP
  454E    E1                    	pop	hl
  454F    06 09                 	ld	b,9
L6B86  4551    C3 4D1C               	jp	l6b86		; Set CALL <real>
                                ;
                                ; Function TRUNC(Num)
                                ;
L63BE  4554                          l63be:
L0FDE  4554    21 0FDE               	ld	hl,l0fde
L63C6  4557    18 03                 	jr	l63c6
                                ;
                                ; Function ROUND(Num)
                                ;
L63C3  4559                          l63c3:
L0FD0  4559    21 0FD0               	ld	hl,l0fd0
L63C6  455C                          l63c6:
  455C    E5                    	push	hl
L65E7  455D    CD 477D               	call	l65e7
  4560    E1                    	pop	hl
  4561    78                    	ld	a,b
  4562    FE 0A                 	cp	0ah
  4564    C8                    	ret	z
L63CF  4565                          l63cf:
  4565    06 0A                 	ld	b,0ah
L6B86  4567    C3 4D1C               	jp	l6b86		; Set CALL <real>
                                ;
                                ; Function SUCC(Num)
                                ;
L63D4  456A                          l63d4:
.INC.HL  456A    3E 23                 	ld	a,.INC.HL	; INC HL
SKIP.3  456C    11                    	db	skip.3
                                ;
                                ; Function PRED(Num)
                                ;
L63D7  456D                          l63d7:
.DEC.HL  456D    3E 2B                 	ld	a,.DEC.HL	; DEC HL
  456F    F5                    	push	af
L65EF  4570    CD 4785               	call	l65ef
  4573    F1                    	pop	af		; Get byte back
L6B9C  4574    C3 4D32               	jp	l6b9c		; Store it
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-229


                                ;
                                ; Function LO(Integer)
                                ;
L63E1  4577                          l63e1:
L65DE  4577    CD 4774               	call	l65de
L6B50  457A    CD 4CE6               	call	l6b50		; Set LD H,0
@L48  457D    02                    	db	@L48
$I48  457E                          $I48:
  457E    26 00                 	LD	H,0
@L48$I48  0002                          @L48	equ	$-$I48
  4580    C9                    	ret
                                ;
                                ; Function HI(Integer)
                                ;
L63EB  4581                          l63eb:
L65DE  4581    CD 4774               	call	l65de
L6B50  4584    CD 4CE6               	call	l6b50		; Set sequence
@L49  4587    03                    	db	@L49
$I49  4588                          $I49:
  4588    6C                    	LD	L,H
  4589    26 00                 	LD	H,0
@L49$I49  0003                          @L49	equ	$-$I49
  458B    C9                    	ret
                                ;
                                ; Function SWAP(Num)
                                ;
L63F6  458C                          l63f6:
L65DE  458C    CD 4774               	call	l65de
L6B50  458F    CD 4CE6               	call	l6b50		; Set sequence
@L50  4592    03                    	db	@L50
$I50  4593                          $I50:
  4593    7D                    	LD	A,L
  4594    6C                    	LD	L,H
  4595    67                    	LD	H,A
@L50$I50  0003                          @L50	equ	$-$I50
  4596    C9                    	ret
                                ;
                                ; Function ODD(Num)
                                ;
L6401  4597                          l6401:
L65DE  4597    CD 4774               	call	l65de
L078B  459A    21 078B               	ld	hl,l078b	; Set function ODD
L6407  459D                          l6407:
  459D    06 0B                 	ld	b,0bh
L6409  459F                          l6409:
L6B86  459F    C3 4D1C               	jp	l6b86		; Set CALL ODD
                                ;
                                ; Function KEYPRESSED
                                ;
L640C  45A2                          l640c:
L00A0  45A2    21 00A0               	ld	hl,l00a0
L6407  45A5    18 F6                 	jr	l6407
                                ;
                                ; Function ORD(Var)
                                ;
L6411  45A7                          l6411:
L6F66TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-230


  45A7    CD 50BA               	call	l6f66		; Verify (
L5EE8  45AA    CD 407E               	call	l5ee8
L6F6E  45AD    CD 50C2               	call	l6f6e		; Verify )
  45B0    78                    	ld	a,b
  45B1    FE 04                 	cp	4
L6422  45B3    28 03                 	jr	z,l6422
L5EBE  45B5    CD 4054               	call	l5ebe
L6422  45B8                          l6422:
  45B8    06 0A                 	ld	b,0ah
  45BA    C9                    	ret
                                ;
                                ; Function CHR(Num)
                                ;
L6425  45BB                          l6425:
L65DE  45BB    CD 4774               	call	l65de
  45BE    06 0C                 	ld	b,0ch
  45C0    C9                    	ret
                                ;
                                ; Function PTR(Integer)
                                ;
L642B  45C1                          l642b:
L65DE  45C1    CD 4774               	call	l65de
L642E  45C4                          l642e:
L0000  45C4    21 0000               	ld	hl,l0000
L7B8B  45C7    22 5CA8               	ld	(l7b8b),hl
  45CA    06 04                 	ld	b,4
  45CC    C9                    	ret
                                ;
                                ; Function UPCASE(Char)
                                ;
L6437  45CD                          l6437:
L65EF  45CD    CD 4785               	call	l65ef
  45D0    06 0C                 	ld	b,0ch
L1FE4  45D2    21 1FE4               	ld	hl,l1fe4
L6409  45D5    18 C8                 	jr	l6409
                                ;
                                ; Function LENGTH(String)
                                ;
L6441  45D7                          l6441:
L6F66  45D7    CD 50BA               	call	l6f66		; Verify (
L08A3  45DA    21 08A3               	ld	hl,l08a3	; Set LENGTH
L6447  45DD                          l6447:
  45DD    E5                    	push	hl
L5ED0  45DE    CD 4066               	call	l5ed0
L6F6E  45E1    CD 50C2               	call	l6f6e		; Verify )
  45E4    E1                    	pop	hl
L63CF  45E5    C3 4565               	jp	l63cf
                                ;
                                ; Function POS(String,String)
                                ;
L6452  45E8                          l6452:
L6F66  45E8    CD 50BA               	call	l6f66		; Verify (
L5ED0  45EB    CD 4066               	call	l5ed0
L6F5E  45EE    CD 50B2               	call	l6f5e		; Verify ,
L08B2  45F1    21 08B2               	ld	hl,l08b2
L6447  45F4    18 E7                 	jr	l6447		; Set POS
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-231


                                ;
                                ; Function COPY(String,Integer,Integer)
                                ;
L6460  45F6                          l6460:
L6F66  45F6    CD 50BA               	call	l6f66		; Verify (
L5ED0  45F9    CD 4066               	call	l5ed0
L6F5E  45FC    CD 50B2               	call	l6f5e		; Verify ,
L5E97  45FF    CD 402D               	call	l5e97
L6F5E  4602    CD 50B2               	call	l6f5e		; Verify ,
L6B6F  4605    CD 4D05               	call	l6b6f		; Set PUSH HL
L5E97  4608    CD 402D               	call	l5e97
L6F6E  460B    CD 50C2               	call	l6f6e		; Verify )
L086B  460E    21 086B               	ld	hl,l086b
L6B86  4611    CD 4D1C               	call	l6b86		; Set CALL COPY
L647E  4614                          l647e:
  4614    06 08                 	ld	b,8
  4616    C9                    	ret
                                ;
                                ; Function CONCAT(String,String,...)
                                ;
L6481  4617                          l6481:
L6F66  4617    CD 50BA               	call	l6f66		; Verify (
L5ED0  461A    CD 4066               	call	l5ed0
L6487  461D                          l6487:
L6F13  461D    CD 5067               	call	l6f13		; Test ,
L6497  4620    20 0B                 	jr	nz,l6497	; Nope
L5ED0  4622    CD 4066               	call	l5ed0
L083D  4625    21 083D               	ld	hl,l083d
L6B86  4628    CD 4D1C               	call	l6b86		; Set add two strings
L6487  462B    18 F0                 	jr	l6487
L6497  462D                          l6497:
L6F6E  462D    CD 50C2               	call	l6f6e		; Verify )
L647E  4630    18 E2                 	jr	l647e
                                ;
                                ; Function PARAMCOUNT
                                ;
L649C  4632                          l649c:
L1F9B  4632    21 1F9B               	ld	hl,l1f9b
L64BF  4635    18 1E                 	jr	l64bf
                                ;
                                ; Function PARAMSTR(Integer)
                                ;
L64A1  4637                          l64a1:
L65DE  4637    CD 4774               	call	l65de
L1F7D  463A    21 1F7D               	ld	hl,l1f7d
  463D    06 08                 	ld	b,8
L6B86  463F    C3 4D1C               	jp	l6b86		; Set CALL PARAMSTR
                                ;
                                ; Function RANDOM(Integer)
                                ;
L64AC  4642                          l64ac:
L6F1B  4642    CD 506F               	call	l6f1b		; Test (
L0FB4  4645    21 0FB4               	ld	hl,l0fb4
  4648    06 09                 	ld	b,9
L64C1  464A    20 0B                 	jr	nz,l64c1	; Nope
L5E97  464C    CD 402D               	call	l5e97
L6F6ETURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-232


  464F    CD 50C2               	call	l6f6e		; Verify )
L073B  4652    21 073B               	ld	hl,l073b	; Set integer random
L64BF  4655                          l64bf:
  4655    06 0A                 	ld	b,0ah
L64C1  4657                          l64c1:
L6B86  4657    C3 4D1C               	jp	l6b86		; Set CALL RANDOM
                                ;
                                ; Function IORESULT
                                ;
L64C4  465A                          l64c4:
L1FF1  465A    21 1FF1               	ld	hl,l1ff1
L64BF  465D    18 F6                 	jr	l64bf
                                ;
                                ; Function EOF(FileVar)
                                ;
L64C9  465F                          l64c9:
L65F7  465F    CD 478D               	call	l65f7
L6615  4662    21 47AB               	ld	hl,l6615
L59E9  4665    CD 3B7F               	call	l59e9
L64D2  4668                          l64d2:
  4668    06 0B                 	ld	b,0bh
  466A    C9                    	ret
                                ;
                                ; Function SEEKEOF(FileVar)
                                ;
L64D5  466B                          l64d5:
L17E1  466B    21 17E1               	ld	hl,l17e1
L64E2  466E    18 08                 	jr	l64e2
                                ;
                                ; Function SEEKEOLN(FileVar)
                                ;
L64DA  4670                          l64da:
L17D7  4670    21 17D7               	ld	hl,l17d7
L64E2  4673    18 03                 	jr	l64e2
                                ;
                                ; Function EOLN(TextFileVar)
                                ;
L64DF  4675                          l64df:
L17DC  4675    21 17DC               	ld	hl,l17dc
L64E2  4678                          l64e2:
  4678    E5                    	push	hl
L65F7  4679    CD 478D               	call	l65f7
  467C    FE 06                 	cp	6
L72DA  467E    CD 53FB               	call	l72da
_MUSTTEXTFILE  4681    23                    	db	_MustTextFile
  4682    E1                    	pop	hl
L6B86  4683    CD 4D1C               	call	l6b86		; Set CALL <eoln>
L64D2  4686    18 E0                 	jr	l64d2
                                ;
                                ; Function FILEPOS(FileVar)
                                ;
L64F2  4688                          l64f2:
L1A55  4688    21 1A55               	ld	hl,l1a55
L1A55  468B    11 1A55               	ld	de,l1a55
L6500  468E    18 06                 	jr	l6500
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-233


                                ; Function FILESIZE(FileVar)
                                ;
L64FA  4690                          l64fa:
L1A5D  4690    21 1A5D               	ld	hl,l1a5d
L1A5D  4693    11 1A5D               	ld	de,l1a5d
L6500  4696                          l6500:
  4696    E5                    	push	hl
  4697    D5                    	push	de
L65F7  4698    CD 478D               	call	l65f7
  469B    D1                    	pop	de
  469C    E1                    	pop	hl
  469D    FE 06                 	cp	6
L72D4  469F    CD 53F5               	call	l72d4
_ILLTXTFILE  46A2    3F                    	db	_IllTxtFile
  46A3    FE 05                 	cp	5
L64BF  46A5    28 AE                 	jr	z,l64bf
  46A7    EB                    	ex	de,hl
L64BF  46A8    18 AB                 	jr	l64bf
                                ;
                                ; Function MEMAVAIL
                                ;
L6514  46AA                          l6514:
L1E3D  46AA    21 1E3D               	ld	hl,l1e3d
L64BF  46AD    18 A6                 	jr	l64bf
                                ;
                                ; Function MAXAVAIL
                                ;
L6519  46AF                          l6519:
L1E44  46AF    21 1E44               	ld	hl,l1e44
L64BF  46B2    18 A1                 	jr	l64bf
                                ;
                                ; Procedure BIOS(Integer,Integer)
                                ; Function BIOSHL(Integer,Integer)
                                ;
L651E  46B4                          l651e:
SKIP  46B4    3E                    	db	skip
                                ;
                                ; Function BIOS(Integer,Integer)
                                ;
L651F  46B5                          l651f:
  46B5    AF                    	xor	a
  46B6    F5                    	push	af
L6F66  46B7    CD 50BA               	call	l6f66		; Verify (
L5E97  46BA    CD 402D               	call	l5e97
L6B6F  46BD    CD 4D05               	call	l6b6f		; Set PUSH HL
L6F13  46C0    CD 5067               	call	l6f13		; Test ,
L6538  46C3    20 09                 	jr	nz,l6538	; Nope
L5E97  46C5    CD 402D               	call	l5e97
L6B50  46C8    CD 4CE6               	call	l6b50		; Set sequence
@L51  46CB    02                    	db	@L51
$I51  46CC                          $I51:
  46CC    44                    	LD	B,H
  46CD    4D                    	LD	C,L
@L51$I51  0002                          @L51	equ	$-$I51
L6538  46CE                          l6538:
L6B50  46CE    CD 4CE6               	call	l6b50		; Set POP DE
@L52TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-234


  46D1    01                    	db	@L52
$I52  46D2                          $I52:
  46D2    D1                    	POP	DE
@L52$I52  0001                          @L52	equ	$-$I52
L1FEA  46D3    21 1FEA               	ld	hl,l1fea
L6540  46D6                          l6540:
L6F6E  46D6    CD 50C2               	call	l6f6e		; Verify )
L6B86  46D9    CD 4D1C               	call	l6b86		; Set CALL BIOS
  46DC    F1                    	pop	af
  46DD    06 0A                 	ld	b,0ah
  46DF    B7                    	or	a
  46E0    C0                    	ret	nz
L6B50  46E1    CD 4CE6               	call	l6b50		; Set sequence
@L53  46E4    03                    	db	@L53
$I53  46E5                          $I53:
  46E5    6F                    	LD	L,A
  46E6    26 00                 	LD	H,0
@L53$I53  0003                          @L53	equ	$-$I53
  46E8    C9                    	ret
                                ;
                                ; Procedure BDOS(Integer,Integer)
                                ; Function BDOSHL(Integer,Integer)
                                ;
L6553  46E9                          l6553:
SKIP  46E9    3E                    	db	skip
                                ;
                                ; Function BDOS(Integer,Integer)
                                ;
L6554  46EA                          l6554:
  46EA    AF                    	xor	a
  46EB    F5                    	push	af
L6F66  46EC    CD 50BA               	call	l6f66		; Verify (
L5E97  46EF    CD 402D               	call	l5e97
L6B6F  46F2    CD 4D05               	call	l6b6f		; Set PUSH HL
L6F13  46F5    CD 5067               	call	l6f13		; Test ,
L656C  46F8    20 08                 	jr	nz,l656c	; Nope
L5E97  46FA    CD 402D               	call	l5e97
L6B50  46FD    CD 4CE6               	call	l6b50		; Set EX DE,HL
@L54  4700    01                    	db	@L54
$I54  4701                          $I54:
  4701    EB                    	EX	DE,HL
@L54$I54  0001                          @L54	equ	$-$I54
L656C  4702                          l656c:
L6B50  4702    CD 4CE6               	call	l6b50		; Set POP BC
@L55  4705    01                    	db	@L55
$I55  4706                          $I55:
  4706    C1                    	POP	BC
@L55$I55  0001                          @L55	equ	$-$I55
BDOS  4707    21 0005               	ld	hl,BDOS
L6540  470A    18 CA                 	jr	l6540
                                ;
                                ; Function ADDR(Var)
                                ;
L6576  470C                          l6576:
L6F66  470C    CD 50BA               	call	l6f66		; Verify (
  470F    01 0500               	ld	bc,256*5+0
L6E54TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-235


  4712    CD 4FA8               	call	l6e54
L6589  4715    28 08                 	jr	z,l6589
  4717    01 0600               	ld	bc,256*6+0
L6E54  471A    CD 4FA8               	call	l6e54
L6594  471D    20 0B                 	jr	nz,l6594
L6589  471F                          l6589:
  471F    2B                    	dec	hl
  4720    2B                    	dec	hl
  4721    56                    	ld	d,(hl)
  4722    2B                    	dec	hl
  4723    5E                    	ld	e,(hl)
  4724    EB                    	ex	de,hl
L658F  4725                          l658f:
L6B92  4725    CD 4D28               	call	l6b92		; Set LD HL,val16
L6597  4728    18 03                 	jr	l6597
L6594  472A                          l6594:
L677F  472A    CD 4915               	call	l677f
L6597  472D                          l6597:
L6F6E  472D    CD 50C2               	call	l6f6e		; Verify )
  4730    06 0A                 	ld	b,0ah
  4732    C9                    	ret
                                ;
                                ; Function SIZEOF(Var)
                                ;
L659D  4733                          l659d:
L6F66  4733    CD 50BA               	call	l6f66		; Verify (
  4736    01 0300               	ld	bc,256*3+0
L6E54  4739    CD 4FA8               	call	l6e54
L65B1  473C    20 09                 	jr	nz,l65b1
  473E    56                    	ld	d,(hl)
  473F    2B                    	dec	hl
  4740    5E                    	ld	e,(hl)
  4741    EB                    	ex	de,hl
L5287  4742    CD 341D               	call	l5287		; Get name
L65BA  4745    18 09                 	jr	l65ba
L65B1  4747                          l65b1:
  4747    FD E5                 	push	iy
L677F  4749    CD 4915               	call	l677f
  474C    E1                    	pop	hl
L6CC2  474D    CD 4E1B               	call	l6cc2		; Check chaining
L65BA  4750                          l65ba:
L7B62  4750    2A 5C7F               	ld	hl,(l7b62)	; Get length of type
L658F  4753    18 D0                 	jr	l658f
                                ;
                                ; Function PORT(Integer)
                                ;
L65BF  4755                          l65bf:
L65D5  4755    CD 476B               	call	l65d5
L6B50  4758    CD 4CE6               	call	l6b50		; Set sequence
@L56  475B    03                    	db	@L56
$I56  475C                          $I56:
  475C    4D                    	LD	C,L
  475D    ED 68                 	IN	L,(C)
@L56$I56  0003                          @L56	equ	$-$I56
  475F    C9                    	ret
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-236


                                ; Function STACKPTR
                                ;
L65CA  4760                          l65ca:
L6B50  4760    CD 4CE6               	call	l6b50		; Set sequence
@L57  4763    04                    	db	@L57
$I57  4764                          $I57:
  4764    21 0000               	LD	HL,0
  4767    39                    	ADD	HL,SP
@L57$I57  0004                          @L57	equ	$-$I57
  4768    06 0A                 	ld	b,0ah
  476A    C9                    	ret
L65D5  476B                          l65d5:
L6F30  476B    CD 5084               	call	l6f30		; Verify [
L5E97  476E    CD 402D               	call	l5e97
L6F38  4771    C3 508C               	jp	l6f38		; Verify ]
L65DE  4774                          l65de:
L6F66  4774    CD 50BA               	call	l6f66		; Verify (
L5E97  4777    CD 402D               	call	l5e97
L65E4  477A                          l65e4:
L6F6E  477A    C3 50C2               	jp	l6f6e		; Verify )
L65E7  477D                          l65e7:
L6F66  477D    CD 50BA               	call	l6f66		; Verify (
L5EA2  4780    CD 4038               	call	l5ea2
L65E4  4783    18 F5                 	jr	l65e4
L65EF  4785                          l65ef:
L6F66  4785    CD 50BA               	call	l6f66		; Verify (
L5EBB  4788    CD 4051               	call	l5ebb
L65E4  478B    18 ED                 	jr	l65e4
L65F7  478D                          l65f7:
L6F1B  478D    CD 506F               	call	l6f1b		; Test (
L6608  4790    28 0C                 	jr	z,l6608		; Yeap
L00C2  4792    21 00C2               	ld	hl,l00c2
L6B92  4795    CD 4D28               	call	l6b92		; Set LD HL,val16
_TXTF  4798    3E 06                 	ld	a,_TxtF
L7B5C  479A    32 5C79               	ld	(l7b5c),a	; Set TEXT
  479D    C9                    	ret
L6608  479E                          l6608:
L5A17  479E    CD 3BAD               	call	l5a17
L72DA  47A1    CD 53FB               	call	l72da
_FILEVAREXP  47A4    15                    	db	_FileVarExp
  47A5    F5                    	push	af
L6F6E  47A6    CD 50C2               	call	l6f6e		; Verify )
  47A9    F1                    	pop	af
  47AA    C9                    	ret
L6615  47AB                          l6615:
  47AB    49                    	ld	c,c
  47AC    1A                    	ld	a,(de)
  47AD    E6 17                 	and	17h
  47AF    49                    	ld	c,c
  47B0    1A                    	ld	a,(de)
                                ;
                                ;
                                ;
L661B  47B1                          l661b:
L7B57  47B1    3A 5C74               	ld	a,(l7b57)
  47B4    4F                    	ld	c,a
L7B58TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-237


  47B5    2A 5C75               	ld	hl,(l7b58)	; Get value
L7B5C  47B8    3A 5C79               	ld	a,(l7b5c)	; Get type
_SET  47BB    FE 03                 	cp	_Set
L6634  47BD    20 0B                 	jr	nz,l6634
L6734  47BF    CD 48CA               	call	l6734
L0623  47C2    21 0623               	ld	hl,l0623
L0612  47C5    11 0612               	ld	de,l0612
L6648  47C8    18 14                 	jr	l6648		; Assign set variable
L6634  47CA                          l6634:
_STRING  47CA    FE 08                 	cp	_String
L665E  47CC    20 26                 	jr	nz,l665e
L7B62  47CE    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  47D1    3D                    	dec	a
  47D2    67                    	ld	h,a
  47D3    2E 06                 	ld	l,6
L6B97  47D5    CD 4D2D               	call	l6b97
L0601  47D8    21 0601               	ld	hl,l0601	; Assign string from stack
L05E2  47DB    11 05E2               	ld	de,l05e2	; Assign string from stack
L6648  47DE                          l6648:
  47DE    0D                    	dec	c
L665B  47DF    28 10                 	jr	z,l665b
  47E1    EB                    	ex	de,hl
L664C  47E2                          l664c:
.LD.HL  47E2    3E 21                 	ld	a,.LD.HL
  47E4    0C                    	inc	c
L6653  47E5    28 02                 	jr	z,l6653
.LD@HL  47E7    3E 2A                 	ld	a,.LD@HL
L6653  47E9                          l6653:
  47E9    E5                    	push	hl
L7B58  47EA    2A 5C75               	ld	hl,(l7b58)	; Get value
L6B94  47ED    CD 4D2A               	call	l6b94
  47F0    E1                    	pop	hl
L665B  47F1                          l665b:
L6B86  47F1    C3 4D1C               	jp	l6b86		; Set CALL <call>
L665E  47F4                          l665e:
_REAL  47F4    FE 09                 	cp	_Real
L6672  47F6    20 10                 	jr	nz,l6672
L6B50  47F8    CD 4CE6               	call	l6b50		; Set EXX
@L58  47FB    01                    	db	@L58
$I58  47FC                          $I58:
  47FC    D9                    	EXX
@L58$I58  0001                          @L58	equ	$-$I58
L05D1  47FD    21 05D1               	ld	hl,l05d1	; Save real number
  4800    0D                    	dec	c
L664C  4801    20 DF                 	jr	nz,l664c
L6B73  4803    CD 4D09               	call	l6b73		; Set POP HL
L665B  4806    18 E9                 	jr	l665b
L6672  4808                          l6672:
_PTR  4808    FE 04                 	cp	_Ptr
L669D  480A    28 27                 	jr	z,l669d
L7B9E  480C    3A 5CBB               	ld	a,(l7b9e)	; Get local options
.ROPT  480F    CB 4F                 	bit	.Ropt,a		; Test $R+
L669D  4811    28 20                 	jr	z,l669d		; Nope
L7B5E  4813    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
L7B60  4816    ED 5B 5C7D            	ld	de,(l7b60)	; Get hi set limit
  481A    13                    	inc	de
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-238


  481B    B7                    	or	a
  481C    ED 52                 	sbc	hl,de
  481E    19                    	add	hl,de
L669D  481F    28 12                 	jr	z,l669d
  4821    1B                    	dec	de
L6B8E  4822    CD 4D24               	call	l6b8e		; Set LD DE,val16
  4825    EB                    	ex	de,hl
  4826    B7                    	or	a
  4827    ED 52                 	sbc	hl,de
  4829    23                    	inc	hl
L6B8A  482A    CD 4D20               	call	l6b8a
L0656  482D    21 0656               	ld	hl,l0656
L6B86  4830    CD 4D1C               	call	l6b86		; Index check on compiler directive {$R+}
L669D  4833                          l669d:
  4833    0D                    	dec	c
L66B7  4834    20 17                 	jr	nz,l66b7
L6B50  4836    CD 4CE6               	call	l6b50		; Set sequence
@L59  4839    02                    	db	@L59
$I59  483A                          $I59:
  483A    EB                    	EX	DE,HL
  483B    E1                    	POP	HL
@L59$I59  0002                          @L59	equ	$-$I59
L66A6  483C                          l66a6:
L6B50  483C    CD 4CE6               	call	l6b50		; Set LD (HL),E
@L60  483F    01                    	db	@L60
$I60  4840                          $I60:
  4840    73                    	LD	(HL),E
@L60$I60  0001                          @L60	equ	$-$I60
L7B62  4841    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  4844    3D                    	dec	a
  4845    C8                    	ret	z
L6B50  4846    CD 4CE6               	call	l6b50		; Set sequence
@L61  4849    02                    	db	@L61
$I61  484A                          $I61:
  484A    23                    	INC	HL
  484B    72                    	LD	(HL),D
@L61$I61  0002                          @L61	equ	$-$I61
  484C    C9                    	ret
L66B7  484D                          l66b7:
L7B58  484D    2A 5C75               	ld	hl,(l7b58)	; Get value
  4850    0C                    	inc	c
L66CF  4851    20 12                 	jr	nz,l66cf
L7B62  4853    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  4856    3D                    	dec	a
.LDHL@  4857    3E 22                 	ld	a,.LDHL@
L66CC  4859    20 07                 	jr	nz,l66cc
L6B50  485B    CD 4CE6               	call	l6b50		; Set LD A,L
@L62  485E    01                    	db	@L62
$I62  485F                          $I62:
  485F    7D                    	LD	A,L
@L62$I62  0001                          @L62	equ	$-$I62
.LDA@  4860    3E 32                 	ld	a,.LDA@
L66CC  4862                          l66cc:
L6B94  4862    C3 4D2A               	jp	l6b94
L66CF  4865                          l66cf:
L6B50  4865    CD 4CE6               	call	l6b50		; Set sequence
@L63TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-239


  4868    02                    	db	@L63
$I63  4869                          $I63:
  4869    EB                    	EX	DE,HL
.LD@HL  486A    2A                    	db	.LD@HL
@L63$I63  0002                          @L63	equ	$-$I63
L6B97  486B    CD 4D2D               	call	l6b97
L66A6  486E    18 CC                 	jr	l66a6
L66DA  4870                          l66da:
L7B5C  4870    3A 5C79               	ld	a,(l7b5c)	; Get type
_INTEG  4873    FE 0A                 	cp	_Integ
L6701  4875    30 20                 	jr	nc,l6701
_PTR  4877    FE 04                 	cp	_Ptr
L6701  4879    28 1C                 	jr	z,l6701
  487B    F5                    	push	af
L678B  487C    CD 4921               	call	l678b
  487F    F1                    	pop	af
L052C  4880    21 052C               	ld	hl,l052c	; Set load real
_REAL  4883    FE 09                 	cp	_Real
L66FE  4885    28 0D                 	jr	z,l66fe
L053A  4887    21 053A               	ld	hl,l053a	; Move string to stack
_STRING  488A    FE 08                 	cp	_String
L66FE  488C    28 06                 	jr	z,l66fe
L6734  488E    CD 48CA               	call	l6734
L055D  4891    21 055D               	ld	hl,l055d	; Push set onto stack
L66FE  4894                          l66fe:
L6B86  4894    C3 4D1C               	jp	l6b86		; Set CALL <set>
L6701  4897                          l6701:
L7BBD  4897    3A 5CDA               	ld	a,(l7bbd)
  489A    B7                    	or	a
L671B  489B    20 14                 	jr	nz,l671b
.LD@HL  489D    3E 2A                 	ld	a,.LD@HL
L7BBE  489F    2A 5CDB               	ld	hl,(l7bbe)
L6B94  48A2    CD 4D2A               	call	l6b94
L7B62  48A5    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  48A8    3D                    	dec	a
  48A9    C0                    	ret	nz
L6714  48AA                          l6714:
L6B50  48AA    CD 4CE6               	call	l6b50		; Set LD H,0
@L64  48AD    02                    	db	@L64
$I64  48AE                          $I64:
  48AE    26 00                 	LD	H,0
@L64$I64  0002                          @L64	equ	$-$I64
  48B0    C9                    	ret
L671B  48B1                          l671b:
L678B  48B1    CD 4921               	call	l678b
L7B62  48B4    3A 5C7F               	ld	a,(l7b62)	; Get length of type
  48B7    3D                    	dec	a
L672B  48B8    20 07                 	jr	nz,l672b
L6B50  48BA    CD 4CE6               	call	l6b50		; Set LD L,(HL)
@L65  48BD    01                    	db	@L65
$I65  48BE                          $I65:
  48BE    6E                    	LD	L,(HL)
@L65$I65  0001                          @L65	equ	$-$I65
L6714  48BF    18 E9                 	jr	l6714
L672B  48C1                          l672b:
L6B50  48C1    CD 4CE6               	call	l6b50		; Set sequence
@L66TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-240


  48C4    04                    	db	@L66
$I66  48C5                          $I66:
  48C5    5E                    	LD	E,(HL)
  48C6    23                    	INC	HL
  48C7    56                    	LD	D,(HL)
  48C8    EB                    	EX	DE,HL
@L66$I66  0004                          @L66	equ	$-$I66
  48C9    C9                    	ret
L6734  48CA                          l6734:
L7B5E  48CA    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
L5271  48CD    CD 3407               	call	l5271		; Load name
L7B62  48D0    2A 5C7F               	ld	hl,(l7b62)	; Get length of type
L7B6B  48D3    3A 5C88               	ld	a,(l7b6b)
  48D6    1F                    	rra
  48D7    1F                    	rra
  48D8    1F                    	rra
  48D9    E6 1F                 	and	1fh
  48DB    67                    	ld	h,a
L6B8A  48DC    C3 4D20               	jp	l6b8a
L6749  48DF                          l6749:
L6A0D  48DF    CD 4BA3               	call	l6a0d		; Get constant
L677F  48E2    20 31                 	jr	nz,l677f
  48E4    78                    	ld	a,b
  48E5    FE 08                 	cp	8
L72DA  48E7    CD 53FB               	call	l72da
_ILLCONST  48EA    3C                    	db	_IllConst
  48EB    2E 18                 	ld	l,18h
  48ED    61                    	ld	h,c
L6B97  48EE    CD 4D2D               	call	l6b97
L7B58  48F1    FD 22 5C75            	ld	(l7b58),iy	; Set value
_ARRAY  48F5    3E 01                 	ld	a,_Array
L7B5C  48F7    32 5C79               	ld	(l7b5c),a	; Set ARRAY
L74DB  48FA    21 5600               	ld	hl,l74db+7
L7B5E  48FD    22 5C7B               	ld	(l7b5e),hl	; Set lo set limit
L0000  4900    21 0000               	ld	hl,l0000
L7B60  4903    22 5C7D               	ld	(l7b60),hl	; Reset hi set limit
  4906    69                    	ld	l,c
L7B62  4907    22 5C7F               	ld	(l7b62),hl	; Set length of type
L6B62  490A    CD 4CF8               	call	l6b62		; Store string
.LD.HL  490D    3E 21                 	ld	a,.LD.HL
L7B58  490F    2A 5C75               	ld	hl,(l7b58)	; Get value
L6B94  4912    C3 4D2A               	jp	l6b94
L677F  4915                          l677f:
L6787  4915    CD 491D               	call	l6787
  4918    C8                    	ret	z
L72E1  4919    CD 5402               	call	l72e1
_UNDEF  491C    29                    	db	_Undef
L6787  491D                          l6787:
L67B2  491D    CD 4948               	call	l67b2
  4920    C0                    	ret	nz
L678B  4921                          l678b:
L7BBD  4921    3A 5CDA               	ld	a,(l7bbd)
L7BBE  4924    2A 5CDB               	ld	hl,(l7bbe)
  4927    CB 4F                 	bit	1,a
L67A2  4929    20 0D                 	jr	nz,l67a2
  492B    CB 47                 	bit	0,a
.LD.HLTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-241


  492D    3E 21                 	ld	a,.LD.HL
L679D  492F    28 02                 	jr	z,l679d
.LD@HL  4931    3E 2A                 	ld	a,.LD@HL
L679D  4933                          l679d:
L6B94  4933    CD 4D2A               	call	l6b94
L67B0  4936    18 0E                 	jr	l67b0
L67A2  4938                          l67a2:
  4938    CB 47                 	bit	0,a
L67B0  493A    20 0A                 	jr	nz,l67b0
.LD.DE  493C    3E 11                 	ld	a,.LD.DE
L6B94  493E    CD 4D2A               	call	l6b94
L6B50  4941    CD 4CE6               	call	l6b50		; Set ADD HL,DE
@L67  4944    01                    	db	@L67
$I67  4945                          $I67:
  4945    19                    	ADD	HL,DE
@L67$I67  0001                          @L67	equ	$-$I67
L67B0  4946                          l67b0:
  4946    AF                    	xor	a
  4947    C9                    	ret
L67B2  4948                          l67b2:
L680C  4948    CD 49A2               	call	l680c
L67D9  494B    28 22                 	jr	z,l67d9
  494D    01 0400               	ld	bc,256*4+0
L6E54  4950    CD 4FA8               	call	l6e54
L67ED  4953    20 2E                 	jr	nz,l67ed
L5276  4955    CD 340C               	call	l5276
L7B57  4958    3A 5C74               	ld	a,(l7b57)
  495B    B7                    	or	a
  495C    3E 21                 	ld	a,'!'
  495E    06 00                 	ld	b,0
L67CF  4960    28 03                 	jr	z,l67cf
  4962    3E 2A                 	ld	a,'*'
  4964    04                    	inc	b
L67CF  4965                          l67cf:
L7BBD  4965    21 5CDA               	ld	hl,l7bbd
  4968    70                    	ld	(hl),b
L7B58  4969    2A 5C75               	ld	hl,(l7b58)	; Get value
L7BBE  496C    22 5CDB               	ld	(l7bbe),hl
L67D9  496F                          l67d9:
L683A  496F    CD 49D0               	call	l683a
L67D9  4972    28 FB                 	jr	z,l67d9
L6931  4974    CD 4AC7               	call	l6931
L67D9  4977    28 F6                 	jr	z,l67d9
L6974  4979    CD 4B0A               	call	l6974
L67D9  497C    28 F1                 	jr	z,l67d9
L699F  497E    CD 4B35               	call	l699f
  4981    AF                    	xor	a
  4982    C9                    	ret
L67ED  4983                          l67ed:
L6E76  4983    CD 4FCA               	call	l6e76		; Find MEM
L78FA  4986    5A18                  	dw	l78fa
  4988    C0                    	ret	nz		; Nope
L65D5  4989    CD 476B               	call	l65d5
_INTEG  498C    3E 0A                 	ld	a,_Integ
L7B5C  498E    32 5C79               	ld	(l7b5c),a	; Set INTEGER
L0001  4991    21 0001               	ld	hl,l0001
L7B62TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-242


  4994    22 5C7F               	ld	(l7b62),hl	; Set length of type
  4997    2D                    	dec	l
L7B5E  4998    22 5C7B               	ld	(l7b5e),hl	; Set lo set limit
  499B    2D                    	dec	l
L7B60  499C    22 5C7D               	ld	(l7b60),hl	; Set hi set limit
L6903  499F    C3 4A99               	jp	l6903
L680C  49A2                          l680c:
L7BC9  49A2    3A 5CE6               	ld	a,(l7bc9)
  49A5    47                    	ld	b,a
L6810  49A6                          l6810:
  49A6    05                    	dec	b
  49A7    F8                    	ret	m
  49A8    C5                    	push	bc
  49A9    58                    	ld	e,b
  49AA    16 00                 	ld	d,0
L7BCC  49AC    21 5CE9               	ld	hl,l7bcc
  49AF    19                    	add	hl,de
  49B0    7E                    	ld	a,(hl)
  49B1    4F                    	ld	c,a
  49B2    06 04                 	ld	b,4
L6E54  49B4    CD 4FA8               	call	l6e54
  49B7    C1                    	pop	bc
L6810  49B8    20 EC                 	jr	nz,l6810
  49BA    E5                    	push	hl
  49BB    78                    	ld	a,b
  49BC    87                    	add	a,a
  49BD    5F                    	ld	e,a
  49BE    16 00                 	ld	d,0
L7BCA  49C0    2A 5CE7               	ld	hl,(l7bca)
  49C3    19                    	add	hl,de
L7BBE  49C4    22 5CDB               	ld	(l7bbe),hl
L7BBD  49C7    21 5CDA               	ld	hl,l7bbd
  49CA    36 01                 	ld	(hl),1
  49CC    E1                    	pop	hl
L6948  49CD    C3 4ADE               	jp	l6948
L683A  49D0                          l683a:
L7B5C  49D0    3A 5C79               	ld	a,(l7b5c)	; Get type
_ARRAY  49D3    FE 01                 	cp	_Array
  49D5    C0                    	ret	nz
L6EE0  49D6    CD 5034               	call	l6ee0
  49D9    C0                    	ret	nz
L678B  49DA    CD 4921               	call	l678b
L6847  49DD                          l6847:
L6B6F  49DD    CD 4D05               	call	l6b6f		; Set PUSH HL
L5E84  49E0    CD 401A               	call	l5e84
L7B60  49E3    2A 5C7D               	ld	hl,(l7b60)	; Get hi set limit
L5271  49E6    CD 3407               	call	l5271		; Load name
L7B69  49E9    3A 5C86               	ld	a,(l7b69)
  49EC    B8                    	cp	b
L72DA  49ED    CD 53FB               	call	l72da
_INVTYPE  49F0    2C                    	db	_InvType
L7B6B  49F1    2A 5C88               	ld	hl,(l7b6b)
  49F4    7C                    	ld	a,h
  49F5    B7                    	or	a
L6874  49F6    20 12                 	jr	nz,l6874
  49F8    7D                    	ld	a,l
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-243


  49F9    FE 04                 	cp	4
L6888  49FB    30 21                 	jr	nc,l6888
L6867  49FD                          l6867:
  49FD    B7                    	or	a
L6893  49FE    28 29                 	jr	z,l6893
  4A00    F5                    	push	af
L6B50  4A01    CD 4CE6               	call	l6b50		; Set DEC HL
@L68  4A04    01                    	db	@L68
$I68  4A05                          $I68:
  4A05    2B                    	DEC	HL
@L68$I68  0001                          @L68	equ	$-$I68
  4A06    F1                    	pop	af
  4A07    3D                    	dec	a
L6867  4A08    18 F3                 	jr	l6867
L6874  4A0A                          l6874:
  4A0A    3C                    	inc	a
L6888  4A0B    20 11                 	jr	nz,l6888
  4A0D    7D                    	ld	a,l
  4A0E    FE FD                 	cp	0fdh
L6888  4A10    38 0C                 	jr	c,l6888
L687C  4A12                          l687c:
  4A12    F5                    	push	af
L6B50  4A13    CD 4CE6               	call	l6b50		; Set INC HL
@L69  4A16    01                    	db	@L69
$I69  4A17                          $I69:
  4A17    23                    	INC	HL
@L69$I69  0001                          @L69	equ	$-$I69
  4A18    F1                    	pop	af
  4A19    3C                    	inc	a
L687C  4A1A    20 F6                 	jr	nz,l687c
L6893  4A1C    18 0B                 	jr	l6893
L6888  4A1E                          l6888:
L6A30  4A1E    CD 4BC6               	call	l6a30
L6B8E  4A21    CD 4D24               	call	l6b8e		; Set LD DE,val16
L6B50  4A24    CD 4CE6               	call	l6b50		; Set ADD HL,DE
@L70  4A27    01                    	db	@L70
$I70  4A28                          $I70:
  4A28    19                    	ADD	HL,DE
@L70$I70  0001                          @L70	equ	$-$I70
L6893  4A29                          l6893:
L7B9E  4A29    3A 5CBB               	ld	a,(l7b9e)	; Get local options
.ROPT  4A2C    CB 4F                 	bit	.Ropt,a		; Test $R+
L68AE  4A2E    28 14                 	jr	z,l68ae
L7B6D  4A30    2A 5C8A               	ld	hl,(l7b6d)	; Get last memory address
L7B6B  4A33    ED 5B 5C88            	ld	de,(l7b6b)
  4A37    B7                    	or	a
  4A38    ED 52                 	sbc	hl,de
  4A3A    23                    	inc	hl
L6B8E  4A3B    CD 4D24               	call	l6b8e		; Set LD DE,val16
L064C  4A3E    21 064C               	ld	hl,l064c
L6B86  4A41    CD 4D1C               	call	l6b86		; Index check on compiler directive {$R+}
L68AE  4A44                          l68ae:
L7B5E  4A44    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
L5287  4A47    CD 341D               	call	l5287		; Get name
L7B62  4A4A    2A 5C7F               	ld	hl,(l7b62)	; Get length of type
  4A4D    7C                    	ld	a,h
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-244


  4A4E    B7                    	or	a
L68D8  4A4F    20 1D                 	jr	nz,l68d8
  4A51    7D                    	ld	a,l
  4A52    3D                    	dec	a
L68ED  4A53    28 2E                 	jr	z,l68ed
  4A55    3D                    	dec	a
L68C9  4A56    20 07                 	jr	nz,l68c9
L6B50  4A58    CD 4CE6               	call	l6b50		; Set ADD HL,HL
@L71  4A5B    01                    	db	@L71
$I71  4A5C                          $I71:
  4A5C    29                    	ADD	HL,HL
@L71$I71  0001                          @L71	equ	$-$I71
L68ED  4A5D    18 24                 	jr	l68ed
L68C9  4A5F                          l68c9:
  4A5F    FE 04                 	cp	4
L68D8  4A61    20 0B                 	jr	nz,l68d8
L6B50  4A63    CD 4CE6               	call	l6b50		; Set sequence
@L72  4A66    05                    	db	@L72
$I72  4A67                          $I72:
  4A67    29                    	ADD	HL,HL
  4A68    5D                    	LD	E,L
  4A69    54                    	LD	D,H
  4A6A    29                    	ADD	HL,HL
  4A6B    19                    	ADD	HL,DE
@L72$I72  0005                          @L72	equ	$-$I72
L68ED  4A6C    18 15                 	jr	l68ed
L68D8  4A6E                          l68d8:
L7B9E  4A6E    3A 5CBB               	ld	a,(l7b9e)	; Get local options
.XOPT  4A71    CB 67                 	bit	.Xopt,a		; Test $X+
L68EA  4A73    20 0B                 	jr	nz,l68ea	; Yeap
L6B8E  4A75    CD 4D24               	call	l6b8e		; Set LD DE,val16
L06F5  4A78    21 06F5               	ld	hl,l06f5	; Set integer multiply
L6B86  4A7B    CD 4D1C               	call	l6b86
L68ED  4A7E    18 03                 	jr	l68ed
L68EA  4A80                          l68ea:
L690A  4A80    CD 4AA0               	call	l690a
L68ED  4A83                          l68ed:
L6B50  4A83    CD 4CE6               	call	l6b50		; Set sequence
@L73  4A86    02                    	db	@L73
$I73  4A87                          $I73:
  4A87    D1                    	POP	DE
  4A88    19                    	ADD	HL,DE
@L73$I73  0002                          @L73	equ	$-$I73
L7B5C  4A89    3A 5C79               	ld	a,(l7b5c)	; Get type
_ARRAY  4A8C    FE 01                 	cp	_Array
L6900  4A8E    20 06                 	jr	nz,l6900
L6F13  4A90    CD 5067               	call	l6f13		; Test ,
L6847  4A93    CA 49DD               	jp	z,l6847		; Yeap
L6900  4A96                          l6900:
L6F38  4A96    CD 508C               	call	l6f38		; Verify ]
L6903  4A99                          l6903:
  4A99    3E 03                 	ld	a,3
L7BBD  4A9B    32 5CDA               	ld	(l7bbd),a
  4A9E    AF                    	xor	a
  4A9F    C9                    	ret
L690A  4AA0                          l690a:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-245


  4AA0    06 01                 	ld	b,1
L690C  4AA2                          l690c:
  4AA2    7C                    	ld	a,h
  4AA3    B7                    	or	a
L6914  4AA4    20 04                 	jr	nz,l6914
  4AA6    7D                    	ld	a,l
  4AA7    3D                    	dec	a
L6927  4AA8    28 13                 	jr	z,l6927
L6914  4AAA                          l6914:
  4AAA    CB 45                 	bit	0,l
L691C  4AAC    28 04                 	jr	z,l691c
L6B6F  4AAE    CD 4D05               	call	l6b6f		; Set PUSH HL
  4AB1    04                    	inc	b
L691C  4AB2                          l691c:
L6B50  4AB2    CD 4CE6               	call	l6b50		; Set ADD HL,HL
@L74  4AB5    01                    	db	@L74
$I74  4AB6                          $I74:
  4AB6    29                    	ADD	HL,HL
@L74$I74  0001                          @L74	equ	$-$I74
  4AB7    CB 3C                 	srl	h
  4AB9    CB 1D                 	rr	l
L690C  4ABB    18 E5                 	jr	l690c
L6927  4ABD                          l6927:
  4ABD    05                    	dec	b
  4ABE    C8                    	ret	z
L6B50  4ABF    CD 4CE6               	call	l6b50		; Set sequence
@L75  4AC2    02                    	db	@L75
$I75  4AC3                          $I75:
  4AC3    D1                    	POP	DE
  4AC4    19                    	ADD	HL,DE
@L75$I75  0002                          @L75	equ	$-$I75
L6927  4AC5    18 F6                 	jr	l6927
L6931  4AC7                          l6931:
L7B5C  4AC7    3A 5C79               	ld	a,(l7b5c)	; Get type
_RECORD  4ACA    FE 02                 	cp	_Record
  4ACC    C0                    	ret	nz
L6F17  4ACD    CD 506B               	call	l6f17
  4AD0    C0                    	ret	nz
L7B5D  4AD1    3A 5C7A               	ld	a,(l7b5d)
  4AD4    4F                    	ld	c,a
  4AD5    06 04                 	ld	b,4
L6E54  4AD7    CD 4FA8               	call	l6e54
L72DA  4ADA    CD 53FB               	call	l72da
_UNDEF  4ADD    29                    	db	_Undef
L6948  4ADE                          l6948:
L5276  4ADE    CD 340C               	call	l5276
L7B58  4AE1    2A 5C75               	ld	hl,(l7b58)	; Get value
  4AE4    7C                    	ld	a,h
  4AE5    B5                    	or	l
  4AE6    C8                    	ret	z
L7BBD  4AE7    21 5CDA               	ld	hl,l7bbd
  4AEA    CB 46                 	bit	0,(hl)
L6967  4AEC    28 0F                 	jr	z,l6967
  4AEE    E5                    	push	hl
L678B  4AEF    CD 4921               	call	l678b
  4AF2    E1                    	pop	hl
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-246


  4AF3    36 02                 	ld	(hl),2
L7B58  4AF5    2A 5C75               	ld	hl,(l7b58)	; Get value
L7BBE  4AF8    22 5CDB               	ld	(l7bbe),hl
  4AFB    AF                    	xor	a
  4AFC    C9                    	ret
L6967  4AFD                          l6967:
L7BBE  4AFD    2A 5CDB               	ld	hl,(l7bbe)
L7B58  4B00    ED 5B 5C75            	ld	de,(l7b58)	; Get value
  4B04    19                    	add	hl,de
L7BBE  4B05    22 5CDB               	ld	(l7bbe),hl
  4B08    AF                    	xor	a
  4B09    C9                    	ret
L6974  4B0A                          l6974:
L7B5C  4B0A    3A 5C79               	ld	a,(l7b5c)	; Get type
_PTR  4B0D    FE 04                 	cp	_Ptr
  4B0F    C0                    	ret	nz
L6F27  4B10    CD 507B               	call	l6f27
  4B13    C0                    	ret	nz
L7BBD  4B14    21 5CDA               	ld	hl,l7bbd
  4B17    7E                    	ld	a,(hl)
  4B18    B7                    	or	a
L6988  4B19    20 03                 	jr	nz,l6988
  4B1B    34                    	inc	(hl)
L6997  4B1C    18 0F                 	jr	l6997
L6988  4B1E                          l6988:
  4B1E    E5                    	push	hl
L678B  4B1F    CD 4921               	call	l678b
  4B22    E1                    	pop	hl
  4B23    36 03                 	ld	(hl),3
L6B50  4B25    CD 4CE6               	call	l6b50		; Set sequence
@L76  4B28    04                    	db	@L76
$I76  4B29                          $I76:
  4B29    5E                    	LD	E,(HL)
  4B2A    23                    	INC	HL
  4B2B    56                    	LD	D,(HL)
  4B2C    EB                    	EX	DE,HL
@L76$I76  0004                          @L76	equ	$-$I76
L6997  4B2D                          l6997:
L7B5E  4B2D    2A 5C7B               	ld	hl,(l7b5e)	; Get lo set limit
L5287  4B30    CD 341D               	call	l5287		; Get name
  4B33    AF                    	xor	a
  4B34    C9                    	ret
L699F  4B35                          l699f:
L7B5C  4B35    3A 5C79               	ld	a,(l7b5c)	; Get type
_STRING  4B38    FE 08                 	cp	_String
  4B3A    C0                    	ret	nz
L6EE0  4B3B    CD 5034               	call	l6ee0
  4B3E    C0                    	ret	nz
L678B  4B3F    CD 4921               	call	l678b
L6B6F  4B42    CD 4D05               	call	l6b6f		; Set PUSH HL
L7B62  4B45    2A 5C7F               	ld	hl,(l7b62)	; Get length of type
  4B48    E5                    	push	hl
L5E97  4B49    CD 402D               	call	l5e97
  4B4C    E1                    	pop	hl
L7B9E  4B4D    3A 5CBB               	ld	a,(l7b9e)	; Get local options
.ROPT  4B50    CB 4F                 	bit	.Ropt,a		; Test $R+
L69C7TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-247


  4B52    28 09                 	jr	z,l69c7		; Nope
L6B8E  4B54    CD 4D24               	call	l6b8e		; Set LD DE,val16
L064C  4B57    21 064C               	ld	hl,l064c
L6B86  4B5A    CD 4D1C               	call	l6b86		; Index check on compiler directive {$R+}
L69C7  4B5D                          l69c7:
L6B50  4B5D    CD 4CE6               	call	l6b50		; Set sequence
@L77  4B60    02                    	db	@L77
$I77  4B61                          $I77:
  4B61    D1                    	POP	DE
  4B62    19                    	ADD	HL,DE
@L77$I77  0002                          @L77	equ	$-$I77
L6F38  4B63    CD 508C               	call	l6f38		; Verify ]
_CHAR  4B66    3E 0C                 	ld	a,_Char
L7B5C  4B68    32 5C79               	ld	(l7b5c),a	; Set CHAR
L0001  4B6B    21 0001               	ld	hl,l0001
L7B62  4B6E    22 5C7F               	ld	(l7b62),hl	; Set length of type
  4B71    2B                    	dec	hl
L7B5E  4B72    22 5C7B               	ld	(l7b5e),hl	; Set lo set limit
  4B75    2D                    	dec	l
L7B60  4B76    22 5C7D               	ld	(l7b60),hl	; Set hi set limit
  4B79    3E 03                 	ld	a,3
L7BBD  4B7B    32 5CDA               	ld	(l7bbd),a
  4B7E    AF                    	xor	a
  4B7F    C9                    	ret
                                ;
                                ; Get constant
                                ;
L69EA  4B80                          l69ea:
L6A0D  4B80    CD 4BA3               	call	l6a0d		; Get constant
  4B83    C8                    	ret	z
L72E1  4B84    CD 5402               	call	l72e1
_UNDEF  4B87    29                    	db	_Undef
                                ;
                                ; Get integer constant
                                ;
L69F2  4B88                          l69f2:
L69EA  4B88    CD 4B80               	call	l69ea		; Get constant
  4B8B    78                    	ld	a,b
  4B8C    FE 0A                 	cp	0ah
  4B8E    C8                    	ret	z
L72E1  4B8F    CD 5402               	call	l72e1
_INTCONST  4B92    16                    	db	_IntConst
                                ;
                                ; Get string constant
                                ;
L69FD  4B93                          l69fd:
L69EA  4B93    CD 4B80               	call	l69ea		; Get constant
  4B96    78                    	ld	a,b
  4B97    FE 08                 	cp	8
  4B99    C8                    	ret	z
  4B9A    FE 0C                 	cp	0ch
L72DA  4B9C    CD 53FB               	call	l72da
_STRGCONEXP  4B9F    20                    	db	_StrgConExp
  4BA0    06 08                 	ld	b,8
  4BA2    C9                    	ret
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-248


                                ; Get constant
                                ;
L6A0D  4BA3                          l6a0d:
L6A39  4BA3    CD 4BCF               	call	l6a39
  4BA6    D5                    	push	de
L6A5C  4BA7    CD 4BF2               	call	l6a5c
  4BAA    D1                    	pop	de
L6A1F  4BAB    28 08                 	jr	z,l6a1f
  4BAD    1C                    	inc	e
  4BAE    1D                    	dec	e
L72DA  4BAF    CD 53FB               	call	l72da
_INTREALCEXP  4BB2    19                    	db	_IntRealCexp
  4BB3    1D                    	dec	e
  4BB4    C9                    	ret
L6A1F  4BB5                          l6a1f:
L6A4A  4BB5    CD 4BE0               	call	l6a4a
  4BB8    C8                    	ret	z
  4BB9    78                    	ld	a,b
  4BBA    FE 09                 	cp	9
L6A30  4BBC    20 08                 	jr	nz,l6a30
  4BBE    D9                    	exx
  4BBF    78                    	ld	a,b
  4BC0    EE 80                 	xor	80h
  4BC2    47                    	ld	b,a
  4BC3    D9                    	exx
  4BC4    AF                    	xor	a
  4BC5    C9                    	ret
L6A30  4BC6                          l6a30:
  4BC6    7C                    	ld	a,h
  4BC7    2F                    	cpl
  4BC8    67                    	ld	h,a
  4BC9    7D                    	ld	a,l
  4BCA    2F                    	cpl
  4BCB    6F                    	ld	l,a
  4BCC    23                    	inc	hl
  4BCD    AF                    	xor	a
  4BCE    C9                    	ret
L6A39  4BCF                          l6a39:
  4BCF    1E FF                 	ld	e,0ffh
  4BD1    DD 7E 00              	ld	a,(ix+0)
  4BD4    FE 2D                 	cp	'-'
L6A47  4BD6    28 05                 	jr	z,l6a47
  4BD8    1C                    	inc	e
  4BD9    FE 2B                 	cp	'+'
  4BDB    C0                    	ret	nz
  4BDC    1C                    	inc	e
L6A47  4BDD                          l6a47:
L6F92  4BDD    C3 50E6               	jp	l6f92		; Process line
L6A4A  4BE0                          l6a4a:
  4BE0    1C                    	inc	e
  4BE1    1D                    	dec	e
  4BE2    C8                    	ret	z
  4BE3    78                    	ld	a,b
  4BE4    FE 0A                 	cp	0ah
L6A56  4BE6    28 04                 	jr	z,l6a56
  4BE8    FE 09                 	cp	9
L6A58TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-249


  4BEA    20 02                 	jr	nz,l6a58
L6A56  4BEC                          l6a56:
  4BEC    1D                    	dec	e
  4BED    C9                    	ret
L6A58  4BEE                          l6a58:
L72E1  4BEE    CD 5402               	call	l72e1
_INTREALCEXP  4BF1    19                    	db	_IntRealCexp
L6A5C  4BF2                          l6a5c:
L6A99  4BF2    CD 4C2F               	call	l6a99		; Sample constant
  4BF5    C8                    	ret	z		; Got one
  4BF6    01 0200               	ld	bc,256*2+0
L6E54  4BF9    CD 4FA8               	call	l6e54
  4BFC    C0                    	ret	nz
  4BFD    46                    	ld	b,(hl)
  4BFE    78                    	ld	a,b
  4BFF    2B                    	dec	hl
  4C00    FE 0A                 	cp	0ah
L6A74  4C02    38 06                 	jr	c,l6a74
  4C04    56                    	ld	d,(hl)
  4C05    2B                    	dec	hl
  4C06    5E                    	ld	e,(hl)
  4C07    EB                    	ex	de,hl
  4C08    AF                    	xor	a
  4C09    C9                    	ret
L6A74  4C0A                          l6a74:
  4C0A    FE 09                 	cp	9
L6A88  4C0C    20 10                 	jr	nz,l6a88
  4C0E    C5                    	push	bc
  4C0F    46                    	ld	b,(hl)
  4C10    2B                    	dec	hl
  4C11    4E                    	ld	c,(hl)
  4C12    2B                    	dec	hl
  4C13    56                    	ld	d,(hl)
  4C14    2B                    	dec	hl
  4C15    5E                    	ld	e,(hl)
  4C16    2B                    	dec	hl
  4C17    7E                    	ld	a,(hl)
  4C18    2B                    	dec	hl
  4C19    6E                    	ld	l,(hl)
  4C1A    67                    	ld	h,a
  4C1B    D9                    	exx
  4C1C    C1                    	pop	bc
  4C1D    C9                    	ret
L6A88  4C1E                          l6a88:
  4C1E    4E                    	ld	c,(hl)
L7A57  4C1F    11 5B74               	ld	de,l7a57
  4C22    C5                    	push	bc
  4C23    0C                    	inc	c
L6A8E  4C24                          l6a8e:
  4C24    0D                    	dec	c
L6A97  4C25    28 06                 	jr	z,l6a97
  4C27    2B                    	dec	hl
  4C28    7E                    	ld	a,(hl)
  4C29    12                    	ld	(de),a
  4C2A    13                    	inc	de
L6A8E  4C2B    18 F7                 	jr	l6a8e
L6A97TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-250


  4C2D                          l6a97:
  4C2D    C1                    	pop	bc
  4C2E    C9                    	ret
                                ;
                                ; Sample constant - Z set indicates constant
                                ;
                                ; Reg B holds type of constant
                                ; Reg C holds length of constant
                                ;
L6A99  4C2F                          l6a99:
  4C2F    DD 7E 00              	ld	a,(ix+0)	; Get character
  4C32    FE 27                 	cp	''''		; Test string
L6AA8  4C34    28 08                 	jr	z,l6aa8
  4C36    FE 5E                 	cp	'^'		; Test control character prefix
L6AA8  4C38    28 04                 	jr	z,l6aa8
  4C3A    FE 23                 	cp	'#'		; Test character prefix
L6B0E  4C3C    20 66                 	jr	nz,l6b0e
L6AA8  4C3E                          l6aa8:
L7A57  4C3E    21 5B74               	ld	hl,l7a57	; Init parameter buffer
  4C41    0E 00                 	ld	c,0		; Init length
L6AAD  4C43                          l6aad:
  4C43    DD 7E 00              	ld	a,(ix+0)
  4C46    FE 5E                 	cp	'^'		; Test control character prefix
L6AD8  4C48    28 24                 	jr	z,l6ad8
  4C4A    FE 23                 	cp	'#'		; Test character prefix
L6AEE  4C4C    28 36                 	jr	z,l6aee
  4C4E    FE 27                 	cp	''''		; Test string
L6AFE  4C50    20 42                 	jr	nz,l6afe
L6ABC  4C52                          l6abc:
  4C52    DD 23                 	inc	ix
  4C54    DD 7E 00              	ld	a,(ix+0)
  4C57    B7                    	or	a
L72D4  4C58    CD 53F5               	call	l72d4
_STRCONLONG  4C5B    37                    	db	_StrConLong
  4C5C    FE 27                 	cp	''''
L6AD3  4C5E    20 09                 	jr	nz,l6ad3
  4C60    DD 23                 	inc	ix
  4C62    DD 7E 00              	ld	a,(ix+0)
  4C65    FE 27                 	cp	''''
L6AAD  4C67    20 DA                 	jr	nz,l6aad
L6AD3  4C69                          l6ad3:
  4C69    77                    	ld	(hl),a
  4C6A    23                    	inc	hl
  4C6B    0C                    	inc	c
L6ABC  4C6C    18 E4                 	jr	l6abc
L6AD8  4C6E                          l6ad8:
  4C6E    DD 23                 	inc	ix
  4C70    DD 7E 00              	ld	a,(ix+0)
L04A6  4C73    CD 04A6               	call	l04a6		; Convert to upper case
  4C76    B7                    	or	a
L72D4  4C77    CD 53F5               	call	l72d4
_STRCONLONG  4C7A    37                    	db	_StrConLong
  4C7B    EE 40                 	xor	'@'
  4C7D    DD 23                 	inc	ix
L6AE9  4C7F                          l6ae9:
  4C7F    77                    	ld	(hl),a
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-251


  4C80    23                    	inc	hl
  4C81    0C                    	inc	c
L6AAD  4C82    18 BF                 	jr	l6aad
L6AEE  4C84                          l6aee:
  4C84    DD 23                 	inc	ix
  4C86    C5                    	push	bc
  4C87    E5                    	push	hl
L07F7  4C88    CD 07F7               	call	l07f7		; Convert ASCII to integer
  4C8B    7D                    	ld	a,l
  4C8C    E1                    	pop	hl
  4C8D    C1                    	pop	bc
L72C8  4C8E    CD 53EF               	call	l72c8
_INTEGERR  4C91    38                    	db	_IntegErr
L6AE9  4C92    18 EB                 	jr	l6ae9
L6AFE  4C94                          l6afe:
  4C94    06 08                 	ld	b,8
  4C96    79                    	ld	a,c
  4C97    3D                    	dec	a
L6B0B  4C98    20 07                 	jr	nz,l6b0b
  4C9A    67                    	ld	h,a
L7A57  4C9B    3A 5B74               	ld	a,(l7a57)
  4C9E    6F                    	ld	l,a
  4C9F    06 0C                 	ld	b,0ch
L6B0B  4CA1                          l6b0b:
L6F95  4CA1    C3 50E9               	jp	l6f95		; Process line
L6B0E  4CA4                          l6b0e:
  4CA4    FE 24                 	cp	'$'
L6B45  4CA6    28 33                 	jr	z,l6b45
L7286  4CA8    CD 53C7               	call	l7286		; Test digit
L6B1A  4CAB    30 03                 	jr	nc,l6b1a
  4CAD    AF                    	xor	a
  4CAE    3D                    	dec	a
  4CAF    C9                    	ret
L6B1A  4CB0                          l6b1a:
  4CB0    DD E5                 	push	ix
  4CB2    D1                    	pop	de
L6B1D  4CB3                          l6b1d:
  4CB3    13                    	inc	de
  4CB4    1A                    	ld	a,(de)
L7286  4CB5    CD 53C7               	call	l7286		; Test digit
L6B1D  4CB8    30 F9                 	jr	nc,l6b1d
L04A6  4CBA    CD 04A6               	call	l04a6		; Convert to upper case
  4CBD    FE 45                 	cp	'E'
L6B39  4CBF    28 0E                 	jr	z,l6b39
  4CC1    FE 2E                 	cp	'.'
L6B45  4CC3    20 16                 	jr	nz,l6b45
  4CC5    13                    	inc	de
  4CC6    1A                    	ld	a,(de)
  4CC7    FE 2E                 	cp	'.'
L6B45  4CC9    28 10                 	jr	z,l6b45
  4CCB    FE 29                 	cp	')'
L6B45  4CCD    28 0C                 	jr	z,l6b45
L6B39  4CCF                          l6b39:
L11A3  4CCF    CD 11A3               	call	l11a3
L72C8  4CD2    CD 53EF               	call	l72c8
_REALERR  4CD5    39                    	db	_RealErr
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-252


  4CD6    D9                    	exx
  4CD7    06 09                 	ld	b,9
L6B0B  4CD9    18 C6                 	jr	l6b0b
L6B45  4CDB                          l6b45:
L07F7  4CDB    CD 07F7               	call	l07f7		; Convert ASCII to integer
L72C8  4CDE    CD 53EF               	call	l72c8
_INTEGERR  4CE1    38                    	db	_IntegErr
  4CE2    06 0A                 	ld	b,0ah
L6B0B  4CE4    18 BB                 	jr	l6b0b
                                ;
                                ; Transfer immediate opcodes
                                ; Sequence starts with length
                                ;
L6B50  4CE6                          l6b50:
  4CE6    E3                    	ex	(sp),hl
  4CE7    C5                    	push	bc
  4CE8    46                    	ld	b,(hl)		; Get length
  4CE9    23                    	inc	hl
L6B54  4CEA                          l6b54:
  4CEA    7E                    	ld	a,(hl)		; Get byte
L6B9C  4CEB    CD 4D32               	call	l6b9c		; Store it
  4CEE    23                    	inc	hl
L6B54  4CEF    10 F9                 	djnz	l6b54
  4CF1    C1                    	pop	bc
  4CF2    E3                    	ex	(sp),hl
  4CF3    C9                    	ret
L6B5E  4CF4                          l6b5e:
  4CF4    79                    	ld	a,c		; Get byte
L6B9C  4CF5    CD 4D32               	call	l6b9c		; Store it
                                ;
                                ; Store string
                                ;
L6B62  4CF8                          l6b62:
L7A57  4CF8    21 5B74               	ld	hl,l7a57
  4CFB    0C                    	inc	c
L6B66  4CFC                          l6b66:
  4CFC    0D                    	dec	c
  4CFD    C8                    	ret	z
  4CFE    7E                    	ld	a,(hl)		; Get character
  4CFF    23                    	inc	hl
L6B9C  4D00    CD 4D32               	call	l6b9c		; Store it
L6B66  4D03    18 F7                 	jr	l6b66
                                ;
                                ; Set PUSH HL
                                ;
L6B6F  4D05                          l6b6f:
.PUSH.HL  4D05    3E E5                 	ld	a,.PUSH.HL
L6B9C  4D07    18 29                 	jr	l6b9c
                                ;
                                ; Set POP HL
                                ;
L6B73  4D09                          l6b73:
.POP.HL  4D09    3E E1                 	ld	a,.POP.HL
L6B9C  4D0B    18 25                 	jr	l6b9c
                                ;
                                ; Set JP
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-253


                                ;
L6B77  4D0D                          l6b77:
.JP  4D0D    3E C3                 	ld	a,.JP
L6B9C  4D0F    18 21                 	jr	l6b9c
                                ;
                                ; Set word in reg DE
                                ;
L6B7B  4D11                          l6b7b:
  4D11    7B                    	ld	a,e
L6B9C  4D12    CD 4D32               	call	l6b9c
  4D15    7A                    	ld	a,d
L6B9C  4D16    18 1A                 	jr	l6b9c
                                ;
                                ; Set JP WORD
                                ;
L6B82  4D18                          l6b82:
.JP  4D18    3E C3                 	ld	a,.JP
L6B94  4D1A    18 0E                 	jr	l6b94
                                ;
                                ; Set CALL WORD
                                ;
L6B86  4D1C                          l6b86:
.CALL  4D1C    3E CD                 	ld	a,.CALL
L6B94  4D1E    18 0A                 	jr	l6b94
                                ;
                                ; Set LD BC,WORD
                                ;
L6B8A  4D20                          l6b8a:
.LD.BC  4D20    3E 01                 	ld	a,.LD.BC
L6B94  4D22    18 06                 	jr	l6b94
                                ;
                                ; Set LD DE,WORD
                                ;
L6B8E  4D24                          l6b8e:
.LD.DE  4D24    3E 11                 	ld	a,.LD.DE
L6B94  4D26    18 02                 	jr	l6b94
                                ;
                                ; Set LD HL,WORD
                                ;
L6B92  4D28                          l6b92:
.LD.HL  4D28    3E 21                 	ld	a,.LD.HL
                                ;
                                ; Insert opcodes in Accu, reg L and reg H
                                ;
L6B94  4D2A                          l6b94:
L6B9C  4D2A    CD 4D32               	call	l6b9c
                                ;
                                ; Insert word in reg HL
                                ;
L6B97  4D2D                          l6b97:
  4D2D    7D                    	ld	a,l
L6B9C  4D2E    CD 4D32               	call	l6b9c
  4D31    7C                    	ld	a,h
                                ;
                                ; Insert byte in Accu
                                ;
L6B9CTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-254


  4D32                          l6b9c:
  4D32    C5                    	push	bc
  4D33    47                    	ld	b,a
  4D34    FD 23                 	inc	iy
  4D36    E5                    	push	hl
  4D37    D5                    	push	de
L6C02  4D38    CD 4D6C               	call	l6c02		; Put byte to file
  4D3B    D1                    	pop	de
  4D3C    E1                    	pop	hl
  4D3D    C1                    	pop	bc
                                ;
                                ; Check enough memory
                                ;
L6BC7  4D3E                          l6bc7:
  4D3E    E5                    	push	hl
  4D3F    D5                    	push	de
  4D40    FD E5                 	push	iy
  4D42    D1                    	pop	de
L7BE1  4D43    ED 5B 5CFE            	ld	de,(l7be1)	; Get top of .COM file
L790E  4D47    3A 5A2B               	ld	a,(l790e)	; Test memory read
  4D4A    B7                    	or	a
L6BE7  4D4B    28 04                 	jr	z,l6be7		; Yeap
L7BE6  4D4D    ED 5B 5D03            	ld	de,(l7be6)
L6BE7  4D51                          l6be7:
L7B73  4D51    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  4D54    37                    	scf
  4D55    ED 52                 	sbc	hl,de
L72C8  4D57    CD 53EF               	call	l72c8
_COMPOVFL  4D5A    63                    	db	_CompOvfl
  4D5B    FD E5                 	push	iy
  4D5D    D1                    	pop	de
L7908  4D5E    2A 5A25               	ld	hl,(l7908)	; Get start of data
  4D61    25                    	dec	h
  4D62    25                    	dec	h
  4D63    ED 52                 	sbc	hl,de
L72C8  4D65    CD 53EF               	call	l72c8
_MEMOVFL  4D68    62                    	db	_MemOvfl
  4D69    D1                    	pop	de
  4D6A    E1                    	pop	hl
  4D6B    C9                    	ret
                                ;
                                ; Put byte in reg B to file
                                ;
L6C02  4D6C                          l6c02:
L7BDB  4D6C    21 5CF8               	ld	hl,l7bdb	; Point to file access
  4D6F    CB CE                 	set	1,(hl)		; Set write enabled
  4D71    CB 46                 	bit	0,(hl)		; Test re-read
L6C12  4D73    28 07                 	jr	z,l6c12		; Nope
  4D75    CB 86                 	res	0,(hl)		; Clear it
  4D77    C5                    	push	bc
L6CF9  4D78    CD 4E4D               	call	l6cf9		; Re-read record
  4D7B    C1                    	pop	bc
L6C12  4D7C                          l6c12:
L7BDC  4D7C    3A 5CF9               	ld	a,(l7bdc)	; Get record pointer
  4D7F    5F                    	ld	e,a
  4D80    16 00                 	ld	d,0
L7957TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-255


  4D82    21 5A74               	ld	hl,l7957
  4D85    19                    	add	hl,de		; Build buffer address
  4D86    70                    	ld	(hl),b		; Store byte
  4D87    3C                    	inc	a		; Advance record pointer
L6C2C  4D88    F2 4D96               	jp	p,l6c2c		; Still within limits
L6CFD  4D8B    CD 4E51               	call	l6cfd		; Write record
L7933_RRN  4D8E    2A 5A71               	ld	hl,(l7933+_rrn)
  4D91    23                    	inc	hl		; Advance record count
L7933_RRN  4D92    22 5A71               	ld	(l7933+_rrn),hl
  4D95    AF                    	xor	a
L6C2C  4D96                          l6c2c:
L7BDC  4D96    32 5CF9               	ld	(l7bdc),a	; Set record pointer
  4D99    C9                    	ret
                                ;
                                ; Allocate space in reg DE
                                ;
L6C30  4D9A                          l6c30:
L7908  4D9A    2A 5A25               	ld	hl,(l7908)	; Get start of data
  4D9D    B7                    	or	a
  4D9E    ED 52                 	sbc	hl,de
L72C8  4DA0    CD 53EF               	call	l72c8
_MEMOVFL  4DA3    62                    	db	_MemOvfl
L7908  4DA4    22 5A25               	ld	(l7908),hl	; Set start of data
L6BC7  4DA7    18 95                 	jr	l6bc7		; Check enough memory
                                ;
                                ; Store back current PC to ^HL
                                ;
L6C3F  4DA9                          l6c3f:
  4DA9    FD E5                 	push	iy		; Get PC
  4DAB    D1                    	pop	de
                                ;
                                ; Store back reg DE to ^HL
                                ;
L6C42  4DAC                          l6c42:
  4DAC    C5                    	push	bc
  4DAD    D5                    	push	de
  4DAE    E5                    	push	hl
L7BDF  4DAF    2A 5CFC               	ld	hl,(l7bdf)	; Get memory top
L7BE3  4DB2    3A 5D00               	ld	a,(l7be3)	; Get back fix level
  4DB5    47                    	ld	b,a
  4DB6    04                    	inc	b
L6C5E  4DB7                          l6c5e:
  4DB7    05                    	dec	b
L6C84  4DB8    28 23                 	jr	z,l6c84
  4DBA    5E                    	ld	e,(hl)
  4DBB    23                    	inc	hl
  4DBC    56                    	ld	d,(hl)
  4DBD    E3                    	ex	(sp),hl
  4DBE    B7                    	or	a
  4DBF    ED 52                 	sbc	hl,de
  4DC1    19                    	add	hl,de
  4DC2    E3                    	ex	(sp),hl
L6C71  4DC3    38 05                 	jr	c,l6c71
  4DC5    23                    	inc	hl
  4DC6    23                    	inc	hl
  4DC7    23                    	inc	hl
L6C5ETURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-256


  4DC8    18 ED                 	jr	l6c5e
L6C71  4DCA                          l6c71:
  4DCA    2B                    	dec	hl
  4DCB    EB                    	ex	de,hl
  4DCC    68                    	ld	l,b
  4DCD    26 00                 	ld	h,0
  4DCF    29                    	add	hl,hl
  4DD0    29                    	add	hl,hl
  4DD1    44                    	ld	b,h
  4DD2    4D                    	ld	c,l
  4DD3    19                    	add	hl,de
  4DD4    54                    	ld	d,h
  4DD5    5D                    	ld	e,l
  4DD6    2B                    	dec	hl
  4DD7    13                    	inc	de
  4DD8    13                    	inc	de
  4DD9    13                    	inc	de
  4DDA    ED B8                 	lddr
  4DDC    23                    	inc	hl
L6C84  4DDD                          l6c84:
  4DDD    D1                    	pop	de
  4DDE    73                    	ld	(hl),e
  4DDF    23                    	inc	hl
  4DE0    72                    	ld	(hl),d
  4DE1    23                    	inc	hl
  4DE2    D1                    	pop	de
  4DE3    73                    	ld	(hl),e
  4DE4    23                    	inc	hl
  4DE5    72                    	ld	(hl),d
  4DE6    C1                    	pop	bc
L7BE3  4DE7    21 5D00               	ld	hl,l7be3	; Point to back fix level
  4DEA    34                    	inc	(hl)
  4DEB    C0                    	ret	nz
  4DEC    AF                    	xor	a
L6C9B  4DED    18 05                 	jr	l6c9b
                                ;
                                ; Fix back level
                                ;
L6C96  4DEF                          l6c96:
L7BE3  4DEF    3A 5D00               	ld	a,(l7be3)	; Get back fix level
  4DF2    B7                    	or	a
  4DF3    C8                    	ret	z
L6C9B  4DF4                          l6c9b:
  4DF4    C5                    	push	bc
  4DF5    D5                    	push	de
  4DF6    FD E5                 	push	iy
  4DF8    47                    	ld	b,a
L7BDF  4DF9    2A 5CFC               	ld	hl,(l7bdf)	; Get memory top
L6CA3  4DFC                          l6ca3:
  4DFC    C5                    	push	bc
  4DFD    5E                    	ld	e,(hl)
  4DFE    23                    	inc	hl
  4DFF    56                    	ld	d,(hl)
  4E00    23                    	inc	hl
  4E01    E5                    	push	hl
  4E02    EB                    	ex	de,hl
L6CC2TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-257


  4E03    CD 4E1B               	call	l6cc2		; Check chaining
  4E06    E1                    	pop	hl
  4E07    46                    	ld	b,(hl)
  4E08    23                    	inc	hl
  4E09    E5                    	push	hl
L6C02  4E0A    CD 4D6C               	call	l6c02		; Put byte to file
  4E0D    E1                    	pop	hl
  4E0E    46                    	ld	b,(hl)
  4E0F    23                    	inc	hl
  4E10    E5                    	push	hl
L6C02  4E11    CD 4D6C               	call	l6c02		; Put byte to file
  4E14    E1                    	pop	hl
  4E15    C1                    	pop	bc
L6CA3  4E16    10 E4                 	djnz	l6ca3
  4E18    E1                    	pop	hl
  4E19    D1                    	pop	de
  4E1A    C1                    	pop	bc
                                ;
                                ; Check chaining
                                ;
L6CC2  4E1B                          l6cc2:
  4E1B    E5                    	push	hl
  4E1C    FD E1                 	pop	iy
  4E1E    D5                    	push	de
  4E1F    C5                    	push	bc
L7902  4E20    ED 5B 5A1F            	ld	de,(l7902)	; Get code pointer
  4E24    B7                    	or	a
  4E25    ED 52                 	sbc	hl,de
  4E27    7D                    	ld	a,l
  4E28    E6 7F                 	and	7fh
L7BDC  4E2A    32 5CF9               	ld	(l7bdc),a	; Set record pointer
  4E2D    29                    	add	hl,hl
  4E2E    6C                    	ld	l,h
  4E2F    17                    	rla
  4E30    E6 01                 	and	1
  4E32    67                    	ld	h,a
L7BDD  4E33    ED 5B 5CFA            	ld	de,(l7bdd)	; Get record base
  4E37    19                    	add	hl,de		; Calculate new record
L7933_RRN  4E38    ED 5B 5A71            	ld	de,(l7933+_rrn)
  4E3C    B7                    	or	a
  4E3D    ED 52                 	sbc	hl,de
  4E3F    19                    	add	hl,de
L6CF6  4E40    28 08                 	jr	z,l6cf6
  4E42    E5                    	push	hl
L6CFD  4E43    CD 4E51               	call	l6cfd		; Write record
  4E46    E1                    	pop	hl
L7933_RRN  4E47    22 5A71               	ld	(l7933+_rrn),hl	; Reset record
L6CF6  4E4A                          l6cf6:
  4E4A    C1                    	pop	bc
  4E4B    D1                    	pop	de
  4E4C    C9                    	ret
                                ;
                                ; Read a record
                                ;
L6CF9  4E4D                          l6cf9:
.RNDRD  4E4D    0E 21                 	ld	c,.rndrd
L6D09TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-258


  4E4F    18 0C                 	jr	l6d09
                                ;
                                ; Write a record
                                ;
L6CFD  4E51                          l6cfd:
L7BDB  4E51    21 5CF8               	ld	hl,l7bdb	; Point to file access
  4E54    CB C6                 	set	0,(hl)		; Set re-read enabled
  4E56    CB 4E                 	bit	1,(hl)		; Test record to be written
  4E58    C8                    	ret	z		; Nope
  4E59    CB 8E                 	res	1,(hl)		; Reset it
.RNDWR  4E5B    0E 22                 	ld	c,.rndwr
L6D09  4E5D                          l6d09:
  4E5D    C5                    	push	bc		; Save function
L7957  4E5E    11 5A74               	ld	de,l7957
.SETDMA  4E61    0E 1A                 	ld	c,.setdma
L7265  4E63    CD 53A6               	call	l7265		; Set disk buffer
  4E66    C1                    	pop	bc
L7933  4E67    11 5A50               	ld	de,l7933
L7265  4E6A    CD 53A6               	call	l7265		; Read or write record
  4E6D    B7                    	or	a
  4E6E    C8                    	ret	z
  4E6F    3D                    	dec	a
  4E70    C8                    	ret	z
  4E71    FE 03                 	cp	3
  4E73    C8                    	ret	z
L72E1  4E74    CD 5402               	call	l72e1
_DSKFULL  4E77    FA                    	db	_DskFull
L6D24  4E78                          l6d24:
  4E78    D9                    	exx
L7B64  4E79    11 5C81               	ld	de,l7b64
L6D2E  4E7C    18 04                 	jr	l6d2e
                                ;
                                ; Save environment
                                ;
L6D2A  4E7E                          l6d2a:
  4E7E    D9                    	exx
L7B57  4E7F    11 5C74               	ld	de,l7b57
L6D2E  4E82                          l6d2e:
  4E82    E1                    	pop	hl
L7BD5  4E83    22 5CF2               	ld	(l7bd5),hl
LFFF3  4E86    21 FFF3               	ld	hl,lfff3
  4E89    39                    	add	hl,sp
  4E8A    F9                    	ld	sp,hl
  4E8B    EB                    	ex	de,hl
L000D  4E8C    01 000D               	ld	bc,l000d
  4E8F    ED B0                 	ldir
L6D3D  4E91                          l6d3d:
L7BD5  4E91    2A 5CF2               	ld	hl,(l7bd5)
  4E94    E5                    	push	hl
  4E95    D9                    	exx
  4E96    C9                    	ret
L6D43  4E97                          l6d43:
  4E97    D9                    	exx
L7B64  4E98    11 5C81               	ld	de,l7b64
L6D4D  4E9B    18 04                 	jr	l6d4d
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-259


                                ; Get back environment
                                ;
L6D49  4E9D                          l6d49:
  4E9D    D9                    	exx
L7B57  4E9E    11 5C74               	ld	de,l7b57
L6D4D  4EA1                          l6d4d:
  4EA1    E1                    	pop	hl
L7BD5  4EA2    22 5CF2               	ld	(l7bd5),hl
L0000  4EA5    21 0000               	ld	hl,l0000
  4EA8    39                    	add	hl,sp
L000D  4EA9    01 000D               	ld	bc,l000d
  4EAC    ED B0                 	ldir
  4EAE    F9                    	ld	sp,hl
L6D3D  4EAF    18 E0                 	jr	l6d3d
L6D5D  4EB1                          l6d5d:
  4EB1    D9                    	exx
L7B64  4EB2    11 5C81               	ld	de,l7b64
L6D67  4EB5    18 04                 	jr	l6d67
L6D63  4EB7                          l6d63:
  4EB7    D9                    	exx
L7B57  4EB8    11 5C74               	ld	de,l7b57
L6D67  4EBB                          l6d67:
L0002  4EBB    21 0002               	ld	hl,l0002
  4EBE    39                    	add	hl,sp
L000D  4EBF    01 000D               	ld	bc,l000d
  4EC2    ED B0                 	ldir
  4EC4    D9                    	exx
  4EC5    C9                    	ret
                                ;
                                ; Put current PC to table
                                ;
L6D72  4EC6                          l6d72:
  4EC6    FD E5                 	push	iy
  4EC8    D1                    	pop	de
L6D75  4EC9                          l6d75:
  4EC9    7A                    	ld	a,d
L6D7A  4ECA    CD 4ECE               	call	l6d7a
  4ECD    7B                    	ld	a,e
L6D7A  4ECE                          l6d7a:
  4ECE    E5                    	push	hl
L7B73  4ECF    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  4ED2    77                    	ld	(hl),a
  4ED3    2B                    	dec	hl
L7B73  4ED4    22 5C90               	ld	(l7b73),hl	; Set label pointer
  4ED7    E1                    	pop	hl
L6BC7  4ED8    C3 4D3E               	jp	l6bc7		; Check enough memory
                                ;
                                ; Get label
                                ;
L6D87  4EDB                          l6d87:
  4EDB    DD 7E 00              	ld	a,(ix+0)
L7271  4EDE    CD 53B2               	call	l7271		; Test label character
                                ;
                                ; Build label
                                ;
L6D8D  4EE1                          l6d8d:
L72C8TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-260


  4EE1    CD 53EF               	call	l72c8
_ILLCHAR  4EE4    3A                    	db	_IllChar
L6ED0  4EE5    CD 5024               	call	l6ed0
L6D94  4EE8                          l6d94:
L6EB8  4EE8    CD 500C               	call	l6eb8
  4EEB    DD 7E 00              	ld	a,(ix+0)
L6D9A  4EEE                          l6d9a:
  4EEE    FE 61                 	cp	'a'
L6DA4  4EF0    38 06                 	jr	c,l6da4
  4EF2    FE 7B                 	cp	'z'+1
L6DA4  4EF4    30 02                 	jr	nc,l6da4
  4EF6    D6 20                 	sub	'a'-'A'
L6DA4  4EF8                          l6da4:
L6D7A  4EF8    CD 4ECE               	call	l6d7a
  4EFB    DD 23                 	inc	ix
  4EFD    DD 7E 00              	ld	a,(ix+0)
L7282  4F00    CD 53C3               	call	l7282		; Test valid character
L6D9A  4F03    30 E9                 	jr	nc,l6d9a	; Yeap
L7B73  4F05    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
  4F08    23                    	inc	hl
  4F09    CB FE                 	set	7,(hl)
L6F95  4F0B    C3 50E9               	jp	l6f95		; Process line
L6DBA  4F0E                          l6dba:
  4F0E    DD 7E 00              	ld	a,(ix+0)
L7271  4F11    CD 53B2               	call	l7271		; Test label character
L72C8  4F14    CD 53EF               	call	l72c8
_ILLCHAR  4F17    3A                    	db	_IllChar
L6D94  4F18    18 CE                 	jr	l6d94
                                ;
                                ; Set label pointer
                                ;
L6DC6  4F1A                          l6dc6:
L7B75  4F1A    2A 5C92               	ld	hl,(l7b75)	; Get previous label pointer
L7B73  4F1D    ED 5B 5C90            	ld	de,(l7b73)	; Get label pointer
  4F21    B7                    	or	a
  4F22    ED 52                 	sbc	hl,de
  4F24    EB                    	ex	de,hl
L6D75  4F25    CD 4EC9               	call	l6d75		; Put to table
L7B73  4F28    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
L7B75  4F2B    22 5C92               	ld	(l7b75),hl	; Unpack into previous
  4F2E    C9                    	ret
L6DDB  4F2F                          l6ddb:
L7B7B  4F2F    2A 5C98               	ld	hl,(l7b7b)	; Get current label pointer
L6DE3  4F32    18 03                 	jr	l6de3
                                ;
                                ;
                                ;
L6DE0  4F34                          l6de0:
L7B77  4F34    2A 5C94               	ld	hl,(l7b77)	; Get top of available memory
L6DE3  4F37                          l6de3:
L7B7D  4F37    22 5C9A               	ld	(l7b7d),hl
L7BC0  4F3A    3A 5CDD               	ld	a,(l7bc0)
  4F3D    B9                    	cp	c
L6E48  4F3E    28 5C                 	jr	z,l6e48
  4F40    79                    	ld	a,c
L7BC0  4F41    32 5CDD               	ld	(l7bc0),a
L7B75TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-261


  4F44    2A 5C92               	ld	hl,(l7b75)	; Get previous label pointer
L6DF3  4F47                          l6df3:
L7B7D  4F47    ED 5B 5C9A            	ld	de,(l7b7d)
  4F4B    AF                    	xor	a
  4F4C    ED 52                 	sbc	hl,de
  4F4E    19                    	add	hl,de
L6E03  4F4F    20 06                 	jr	nz,l6e03
  4F51    AF                    	xor	a
L7BC1  4F52    32 5CDE               	ld	(l7bc1),a
  4F55    3D                    	dec	a
  4F56    C9                    	ret
L6E03  4F57                          l6e03:
  4F57    23                    	inc	hl
  4F58    5E                    	ld	e,(hl)
  4F59    23                    	inc	hl
  4F5A    56                    	ld	d,(hl)
  4F5B    19                    	add	hl,de
  4F5C    7E                    	ld	a,(hl)
  4F5D    B7                    	or	a
L6DF3  4F5E    28 E7                 	jr	z,l6df3
  4F60    2B                    	dec	hl
  4F61    7E                    	ld	a,(hl)
  4F62    23                    	inc	hl
  4F63    B9                    	cp	c
L6DF3  4F64    20 E1                 	jr	nz,l6df3
  4F66    DD E5                 	push	ix
  4F68    D1                    	pop	de
  4F69    C5                    	push	bc
  4F6A    E5                    	push	hl
  4F6B    2B                    	dec	hl
  4F6C    2B                    	dec	hl
L6E19  4F6D                          l6e19:
  4F6D    46                    	ld	b,(hl)
  4F6E    1A                    	ld	a,(de)
  4F6F    2B                    	dec	hl
  4F70    13                    	inc	de
  4F71    48                    	ld	c,b
  4F72    CB B8                 	res	7,b
  4F74    FE 61                 	cp	'a'
L6E2A  4F76    38 06                 	jr	c,l6e2a
  4F78    FE 7B                 	cp	'z'+1
L6E2A  4F7A    30 02                 	jr	nc,l6e2a
  4F7C    D6 20                 	sub	'a'-'A'
L6E2A  4F7E                          l6e2a:
  4F7E    B8                    	cp	b
L6E37  4F7F    20 0A                 	jr	nz,l6e37
  4F81    CB 79                 	bit	7,c
L6E19  4F83    28 E8                 	jr	z,l6e19
  4F85    1A                    	ld	a,(de)
L7282  4F86    CD 53C3               	call	l7282		; Test valid character
L6E3B  4F89    38 04                 	jr	c,l6e3b		; Nope
L6E37  4F8B                          l6e37:
  4F8B    E1                    	pop	hl
  4F8C    C1                    	pop	bc
L6DF3  4F8D    18 B8                 	jr	l6df3
L6E3B  4F8F                          l6e3b:
L7BC2TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-262


  4F8F    22 5CDF               	ld	(l7bc2),hl
L7BC4  4F92    ED 53 5CE1            	ld	(l7bc4),de
  4F96    E1                    	pop	hl
  4F97    C1                    	pop	bc
  4F98    7E                    	ld	a,(hl)
L7BC1  4F99    32 5CDE               	ld	(l7bc1),a
L6E48  4F9C                          l6e48:
L7BC2  4F9C    2A 5CDF               	ld	hl,(l7bc2)
L7BC4  4F9F    ED 5B 5CE1            	ld	de,(l7bc4)
L7BC1  4FA3    3A 5CDE               	ld	a,(l7bc1)
  4FA6    B8                    	cp	b
  4FA7    C9                    	ret
                                ;
                                ; Find label with type in reg B
                                ;
L6E54  4FA8                          l6e54:
L6DE0  4FA8    CD 4F34               	call	l6de0
  4FAB    C0                    	ret	nz
L6E96  4FAC    18 3C                 	jr	l6e96
                                ;
                                ; Find constant string list ^PC
                                ; Z set says found
                                ;
L6E5A  4FAE                          l6e5a:
  4FAE    E3                    	ex	(sp),hl
  4FAF    4E                    	ld	c,(hl)		; Get length of data following string
  4FB0    23                    	inc	hl
  4FB1    5E                    	ld	e,(hl)		; Get address of string
  4FB2    23                    	inc	hl
  4FB3    56                    	ld	d,(hl)
  4FB4    23                    	inc	hl
  4FB5    E3                    	ex	(sp),hl
  4FB6    EB                    	ex	de,hl
L6E63  4FB7                          l6e63:
L6E7D  4FB7    CD 4FD1               	call	l6e7d		; Find string
  4FBA    C8                    	ret	z		; Got it
  4FBB    2B                    	dec	hl		; Postion to previous character
L6E68  4FBC                          l6e68:
_MB  4FBC    CB 7E                 	bit	_MB,(hl)	; Find end of string
  4FBE    23                    	inc	hl
L6E68  4FBF    28 FB                 	jr	z,l6e68
  4FC1    06 00                 	ld	b,0
  4FC3    09                    	add	hl,bc		; Position to next string in list
  4FC4    7E                    	ld	a,(hl)
  4FC5    B7                    	or	a		; Test more in list
L6E63  4FC6    20 EF                 	jr	nz,l6e63	; Yeap
  4FC8    3D                    	dec	a		; Set string not found
  4FC9    C9                    	ret
                                ;
                                ; Find constant string ^PC
                                ; Z set says found
                                ;
L6E76  4FCA                          l6e76:
  4FCA    E3                    	ex	(sp),hl
  4FCB    5E                    	ld	e,(hl)		; Get address of string
  4FCC    23                    	inc	hl
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-263


  4FCD    56                    	ld	d,(hl)
  4FCE    23                    	inc	hl
  4FCF    E3                    	ex	(sp),hl
  4FD0    EB                    	ex	de,hl
                                ;
                                ; Find string ^HL
                                ;
L6E7D  4FD1                          l6e7d:
  4FD1    DD E5                 	push	ix		; Copy source pointer
  4FD3    D1                    	pop	de
  4FD4    7E                    	ld	a,(hl)		; Get character from searched string
L7271  4FD5    CD 53B2               	call	l7271		; Test label character
L6E92  4FD8    38 0C                 	jr	c,l6e92		; Nope
L6E9C  4FDA    CD 4FF0               	call	l6e9c		; Compare
  4FDD    C0                    	ret	nz		; Not found
  4FDE    1A                    	ld	a,(de)		; Get character from source
L7282  4FDF    CD 53C3               	call	l7282		; Test valid character
L6E96  4FE2    38 06                 	jr	c,l6e96		; Nope
  4FE4    B7                    	or	a
  4FE5    C9                    	ret
L6E92  4FE6                          l6e92:
L6E9C  4FE6    CD 4FF0               	call	l6e9c		; Compare
  4FE9    C0                    	ret	nz		; Not found
L6E96  4FEA                          l6e96:
  4FEA    D5                    	push	de		; Set resulting source pointer
  4FEB    DD E1                 	pop	ix
L6F95  4FED    C3 50E9               	jp	l6f95		; Process line
                                ;
                                ; Compare reference ^HL: source ^DE
                                ; Z set says match
                                ;
L6E9C  4FF0                          l6e9c:
  4FF0    C5                    	push	bc
L6E9D  4FF1                          l6e9d:
  4FF1    46                    	ld	b,(hl)		; Get from reference
  4FF2    1A                    	ld	a,(de)		; Get from source
  4FF3    23                    	inc	hl
  4FF4    13                    	inc	de
  4FF5    48                    	ld	c,b		; Save reference
_MB  4FF6    CB B8                 	res	_MB,b		; Strip off MSB
  4FF8    FE 61                 	cp	'a'		; Test range
L6EAE  4FFA    38 06                 	jr	c,l6eae
  4FFC    FE 7B                 	cp	'z'+1
L6EAE  4FFE    30 02                 	jr	nc,l6eae
  5000    D6 20                 	sub	'a'-'A'		; Convert to UPPER case
L6EAE  5002                          l6eae:
  5002    B8                    	cp	b		; Compare
L6EB6  5003    20 05                 	jr	nz,l6eb6	; No match
_MB  5005    CB 79                 	bit	_MB,c		; Test end of reference
L6E9D  5007    28 E8                 	jr	z,l6e9d		; Nope
  5009    AF                    	xor	a		; Force match
L6EB6  500A                          l6eb6:
  500A    C1                    	pop	bc
  500B    C9                    	ret
L6EB8  500C                          l6eb8:
L7513  500C    21 5631               	ld	hl,l7513
L6EBBTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-264


  500F                          l6ebb:
  500F    4E                    	ld	c,(hl)
  5010    0C                    	inc	c
  5011    C8                    	ret	z
  5012    0D                    	dec	c
  5013    23                    	inc	hl
  5014    5E                    	ld	e,(hl)
  5015    23                    	inc	hl
  5016    56                    	ld	d,(hl)
  5017    23                    	inc	hl
  5018    E5                    	push	hl
  5019    EB                    	ex	de,hl
L6E63  501A    CD 4FB7               	call	l6e63
  501D    E1                    	pop	hl
L6EBB  501E    20 EF                 	jr	nz,l6ebb
L72E1  5020    CD 5402               	call	l72e1
_RESWORD  5023    35                    	db	_ResWord
L6ED0  5024                          l6ed0:
L7B91  5024    3A 5CAE               	ld	a,(l7b91)	; Get ???
  5027    4F                    	ld	c,a
L6DDB  5028    CD 4F2F               	call	l6ddb
L7BC1  502B    3A 5CDE               	ld	a,(l7bc1)
  502E    B7                    	or	a
  502F    C8                    	ret	z
L72E1  5030    CD 5402               	call	l72e1
_DOUBLELAB  5033    2B                    	db	_DoubleLab
L6EE0  5034                          l6ee0:
  5034    3E 5B                 	ld	a,'['
L6F29  5036    CD 507D               	call	l6f29
  5039    C8                    	ret	z
  503A    DD 7E 00              	ld	a,(ix+0)
  503D    FE 28                 	cp	'('
  503F    C0                    	ret	nz
  5040    DD 7E 01              	ld	a,(ix+1)
  5043    FE 2E                 	cp	'.'
  5045    C0                    	ret	nz
L6EF2  5046                          l6ef2:
  5046    DD 23                 	inc	ix
L6F92  5048    C3 50E6               	jp	l6f92		; Process line
                                ;
                                ; Test ] - Z set says found
                                ;
L6EF7  504B                          l6ef7:
  504B    3E 5D                 	ld	a,']'
L6F29  504D    CD 507D               	call	l6f29
  5050    C8                    	ret	z
                                ;;:::
  5051    DD 7E 00              	ld	a,(ix+0)
  5054    FE 2E                 	cp	'.'
  5056    C0                    	ret	nz
  5057    DD 7E 01              	ld	a,(ix+1)
  505A    FE 29                 	cp	')'
  505C    C0                    	ret	nz
L6EF2  505D    18 E7                 	jr	l6ef2
                                ;
                                ; Test colon : - Z set says found
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-265


                                ;
L6F0B  505F                          l6f0b:
  505F    3E 3A                 	ld	a,':'
L6F29  5061    18 1A                 	jr	l6f29
                                ;
                                ; Test semicolon ; - Z set says found
                                ;
L6F0F  5063                          l6f0f:
  5063    3E 3B                 	ld	a,';'
L6F29  5065    18 16                 	jr	l6f29
                                ;
                                ; Test comma , - Z set says found
                                ;
L6F13  5067                          l6f13:
  5067    3E 2C                 	ld	a,','
L6F29  5069    18 12                 	jr	l6f29
L6F17  506B                          l6f17:
  506B    3E 2E                 	ld	a,'.'
L6F29  506D    18 0E                 	jr	l6f29
                                ;
                                ; Test left parenthesis ( - Z set says found
                                ;
L6F1B  506F                          l6f1b:
  506F    3E 28                 	ld	a,'('
L6F29  5071    18 0A                 	jr	l6f29
L6F1F  5073                          l6f1f:
  5073    3E 29                 	ld	a,')'
L6F29  5075    18 06                 	jr	l6f29
                                ;
                                ; Test equate = - Z set says found
                                ;
L6F23  5077                          l6f23:
  5077    3E 3D                 	ld	a,'='
L6F29  5079    18 02                 	jr	l6f29
L6F27  507B                          l6f27:
  507B    3E 5E                 	ld	a,'^'
L6F29  507D                          l6f29:
  507D    DD BE 00              	cp	(ix+0)
  5080    C0                    	ret	nz
L6F92  5081    C3 50E6               	jp	l6f92		; Process line
                                ;
                                ; Verify [
                                ;
L6F30  5084                          l6f30:
L6EE0  5084    CD 5034               	call	l6ee0
  5087    C8                    	ret	z
L72E1  5088    CD 5402               	call	l72e1
_LFTBREXP  508B    08                    	db	_LftBrExp
                                ;
                                ; Verify ]
                                ;
L6F38  508C                          l6f38:
L6EF7  508C    CD 504B               	call	l6ef7		; Test ]
  508F    C8                    	ret	z
L72E1  5090    CD 5402               	call	l72e1
_RGTBREXP  5093    09                    	db	_RgtBrExp
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-266


                                ;
                                ; Verify :
                                ;
L6F40  5094                          l6f40:
L6F0B  5094    CD 505F               	call	l6f0b		; Test :
  5097    C8                    	ret	z
L72E1  5098    CD 5402               	call	l72e1
_SEMIEXP  509B    02                    	db	_SemiExp
                                ;
                                ; Verify ;
                                ;
L6F48  509C                          l6f48:
L6F0F  509C    CD 5063               	call	l6f0f		; Test ;
  509F    C8                    	ret	z		; Yeap
L6F4C  50A0                          l6f4c:
L72E1  50A0    CD 5402               	call	l72e1
_COLEXP  50A3    01                    	db	_ColExp
L6F50  50A4                          l6f50:
L6F0F  50A4    CD 5063               	call	l6f0f		; Test ;
  50A7    C8                    	ret	z		; Yeap
L7B98  50A8    3A 5CB5               	ld	a,(l7b98)
  50AB    B7                    	or	a
L6F4C  50AC    28 F2                 	jr	z,l6f4c
L72E1  50AE    CD 5402               	call	l72e1
_UNDEF  50B1    29                    	db	_Undef
                                ;
                                ; Verify ,
                                ;
L6F5E  50B2                          l6f5e:
L6F13  50B2    CD 5067               	call	l6f13		; Test ,
  50B5    C8                    	ret	z		; Yeap
L72E1  50B6    CD 5402               	call	l72e1
_COMMAEXP  50B9    03                    	db	_CommaExp
                                ;
                                ; Verify (
                                ;
L6F66  50BA                          l6f66:
L6F1B  50BA    CD 506F               	call	l6f1b		; Test (
  50BD    C8                    	ret	z		; Yeap
L72E1  50BE    CD 5402               	call	l72e1
_LFTPAR  50C1    04                    	db	_LftPar
                                ;
                                ; Verify )
                                ;
L6F6E  50C2                          l6f6e:
L6F1F  50C2    CD 5073               	call	l6f1f
  50C5    C8                    	ret	z
L72E1  50C6    CD 5402               	call	l72e1
_RGTPAR  50C9    05                    	db	_RgtPar
                                ;
                                ; Verify =
                                ;
L6F76  50CA                          l6f76:
L6F23  50CA    CD 5077               	call	l6f23		; Find =
  50CD    C8                    	ret	z
L72E1  50CE    CD 5402               	call	l72e1
_EQUEXPTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-267


  50D1    06                    	db	_EquExp
L6F7E  50D2                          l6f7e:
L6E76  50D2    CD 4FCA               	call	l6e76		; Find :=
L7582  50D5    56A0                  	dw	l7582
  50D7    C8                    	ret	z		; Yeap
L72E1  50D8    CD 5402               	call	l72e1
_ASSIGEXP  50DB    07                    	db	_AssigExp
L6F88  50DC                          l6f88:
L6E76  50DC    CD 4FCA               	call	l6e76		; Find OF
L7560  50DF    567E                  	dw	l7560
  50E1    C8                    	ret	z		; Yeap
L72E1  50E2    CD 5402               	call	l72e1
_NOOF  50E5    0F                    	db	_NoOF
                                ;
                                ; Process source line
                                ;
L6F92  50E6                          l6f92:
L7124  50E6    CD 5265               	call	l7124		; Get character from file
L6F95  50E9                          l6f95:
  50E9    AF                    	xor	a
L7B98  50EA    32 5CB5               	ld	(l7b98),a
  50ED    3D                    	dec	a
L7BC0  50EE    32 5CDD               	ld	(l7bc0),a
  50F1    DD 7E 00              	ld	a,(ix+0)	; Get a character
  50F4    B7                    	or	a		; Test empty
L6F92  50F5    28 EF                 	jr	z,l6f92		; Yeap, so get next
  50F7    FE 20                 	cp	' '		; Skip blanks
L6F92  50F9    28 EB                 	jr	z,l6f92
TAB  50FB    FE 09                 	cp	tab		; Skip tabs
L6F92  50FD    28 E7                 	jr	z,l6f92
  50FF    FE 28                 	cp	'('		; Test possible comment
L6FB5  5101    28 06                 	jr	z,l6fb5
  5103    FE 7B                 	cp	'{'		; Test real comment
L6FBF  5105    28 0C                 	jr	z,l6fbf
L6FB3  5107                          l6fb3:
  5107    AF                    	xor	a
  5108    C9                    	ret
L6FB5  5109                          l6fb5:
  5109    DD 7E 01              	ld	a,(ix+1)	; Get next
  510C    FE 2A                 	cp	'*'		; Test comment
L6FB3  510E    20 F7                 	jr	nz,l6fb3	; Nope
L7124  5110    CD 5265               	call	l7124		; Get next character
L6FBF  5113                          l6fbf:
  5113    C5                    	push	bc
  5114    DD 46 00              	ld	b,(ix+0)	; Get comment indicator
  5117    DD 7E 01              	ld	a,(ix+1)	; Get next character
  511A    FE 24                 	cp	'$'		; Test compiler directive
L6FEB  511C    28 21                 	jr	z,l6feb		; Maybe
L6FCA  511E                          l6fca:
L7124  511E    CD 5265               	call	l7124		; Get next character
L6FCD  5121                          l6fcd:
  5121    78                    	ld	a,b
  5122    FE 2A                 	cp	'*'		; Test two character indicators
  5124    DD 7E 00              	ld	a,(ix+0)
L6FE4  5127    20 0F                 	jr	nz,l6fe4	; Nope
  5129    B8                    	cp	b
L6FCATURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-268


  512A    20 F2                 	jr	nz,l6fca
  512C    DD 7E 01              	ld	a,(ix+1)
  512F    FE 29                 	cp	')'
L6FCA  5131    20 EB                 	jr	nz,l6fca
L7124  5133    CD 5265               	call	l7124		; Get character from file
L6FE8  5136    18 04                 	jr	l6fe8
L6FE4  5138                          l6fe4:
  5138    FE 7D                 	cp	'}'		; Test end of comment
L6FCA  513A    20 E2                 	jr	nz,l6fca	; Nope, wait for 
L6FE8  513C                          l6fe8:
  513C    C1                    	pop	bc
L6F92  513D    18 A7                 	jr	l6f92
L6FEB  513F                          l6feb:
  513F    C5                    	push	bc
  5140    D5                    	push	de
  5141    E5                    	push	hl
L7124  5142    CD 5265               	call	l7124		; Get character from file
L6FF1  5145                          l6ff1::
L7124  5145    CD 5265               	call	l7124		; Get character from file
  5148    DD 7E 00              	ld	a,(ix+0)
L04A6  514B    CD 04A6               	call	l04a6		; Convert to upper case
  514E    FE 49                 	cp	'I'		; Test include or I/O error
  5150    06 01                 	ld	b,00000001b
L704D  5152    28 4D                 	jr	z,l704d
  5154    FE 52                 	cp	'R'		; Test index range test
  5156    06 02                 	ld	b,00000010b
L704D  5158    28 47                 	jr	z,l704d
  515A    FE 41                 	cp	'A'		; Test absolute code
  515C    06 04                 	ld	b,00000100b
L704D  515E    28 41                 	jr	z,l704d
  5160    FE 55                 	cp	'U'		; Test user break
  5162    06 08                 	ld	b,00001000b
L704D  5164    28 3B                 	jr	z,l704d
  5166    FE 58                 	cp	'X'		; Test arry optimization
  5168    06 10                 	ld	b,00010000b
L704D  516A    28 35                 	jr	z,l704d
  516C    FE 56                 	cp	'V'		; Test var type test
  516E    06 20                 	ld	b,00100000b
L704D  5170    28 2F                 	jr	z,l704d
  5172    FE 42                 	cp	'B'		; Test I/O mode
  5174    06 40                 	ld	b,01000000b
L704D  5176    28 29                 	jr	z,l704d
  5178    FE 43                 	cp	'C'		; Test keyboard interrupt
  517A    06 80                 	ld	b,10000000b
L704D  517C    28 23                 	jr	z,l704d
  517E    FE 57                 	cp	'W'		; Test WITH check
L707A  5180    28 4C                 	jr	z,l707a
                                ;
                                ; Next directives used by MS-DOS only.
                                ; They will be checked for compatibility only
                                ;
  5182    06 00                 	ld	b,00000000b
  5184    FE 4B                 	cp	'K'		; Test stack check ([$K+, $K-])
L704D  5186    28 19                 	jr	z,l704d
  5188    FE 44                 	cp	'D'		; Test device check ([$D+, $D-])
L704D  518A    28 15                 	jr	z,l704d
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-269


  518C    FE 46                 	cp	'F'		; Test number of open files ([$Fnum])
L708E  518E    28 52                 	jr	z,l708e
  5190    FE 47                 	cp	'G'		; Test input buffer ([$Gnum])
L708E  5192    28 4E                 	jr	z,l708e
  5194    FE 50                 	cp	'P'		; Test output buffer ([$Pnum])
L708E  5196    28 4A                 	jr	z,l708e
L72E1  5198    CD 5402               	call	l72e1		; Invalid directive
_COMPDIREC  519B    5D                    	db	_CompDirec
L7048  519C                          l7048:
  519C    E1                    	pop	hl
  519D    D1                    	pop	de
  519E    C1                    	pop	bc
L6FCD  519F    18 80                 	jr	l6fcd
                                ;
                                ; Set or reset directive $x+ or $x-
                                ;
                                ; Bit to be attached held in reg B
                                ;
L704D  51A1                          l704d:
L7124  51A1    CD 5265               	call	l7124		; Get character from file
  51A4    DD 7E 00              	ld	a,(ix+0)
  51A7    0E 00                 	ld	c,0		; Init for set
  51A9    FE 2B                 	cp	'+'		; Test it
L7065  51AB    28 0C                 	jr	z,l7065		; Yeap
  51AD    0D                    	dec	c		; Prepare for reset - all bits set
  51AE    FE 2D                 	cp	'-'
L7065  51B0    28 07                 	jr	z,l7065
  51B2    05                    	dec	b		; Remember $I is 00000001b - used multiple
L72DA  51B3    CD 53FB               	call	l72da		; Else error
_COMPDIREC  51B6    5D                    	db	_CompDirec
L709B  51B7    18 36                 	jr	l709b		; Now process include
L7065  51B9                          l7065:
L7B9D  51B9    21 5CBA               	ld	hl,l7b9d	; Point to options
  51BC    7E                    	ld	a,(hl)		; Get current bits
  51BD    A9                    	xor	c		; Toggle bits or let in tact
  51BE    B0                    	or	b		; Insert bit
  51BF    A9                    	xor	c		; Set result
  51C0    77                    	ld	(hl),a
L706D  51C1                          l706d:
L7124  51C1    CD 5265               	call	l7124		; Get character from file
L7070  51C4                          l7070:
  51C4    DD 7E 00              	ld	a,(ix+0)
  51C7    FE 2C                 	cp	','		; Test more
L6FF1  51C9    CA 5145               	jp	z,l6ff1		; Yeap
L7048  51CC    18 CE                 	jr	l7048
L707A  51CE                          l707a:
L7124  51CE    CD 5265               	call	l7124		; Get character from file
  51D1    DD 7E 00              	ld	a,(ix+0)
L7286  51D4    CD 53C7               	call	l7286		; Test digit
L72C8  51D7    CD 53EF               	call	l72c8
_COMPDIREC  51DA    5D                    	db	_CompDirec
  51DB    D6 30                 	sub	'0'
L7BC7  51DD    32 5CE4               	ld	(l7bc7),a	; Change depth for WITH
L706D  51E0    18 DF                 	jr	l706d
                                ;
                                ; Process MS-DOS compatible directives
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-270


                                ;
L708E  51E2                          l708e:
L7124  51E2    CD 5265               	call	l7124		; Get character from file
  51E5    DD 7E 00              	ld	a,(ix+0)
L7286  51E8    CD 53C7               	call	l7286		; Test digit
L708E  51EB    30 F5                 	jr	nc,l708e	; Yeap, skip over
L7070  51ED    18 D5                 	jr	l7070
L709B  51EF                          l709b:
  51EF    FE 20                 	cp	' '
L70A7  51F1    20 08                 	jr	nz,l70a7	; Skip over directive
L7124  51F3    CD 5265               	call	l7124		; Get character from file
  51F6    DD 7E 00              	ld	a,(ix+0)
L709B  51F9    18 F4                 	jr	l709b
L70A7  51FB                          l70a7:
L790E  51FB    3A 5A2B               	ld	a,(l790e)	; Get memory read flag
  51FE    B7                    	or	a
L72DA  51FF    CD 53FB               	call	l72da		; Should be memory read
_INCLERR  5202    60                    	db	_INCLerr
  5203    DD E5                 	push	ix
  5205    D1                    	pop	de
L2D2A  5206    CD 2635               	call	l2d2a		; Prepare .PAS file
  5209    D5                    	push	de
  520A    DD E1                 	pop	ix
L005C  520C    11 005C               	ld	de,l005c
  520F    D5                    	push	de
.OPEN  5210    0E 0F                 	ld	c,.open
L7265  5212    CD 53A6               	call	l7265		; Open file
  5215    E1                    	pop	hl
  5216    3C                    	inc	a
L72D4  5217    CD 53F5               	call	l72d4
_NOFILEERR  521A    5A                    	db	_NoFileErr
L790F  521B    11 5A2C               	ld	de,l790f
FCBLEN  521E    01 0024               	ld	bc,FCBlen
  5221    ED B0                 	ldir			; Unpack file
L7B73  5223    2A 5C90               	ld	hl,(l7b73)	; Get label pointer
L7BE1  5226    ED 5B 5CFE            	ld	de,(l7be1)	; Get top of .COM file
L7BE4  522A    ED 53 5D01            	ld	(l7be4),de	; Save it
  522E    B7                    	or	a
  522F    ED 52                 	sbc	hl,de		; Calculate difference
  5231    CB 3C                 	srl	h
  5233    CB 1D                 	rr	l
  5235    7C                    	ld	a,h
  5236    B7                    	or	a
L72D4  5237    CD 53F5               	call	l72d4		; If hi zero, no memory
_COMPOVFL  523A    63                    	db	_CompOvfl
  523B    7D                    	ld	a,l
RECLNG  523C    E6 80                 	and	RecLng
  523E    6F                    	ld	l,a
  523F    E5                    	push	hl
  5240    29                    	add	hl,hl
  5241    7C                    	ld	a,h
  5242    E1                    	pop	hl
  5243    19                    	add	hl,de
L7BE6  5244    22 5D03               	ld	(l7be6),hl
L7BE9  5247    22 5D06               	ld	(l7be9),hl
L7BE8  524A    32 5D05               	ld	(l7be8),a
L790ETURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-271


  524D    32 5A2B               	ld	(l790e),a	; Re/Set memory read flag
L0000  5250    21 0000               	ld	hl,l0000
L7BEB  5253    22 5D08               	ld	(l7beb),hl
L7B9D  5256    3A 5CBA               	ld	a,(l7b9d)	; Get options
L7B9F  5259    32 5CBC               	ld	(l7b9f),a
L7BC7  525C    3A 5CE4               	ld	a,(l7bc7)	; Get depth for WITH
L7BC8  525F    32 5CE5               	ld	(l7bc8),a
L7048  5262    C3 519C               	jp	l7048
                                ;
                                ; Get character from file
                                ;
L7124  5265                          l7124:
  5265    DD 7E 00              	ld	a,(ix+0)
  5268    DD 23                 	inc	ix
  526A    B7                    	or	a
  526B    C0                    	ret	nz
  526C    C5                    	push	bc
  526D    D5                    	push	de
  526E    E5                    	push	hl
L7BA2  526F    3A 5CBF               	ld	a,(l7ba2)	; Get end of file
  5272    B7                    	or	a
L72DA  5273    CD 53FB               	call	l72da
_ILLSRCEND  5276    5B                    	db	_IllSrcEnd
L7BD7  5277    2A 5CF4               	ld	hl,(l7bd7)	; Get source pointer
L7BD9  527A    22 5CF6               	ld	(l7bd9),hl	; Unpack it
L7BEB  527D    2A 5D08               	ld	hl,(l7beb)
L7BED  5280    22 5D0A               	ld	(l7bed),hl
L79D7  5283    21 5AF4               	ld	hl,l79d7	; Get start of source line
  5286    E5                    	push	hl
  5287    DD E1                 	pop	ix		; Copy it
RECLNG  5289    06 7F                 	ld	b,RecLng-1	; Set max length
L714A  528B                          l714a:
  528B    E5                    	push	hl
  528C    C5                    	push	bc
L71F3  528D    CD 5334               	call	l71f3
  5290    C1                    	pop	bc
  5291    E1                    	pop	hl
CR  5292    FE 0D                 	cp	cr
L7175  5294    28 20                 	jr	z,l7175
EOF  5296    FE 1A                 	cp	eof
L716A  5298    28 11                 	jr	z,l716a
TAB  529A    FE 09                 	cp	tab
L7161  529C    28 04                 	jr	z,l7161
  529E    FE 20                 	cp	' '
L714A  52A0    38 E9                 	jr	c,l714a
L7161  52A2                          l7161:
L7166  52A2    10 03                 	djnz	l7166
  52A4    04                    	inc	b
L714A  52A5    18 E4                 	jr	l714a
L7166  52A7                          l7166:
  52A7    77                    	ld	(hl),a
  52A8    23                    	inc	hl
L714A  52A9    18 E0                 	jr	l714a
L716A  52AB                          l716a:
L7BA2  52AB    32 5CBF               	ld	(l7ba2),a	; Set end of file
L717E  52AE    CD 52BF               	call	l717e
L718FTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-272


  52B1    CD 52D0               	call	l718f		; Test abort
L7178  52B4    18 03                 	jr	l7178
L7175  52B6                          l7175:
L717E  52B6    CD 52BF               	call	l717e
L7178  52B9                          l7178:
  52B9    36 00                 	ld	(hl),0
  52BB    E1                    	pop	hl
  52BC    D1                    	pop	de
  52BD    C1                    	pop	bc
  52BE    C9                    	ret
L717E  52BF                          l717e:
  52BF    F5                    	push	af
  52C0    E5                    	push	hl
L7BEF  52C1    2A 5D0C               	ld	hl,(l7bef)
  52C4    23                    	inc	hl		; Advance line count
L7BEF  52C5    22 5D0C               	ld	(l7bef),hl
  52C8    7D                    	ld	a,l
  52C9    E6 0F                 	and	0fh
L7191  52CB    28 05                 	jr	z,l7191
  52CD    E1                    	pop	hl
  52CE    F1                    	pop	af
  52CF    C9                    	ret
                                ;
                                ; Test abortion of compilation
                                ;
L718F  52D0                          l718f:
  52D0    F5                    	push	af
  52D1    E5                    	push	hl
L7191  52D2                          l7191:
  52D2    C5                    	push	bc
  52D3    D5                    	push	de
  52D4    DD E5                 	push	ix
  52D6    FD E5                 	push	iy
CR  52D8    3E 0D                 	ld	a,cr
L03C9  52DA    CD 03C9               	call	l03c9		; Put to console
L790E  52DD    3A 5A2B               	ld	a,(l790e)	; Test memory read
  52E0    B7                    	or	a
L71A6  52E1    28 04                 	jr	z,l71a6		; Yeap
  52E3    3E 49                 	ld	a,'I'
L71A8  52E5    18 02                 	jr	l71a8
L71A6  52E7                          l71a6:
  52E7    3E 20                 	ld	a,' '
L71A8  52E9                          l71a8:
L03C9  52E9    CD 03C9               	call	l03c9		; Put to console
  52EC    3E 20                 	ld	a,' '
L03C9  52EE    CD 03C9               	call	l03c9		; Put to console
L7BEF  52F1    2A 5D0C               	ld	hl,(l7bef)	; Get line count
L2E61  52F4    CD 268D               	call	l2e61		; Print number
L00A0  52F7    CD 00A0               	call	l00a0		; Test key pressed
  52FA    B7                    	or	a
L71EA  52FB    28 2E                 	jr	z,l71ea
L0200  52FD    CD 0200               	call	l0200
  5300    20 20 20 2A           	db	'   *** Abort compilation'
  5304    2A 2A 20 41           
  5308    62 6F 72 74           
  530C    20 63 6F 6D           
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-273


  5310    70 69 6C 61           
  5314    74 69 6F 6E           
NULL  5318    00                    	db	null
L2D01  5319    CD 2615               	call	l2d01		; Ask for YES or NO
L72DA  531C    CD 53FB               	call	l72da
_ABORT  531F    CA                    	db	_ABORT
  5320    06 20                 	ld	b,32
L71E1  5322                          l71e1:
L0200  5322    CD 0200               	call	l0200
BSBS  5325    08 20 08              	db	bs,' ',bs
NULL  5328    00                    	db	null
L71E1  5329    10 F7                 	djnz	l71e1
L71EA  532B                          l71ea:
  532B    FD E1                 	pop	iy
  532D    DD E1                 	pop	ix
  532F    D1                    	pop	de
  5330    C1                    	pop	bc
  5331    E1                    	pop	hl
  5332    F1                    	pop	af
  5333    C9                    	ret
                                ;
                                ; Read character from file
                                ;
L71F3  5334                          l71f3:
L790E  5334    3A 5A2B               	ld	a,(l790e)	; Test memory read
  5337    B7                    	or	a
L7205  5338    20 0C                 	jr	nz,l7205	; Nope
L71F9  533A                          l71f9:
L7BD7  533A    2A 5CF4               	ld	hl,(l7bd7)	; Get source pointer
  533D    7E                    	ld	a,(hl)
EOF  533E    FE 1A                 	cp	eof		; Test end of file
  5340    C8                    	ret	z		; Yeap
  5341    23                    	inc	hl
L7BD7  5342    22 5CF4               	ld	(l7bd7),hl
  5345    C9                    	ret
L7205  5346                          l7205:
L7BE9  5346    2A 5D06               	ld	hl,(l7be9)
L7BE6  5349    ED 5B 5D03            	ld	de,(l7be6)
  534D    B7                    	or	a
  534E    ED 52                 	sbc	hl,de
  5350    19                    	add	hl,de
L7242  5351    38 30                 	jr	c,l7242
L7BE4  5353    ED 5B 5D01            	ld	de,(l7be4)	; Get top of .COM file
L7BE8  5357    3A 5D05               	ld	a,(l7be8)
  535A    47                    	ld	b,a
L721A  535B                          l721a:
  535B    C5                    	push	bc
  535C    D5                    	push	de
.SETDMA  535D    0E 1A                 	ld	c,.setdma
L7265  535F    CD 53A6               	call	l7265		; Set disk buffer
L790F  5362    11 5A2C               	ld	de,l790f
.RDSEQ  5365    0E 14                 	ld	c,.rdseq
L7265  5367    CD 53A6               	call	l7265		; Read record
  536A    D1                    	pop	de
  536B    C1                    	pop	bc
  536C    B7                    	or	a
L7237TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-274


  536D    20 09                 	jr	nz,l7237
RECLNG  536F    21 0080               	ld	hl,RecLng
  5372    19                    	add	hl,de		; Advance buffer
  5373    EB                    	ex	de,hl
L721A  5374    10 E5                 	djnz	l721a
L723F  5376    18 08                 	jr	l723f
L7237  5378                          l7237:
EOF  5378    3E 1A                 	ld	a,eof		; Set end of file
  537A    12                    	ld	(de),a
  537B    13                    	inc	de
L7BE6  537C    ED 53 5D03            	ld	(l7be6),de
L723F  5380                          l723f:
L7BE4  5380    2A 5D01               	ld	hl,(l7be4)	; Get top of .COM file
L7242  5383                          l7242:
  5383    7E                    	ld	a,(hl)
  5384    23                    	inc	hl
L7BE9  5385    22 5D06               	ld	(l7be9),hl
EOF  5388    FE 1A                 	cp	eof
L725D  538A    20 12                 	jr	nz,l725d
  538C    AF                    	xor	a
L790E  538D    32 5A2B               	ld	(l790e),a	; Enable memory read
L7B9F  5390    3A 5CBC               	ld	a,(l7b9f)
L7B9D  5393    32 5CBA               	ld	(l7b9d),a	; Reset options
L7BC8  5396    3A 5CE5               	ld	a,(l7bc8)
L7BC7  5399    32 5CE4               	ld	(l7bc7),a	; Set depth for WITH
L71F9  539C    18 9C                 	jr	l71f9
L725D  539E                          l725d:
L7BEB  539E    2A 5D08               	ld	hl,(l7beb)
  53A1    23                    	inc	hl
L7BEB  53A2    22 5D08               	ld	(l7beb),hl
  53A5    C9                    	ret
                                ;
                                ; Perform OS call
                                ;
L7265  53A6                          l7265:
  53A6    DD E5                 	push	ix		; Preserve index registers
  53A8    FD E5                 	push	iy
BDOS  53AA    CD 0005               	call	BDOS		; Call system
  53AD    FD E1                 	pop	iy
  53AF    DD E1                 	pop	ix
  53B1    C9                    	ret
                                ;
                                ; Test label character
                                ; C set says no
                                ;
L7271  53B2                          l7271:
  53B2    FE 41                 	cp	'A'
  53B4    D8                    	ret	c
  53B5    FE 5B                 	cp	'Z'+1
  53B7    3F                    	ccf
  53B8    D0                    	ret	nc
  53B9    FE 5F                 	cp	'_'
  53BB    C8                    	ret	z
  53BC    FE 61                 	cp	'a'
  53BE    D8                    	ret	c
  53BF    FE 7B                 	cp	'z'+1
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-275


  53C1    3F                    	ccf
  53C2    C9                    	ret
                                ;
                                ; Test valid character
                                ; C set says no
                                ;
L7282  53C3                          l7282:
L7271  53C3    CD 53B2               	call	l7271		; Test label character
  53C6    D0                    	ret	nc		; Yeap
                                ;
                                ; Test character a digit
                                ; C set says no
                                ;
L7286  53C7                          l7286:
  53C7    FE 30                 	cp	'0'		; Test digit
  53C9    D8                    	ret	c
  53CA    FE 3A                 	cp	'9'+1
  53CC    3F                    	ccf
  53CD    C9                    	ret
                                ;
                                ; Compare signed integers HL:DE
                                ;
                                ; C set if HL<DE
                                ; Z set if HL=DE
                                ;
L728D  53CE                          l728d:
  53CE    7C                    	ld	a,h
  53CF    AA                    	xor	d
  53D0    7C                    	ld	a,h
L7298  53D1    FA 53D9               	jp	m,l7298
  53D4    BA                    	cp	d
  53D5    C0                    	ret	nz
  53D6    7D                    	ld	a,l
  53D7    BB                    	cp	e
  53D8    C9                    	ret
L7298  53D9                          l7298:
  53D9    17                    	rla
  53DA    C9                    	ret
                                ;
                                ; HL:=HL*DE - C set on overflow
                                ;
L729A  53DB                          l729a:
  53DB    44                    	ld	b,h
  53DC    4D                    	ld	c,l
  53DD    21 0000               	ld	hl,0		; Init product
  53E0    3E 10                 	ld	a,16
L72A1  53E2                          l72a1:
  53E2    29                    	add	hl,hl
  53E3    D8                    	ret	c
  53E4    EB                    	ex	de,hl
  53E5    29                    	add	hl,hl
  53E6    EB                    	ex	de,hl
L72AA  53E7    30 02                 	jr	nc,l72aa
  53E9    09                    	add	hl,bc
  53EA    D8                    	ret	c
L72AA  53EB                          l72aa:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-276


  53EB    3D                    	dec	a
L72A1  53EC    20 F4                 	jr	nz,l72a1
  53EE    C9                    	ret
                                ;
                                ; Process error if entry C
                                ;
L72C8  53EF                          l72c8:
  53EF    E3                    	ex	(sp),hl
  53F0    23                    	inc	hl		; Fix caller's address
  53F1    E3                    	ex	(sp),hl
  53F2    D0                    	ret	nc		; No error
L72DE  53F3    18 0A                 	jr	l72de
                                ;
                                ; Process error if entry Z
                                ;
L72D4  53F5                          l72d4:
  53F5    E3                    	ex	(sp),hl
  53F6    23                    	inc	hl		; Fix caller's address
  53F7    E3                    	ex	(sp),hl
  53F8    C0                    	ret	nz		; No error
L72DE  53F9    18 04                 	jr	l72de
                                ;
                                ; Process error if entry NZ
                                ;
L72DA  53FB                          l72da:
  53FB    E3                    	ex	(sp),hl
  53FC    23                    	inc	hl		; Fix caller's address
  53FD    E3                    	ex	(sp),hl
  53FE    C8                    	ret	z		; No error
                                ;
                                ; Common entry of error routine
                                ;
L72DE  53FF                          l72de:
  53FF    E1                    	pop	hl		; Get back caller
  5400    2B                    	dec	hl		; Fix pointer
  5401    E5                    	push	hl
                                ;
                                ; Process error
                                ;
L72E1  5402                          l72e1::
  5402    E1                    	pop	hl		; Get pointer
  5403    7E                    	ld	a,(hl)		; Fetch error number
L72E3  5404                          l72e3:
L718F  5404    CD 52D0               	call	l718f		; Test abort
L7901  5407    32 5A1E               	ld	(l7901),a
  540A    B7                    	or	a
L730C  540B    28 23                 	jr	z,l730c
  540D    DD E5                 	push	ix
  540F    E1                    	pop	hl
L79D7  5410    11 5AF4               	ld	de,l79d7	; Get start of source line
  5413    ED 52                 	sbc	hl,de
ERRPOS  5415    22 2306               	ld	(errpos),hl	; Build error position
L7BED  5418    ED 5B 5D0A            	ld	de,(l7bed)
L790E  541C    3A 5A2B               	ld	a,(l790e)	; Test memory read
  541F    B7                    	or	a
L7308  5420    20 0A                 	jr	nz,l7308	; Nope
L4544TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-277


  5422    ED 5B 2706            	ld	de,(l4544)	; Get start of text
  5426    ED 52                 	sbc	hl,de
L7BD9  5428    ED 5B 5CF6            	ld	de,(l7bd9)	; Get back source pointer
L7308  542C                          l7308:
  542C    19                    	add	hl,de
L790C  542D    22 5A29               	ld	(l790c),hl	; Save current editor address
L730C  5430                          l730c:
L7933  5430    11 5A50               	ld	de,l7933
.CLOSE  5433    0E 10                 	ld	c,.close
L7265  5435    CD 53A6               	call	l7265		; Close file
L7B71  5438    ED 7B 5C8E            	ld	sp,(l7b71)	; Get back stack
  543C    C9                    	ret			; Exit compiler
                                ;
                                ; Compiler tables
                                ; Internal label table
                                ;
                                ; -->> INTEGER
                                ;
L731F  543D                          l731f:
..INT  543D    000B                  	dw	..INT
$$INT  543F                          $$INT:
L74D3  543F    55F8                  	dw	l74d3+7
MSB  5441    D2 45 47 45           	db	'R'+MSB,'EGETNI'
  5445    54 4E 49              
_TYPE  5448    00 03                 	db	0,_Type
..INT$$INT  000B                          ..INT	equ	$-$$INT
                                ;
                                ; -->> CHAR
                                ;
..CHAR  544A    0008                  	dw	..CHAR
$$CHAR  544C                          $$CHAR:
L74DB  544C    5600                  	dw	l74db+7
MSB  544E    D2 41 48 43           	db	'R'+MSB,'AHC'
_TYPE  5452    00 03                 	db	0,_Type
..CHAR$$CHAR  0008                          ..CHAR	equ	$-$$CHAR
                                ;
                                ; -->> REAL
                                ;
..REAL  5454    0008                  	dw	..REAL
$$REAL  5456                          $$REAL:
L74E3  5456    5608                  	dw	l74e3+7
MSB  5458    CC 41 45 52           	db	'L'+MSB,'AER'
_TYPE  545C    00 03                 	db	0,_Type
..REAL$$REAL  0008                          ..REAL	equ	$-$$REAL
                                ;
                                ; -->> BOOLEAN
                                ;
..BOOL  545E    000B                  	dw	..BOOL
$$BOOL  5460                          $$BOOL:
L74EB  5460    5610                  	dw	l74eb+7
MSB  5462    CE 41 45 4C           	db	'N'+MSB,'AELOOB'
  5466    4F 4F 42              
_TYPE  5469    00 03                 	db	0,_Type
..BOOL$$BOOL  000B                          ..BOOL	equ	$-$$BOOL
                                ;
                                ; -->> TEXT
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-278


                                ;
..TEXT  546B    0008                  	dw	..TEXT
$$TEXT  546D                          $$TEXT:
L74F3  546D    5618                  	dw	l74f3+7
MSB  546F    D4 58 45 54           	db	'T'+MSB,'XET'
_TYPE  5473    00 03                 	db	0,_Type
..TEXT$$TEXT  0008                          ..TEXT	equ	$-$$TEXT
                                ;
                                ; -->> BYTE
                                ;
..BYTE  5475    0008                  	dw	..BYTE
$$BYTE  5477                          $$BYTE:
L74FB  5477    5620                  	dw	l74fb+7
MSB  5479    C5 54 59 42           	db	'E'+MSB,'TYB'
_TYPE  547D    00 03                 	db	0,_Type
..BYTE$$BYTE  0008                          ..BYTE	equ	$-$$BYTE
                                ;
                                ; -->> TRUE
                                ;
..TRUE  547F    0009                  	dw	..TRUE
$$TRUE  5481                          $$TRUE:
.TRUE  5481    0001                  	dw	.TRUE
_BOOL  5483    0B                    	db	_Bool
MSB  5484    C5 55 52 54           	db	'E'+MSB,'URT'
_CONST  5488    00 02                 	db	0,_Const
..TRUE$$TRUE  0009                          ..TRUE	equ	$-$$TRUE
                                ;
                                ; -->> FALSE
                                ;
..FALSE  548A    000A                  	dw	..FALSE
$$FALSE  548C                          $$FALSE:
FALSE  548C    0000                  	dw	FALSE
_BOOL  548E    0B                    	db	_Bool
MSB  548F    C5 53 4C 41           	db	'E'+MSB,'SLAF'
  5493    46                    
_CONST  5494    00 02                 	db	0,_Const
..FALSE$$FALSE  000A                          ..FALSE	equ	$-$$FALSE
                                ;
                                ; -->> MAXINT
                                ;
..MXINT  5496    000B                  	dw	..MXINT
$$MAXINT  5498                          $$MAXINT:
MAXINT  5498    7FFF                  	dw	MAXINT
_INTEG  549A    0A                    	db	_Integ
MSB  549B    D4 4E 49 58           	db	'T'+MSB,'NIXAM'
  549F    41 4D                 
_CONST  54A1    00 02                 	db	0,_Const
..MXINT$$MAXINT  000B                          ..MXINT	equ	$-$$MAXINT
                                ;
                                ; -->> PI
                                ;
..PI  54A3    000B                  	dw	..PI
$$PI  54A5                          $$PI:
  54A5    82 21 A2 DA           	db	082h,021h,0a2h,0dah,00fh,049h
  54A9    0F 49                 
_REAL  54AB    09                    	db	_Real
MSBTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-279


  54AC    C9 50                 	db	'I'+MSB,'P'
_CONST  54AE    00 02                 	db	0,_Const
..PI$$PI  000B                          ..PI	equ	$-$$PI
                                ;
                                ; -->> OUTPUT
                                ;
..OUTP  54B0    000D                  	dw	..OUTP
$$OUTP  54B2                          $$OUTP:
L74F3  54B2    5618                  	dw	l74f3+7
L00C2  54B4    00C2                  	dw	l00c2
  54B6    00                    	db	0
MSB  54B7    D4 55 50 54           	db	'T'+MSB,'UPTUO'
  54BB    55 4F                 
  54BD    00 04                 	db	0,4
..OUTP$$OUTP  000D                          ..OUTP	equ	$-$$OUTP
                                ;
                                ; -->> INPUT
                                ;
..INPT  54BF    000C                  	dw	..INPT
$$INPT  54C1                          $$INPT:
L74F3  54C1    5618                  	dw	l74f3+7
L00C2  54C3    00C2                  	dw	l00c2
  54C5    00                    	db	0
MSB  54C6    D4 55 50 4E           	db	'T'+MSB,'UPNI'
  54CA    49                    
_PTR  54CB    00 04                 	db	0,_Ptr
..INPT$$INPT  000C                          ..INPT	equ	$-$$INPT
                                ;
                                ; -->> CON
                                ;
..CON  54CD    000A                  	dw	..CON
$$CON  54CF                          $$CON:
L74F3  54CF    5618                  	dw	l74f3+7
L00B8  54D1    00B8                  	dw	l00b8
  54D3    00                    	db	0
MSB  54D4    CE 4F 43              	db	'N'+MSB,'OC'
_PTR  54D7    00 04                 	db	0,_Ptr
..CON$$CON  000A                          ..CON	equ	$-$$CON
                                ;
                                ; -->> TRM
                                ;
..TRM  54D9    000A                  	dw	..TRM
$$TRM  54DB                          $$TRM:
L74F3  54DB    5618                  	dw	l74f3+7
L00B8  54DD    00B8                  	dw	l00b8
  54DF    00                    	db	0
MSB  54E0    CD 52 54              	db	'M'+MSB,'RT'
_PTR  54E3    00 04                 	db	0,_Ptr
..TRM$$TRM  000A                          ..TRM	equ	$-$$TRM
                                ;
                                ; -->> KBD
                                ;
..KBD  54E5    000A                  	dw	..KBD
$$KBD  54E7                          $$KBD:
L74F3  54E7    5618                  	dw	l74f3+7
L00BA  54E9    00BA                  	dw	l00ba
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-280


  54EB    00                    	db	0
MSB  54EC    C4 42 4B              	db	'D'+MSB,'BK'
_PTR  54EF    00 04                 	db	0,_Ptr
..KBD$$KBD  000A                          ..KBD	equ	$-$$KBD
                                ;
                                ; -->> LST
                                ;
..LST  54F1    000A                  	dw	..LST
$$LST  54F3                          $$LST:
L74F3  54F3    5618                  	dw	l74f3+7
L00BC  54F5    00BC                  	dw	l00bc
  54F7    00                    	db	0
MSB  54F8    D4 53 4C              	db	'T'+MSB,'SL'
_PTR  54FB    00 04                 	db	0,_Ptr
..LST$$LST  000A                          ..LST	equ	$-$$LST
                                ;
                                ; -->> AUX
                                ;
..AUX  54FD    000A                  	dw	..AUX
$$AUX  54FF                          $$AUX:
L74F3  54FF    5618                  	dw	l74f3+7
L00BE  5501    00BE                  	dw	l00be
  5503    00                    	db	0
MSB  5504    D8 55 41              	db	'X'+MSB,'UA'
_PTR  5507    00 04                 	db	0,_Ptr
..AUX$$AUX  000A                          ..AUX	equ	$-$$AUX
                                ;
                                ; -->> USR
                                ;
..USR  5509    000A                  	dw	..USR
$$USR  550B                          $$USR:
L74F3  550B    5618                  	dw	l74f3+7
L00C0  550D    00C0                  	dw	l00c0
  550F    00                    	db	0
MSB  5510    D2 53 55              	db	'R'+MSB,'SU'
_PTR  5513    00 04                 	db	0,_Ptr
..USR$$USR  000A                          ..USR	equ	$-$$USR
                                ;
                                ; -->> BUFLEN
                                ;
..BUFL  5515    000D                  	dw	..BUFL
$$BUFL  5517                          $$BUFL:
L74FB  5517    5620                  	dw	l74fb+7
L00D1  5519    00D1                  	dw	l00d1
  551B    00                    	db	0
MSB  551C    CE 45 4C 46           	db	'N'+MSB,'ELFUB'
  5520    55 42                 
_PTR  5522    00 04                 	db	0,_Ptr
..BUFL$$BUFL  000D                          ..BUFL	equ	$-$$BUFL
                                ;
                                ; -->> HEAPPTR
                                ;
..HEAP  5524    000E                  	dw	..HEAP
$$HEAP  5526                          $$HEAP:
L74D3  5526    55F8                  	dw	l74d3+7
L00C4  5528    00C4                  	dw	l00c4
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-281


  552A    00                    	db	0
MSB  552B    D2 54 50 50           	db	'R'+MSB,'TPPAEH'
  552F    41 45 48              
_PTR  5532    00 04                 	db	0,_Ptr
..HEAP$$HEAP  000E                          ..HEAP	equ	$-$$HEAP
                                ;
                                ; -->> RECURPTR
                                ;
..RECUR  5534    000F                  	dw	..RECUR
$$RECUR  5536                          $$RECUR:
L74D3  5536    55F8                  	dw	l74d3+7
L00C6  5538    00C6                  	dw	l00c6
  553A    00                    	db	0
MSB  553B    D2 54 50 52           	db	'R'+MSB,'TPRUCER'
  553F    55 43 45 52           
_PTR  5543    00 04                 	db	0,_Ptr
..RECUR$$RECUR  000F                          ..RECUR	equ	$-$$RECUR
                                ;
                                ; -->> CONSTPTR
                                ;
..CONSP  5545    000F                  	dw	..CONSP
$$CONSP  5547                          $$CONSP:
L74D3  5547    55F8                  	dw	l74d3+7
L00A0  5549    00A1                  	dw	l00a0+1
  554B    00                    	db	0
MSB  554C    D2 54 50 54           	db	'R'+MSB,'TPTSNOC'
  5550    53 4E 4F 43           
_PTR  5554    00 04                 	db	0,_Ptr
..CONSP$$CONSP  000F                          ..CONSP	equ	$-$$CONSP
                                ;
                                ; -->> CONINPTR
                                ;
..CONIP  5556    000F                  	dw	..CONIP
$$CONIP  5558                          $$CONIP:
L74D3  5558    55F8                  	dw	l74d3+7
L00A3  555A    00A4                  	dw	l00a3+1
  555C    00                    	db	0
MSB  555D    D2 54 50 4E           	db	'R'+MSB,'TPNINOC'
  5561    49 4E 4F 43           
_PTR  5565    00 04                 	db	0,_Ptr
..CONIP$$CONIP  000F                          ..CONIP	equ	$-$$CONIP
                                ;
                                ; -->> CONOUTPTR
                                ;
..CONOP  5567    0010                  	dw	..CONOP
$$CONOP  5569                          $$CONOP:
L74D3  5569    55F8                  	dw	l74d3+7
L00A6  556B    00A7                  	dw	l00a6+1
  556D    00                    	db	0
MSB  556E    D2 54 50 54           	db	'R'+MSB,'TPTUONOC'
  5572    55 4F 4E 4F           
  5576    43                    
_PTR  5577    00 04                 	db	0,_Ptr
..CONOP$$CONOP  0010                          ..CONOP	equ	$-$$CONOP
                                ;
                                ; -->> LSTOUTPTR
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-282


                                ;
..LSTOP  5579    0010                  	dw	..LSTOP
$$LSTOP  557B                          $$LSTOP:
L74D3  557B    55F8                  	dw	l74d3+7
L00A9  557D    00AA                  	dw	l00a9+1
  557F    00                    	db	0
MSB  5580    D2 54 50 54           	db	'R'+MSB,'TPTUOTSL'
  5584    55 4F 54 53           
  5588    4C                    
_PTR  5589    00 04                 	db	0,_Ptr
..LSTOP$$LSTOP  0010                          ..LSTOP	equ	$-$$LSTOP
                                ;
                                ; -->> AUXINPTR
                                ;
..AUXIP  558B    000F                  	dw	..AUXIP
$$AUXIP  558D                          $$AUXIP:
L74D3  558D    55F8                  	dw	l74d3+7
L00AF  558F    00B0                  	dw	l00af+1
  5591    00                    	db	0
MSB  5592    D2 54 50 4E           	db	'R'+MSB,'TPNIXUA'
  5596    49 58 55 41           
_PTR  559A    00 04                 	db	0,_Ptr
..AUXIP$$AUXIP  000F                          ..AUXIP	equ	$-$$AUXIP
                                ;
                                ; -->> AUXOUTPTR
                                ;
..AUXOP  559C    0010                  	dw	..AUXOP
$$AUXOP  559E                          $$AUXOP:
L74D3  559E    55F8                  	dw	l74d3+7
L00AC  55A0    00AD                  	dw	l00ac+1
  55A2    00                    	db	0
MSB  55A3    D2 54 50 54           	db	'R'+MSB,'TPTUOXUA'
  55A7    55 4F 58 55           
  55AB    41                    
_PTR  55AC    00 04                 	db	0,_Ptr
..AUXOP$$AUXOP  0010                          ..AUXOP	equ	$-$$AUXOP
                                ;
                                ; -->> USRINPTR
                                ;
..USRIP  55AE    000F                  	dw	..USRIP
$$USRIP  55B0                          $$USRIP:
L74D3  55B0    55F8                  	dw	l74d3+7
L00B5  55B2    00B6                  	dw	l00b5+1
  55B4    00                    	db	0
MSB  55B5    D2 54 50 4E           	db	'R'+MSB,'TPNIRSU'
  55B9    49 52 53 55           
_PTR  55BD    00 04                 	db	0,_Ptr
..USRIP$$USRIP  000F                          ..USRIP	equ	$-$$USRIP
                                ;
                                ; -->> USROUTPTR
                                ;
..USROP  55BF    0010                  	dw	..USROP
$$USROP  55C1                          $$USROP:
L74D3  55C1    55F8                  	dw	l74d3+7
L00B2  55C3    00B3                  	dw	l00b2+1
  55C5    00                    	db	0
MSBTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-283


  55C6    D2 54 50 54           	db	'R'+MSB,'TPTUORSU'
  55CA    55 4F 52 53           
  55CE    55                    
_PTR  55CF    00 04                 	db	0,_Ptr
..USROP$$USROP  0010                          ..USROP	equ	$-$$USROP
                                ;
                                ; -->> ERRORPTR
                                ;
..ERRPT  55D1    000F                  	dw	..ERRPT
$$ERRPT  55D3                          $$ERRPT:
L74D3  55D3    55F8                  	dw	l74d3+7
L00DA  55D5    00DA                  	dw	l00da
  55D7    00                    	db	0
MSB  55D8    D2 54 50 52           	db	'R'+MSB,'TPRORRE'
  55DC    4F 52 52 45           
_PTR  55E0    00 04                 	db	0,_Ptr
..ERRPT$$ERRPT  000F                          ..ERRPT	equ	$-$$ERRPT
                                ;
                                ; -->> CBREAK
                                ;
..CBRK  55E2    000D                  	dw	..CBRK
$$CBRK  55E4                          $$CBRK:
L74EB  55E4    5610                  	dw	l74eb+7
L00DD  55E6    00DD                  	dw	l00dd
  55E8    00                    	db	0
MSB  55E9    CB 41 45 52           	db	'K'+MSB,'AERBC'
  55ED    42 43                 
_PTR  55EF    00 04                 	db	0,_Ptr
..CBRK$$CBRK  000D                          ..CBRK	equ	$-$$CBRK
INTLABTAB  55F1                          IntLabTab:
LENLABINTLABTABL731F  01B4                          LenLab	equ	IntLabTab-l731f
                                ;
                                ; Standard type length table
                                ; Note HI-LO entries of definition words
                                ;
                                
DWW                                dww	macro	val
                                	db	HIGH val
                                	db	LOW  val
                                	endm
                                
L74D3  55F1                          l74d3:
DWW                                	dww	2		; Length for this type
  55F1    00              +     	db	HIGH 2
  55F2    02              +     	db	LOW  2
DWW                                	dww	MAXINT		; Max value
MAXINT  55F3    7F              +     	db	HIGH MAXINT
MAXINT  55F4    FF              +     	db	LOW  MAXINT
DWW                                	dww	(-MAXINT-1)	; Min value
MAXINT  55F5    80              +     	db	HIGH (-MAXINT-1)
MAXINT  55F6    00              +     	db	LOW  (-MAXINT-1)
DWW                                	dww	_Integ		; Type
_INTEG  55F7    00              +     	db	HIGH _Integ
_INTEG  55F8    0A              +     	db	LOW  _Integ
L74DB  55F9                          l74db:
DWW                                	dww	1
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-284


  55F9    00              +     	db	HIGH 1
  55FA    01              +     	db	LOW  1
DWW                                	dww	255
  55FB    00              +     	db	HIGH 255
  55FC    FF              +     	db	LOW  255
DWW                                	dww	0
  55FD    00              +     	db	HIGH 0
  55FE    00              +     	db	LOW  0
DWW                                	dww	_Char
_CHAR  55FF    00              +     	db	HIGH _Char
_CHAR  5600    0C              +     	db	LOW  _Char
L74E3  5601                          l74e3:
DWW                                	dww	6
  5601    00              +     	db	HIGH 6
  5602    06              +     	db	LOW  6
DWW                                	dww	0
  5603    00              +     	db	HIGH 0
  5604    00              +     	db	LOW  0
DWW                                	dww	0
  5605    00              +     	db	HIGH 0
  5606    00              +     	db	LOW  0
DWW                                	dww	_Real
_REAL  5607    00              +     	db	HIGH _Real
_REAL  5608    09              +     	db	LOW  _Real
L74EB  5609                          l74eb:
DWW                                	dww	1
  5609    00              +     	db	HIGH 1
  560A    01              +     	db	LOW  1
DWW                                	dww	.TRUE
.TRUE  560B    00              +     	db	HIGH .TRUE
.TRUE  560C    01              +     	db	LOW  .TRUE
DWW                                	dww	FALSE
FALSE  560D    00              +     	db	HIGH FALSE
FALSE  560E    00              +     	db	LOW  FALSE
DWW                                	dww	_Bool
_BOOL  560F    00              +     	db	HIGH _Bool
_BOOL  5610    0B              +     	db	LOW  _Bool
L74F3  5611                          l74f3:
DWW                                	dww	(FIBlen+RecLng)
FIBLENRECLNG  5611    00              +     	db	HIGH (FIBlen+RecLng)
FIBLENRECLNG  5612    B0              +     	db	LOW  (FIBlen+RecLng)
DWW                                	dww	0
  5613    00              +     	db	HIGH 0
  5614    00              +     	db	LOW  0
DWW                                	dww	0
  5615    00              +     	db	HIGH 0
  5616    00              +     	db	LOW  0
DWW                                	dww	_TxtF
_TXTF  5617    00              +     	db	HIGH _TxtF
_TXTF  5618    06              +     	db	LOW  _TxtF
L74FB  5619                          l74fb:
DWW                                	dww	1
  5619    00              +     	db	HIGH 1
  561A    01              +     	db	LOW  1
DWW                                	dww	255
  561B    00              +     	db	HIGH 255
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-285


  561C    FF              +     	db	LOW  255
DWW                                	dww	0
  561D    00              +     	db	HIGH 0
  561E    00              +     	db	LOW  0
DWW                                	dww	_Integ
_INTEG  561F    00              +     	db	HIGH _Integ
_INTEG  5620    0A              +     	db	LOW  _Integ
                                ;
DWW                                	dww	(DefSTR+1)
DEFSTR  5621    00              +     	db	HIGH (DefSTR+1)
DEFSTR  5622    09              +     	db	LOW  (DefSTR+1)
DWW                                	dww	0
  5623    00              +     	db	HIGH 0
  5624    00              +     	db	LOW  0
DWW                                	dww	0
  5625    00              +     	db	HIGH 0
  5626    00              +     	db	LOW  0
DWW                                	dww	_String
_STRING  5627    00              +     	db	HIGH _String
_STRING  5628    08              +     	db	LOW  _String
L750B  5629                          l750b:
DWW                                	dww	0
  5629    00              +     	db	HIGH 0
  562A    00              +     	db	LOW  0
DWW                                	dww	0
  562B    00              +     	db	HIGH 0
  562C    00              +     	db	LOW  0
DWW                                	dww	0
  562D    00              +     	db	HIGH 0
  562E    00              +     	db	LOW  0
DWW                                	dww	0
  562F    00              +     	db	HIGH 0
  5630    00              +     	db	LOW  0
                                ;
                                ; Table of reserved words
                                ;
L7513  5631                          l7513:
  5631    00                    	db	0
L7529  5632    5647                  	dw	l7529
_BYTE  5634    01                    	db	_Byte
L7584  5635    56A2                  	dw	l7584
_ADDR  5637    02                    	db	_Addr
L75BB  5638    56D9                  	dw	l75bb
_BYTE  563A    01                    	db	_Byte
L75F5  563B    5713                  	dw	l75f5
_BYTE  563D    01                    	db	_Byte
L7604  563E    5722                  	dw	l7604
_BYTE  5640    01                    	db	_Byte
L761D  5641    573B                  	dw	l761d
_BYTE  5643    01                    	db	_Byte
L7634  5644    5752                  	dw	l7634
  5646    FF                    	db	-1
                                ;
                                ; Keywords
                                ;
L7529  5647                          l7529:
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-286


  5647    50 52 4F 47           	dc	'PROGRAM'
  564B    52 41 CD              
L7530  564E                          l7530:
  564E    45 4E C4              	dc	'END'
L7533  5651                          l7533:
  5651    46 4F 52 57           	dc	'FORWARD'
  5655    41 52 C4              
L753A  5658                          l753a:
  5658    45 58 54 45           	dc	'EXTERNAL'
  565C    52 4E 41 CC           
L7542  5660                          l7542:
  5660    50 41 43 4B           	dc	'PACKED'
  5664    45 C4                 
L7548  5666                          l7548:
  5666    41 52 52 41           	dc	'ARRAY'
  566A    D9                    
L754D  566B                          l754d:
  566B    46 49 4C C5           	dc	'FILE'
L7551  566F                          l7551:
  566F    53 45 D4              	dc	'SET'
L7554  5672                          l7554:
  5672    52 45 43 4F           	dc	'RECORD'
  5676    52 C4                 
L755A  5678                          l755a:
  5678    53 54 52 49           	dc	'STRING'
  567C    4E C7                 
L7560  567E                          l7560:
  567E    4F C6                 	dc	'OF'
L7562  5680                          l7562:
  5680    41 42 53 4F           	dc	'ABSOLUTE'
  5684    4C 55 54 C5           
L756A  5688                          l756a:
  5688    54 48 45 CE           	dc	'THEN'
L756E  568C                          l756e:
  568C    45 4C 53 C5           	dc	'ELSE'
L7572  5690                          l7572:
  5690    44 CF                 	dc	'DO'
L7574  5692                          l7574:
  5692    55 4E 54 49           	dc	'UNTIL'
  5696    CC                    
L7579  5697                          l7579:
  5697    4E 4F D4              	dc	'NOT'
L757C  569A                          l757c:
  569A    4E 49 CC              	dc	'NIL'
  569D    00                    	db	0
L7580  569E                          l7580:
  569E    2E AE                 	dc	'..'
L7582  56A0                          l7582:
  56A0    3A BD                 	dc	':='
                                ;
                                ; Main block table
                                ; -->> Code is type
                                ;
L7584  56A2                          l7584:
  56A2    4C 41 42 45           	dc	'LABEL'
  56A6    CC                    
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-287


  56A7    01                    	db	1
  56A8    43 4F 4E 53           	dc	'CONST'
  56AC    D4                    
  56AD    02                    	db	2
  56AE    54 59 50 C5           	dc	'TYPE'
  56B2    03                    	db	3
L7595  56B3                          l7595:
  56B3    56 41 D2              	dc	'VAR'
  56B6    04                    	db	4
  56B7    42 45 47 49           	dc	'BEGIN'
  56BB    CE                    
  56BC    08                    	db	8
L759F  56BD                          l759f:
  56BD    4F 56 45 52           	dc	'OVERLAY'
  56C1    4C 41 D9              
  56C4    07                    	db	7
L75A7  56C5                          l75a7:
  56C5    50 52 4F 43           	dc	'PROCEDURE'
  56C9    45 44 55 52           
  56CD    C5                    
  56CE    05                    	db	5
  56CF    46 55 4E 43           	dc	'FUNCTION'
  56D3    54 49 4F CE           
  56D7    06                    	db	6
  56D8    00                    	db	0
                                ;
                                ; Statement table
                                ;
L75BB  56D9                          l75bb:
  56D9    42 45 47 49           	dc	'BEGIN'
  56DD    CE                    
L5377  56DE    350D                  	dw	l5377
  56E0    49 C6                 	dc	'IF'
L53EF  56E2    3585                  	dw	l53ef
  56E4    57 48 49 4C           	dc	'WHILE'
  56E8    C5                    
L5424  56E9    35BA                  	dw	l5424
  56EB    52 45 50 45           	dc	'REPEAT'
  56EF    41 D4                 
L544C  56F1    35E2                  	dw	l544c
  56F3    46 4F D2              	dc	'FOR'
L546B  56F6    3601                  	dw	l546b
L75DA  56F8                          l75da:
  56F8    43 41 53 C5           	dc	'CASE'
L5521  56FC    36B7                  	dw	l5521
  56FE    47 4F 54 CF           	dc	'GOTO'
L5626  5702    37BC                  	dw	l5626
  5704    57 49 54 C8           	dc	'WITH'
L564E  5708    37E4                  	dw	l564e
  570A    49 4E 4C 49           	dc	'INLINE'
  570E    4E C5                 
L5698  5710    382E                  	dw	l5698
  5712    00                    	db	0
L75F5  5713                          l75f5:
  5713    54 CF                 	dc	'TO'
  5715    23                    	inc	hl
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-288


  5716    44 4F 57 4E           	dc	'DOWNTO'
  571A    54 CF                 
  571C    2B                    	dec	hl
  571D    00                    	db	0
L7600  571E                          l7600:
  571E    AA                    	dc	'*'
  571F    00                    	db	0
  5720    AF                    	dc	'/'
  5721    01                    	db	1
L7604  5722                          l7604:
  5722    41 4E C4              	dc	'AND'
  5725    02                    	db	2
  5726    44 49 D6              	dc	'DIV'
  5729    03                    	db	3
  572A    4D 4F C4              	dc	'MOD'
  572D    04                    	db	4
  572E    53 48 CC              	dc	'SHL'
  5731    05                    	db	5
  5732    53 48 D2              	dc	'SHR'
  5735    06                    	db	6
  5736    00                    	db	0
L7619  5737                          l7619:
  5737    AB                    	dc	'+'
  5738    00                    	db	0
  5739    AD                    	dc	'-'
  573A    01                    	db	1
L761D  573B                          l761d:
  573B    4F D2                 	dc	'OR'
  573D    02                    	db	2
  573E    58 4F D2              	dc	'XOR'
  5741    03                    	db	3
  5742    00                    	db	0
L7625  5743                          l7625:
  5743    BD                    	dc	'='
  5744    00                    	db	00000000b
  5745    3C BE                 	dc	'<>'
  5747    08                    	db	00001000b
  5748    3E BD                 	dc	'>='
  574A    10                    	db	00010000b
  574B    3C BD                 	dc	'<='
  574D    18                    	db	00011000b
  574E    BE                    	dc	'>'
  574F    20                    	db	00100000b
  5750    BC                    	dc	'<'
  5751    28                    	db	00101000b
L7634  5752                          l7634:
  5752    49 CE                 	dc	'IN'
  5754    FF                    	db	11111111b
  5755    00                    	db	0
L7638  5756                          l7638:
  5756    57 52 49 54           	dc	'WRITELN'
  575A    45 4C CE              
L5AE7  575D    3C7D                  	dw	l5ae7
  575F    57 52 49 54           	dc	'WRITE'
  5763    C5                    
L5AE8  5764    3C7E                  	dw	l5ae8
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-289


  5766    52 45 41 44           	dc	'READLN'
  576A    4C CE                 
L5A32  576C    3BC8                  	dw	l5a32
  576E    52 45 41 C4           	dc	'READ'
L5A33  5772    3BC9                  	dw	l5a33
  5774    44 45 4C 45           	dc	'DELETE'
  5778    54 C5                 
L5C66  577A    3DFC                  	dw	l5c66
  577C    49 4E 53 45           	dc	'INSERT'
  5780    52 D4                 
L5C87  5782    3E1D                  	dw	l5c87
  5784    41 53 53 49           	dc	'ASSIGN'
  5788    47 CE                 
L5943  578A    3AD9                  	dw	l5943
  578C    52 45 53 45           	dc	'RESET'
  5790    D4                    
L59B9  5791    3B4F                  	dw	l59b9
  5793    52 45 57 52           	dc	'REWRITE'
  5797    49 54 C5              
L59BE  579A    3B54                  	dw	l59be
  579C    43 4C 4F 53           	dc	'CLOSE'
  57A0    C5                    
L59DB  57A1    3B71                  	dw	l59db
  57A3    45 52 41 53           	dc	'ERASE'
  57A7    C5                    
L5971  57A8    3B07                  	dw	l5971
  57AA    52 45 4E 41           	dc	'RENAME'
  57AE    4D C5                 
L5966  57B0    3AFC                  	dw	l5966
  57B2    53 45 45 CB           	dc	'SEEK'
L598C  57B6    3B22                  	dw	l598c
  57B8    47 45 54 4D           	dc	'GETMEM'
  57BC    45 CD                 
L5D94  57BE    3F2A                  	dw	l5d94
  57C0    4E 45 D7              	dc	'NEW'
L5D9F  57C3    3F35                  	dw	l5d9f
  57C5    46 52 45 45           	dc	'FREEMEM'
  57C9    4D 45 CD              
L5DB4  57CC    3F4A                  	dw	l5db4
  57CE    44 49 53 50           	dc	'DISPOSE'
  57D2    4F 53 C5              
L5DBF  57D5    3F55                  	dw	l5dbf
  57D7    4D 41 52 CB           	dc	'MARK'
L5DD4  57DB    3F6A                  	dw	l5dd4
  57DD    52 45 4C 45           	dc	'RELEASE'
  57E1    41 53 C5              
L5DD9  57E4    3F6F                  	dw	l5dd9
  57E6    4F 56 52 44           	dc	'OVRDRIVE'
  57EA    52 49 56 C5           
L5DF9  57EE    3F8F                  	dw	l5df9
  57F0    43 52 54 49           	dc	'CRTINIT'
  57F4    4E 49 D4              
L5E38  57F7    3FCE                  	dw	l5e38
  57F9    43 52 54 45           	dc	'CRTEXIT'
  57FD    58 49 D4              
L5E3D  5800    3FD3                  	dw	l5e3d
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-290


  5802    47 4F 54 4F           	dc	'GOTOXY'
  5806    58 D9                 
L5D6D  5808    3F03                  	dw	l5d6d
  580A    43 4C 52 53           	dc	'CLRSCR'
  580E    43 D2                 
L5E42  5810    3FD8                  	dw	l5e42
  5812    43 4C 52 45           	dc	'CLREOL'
  5816    4F CC                 
L5E48  5818    3FDE                  	dw	l5e48
  581A    4E 4F 52 4D           	dc	'NORMVIDEO'
  581E    56 49 44 45           
  5822    CF                    
L5E4D  5823    3FE3                  	dw	l5e4d
  5825    48 49 47 48           	dc	'HIGHVIDEO'
  5829    56 49 44 45           
  582D    CF                    
L5E4D  582E    3FE3                  	dw	l5e4d
  5830    4C 4F 57 56           	dc	'LOWVIDEO'
  5834    49 44 45 CF           
L5E52  5838    3FE8                  	dw	l5e52
  583A    49 4E 53 4C           	dc	'INSLINE'
  583E    49 4E C5              
L5E57  5841    3FED                  	dw	l5e57
  5843    44 45 4C 4C           	dc	'DELLINE'
  5847    49 4E C5              
L5E5C  584A    3FF2                  	dw	l5e5c
  584C    44 45 4C 41           	dc	'DELAY'
  5850    D9                    
L5D89  5851    3F1F                  	dw	l5d89
  5853    42 4C 4F 43           	dc	'BLOCKREAD'
  5857    4B 52 45 41           
  585B    C4                    
L5C16  585C    3DAC                  	dw	l5c16
  585E    42 4C 4F 43           	dc	'BLOCKWRITE'
  5862    4B 57 52 49           
  5866    54 C5                 
L5C1E  5868    3DB4                  	dw	l5c1e
  586A    52 41 4E 44           	dc	'RANDOMIZE'
  586E    4F 4D 49 5A           
  5872    C5                    
L5D83  5873    3F19                  	dw	l5d83
  5875    4D 4F 56 C5           	dc	'MOVE'
L5E05  5879    3F9B                  	dw	l5e05
  587B    46 49 4C 4C           	dc	'FILLCHAR'
  587F    43 48 41 D2           
L5E1A  5883    3FB0                  	dw	l5e1a
  5885    45 58 49 D4           	dc	'EXIT'
L5E61  5889    3FF7                  	dw	l5e61
  588B    48 41 4C D4           	dc	'HALT'
L5E67  588F    3FFD                  	dw	l5e67
  5891    50 4F 52 D4           	dc	'PORT'
L5E6D  5895    4003                  	dw	l5e6d
  5897    53 54 41 43           	dc	'STACKPTR'
  589B    4B 50 54 D2           
L5E78  589F    400E                  	dw	l5e78
  58A1    46 4C 55 53           	dc	'FLUSH'
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-291


  58A5    C8                    
L59AB  58A6    3B41                  	dw	l59ab
  58A8    45 58 45 43           	dc	'EXECUTE'
  58AC    55 54 C5              
L597E  58AF    3B14                  	dw	l597e
  58B1    43 48 41 49           	dc	'CHAIN'
  58B5    CE                    
L5979  58B6    3B0F                  	dw	l5979
  58B8    53 54 D2              	dc	'STR'
L5CBA  58BB    3E50                  	dw	l5cba
  58BD    56 41 CC              	dc	'VAL'
L5D22  58C0    3EB8                  	dw	l5d22
  58C2    42 44 4F D3           	dc	'BDOS'
L6553  58C6    46E9                  	dw	l6553
  58C8    42 49 4F D3           	dc	'BIOS'
L651E  58CC    46B4                  	dw	l651e
  58CE    00                    	db	0
L77B1  58CF                          l77b1:
  58CF    43 48 D2              	dc	'CHR'
L6425  58D2    45BB                  	dw	l6425
  58D4    4F 52 C4              	dc	'ORD'
L6411  58D7    45A7                  	dw	l6411
  58D9    43 4F 50 D9           	dC	'COPY'
L6460  58DD    45F6                  	dw	l6460
  58DF    4C 45 4E 47           	dc	'LENGTH'
  58E3    54 C8                 
L6441  58E5    45D7                  	dw	l6441
  58E7    50 4F D3              	dc	'POS'
L6452  58EA    45E8                  	dw	l6452
  58EC    43 4F 4E 43           	dc	'CONCAT'
  58F0    41 D4                 
L6481  58F2    4617                  	dw	l6481
  58F4    53 55 43 C3           	dc	'SUCC'
L63D4  58F8    456A                  	dw	l63d4
  58FA    50 52 45 C4           	dc	'PRED'
L63D7  58FE    456D                  	dw	l63d7
  5900    55 50 43 41           	dc	'UPCASE'
  5904    53 C5                 
L6437  5906    45CD                  	dw	l6437
  5908    54 52 55 4E           	dc	'TRUNC'
  590C    C3                    
L63BE  590D    4554                  	dw	l63be
  590F    52 4F 55 4E           	dc	'ROUND'
  5913    C4                    
L63C3  5914    4559                  	dw	l63c3
  5916    4F 44 C4              	dc	'ODD'
L6401  5919    4597                  	dw	l6401
  591B    41 42 D3              	dc	'ABS'
L6371  591E    4507                  	dw	l6371
  5920    53 51 D2              	dc	'SQR'
L6360  5923    44F6                  	dw	l6360
  5925    53 51 52 D4           	dc	'SQRT'
L6385  5929    451B                  	dw	l6385
  592B    53 49 CE              	dc	'SIN'
L638A  592E    4520                  	dw	l638a
  5930    43 4F D3              	dc	'COS'
L638FTURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-292


  5933    4525                  	dw	l638f
  5935    41 52 43 54           	dc	'ARCTAN'
  5939    41 CE                 
L6394  593B    452A                  	dw	l6394
  593D    4C CE                 	dc	'LN'
L6399  593F    452F                  	dw	l6399
  5941    45 58 D0              	dc	'EXP'
L639E  5944    4534                  	dw	l639e
  5946    49 4E D4              	dc	'INT'
L63A3  5949    4539                  	dw	l63a3
  594B    46 52 41 C3           	dc	'FRAC'
L63A8  594F    453E                  	dw	l63a8
  5951    52 41 4E 44           	dc	'RANDOM'
  5955    4F CD                 
L64AC  5957    4642                  	dw	l64ac
  5959    50 41 52 41           	dc	'PARAMCOUNT'
  595D    4D 43 4F 55           
  5961    4E D4                 
L649C  5963    4632                  	dw	l649c
  5965    50 41 52 41           	dc	'PARAMSTR'
  5969    4D 53 54 D2           
L64A1  596D    4637                  	dw	l64a1
  596F    4C CF                 	dc	'LO'
L63E1  5971    4577                  	dw	l63e1
  5973    48 C9                 	dc	'HI'
L63EB  5975    4581                  	dw	l63eb
  5977    53 57 41 D0           	dc	'SWAP'
L63F6  597B    458C                  	dw	l63f6
  597D    50 54 D2              	dc	'PTR'
L642B  5980    45C1                  	dw	l642b
  5982    49 4F 52 45           	dc	'IORESULT'
  5986    53 55 4C D4           
L64C4  598A    465A                  	dw	l64c4
  598C    45 4F C6              	dc	'EOF'
L64C9  598F    465F                  	dw	l64c9
  5991    45 4F 4C CE           	dc	'EOLN'
L64DF  5995    4675                  	dw	l64df
  5997    53 45 45 4B           	dc	'SEEKEOF'
  599B    45 4F C6              
L64D5  599E    466B                  	dw	l64d5
  59A0    53 45 45 4B           	dc	'SEEKEOLN'
  59A4    45 4F 4C CE           
L64DA  59A8    4670                  	dw	l64da
  59AA    46 49 4C 45           	dc	'FILESIZE'
  59AE    53 49 5A C5           
L64FA  59B2    4690                  	dw	l64fa
  59B4    46 49 4C 45           	dc	'FILEPOS'
  59B8    50 4F D3              
L64F2  59BB    4688                  	dw	l64f2
  59BD    4B 45 59 50           	dc	'KEYPRESSED'
  59C1    52 45 53 53           
  59C5    45 C4                 
L640C  59C7    45A2                  	dw	l640c
  59C9    4D 45 4D 41           	dc	'MEMAVAIL'
  59CD    56 41 49 CC           
L6514  59D1    46AA                  	dw	l6514
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-293


  59D3    4D 41 58 41           	dc	'MAXAVAIL'
  59D7    56 41 49 CC           
L6519  59DB    46AF                  	dw	l6519
  59DD    50 4F 52 D4           	dc	'PORT'
L65BF  59E1    4755                  	dw	l65bf
  59E3    53 54 41 43           	dc	'STACKPTR'
  59E7    4B 50 54 D2           
L65CA  59EB    4760                  	dw	l65ca
  59ED    41 44 44 D2           	dc	'ADDR'
L6576  59F1    470C                  	dw	l6576
  59F3    53 49 5A 45           	dc	'SIZEOF'
  59F7    4F C6                 
L659D  59F9    4733                  	dw	l659d
  59FB    42 44 4F 53           	dc	'BDOSHL'
  59FF    48 CC                 
L6553  5A01    46E9                  	dw	l6553
  5A03    42 44 4F D3           	dc	'BDOS'
L6554  5A07    46EA                  	dw	l6554
  5A09    42 49 4F 53           	dc	'BIOSHL'
  5A0D    48 CC                 
L651E  5A0F    46B4                  	dw	l651e
  5A11    42 49 4F D3           	dc	'BIOS'
L651F  5A15    46B5                  	dw	l651f
  5A17    00                    	db	0
L78FA  5A18                          l78fa:
  5A18    4D 45 CD              	dc	'MEM'
  5A1B    0000                  	dw	0
  5A1D    00                    	db	0
                                ;
                                ; Start of dynamic data
                                ; - originally at page boundary - here : 7900h
                                ;
                                ; Dynamic data area starts - shared by editor and compiler most
                                ;
L7901  5A1E                          l7901:
  5A1E                          	ds	1		; Error code
L7902  5A1F                          l7902:
  5A1F                          	ds	2		; Code pointer
L7904  5A21                          l7904:
  5A21                          	ds	2		; Code start address
L7906  5A23                          l7906:
  5A23                          	ds	2		; Code end address
L7908  5A25                          l7908:
  5A25                          	ds	2		; Start of data
L790A  5A27                          l790a:
  5A27                          	ds	2		; End of code address
L790C  5A29                          l790c:
  5A29                          	ds	2		; Current editor address
L790E  5A2B                          l790e:
  5A2B                          	ds	1		; Memory read flag (0 is read)
                                ;
                                ; FCB
                                ;
L790F  5A2C                          l790f:
FCBLEN  5A2C                          	ds	FCBlen
                                ;
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-294


                                ; FCB of source file
                                ;
L7933  5A50                          l7933:
FCBLEN  5A50                          	ds	FCBlen
                                ;
                                ; DISK BUFFER
                                ;
L7957  5A74                          l7957:
RECLNG  5A74                          	ds	RecLng
                                ;
L79D7L7957RECLNG  5AF4                          l79d7	equ	l7957+RecLng	; Start of source line
L7A57L79D7RECLNG  5B74                          l7a57	equ	l79d7+RecLng
L7A57L79D7RECLNG  5B74                          l7a57	equ	l79d7+RecLng
L7AD7L7A57RECLNG  5BF4                          l7ad7	equ	l7a57+RecLng	; Top of used memory on start
                                
L7B57L7AD7RECLNG  5C74                          l7b57	equ	l7ad7+RecLng
L7B58L7B57  5C75                          l7b58	equ	l7b57+1		; Value of symbol
L7B59L7B58  5C76                          l7b59	equ	l7b58+1
L7B5AL7B59  5C77                          l7b5a	equ	l7b59+1		; Type table
L7B5CL7B5A  5C79                          l7b5c	equ	l7b5a+2		; Type
L7B5DL7B5C  5C7A                          l7b5d	equ	l7b5c+1
L7B5EL7B5D  5C7B                          l7b5e	equ	l7b5d+1		; Lo set limit
L7B60L7B5E  5C7D                          l7b60	equ	l7b5e+2		; Hi set limit
L7B62L7B60  5C7F                          l7b62	equ	l7b60+2		; Length of type
L7B64L7B62  5C81                          l7b64	equ	l7b62+2
L7B65L7B64  5C82                          l7b65	equ	l7b64+1
L7B69L7B65  5C86                          l7b69	equ	l7b65+4
L7B6BL7B69  5C88                          l7b6b	equ	l7b69+2
L7B6DL7B6B  5C8A                          l7b6d	equ	l7b6b+2		; Last memory address
L7B6FL7B6D  5C8C                          l7b6f	equ	l7b6d+2		; TEMP
L7B71L7B6F  5C8E                          l7b71	equ	l7b6f+2		; TEMP
L7B72L7B71  5C8F                          l7b72	equ	l7b71+1		; EDT: Pointer to delimters
L7B73L7B72  5C90                          l7b73	equ	l7b72+1		; Label pointer
L7B74L7B73  5C91                          l7b74	equ	l7b73+1		; EDT: Edited line
L7B75L7B74  5C92                          l7b75	equ	l7b74+1		; Previous label pointer
L7B77L7B75  5C94                          l7b77	equ	l7b75+2		; Top of available memory
L7B79L7B77  5C96                          l7b79	equ	l7b77+2
L7B7BL7B79  5C98                          l7b7b	equ	l7b79+2		; Current label pointer
L7B7DL7B7B  5C9A                          l7b7d	equ	l7b7b+2
L7B7FL7B7D  5C9C                          l7b7f	equ	l7b7d+2
L7B81L7B7F  5C9E                          l7b81	equ	l7b7f+2
L7B83L7B81  5CA0                          l7b83	equ	l7b81+2
L7B85L7B83  5CA2                          l7b85	equ	l7b83+2
L7B87L7B85  5CA4                          l7b87	equ	l7b85+2
L7B88L7B87  5CA5                          l7b88	equ	l7b87+1
L7B89L7B88  5CA6                          l7b89	equ	l7b88+1
L7B8BL7B89  5CA8                          l7b8b	equ	l7b89+2
L7B8DL7B8B  5CAA                          l7b8d	equ	l7b8b+2
L7B8FL7B8D  5CAC                          l7b8f	equ	l7b8d+2
L7B90L7B8F  5CAD                          l7b90	equ	l7b8f+1
L7B91L7B90  5CAE                          l7b91	equ	l7b90+1		; ???
L7B92L7B91  5CAF                          l7b92	equ	l7b91+1		; ???
L7B93L7B92  5CB0                          l7b93	equ	l7b92+1		; Type
L7B94L7B93  5CB1                          l7b94	equ	l7b93+1		; ???
L7B95L7B94  5CB2                          l7b95	equ	l7b94+1
L7B96L7B95  5CB3                          l7b96	equ	l7b95+1		; OVERLAY number
L7B97L7B96TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	1-295


  5CB4                          l7b97	equ	l7b96+1		; PROCEDURE (=0) or FUNCTION (<>0)
L7B98L7B97  5CB5                          l7b98	equ	l7b97+1
L7B99L7B98  5CB6                          l7b99	equ	l7b98+1		; Overlay flag (-1)
L7B9AL7B99  5CB7                          l7b9a	equ	l7b99+1
L7B9BL7B9A  5CB8                          l7b9b	equ	l7b9a+1
L7B9CL7B9B  5CB9                          l7b9c	equ	l7b9b+1
L7B9DL7B9C  5CBA                          l7b9d	equ	l7b9c+1		; Option bits
L7B9EL7B9D  5CBB                          l7b9e	equ	l7b9d+1		; Local PROCEDURE/FUNCTION options
L7B9FL7B9E  5CBC                          l7b9f	equ	l7b9e+1
L7BA0L7B9F  5CBD                          l7ba0	equ	l7b9f+1		; End on break
L7BA1L7BA0  5CBE                          l7ba1	equ	l7ba0+1
L7BA2L7BA1  5CBF                          l7ba2	equ	l7ba1+1		; End of file
L7BA3L7BA2  5CC0                          l7ba3	equ	l7ba2+1
L7BA4L7BA3  5CC1                          l7ba4	equ	l7ba3+1
L7BA6L7BA4  5CC3                          l7ba6	equ	l7ba4+2
L7BA7L7BA6  5CC4                          l7ba7	equ	l7ba6+1
L7BA9L7BA7  5CC6                          l7ba9	equ	l7ba7+2
L7BABL7BA9  5CC8                          l7bab	equ	l7ba9+2		; Data pointer for overlay
L7BB0L7BAB  5CCD                          l7bb0	equ	l7bab+5		; Length of overlay
L7BB2L7BB0  5CCF                          l7bb2	equ	l7bb0+2		; OVERLAY file name
L7BBDL7BB2  5CDA                          l7bbd	equ	l7bb2+11
L7BBEL7BBD  5CDB                          l7bbe	equ	l7bbd+1
L7BC0L7BBE  5CDD                          l7bc0	equ	l7bbe+2
L7BC1L7BC0  5CDE                          l7bc1	equ	l7bc0+1
L7BC2L7BC1  5CDF                          l7bc2	equ	l7bc1+1
L7BC4L7BC2  5CE1                          l7bc4	equ	l7bc2+2
L7BC6L7BC4  5CE3                          l7bc6	equ	l7bc4+2
L7BC7L7BC6  5CE4                          l7bc7	equ	l7bc6+1		; Depth for WITH
L7BC8L7BC7  5CE5                          l7bc8	equ	l7bc7+1
L7BC9L7BC8  5CE6                          l7bc9	equ	l7bc8+1
L7BCAL7BC9  5CE7                          l7bca	equ	l7bc9+1
L7BCCL7BCA  5CE9                          l7bcc	equ	l7bca+2
L7BD5L7BCC  5CF2                          l7bd5	equ	l7bcc+9
L7BD7L7BD5  5CF4                          l7bd7	equ	l7bd5+2		; Source pointer
L7BD9L7BD7  5CF6                          l7bd9	equ	l7bd7+2		; Dtto.
L7BDBL7BD9  5CF8                          l7bdb	equ	l7bd9+2		; File access
L7BDCL7BDB  5CF9                          l7bdc	equ	l7bdb+1		; Record pointer
L7BDDL7BDC  5CFA                          l7bdd	equ	l7bdc+1		; Record base
L7BDFL7BDD  5CFC                          l7bdf	equ	l7bdd+2
L7BE1L7BDF  5CFE                          l7be1	equ	l7bdf+2		; Top of .COM file
L7BE3L7BE1  5D00                          l7be3	equ	l7be1+2		; Back fix level
L7BE4L7BE3  5D01                          l7be4	equ	l7be3+1		; Saved top of .COM file
L7BE6L7BE4  5D03                          l7be6	equ	l7be4+2
L7BE8L7BE6  5D05                          l7be8	equ	l7be6+2
L7BE9L7BE8  5D06                          l7be9	equ	l7be8+1
L7BEBL7BE9  5D08                          l7beb	equ	l7be9+2
L7BEDL7BEB  5D0A                          l7bed	equ	l7beb+2
L7BEFL7BED  5D0C                          l7bef	equ	l7bed+2		; Line count
L7BF5L7BEF  5D12                          l7bf5	equ	l7bef+6		; Start of text
                                
                                
                                	end
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S


Macros:
DWW             

Symbols:
54FF 	$$AUX           558D 	$$AUXIP         559E 	$$AUXOP         
5460 	$$BOOL          5517 	$$BUFL          5477 	$$BYTE          
55E4 	$$CBRK          544C 	$$CHAR          54CF 	$$CON           
5558 	$$CONIP         5569 	$$CONOP         5547 	$$CONSP         
55D3 	$$ERRPT         548C 	$$FALSE         5526 	$$HEAP          
54C1 	$$INPT          543F 	$$INT           54E7 	$$KBD           
54F3 	$$LST           557B 	$$LSTOP         5498 	$$MAXINT        
54B2 	$$OUTP          54A5 	$$PI            5456 	$$REAL          
5536 	$$RECUR         546D 	$$TEXT          54DB 	$$TRM           
5481 	$$TRUE          550B 	$$USR           55B0 	$$USRIP         
55C1 	$$USROP         2F1A 	$I1             35CC 	$I10            
35FA 	$I11            365A 	$I12            3674 	$I13            
36A0 	$I14            36AA 	$I15            36D5 	$I16            
36DE 	$I17            370E 	$I18            371C 	$I19            
2F4E 	$I2             3933 	$I20            39D7 	$I21            
39DF 	$I22            39EC 	$I23            39F7 	$I24            
3A1C 	$I25            400A 	$I26            4018 	$I27            
4079 	$I28            4159 	$I29            2F66 	$I3             
418F 	$I30            4196 	$I31            41C2 	$I32            
41C9 	$I33            41DD 	$I34            41E4 	$I35            
4256 	$I36            425D 	$I37            4298 	$I38            
42A1 	$I39            2F87 	$I4             42C8 	$I40            
42D5 	$I41            42F1 	$I42            4317 	$I43            
4326 	$I44            434D 	$I45            4368 	$I46            
4513 	$I47            457E 	$I48            4588 	$I49            
2FA5 	$I5             4593 	$I50            46CC 	$I51            
46D2 	$I52            46E5 	$I53            4701 	$I54            
4706 	$I55            475C 	$I56            4764 	$I57            
47FC 	$I58            483A 	$I59            2FB6 	$I6             
4840 	$I60            484A 	$I61            485F 	$I62            
4869 	$I63            48AE 	$I64            48BE 	$I65            
48C5 	$I66            4945 	$I67            4A05 	$I68            
4A17 	$I69            2FDA 	$I7             4A28 	$I70            
4A5C 	$I71            4A67 	$I72            4A87 	$I73            
4AB6 	$I74            4AC3 	$I75            4B29 	$I76            
4B61 	$I77            300E 	$I8             358C 	$I9             
226B 	$ILLADDR        000A 	..AUX           0012 	..AUXIN         
000F 	..AUXIP         0010 	..AUXOP         000F 	..AUXOUT        
000B 	..BOOL          000D 	..BUFL          0008 	..BYTE          
000D 	..CBRK          0008 	..CHAR          000A 	..CON           
0006 	..CONIN         000F 	..CONIP         0010 	..CONOP         
0009 	..CONOUT        000F 	..CONSP         0003 	..CONST         
000F 	..ERRPT         000A 	..FALSE         000E 	..HEAP          
0080 	..IN            000C 	..INPT          000B 	..INT           
000A 	..KBD           000C 	..LIST          000A 	..LST           
0010 	..LSTOP         000B 	..MXINT         0040 	..OUT           
000D 	..OUTP          000B 	..PI            22E1 	..PRC           
0010 	..READ          0008 	..REAL          000F 	..RECUR         
0008 	..TEXT          000A 	..TRM           0009 	..TRUE          
000A 	..USR           000F 	..USRIP         0010 	..USROP         
0002 	.AOPT           0006 	.BOPT           00CD 	.CALL           
0010 	.CLOSE          0007 	.COPT           002B 	.DEC.HL         
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S-1


0013 	.DELETE         00D9 	.EXX            0023 	.FILSIZ         
001B 	.GETALV         001F 	.GETDPB         22A3 	.HEXIN          
0023 	.INC.HL         0000 	.IOPT           00C3 	.JP             
00CA 	.JPZ            00B0 	.L1C33          003E 	.LD.A           
0001 	.LD.BC          0011 	.LD.DE          0021 	.LD.HL          
0031 	.LD.SP          5BED 	.LD@DE          002A 	.LD@HL          
0032 	.LDA@           0022 	.LDHL@          0016 	.MAKE           
007E 	.MAXBUF         001E 	.MAXSAMP        000F 	.OPEN           
00E1 	.POP.HL         00E5 	.PUSH.HL        0014 	.RDSEQ          
0017 	.RENAME         000D 	.RESDSK         0019 	.RETDSK         
0021 	.RNDRD          0022 	.RNDWR          0001 	.ROPT           
000E 	.SELDSK         001A 	.SETDMA         0011 	.SRCFRS         
0012 	.SRCNXT         0001 	.TRUE           0003 	.UOPT           
0005 	.VOPT           0015 	.WRSEQ          0004 	.XOPT           
00CA 	_ABORT          0002 	_ADDR           0014 	_AHEAD          
0001 	_ARRAY          0007 	_ASSIGEXP       0004 	_B              
0008 	_BEGIN          000C 	_BEGINEXP       0004 	_BLKERR         
000B 	_BOOL           0014 	_BOOLEXP        0000 	_BRK            
0001 	_BYTE           0001 	_CBRK           000C 	_CHAR           
0001 	_COLEXP         0003 	_COMMAEXP       005D 	_COMPDIREC      
0063 	_COMPOVFL       0002 	_CONST          002D 	_CONSTRANGE     
0021 	_DIRERR         00F1 	_DIRFULL        0002 	_DIVZERO        
000A 	_DOTEXP         002B 	_DOUBLELAB      00FA 	_DSKFULL        
000E 	_END            0006 	_EQUEXP         000C 	_EX             
0044 	_FILEF          0015 	_FILEVAREXP     0001 	_FLPOVFL        
00C8 	_FNDRTERR       0003 	_G              00FF 	_HEAPERR        
0036 	_ILLASS         002E 	_ILLCASE        003A 	_ILLCHAR        
003C 	_ILLCONST       0099 	_ILLEOF         0040 	_ILLFILETYPE    
0047 	_ILLGOTO        004A 	_ILLINLINE      0020 	_ILLIO          
0048 	_ILLLABEL       0034 	_ILLLIMIT       0010 	_ILLNUM         
002F 	_ILLOPS         0046 	_ILLSETRANGE    0033 	_ILLSKALAR      
005B 	_ILLSRCEND      0031 	_ILLSTRGLEN     003F 	_ILLTXTFILE     
0060 	_INCLERR        0090 	_INDXERR        002A 	_INKPOINTER     
0016 	_INTCONST       000A 	_INTEG          0038 	_INTEGERR       
0017 	_INTEXPR        0019 	_INTREALCEXP    0018 	_INTVAREXP      
004B 	_INVALABS       003D 	_INVFILPTR      0042 	_INVIO          
0090 	_INVREC         0030 	_INVRESULT      0045 	_INVSETORDER    
002C 	_INVTYPE        0001 	_IO             0001 	_LABEL          
0000 	_LB             0008 	_LFTBREXP       0004 	_LFTPAR         
007F 	_LINLEN         0004 	_LNERR          0007 	_MB             
0062 	_MEMOVFL        0023 	_MUSTTEXTFILE   0001 	_N              
0003 	_NEGSQRT        00FF 	_NOCLOSE        000D 	_NODO           
0012 	_NODOWN_TO      0001 	_NOFILE         005A 	_NOFILEERR      
000F 	_NOOF           005C 	_NOOVL          0002 	_NOREAD         
003E 	_NOSTRUKTVAR    0041 	_NOUNTYPEFILE   0003 	_NOWRITE        
001A 	_NUMEXPREXP     001B 	_NUMVAREXP      0007 	_OVERLY         
00F2 	_OVFLERR        004D 	_OVLDIRERR      00F0 	_OVLERR         
004C 	_OVLFORW        0005 	_PROC           0004 	_PTR            
001C 	_PTRVAREXP      0009 	_REAL           0039 	_REALERR        
0005 	_RECF           0002 	_RECORD         001D 	_RECVAREXP      
0035 	_RESWORD        0009 	_RGTBREXP       0005 	_RGTPAR         
0091 	_RNGERR         0002 	_ROPT           0021 	_RRN            
0007 	_RST            0002 	_RT             2000 	_SAVLEN         
0091 	_SEEKEOF        0002 	_SEMIEXP        0003 	_SET            
001F 	_SIMPEXPR       001E 	_SIMTYP         0022 	_STDASSERR      
0037 	_STRCONLONG     0032 	_STRCONST       0020 	_STRGCONEXP     
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S-2


0021 	_STRGEXPEXP     0022 	_STRGVAREXP     0011 	_STRIDX         
0008 	_STRING         0010 	_STRLENERR      0010 	_SUBEXP         
000A 	_SYS            0061 	_TOOMANYWITH    0092 	_TRUNCOVL       
000B 	_TWODOTS        0006 	_TXTF           0003 	_TYPE           
0024 	_TYPEEXP        0002 	_U              0029 	_UNDEF          
0049 	_UNDEFFORW      0028 	_UNKLABEL       0007 	_UNTF           
0025 	_UNTFILEEXP     0008 	_UOPT           0004 	_VAR            
0043 	_VARFILE        0007 	_VIDEO          0000 	_W              
00F0 	_WRERR          0007 	@AUXIN          0006 	@AUXOUT         
0015 	@CAN            0003 	@CONIN          0004 	@CONOUT         
0002 	@CONST          04D2 	@DUMMY          0002 	@L1             
0003 	@L10            0003 	@L11            0001 	@L12            
0006 	@L13            0002 	@L14            0003 	@L15            
0001 	@L16            0001 	@L17            0006 	@L18            
0003 	@L19            0003 	@L2             0002 	@L20            
0002 	@L21            0001 	@L22            0001 	@L23            
0002 	@L24            0004 	@L25            0003 	@L26            
0001 	@L27            0004 	@L28            0004 	@L29            
0002 	@L3             0001 	@L30            0004 	@L31            
0003 	@L32            0003 	@L33            0003 	@L34            
0003 	@L35            0003 	@L36            0003 	@L37            
0004 	@L38            0006 	@L39            0002 	@L4             
0007 	@L40            0004 	@L41            0002 	@L42            
0004 	@L43            0001 	@L44            0003 	@L45            
0001 	@L46            0002 	@L47            0002 	@L48            
0003 	@L49            0002 	@L5             0003 	@L50            
0002 	@L51            0001 	@L52            0003 	@L53            
0001 	@L54            0001 	@L55            0003 	@L56            
0004 	@L57            0001 	@L58            0002 	@L59            
0002 	@L6             0001 	@L60            0002 	@L61            
0001 	@L62            0002 	@L63            0002 	@L64            
0001 	@L65            0004 	@L66            0001 	@L67            
0001 	@L68            0001 	@L69            0002 	@L7             
0001 	@L70            0001 	@L71            0005 	@L72            
0002 	@L73            0001 	@L74            0002 	@L75            
0004 	@L76            0002 	@L77            0001 	@L8             
0003 	@L9             0005 	@LIST           8000 	@MSB            
9000 	@OVLADR         0038 	@RST            22B6 	ASCII2BIN       
0005 	AT.LEN          0005 	BDOS            0008 	BIT.LEN         
0008 	BS              0080 	CCP             2257 	CHECKRTLADDR    
000D 	CR              0003 	CTRLC           0018 	CTRLX           
21AD 	DEFPAS          0008 	DEFSTR          0002 	DEFWITH         
007F 	DEL             0010 	DIRLEN          000F 	DIRLNG          
25A5 	DISPNOMSG       0006 	DOT.BIT         001F 	DPBMASK         
0004 	DU              22EB 	END.PRE         22A9 	ENDHEX          
001A 	EOF             2306 	ERRPOS          001B 	ESC             
0004 	EXP.BIT         0008 	EXP.LEN         0088 	EXP.MAX         
0080 	EXP.OFFSET      0081 	EXP.ONE         004D 	EXPFIX          
00D9 	EXPRANGE        0005 	EXPS.BIT        0000 	FALSE           
0024 	FCBLEN          0001 	FDRV            0003 	FEXT            
0030 	FIB.BUFF        0008 	FIB.CUR         000C 	FIB.FCB         
0004 	FIB.REC         0006 	FIB.RECLEN      0030 	FIBLEN          
000F 	FIBTYPE         0004 	FIXRECLEN       0008 	FNAME           
0001 	HEAPHIADR       0003 	HEAPHILEN       0004 	HEAPLEN         
0000 	HEAPLOADR       0002 	HEAPLOLEN       2294 	HEXIN           
2267 	ILLADDR         0007 	IN.BIT          008F 	INT.MAX         
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S-3


55F1 	INTLABTAB       21C8 	ISEND           21DD 	ISSTRT          
0000 	L0000           0001 	L0001           0002 	L0002           
0005 	L0005           0008 	L0008           000C 	L000C           
000D 	L000D           0015 	L0015           0019 	L0019           
0024 	L0024           0030 	L0030           005C 	L005C           
0080 	L0080           0081 	L0081           00A0 	L00A0           
00A3 	L00A3           00A6 	L00A6           00A9 	L00A9           
00AC 	L00AC           00AF 	L00AF           00B0 	L00B0           
00B2 	L00B2           00B5 	L00B5           00B8 	L00B8           
00BA 	L00BA           00BC 	L00BC           00BE 	L00BE           
00C0 	L00C0           00C2 	L00C2           00C4 	L00C4           
00C6 	L00C6           00C8 	L00C8           00CC 	L00CC           
00CE 	L00CE           00D0 	L00D0           00D1 	L00D1           
00D2 	L00D2           00D4 	L00D4           00D6 	L00D6           
00D8 	L00D8           00D9 	L00D9           00DA 	L00DA           
00DC 	L00DC           00DD 	L00DD           00DE 	L00DE           
00E0 	L00E0           00E2 	L00E2           00E4 	L00E4           
00E6 	L00E6           00E8 	L00E8           00E9 	L00E9           
00EA 	L00EA           00EC 	L00EC           00ED 	L00ED           
00F0 	L00F0           00F2 	L00F2           00F4 	L00F4           
00F6 	L00F6           00F8 	L00F8           00FE 	L00FE           
0100 	L0100           0124 	L0124           0128 	L0128           
0153I 	L0153           0168 	L0168           0169 	L0169           
016B 	L016B           017B 	L017B           018B 	L018B           
019B 	L019B           019C 	L019C           019D 	L019D           
019E 	L019E           019F 	L019F           01A0 	L01A0           
01A2 	L01A2           01A8 	L01A8           01AE 	L01AE           
01B4 	L01B4           01BA 	L01BA           01BC 	L01BC           
01C2 	L01C2           01C8 	L01C8           01CE 	L01CE           
01D0 	L01D0           01D4 	L01D4           01E1 	L01E1           
01E8 	L01E8           01EE 	L01EE           01FA 	L01FA           
0200 	L0200           0204 	L0204           020C 	L020C           
0213 	L0213           0218 	L0218           021D 	L021D           
0226 	L0226           0235 	L0235           023E 	L023E           
024B 	L024B           0259 	L0259           0262 	L0262           
026B 	L026B           027C 	L027C           0282 	L0282           
0284 	L0284           0299 	L0299           02A2 	L02A2           
02DC 	L02DC           02EC 	L02EC           02F3 	L02F3           
02F6 	L02F6           0300 	L0300           0302 	L0302           
0307 	L0307           030A 	L030A           0310 	L0310           
0316 	L0316           0320 	L0320           0323 	L0323           
0326 	L0326           032A 	L032A           032F 	L032F           
0334 	L0334           0339 	L0339           033C 	L033C           
035D 	L035D           035F 	L035F           0364 	L0364           
037A 	L037A           03A5 	L03A5           03BD 	L03BD           
03C9 	L03C9           03D9 	L03D9           03E1 	L03E1           
03EE 	L03EE           03F2 	L03F2           03F8 	L03F8           
03FE 	L03FE           0406 	L0406           041F 	L041F           
0420 	L0420           0421 	L0421           0443 	L0443           
0453 	L0453           0458 	L0458           045E 	L045E           
046B 	L046B           0470 	L0470           0476 	L0476           
0477 	L0477           047B 	L047B           047D 	L047D           
0482 	L0482           0496 	L0496           0498 	L0498           
04A6 	L04A6           04AF 	L04AF           04B4 	L04B4           
04BD 	L04BD           04C8 	L04C8           04D4 	L04D4           
0508 	L0508           0522 	L0522           052C 	L052C           
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S-4


053A 	L053A           054D 	L054D           055D 	L055D           
056C 	L056C           0570 	L0570           057B 	L057B           
057F 	L057F           0581 	L0581           058B 	L058B           
0591 	L0591           0597 	L0597           0599 	L0599           
059B 	L059B           05AB 	L05AB           05B6 	L05B6           
05BA 	L05BA           05CD 	L05CD           05D1 	L05D1           
05E2 	L05E2           05EE 	L05EE           05F4 	L05F4           
05FD 	L05FD           0601 	L0601           0612 	L0612           
061F 	L061F           0623 	L0623           0638 	L0638           
064C 	L064C           0656 	L0656           0661 	L0661           
0666 	L0666           066A 	L066A           0671 	L0671           
0672 	L0672           0676 	L0676           067F 	L067F           
0682 	L0682           0688 	L0688           068D 	L068D           
0692 	L0692           0695 	L0695           069B 	L069B           
06A0 	L06A0           06A5 	L06A5           06A8 	L06A8           
06AE 	L06AE           06B3 	L06B3           06B8 	L06B8           
06BB 	L06BB           06C2 	L06C2           06C7 	L06C7           
06CC 	L06CC           06CF 	L06CF           06D6 	L06D6           
06DB 	L06DB           06E0 	L06E0           06E3 	L06E3           
06E9 	L06E9           06EE 	L06EE           06F3 	L06F3           
06F5 	L06F5           0704 	L0704           070B 	L070B           
070F 	L070F           0726 	L0726           072E 	L072E           
073B 	L073B           0745 	L0745           074E 	L074E           
0752 	L0752           0756 	L0756           075A 	L075A           
0761 	L0761           076E 	L076E           0772 	L0772           
077E 	L077E           0780 	L0780           0783 	L0783           
078B 	L078B           0792 	L0792           07C6 	L07C6           
07D0 	L07D0           07E2 	L07E2           07E3 	L07E3           
07EF 	L07EF           07F7 	L07F7           0800 	L0800           
0802 	L0802           0804 	L0804           0820 	L0820           
082C 	L082C           0837 	L0837           083D 	L083D           
0866 	L0866           086B 	L086B           0896 	L0896           
0899 	L0899           089C 	L089C           089F 	L089F           
08A3 	L08A3           08B2 	L08B2           08CE 	L08CE           
08D1 	L08D1           08DC 	L08DC           08E1 	L08E1           
08EF 	L08EF           08F3 	L08F3           091C 	L091C           
091E 	L091E           0920 	L0920           0937 	L0937           
0938 	L0938           0949 	L0949           0951 	L0951           
096E 	L096E           0973 	L0973           097A 	L097A           
098B 	L098B           0996 	L0996           09A2 	L09A2           
09B0 	L09B0           09C4 	L09C4           09CC 	L09CC           
09CD 	L09CD           09D3 	L09D3           09DD 	L09DD           
09E4 	L09E4           09E9 	L09E9           09EC 	L09EC           
09F2 	L09F2           09F7 	L09F7           09FA 	L09FA           
09FF 	L09FF           0A03 	L0A03           0A0D 	L0A0D           
0A14 	L0A14           0A27 	L0A27           0A3C 	L0A3C           
0A47 	L0A47           0A5B 	L0A5B           0A65 	L0A65           
0A68 	L0A68           0A72 	L0A72           0A75 	L0A75           
0A76 	L0A76           0A7A 	L0A7A           0A7B 	L0A7B           
0A81 	L0A81           0A88 	L0A88           0A8F 	L0A8F           
0A97 	L0A97           0AB3 	L0AB3           0ABA 	L0ABA           
0AC2 	L0AC2           0ADE 	L0ADE           0AE1 	L0AE1           
0AE2 	L0AE2           0AF5 	L0AF5           0B0A 	L0B0A           
0B13 	L0B13           0B26 	L0B26           0B32 	L0B32           
0B3B 	L0B3B           0B47 	L0B47           0B4D 	L0B4D           
0B55 	L0B55           0B59 	L0B59           0B70 	L0B70           
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S-5


0B72 	L0B72           0B7A 	L0B7A           0B7B 	L0B7B           
0B86 	L0B86           0B87 	L0B87           0B92 	L0B92           
0BAC 	L0BAC           0BC6 	L0BC6           0BDF 	L0BDF           
0BE9 	L0BE9           0BF3 	L0BF3           0BFD 	L0BFD           
0C10 	L0C10           0C31 	L0C31           0C34 	L0C34           
0C46 	L0C46           0C5F 	L0C5F           0C7F 	L0C7F           
0C87 	L0C87           0CA3 	L0CA3           0CAA 	L0CAA           
0CB6 	L0CB6           0CC3 	L0CC3           0D03 	L0D03           
0D0D 	L0D0D           0D2B 	L0D2B           0D7C 	L0D7C           
0D92 	L0D92           0DB6 	L0DB6           0DE0 	L0DE0           
0E03 	L0E03           0E10 	L0E10           0E16 	L0E16           
0E46 	L0E46           0E58 	L0E58           0E66 	L0E66           
0E7B 	L0E7B           0E81 	L0E81           0E9C 	L0E9C           
0ECA 	L0ECA           0ED8 	L0ED8           0EE0 	L0EE0           
0F10 	L0F10           0F2E 	L0F2E           0F34 	L0F34           
0F49 	L0F49           0F50 	L0F50           0F60 	L0F60           
0F6E 	L0F6E           0F73 	L0F73           0F86 	L0F86           
0F8E 	L0F8E           0F98 	L0F98           0FA2 	L0FA2           
0FAC 	L0FAC           0FB4 	L0FB4           0FBC 	L0FBC           
0FCD 	L0FCD           0FD0 	L0FD0           0FDA 	L0FDA           
0FDE 	L0FDE           0FE8 	L0FE8           0FF5 	L0FF5           
0FFF 	L0FFF           1003 	L1003           1008 	L1008           
1015 	L1015           1027 	L1027           1033 	L1033           
1040 	L1040           1044 	L1044           104A 	L104A           
104B 	L104B           106B 	L106B           1071 	L1071           
1076 	L1076           107F 	L107F           1086 	L1086           
108F 	L108F           1096 	L1096           109F 	L109F           
10A8 	L10A8           10B1 	L10B1           10C5 	L10C5           
10CB 	L10CB           10D9 	L10D9           10E3 	L10E3           
10E5 	L10E5           10EB 	L10EB           10F3 	L10F3           
10FF 	L10FF           1119 	L1119           112C 	L112C           
1135 	L1135           113D 	L113D           1143 	L1143           
117D 	L117D           1180 	L1180           118D 	L118D           
119C 	L119C           11A3 	L11A3           11AB 	L11AB           
11BD 	L11BD           11C1 	L11C1           11E3 	L11E3           
11E6 	L11E6           11FC 	L11FC           11FE 	L11FE           
1215 	L1215           121D 	L121D           121E 	L121E           
1236 	L1236           1239 	L1239           1240 	L1240           
1247 	L1247           1253 	L1253           1266 	L1266           
126E 	L126E           1277 	L1277           12B3 	L12B3           
12D6 	L12D6           12DD 	L12DD           12E1 	L12E1           
12E3 	L12E3           12E6 	L12E6           12F2 	L12F2           
12FC 	L12FC           1300 	L1300           1302 	L1302           
1309 	L1309           130B 	L130B           1318 	L1318           
131B 	L131B           1322 	L1322           1326 	L1326           
1329 	L1329           1333 	L1333           1336 	L1336           
133F 	L133F           134F 	L134F           135C 	L135C           
1362 	L1362           136D 	L136D           136F 	L136F           
1370 	L1370           1390 	L1390           13A0 	L13A0           
13B6 	L13B6           13BB 	L13BB           13C3 	L13C3           
13C9 	L13C9           13DA 	L13DA           13E6 	L13E6           
13FE 	L13FE           13FF 	L13FF           142B 	L142B           
1430 	L1430           144E 	L144E           145A 	L145A           
1463 	L1463           1469 	L1469           147E 	L147E           
1481 	L1481           1498 	L1498           149B 	L149B           
14A9 	L14A9           14BA 	L14BA           14CB 	L14CB           
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S-6


14CC 	L14CC           14E6 	L14E6           14E8 	L14E8           
14EA 	L14EA           14F4 	L14F4           14FD 	L14FD           
14FF 	L14FF           1533 	L1533           153F 	L153F           
1550 	L1550           1556 	L1556           155A 	L155A           
155E 	L155E           1566 	L1566           156B 	L156B           
1595 	L1595           1597 	L1597           15AB 	L15AB           
15BF 	L15BF           15C9 	L15C9           15D2 	L15D2           
15DC 	L15DC           15E0 	L15E0           15E9 	L15E9           
15ED 	L15ED           15F0 	L15F0           15FB 	L15FB           
160A 	L160A           160F 	L160F           1620 	L1620           
1622 	L1622           1624 	L1624           1636 	L1636           
163D 	L163D           1644 	L1644           164D 	L164D           
164E 	L164E           1670 	L1670           1672 	L1672           
168E 	L168E           1692 	L1692           16A8 	L16A8           
16AB 	L16AB           16C5 	L16C5           16C6 	L16C6           
16E4 	L16E4           16FD 	L16FD           170C 	L170C           
1722 	L1722           1726 	L1726           1737 	L1737           
1745 	L1745           1749 	L1749           1759 	L1759           
1760 	L1760           176A 	L176A           176C 	L176C           
1779 	L1779           178B 	L178B           17A1 	L17A1           
0004 	L17A1.L         17A5 	L17A5           0005 	L17A5.L         
17AA 	L17AA           17BA 	L17BA           17C1 	L17C1           
17CC 	L17CC           17CD 	L17CD           17D7 	L17D7           
17DC 	L17DC           17E1 	L17E1           17E6I 	L17E6           
17E9 	L17E9           17F0 	L17F0           1808 	L1808           
180C 	L180C           1810 	L1810           1811 	L1811           
1864 	L1864           187A 	L187A           18A4 	L18A4           
18B0 	L18B0           18B6 	L18B6           18CA 	L18CA           
18D6 	L18D6           18DC 	L18DC           18FA 	L18FA           
18FC 	L18FC           1902 	L1902           1909 	L1909           
190D 	L190D           1935 	L1935           1943 	L1943           
194C 	L194C           195C 	L195C           1966 	L1966           
198A 	L198A           1991 	L1991           1994 	L1994           
199A 	L199A           19A3 	L19A3           19A5 	L19A5           
19AE 	L19AE           19BA 	L19BA           19D5 	L19D5           
19FE 	L19FE           1A26 	L1A26           1A2C 	L1A2C           
1A37 	L1A37           1A45 	L1A45           1A49I 	L1A49           
1A55 	L1A55           1A5A 	L1A5A           1A5D 	L1A5D           
1A6F 	L1A6F           1A70 	L1A70           1AB0 	L1AB0           
1ABA 	L1ABA           1ABE 	L1ABE           1AC0 	L1AC0           
1AE9 	L1AE9           1AED 	L1AED           1AF1 	L1AF1           
1AF3 	L1AF3           1AFD 	L1AFD           1B10 	L1B10           
1B3C 	L1B3C           1B4A 	L1B4A           1B4D 	L1B4D           
1B6F 	L1B6F           1B93 	L1B93           1BA5 	L1BA5           
1BE4 	L1BE4           1BE6 	L1BE6           1BEA 	L1BEA           
1BEB 	L1BEB           1C2D 	L1C2D           1C33 	L1C33           
1C4C 	L1C4C           1C59 	L1C59           1C82 	L1C82           
1C9D 	L1C9D           1CCA 	L1CCA           1CD2 	L1CD2           
1CDB 	L1CDB           1CE5 	L1CE5           1CFF 	L1CFF           
1D1C 	L1D1C           1D28 	L1D28           1D30 	L1D30           
1D43 	L1D43           1D51 	L1D51           1D75 	L1D75           
1D7A 	L1D7A           1D97 	L1D97           1DA7 	L1DA7           
1DD8 	L1DD8           1DE9 	L1DE9           1E04 	L1E04           
1E2F 	L1E2F           1E37 	L1E37           1E3D 	L1E3D           
1E44 	L1E44           1E4B 	L1E4B           1E58 	L1E58           
1E75 	L1E75           1E80 	L1E80           1EA3 	L1EA3           
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S-7


1EAB 	L1EAB           1EAF 	L1EAF           1EB7 	L1EB7           
1EBD 	L1EBD           1EBE 	L1EBE           1EE6 	L1EE6           
1EE9 	L1EE9           1EF3 	L1EF3           1EF4 	L1EF4           
1F27 	L1F27           1F2A 	L1F2A           1F3D 	L1F3D           
1F46 	L1F46           1F48 	L1F48           1F4E 	L1F4E           
1F60 	L1F60           1F62 	L1F62           1F64 	L1F64           
1F7D 	L1F7D           1F85 	L1F85           1F99 	L1F99           
1F9B 	L1F9B           1F9D 	L1F9D           1FA8 	L1FA8           
1FAB 	L1FAB           1FB8 	L1FB8           1FBC 	L1FBC           
1FBD 	L1FBD           1FCE 	L1FCE           1FD6 	L1FD6           
1FDB 	L1FDB           1FE4 	L1FE4           1FEA 	L1FEA           
1FF1 	L1FF1           1FFB 	L1FFB           2016 	L2016           
201B 	L201B           2027 	L2027           2029 	L2029           
202C 	L202C           2054 	L2054           206C 	L206C           
207A 	L207A           2088 	L2088           2097 	L2097           
20A8 	L20A8           20BD 	L20BD           20D4 	L20D4           
20DE 	L20DE           20E2 	L20E2           2196 	L20E5           
2188 	L215E           2338 	L217D           2344 	L232E           
234E 	L2338           2388 	L2518           23AB 	L253B           
23D0 	L2560           23E3 	L2573           23FC 	L258D           
2409 	L25A0           2420 	L25D4           2435 	L26D3           
243B 	L26DC           244C 	L27D7           2460 	L281D           
246A 	L2827           247B 	L283C           2480 	L2841           
24B1 	L2877           24B5 	L287B           24E3 	L28A9           
252C 	L28FA           254C 	L293A           257D 	L2970           
25C0 	L2995           25D7 	L29AD           25E0 	L29B6           
25E6 	L29BC           25F2 	L29C9           25FB 	L29D2           
2606 	L29DD           260F 	L29E6           2612 	L29E9           
2588 	L2A5A           2615 	L2D01           2621 	L2D0D           
262F 	L2D1B           2635 	L2D2A           263A 	L2D2F           
2377 	L2D50           2656 	L2D8F           2308 	L2DA4           
232E 	L2DCF           2660 	L2DF8           2674 	L2E0C           
2688 	L2E5C           268D 	L2E61           2690 	L2E64           
26A2 	L3135           26A8 	L429E           26AA 	L4450           
26AC 	L4454           26AE 	L4458           26B0 	L4460           
26B2 	L4462           26B4 	L4468           26B6 	L446A           
26B8 	L44F3           26B9 	L44F4           26BB 	L44F6           
26BD 	L44F9           26E1 	L451D           2705 	L4541           
2706 	L4544           2708 	L4546           270A 	L4548           
270C 	L454A           279E 	L45E2           27A6 	L45EA           
27B8 	L45FC           27C3 	L4607           27C6 	L460A           
27E4 	L462E           2846 	L4692           2852 	L469E           
2867 	L46B3           2872 	L46BE           287B 	L46C7           
2884 	L46D0           288D 	L46D9           289A 	L46E6           
28B5 	L4709           28D0 	L4724           2913 	L4773           
2939 	L4799           2966 	L47C6           2979 	L47DD           
298A 	L47EE           299B 	L47FF           29E4 	L484E           
29E6 	L4850           29F4 	L485E           2A00 	L486A           
2A16 	L4880           2A1A 	L4884           2A24 	L488E           
2A3B 	L48A5           2A4D 	L48B7           2A71 	L48DB           
2A79 	L48E3           2A82 	L48EC           2A8C 	L48F6           
2A90 	L48FA           2A97 	L4901           2ABE 	L4928           
2ACD 	L4937           2ADC 	L4946           2B0E 	L4978           
2B11 	L497B           2B20 	L498A           2B30 	L499A           
2B33 	L499D           2B37 	L49A1           2B4C 	L49B6           
2B81 	L49EB           2B8C 	L49F6           2B90 	L49FA           
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S-8


2BB6 	L4A20           2BCD 	L4A37           2BD5 	L4A3F           
2BE1 	L4A4B           2C05 	L4A6F           2C10 	L4A7A           
2C23 	L4A8D           2C27 	L4A91           2C2F 	L4A99           
2C45 	L4AAF           2C4B 	L4AB5           2C52 	L4ABC           
2C60 	L4ACA           2C7D 	L4AE7           2C81 	L4AEB           
2C85 	L4AEF           2CC0 	L4B2A           2CD0 	L4B3A           
2D1E 	L4B88           2D34 	L4B9E           2D4E 	L4BB8           
2D59 	L4BC3           2D70 	L4BDA           2D8E 	L4BF8           
2D9D 	L4C07           2DC2 	L4C2C           2DCE 	L4C38           
2DDA 	L4C44           2DF1 	L4C5B           2DF7 	L4C61           
2E0C 	L4C76           2E1A 	L4C84           2E3D 	L4CA7           
2E68 	L4CD2           2E6C 	L4CD6           2E77 	L4CE1           
2E93 	L4CFD           2E9A 	L4D04           2EC1 	L4D2B           
2F0F 	L4D79           2F1C 	L4D86           2F25 	L4D8F           
2F53 	L4DBD           2F6A 	L4DD4           2F79 	L4DE3           
2F7C 	L4DE6           2F7F 	L4DE9           2F89 	L4DF3           
2FBA 	L4E24           2FCB 	L4E35           2FDC 	L4E46           
2FFB 	L4E65           300A 	L4E74           300F 	L4E79           
3020 	L4E8A           3023 	L4E8D           303A 	L4EA4           
303D 	L4EA7           304B 	L4EB5           3051 	L4EBB           
3073 	L4EDD           30A2 	L4F0C           30A5 	L4F0F           
30AA 	L4F14           30AE 	L4F18           30CB 	L4F35           
30E7 	L4F51           30E8 	L4F52           30F6 	L4F60           
3108 	L4F72           3111 	L4F7B           3114 	L4F7E           
3131 	L4F9B           315E 	L4FC8           3171 	L4FDB           
317C 	L4FE6           31A8 	L5012           31CF 	L5039           
3221 	L508B           323F 	L50A9           3246 	L50B0           
324F 	L50B9           3257 	L50C1           327E 	L50E8           
328F 	L50F9           329C 	L5106           32D6 	L5140           
3301 	L516B           3320 	L518A           332D 	L5197           
3332 	L519C           333B 	L51A5           335B 	L51C5           
3362 	L51CC           338E 	L51F8           33A0 	L520A           
33A6 	L5210           33D1 	L523B           33EA 	L5254           
33FB 	L5265           3407 	L5271           340C 	L5276           
341D 	L5287           3420 	L528A           3423 	L528D           
342B 	L5295           3431 	L529B           345D 	L52C7           
3477 	L52E1           347F 	L52E9           348E 	L52F8           
3492 	L52FC           34A6 	L5310           34D0 	L533A           
34D6 	L5340           34E0 	L534A           34EB 	L5355           
34F6 	L5360           34F9 	L5363           350D 	L5377           
351B 	L5385           3532 	L539C           3561 	L53CB           
3566 	L53D0           3585 	L53EF           35B6 	L5420           
35BA 	L5424           35E2 	L544C           35E4 	L544E           
35F3 	L545D           3601 	L546B           361B 	L5485           
361F 	L5489           366B 	L54D5           36A2 	L550C           
36B7 	L5521           36C7 	L5531           36C9 	L5533           
36DF 	L5549           3718 	L5582           3721 	L558B           
373B 	L55A5           3741 	L55AB           374A 	L55B4           
3775 	L55DF           37A5 	L560F           37B4 	L561E           
37B5 	L561F           37BC 	L5626           37CF 	L5639           
37E4 	L564E           37E8 	L5652           382E 	L5698           
3831 	L569B           3844 	L56AE           384B 	L56B5           
385B 	L56C5           3864 	L56CE           3870 	L56DA           
3880 	L56EA           3892 	L56FC           3898 	L5702           
38A0 	L570A           38BF 	L5729           38C5 	L572F           
38C8 	L5732           38D3 	L573D           38F4 	L575E           
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S-9


3901 	L576B           390E 	L5778           3937 	L57A1           
393F 	L57A9           3945 	L57AF           3953 	L57BD           
3956 	L57C0           395F 	L57C9           3969 	L57D3           
396C 	L57D6           3979 	L57E3           3980 	L57EA           
398F 	L57F9           3993 	L57FD           39A0 	L580A           
39A8 	L5812           39B0 	L581A           39DB 	L5845           
39E0 	L584A           39E8 	L5852           39ED 	L5857           
39FA 	L5864           3A0D 	L5877           3A22 	L588C           
3A30 	L589A           3A33 	L589D           3A47 	L58B1           
3A57 	L58C1           3A5B 	L58C5           3A79 	L58E3           
3A9C 	L5906           3AA4 	L590E           3AAC 	L5916           
3AB1 	L591B           3AB5 	L591F           3AD0 	L593A           
3AD9 	L5943           3AEB 	L5955           3AF6 	L5960           
3AFC 	L5966           3B07 	L5971           3B0F 	L5979           
3B14 	L597E           3B17 	L5981           3B1B 	L5985           
3B1C 	L5986           3B1F 	L5989           3B22 	L598C           
3B35 	L599F           3B41 	L59AB           3B4F 	L59B9           
3B54 	L59BE           3B57 	L59C1           3B6E 	L59D8           
3B71 	L59DB           3B77 	L59E1           3B7F 	L59E9           
3B90 	L59FA           3B96 	L5A00           3B9C 	L5A06           
3BA2 	L5A0C           3BAD 	L5A17           3BC5 	L5A2F           
3BC8 	L5A32           3BC9 	L5A33           3BD7 	L5A41           
3BF1 	L5A5B           3BF9 	L5A63           3BFC 	L5A66           
3BFF 	L5A69           3C0E 	L5A78           3C12 	L5A7C           
3C25 	L5A8F           3C3F 	L5AA9           3C42 	L5AAC           
3C4A 	L5AB4           3C4D 	L5AB7           3C54 	L5ABE           
3C60 	L5ACA           3C7A 	L5AE4           3C7D 	L5AE7           
3C7E 	L5AE8           3C90 	L5AFA           3CAB 	L5B15           
3CB6 	L5B20           3CBC 	L5B26           3CD1 	L5B3B           
3CDD 	L5B47           3CE2 	L5B4C           3CE5 	L5B4F           
3CEE 	L5B58           3CF2 	L5B5C           3D00 	L5B6A           
3D08 	L5B72           3D21 	L5B8B           3D2B 	L5B95           
3D33 	L5B9D           3D3C 	L5BA6           3D5C 	L5BC6           
3D5F 	L5BC9           3D68 	L5BD2           3D6E 	L5BD8           
3D73 	L5BDD           3D76 	L5BE0           3D8D 	L5BF7           
3DA6 	L5C10           3DAC 	L5C16           3DB4 	L5C1E           
3DBA 	L5C24           3DE1 	L5C4B           3DF5 	L5C5F           
3DF9 	L5C63           3DFC 	L5C66           3E17 	L5C81           
3E1D 	L5C87           3E43 	L5CAD           3E50 	L5CBA           
3E7A 	L5CE4           3E84 	L5CEE           3E8F 	L5CF9           
3E98 	L5D02           3EB5 	L5D1F           3EB8 	L5D22           
3ED7 	L5D41           3EDB 	L5D45           3EF2 	L5D5C           
3EF6 	L5D60           3F03 	L5D6D           3F0C 	L5D76           
3F19 	L5D83           3F1F 	L5D89           3F2A 	L5D94           
3F35 	L5D9F           3F44 	L5DAE           3F47 	L5DB1           
3F4A 	L5DB4           3F55 	L5DBF           3F64 	L5DCE           
3F6A 	L5DD4           3F6F 	L5DD9           3F72 	L5DDC           
3F79 	L5DE3           3F7F 	L5DE9           3F8F 	L5DF9           
3F9B 	L5E05           3FB0 	L5E1A           3FCE 	L5E38           
3FD3 	L5E3D           3FD8 	L5E42           3FDB 	L5E45           
3FDE 	L5E48           3FE3 	L5E4D           3FE8 	L5E52           
3FED 	L5E57           3FF2 	L5E5C           3FF7 	L5E61           
3FFD 	L5E67           4003 	L5E6D           400E 	L5E78           
401A 	L5E84           4024 	L5E8E           402D 	L5E97           
4038 	L5EA2           4046 	L5EB0           4051 	L5EBB           
4054 	L5EBE           4066 	L5ED0           4073 	L5EDD           
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S-10


407E 	L5EE8           4081 	L5EEB           40BE 	L5F28           
40CA 	L5F34           40DD 	L5F47           40F5 	L5F5F           
40F8 	L5F62           40FE 	L5F68           412E 	L5F98           
4131 	L5F9B           415F 	L5FC9           4192 	L5FFC           
419C 	L6006           41A1 	L600B           41A6 	L6010           
41B1 	L601B           41C5 	L602F           41CF 	L6039           
41E0 	L604A           41EA 	L6054           41ED 	L6057           
4219 	L6083           4234 	L609E           423A 	L60A4           
423F 	L60A9           4259 	L60C3           4262 	L60CC           
427F 	L60E9           429D 	L6107           42A8 	L6112           
42D1 	L613B           42D9 	L6143           42DE 	L6148           
42F3 	L615D           42F6 	L6160           430A 	L6174           
431D 	L6187           4329 	L6193           433A 	L61A4           
4352 	L61BC           4364 	L61CE           4369 	L61D3           
4380 	L61EA           4397 	L6201           43A5 	L620F           
43B3 	L621D           43C3 	L622D           43CF 	L6239           
43DF 	L6249           43ED 	L6257           4407 	L6271           
440C 	L6276           441B 	L6285           4433 	L629D           
4468 	L62D2           447A 	L62E4           4485 	L62EF           
44A6 	L6310           44B2 	L631C           44BD 	L6327           
44CB 	L6335           44DB 	L6345           44F6 	L6360           
4504 	L636E           4507 	L6371           4516 	L6380           
451B 	L6385           4520 	L638A           4525 	L638F           
452A 	L6394           452F 	L6399           4534 	L639E           
4539 	L63A3           453E 	L63A8           4541 	L63AB           
4554 	L63BE           4559 	L63C3           455C 	L63C6           
4565 	L63CF           456A 	L63D4           456D 	L63D7           
4577 	L63E1           4581 	L63EB           458C 	L63F6           
4597 	L6401           459D 	L6407           459F 	L6409           
45A2 	L640C           45A7 	L6411           45B8 	L6422           
45BB 	L6425           45C1 	L642B           45C4 	L642E           
45CD 	L6437           45D7 	L6441           45DD 	L6447           
45E8 	L6452           45F6 	L6460           4614 	L647E           
4617 	L6481           461D 	L6487           462D 	L6497           
4632 	L649C           4637 	L64A1           4642 	L64AC           
4655 	L64BF           4657 	L64C1           465A 	L64C4           
465F 	L64C9           4668 	L64D2           466B 	L64D5           
4670 	L64DA           4675 	L64DF           4678 	L64E2           
4688 	L64F2           4690 	L64FA           4696 	L6500           
46AA 	L6514           46AF 	L6519           46B4 	L651E           
46B5 	L651F           46CE 	L6538           46D6 	L6540           
46E9 	L6553           46EA 	L6554           4702 	L656C           
470C 	L6576           471F 	L6589           4725 	L658F           
472A 	L6594           472D 	L6597           4733 	L659D           
4747 	L65B1           4750 	L65BA           4755 	L65BF           
4760 	L65CA           476B 	L65D5           4774 	L65DE           
477A 	L65E4           477D 	L65E7           4785 	L65EF           
478D 	L65F7           479E 	L6608           47AB 	L6615           
47B1 	L661B           47CA 	L6634           47DE 	L6648           
47E2 	L664C           47E9 	L6653           47F1 	L665B           
47F4 	L665E           4808 	L6672           4833 	L669D           
483C 	L66A6           484D 	L66B7           4862 	L66CC           
4865 	L66CF           4870 	L66DA           4894 	L66FE           
4897 	L6701           48AA 	L6714           48B1 	L671B           
48C1 	L672B           48CA 	L6734           48DF 	L6749           
4915 	L677F           491D 	L6787           4921 	L678B           
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S-11


4933 	L679D           4938 	L67A2           4946 	L67B0           
4948 	L67B2           4965 	L67CF           496F 	L67D9           
4983 	L67ED           49A2 	L680C           49A6 	L6810           
49D0 	L683A           49DD 	L6847           49FD 	L6867           
4A0A 	L6874           4A12 	L687C           4A1E 	L6888           
4A29 	L6893           4A44 	L68AE           4A5F 	L68C9           
4A6E 	L68D8           4A80 	L68EA           4A83 	L68ED           
4A96 	L6900           4A99 	L6903           4AA0 	L690A           
4AA2 	L690C           4AAA 	L6914           4AB2 	L691C           
4ABD 	L6927           4AC7 	L6931           4ADE 	L6948           
4AFD 	L6967           4B0A 	L6974           4B1E 	L6988           
4B2D 	L6997           4B35 	L699F           4B5D 	L69C7           
4B80 	L69EA           4B88 	L69F2           4B93 	L69FD           
4BA3 	L6A0D           4BB5 	L6A1F           4BC6 	L6A30           
4BCF 	L6A39           4BDD 	L6A47           4BE0 	L6A4A           
4BEC 	L6A56           4BEE 	L6A58           4BF2 	L6A5C           
4C0A 	L6A74           4C1E 	L6A88           4C24 	L6A8E           
4C2D 	L6A97           4C2F 	L6A99           4C3E 	L6AA8           
4C43 	L6AAD           4C52 	L6ABC           4C69 	L6AD3           
4C6E 	L6AD8           4C7F 	L6AE9           4C84 	L6AEE           
4C94 	L6AFE           4CA1 	L6B0B           4CA4 	L6B0E           
4CB0 	L6B1A           4CB3 	L6B1D           4CCF 	L6B39           
4CDB 	L6B45           4CE6 	L6B50           4CEA 	L6B54           
4CF4 	L6B5E           4CF8 	L6B62           4CFC 	L6B66           
4D05 	L6B6F           4D09 	L6B73           4D0D 	L6B77           
4D11 	L6B7B           4D18 	L6B82           4D1C 	L6B86           
4D20 	L6B8A           4D24 	L6B8E           4D28 	L6B92           
4D2A 	L6B94           4D2D 	L6B97           4D32 	L6B9C           
4D3E 	L6BC7           4D51 	L6BE7           4D6C 	L6C02           
4D7C 	L6C12           4D96 	L6C2C           4D9A 	L6C30           
4DA9 	L6C3F           4DAC 	L6C42           4DB7 	L6C5E           
4DCA 	L6C71           4DDD 	L6C84           4DEF 	L6C96           
4DF4 	L6C9B           4DFC 	L6CA3           4E1B 	L6CC2           
4E4A 	L6CF6           4E4D 	L6CF9           4E51 	L6CFD           
4E5D 	L6D09           4E78 	L6D24           4E7E 	L6D2A           
4E82 	L6D2E           4E91 	L6D3D           4E97 	L6D43           
4E9D 	L6D49           4EA1 	L6D4D           4EB1 	L6D5D           
4EB7 	L6D63           4EBB 	L6D67           4EC6 	L6D72           
4EC9 	L6D75           4ECE 	L6D7A           4EDB 	L6D87           
4EE1 	L6D8D           4EE8 	L6D94           4EEE 	L6D9A           
4EF8 	L6DA4           4F0E 	L6DBA           4F1A 	L6DC6           
4F2F 	L6DDB           4F34 	L6DE0           4F37 	L6DE3           
4F47 	L6DF3           4F57 	L6E03           4F6D 	L6E19           
4F7E 	L6E2A           4F8B 	L6E37           4F8F 	L6E3B           
4F9C 	L6E48           4FA8 	L6E54           4FAE 	L6E5A           
4FB7 	L6E63           4FBC 	L6E68           4FCA 	L6E76           
4FD1 	L6E7D           4FE6 	L6E92           4FEA 	L6E96           
4FF0 	L6E9C           4FF1 	L6E9D           5002 	L6EAE           
500A 	L6EB6           500C 	L6EB8           500F 	L6EBB           
5024 	L6ED0           5034 	L6EE0           5046 	L6EF2           
504B 	L6EF7           505F 	L6F0B           5063 	L6F0F           
5067 	L6F13           506B 	L6F17           506F 	L6F1B           
5073 	L6F1F           5077 	L6F23           507B 	L6F27           
507D 	L6F29           5084 	L6F30           508C 	L6F38           
5094 	L6F40           509C 	L6F48           50A0 	L6F4C           
50A4 	L6F50           50B2 	L6F5E           50BA 	L6F66           
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S-12


50C2 	L6F6E           50CA 	L6F76           50D2 	L6F7E           
50DC 	L6F88           50E6 	L6F92           50E9 	L6F95           
5107 	L6FB3           5109 	L6FB5           5113 	L6FBF           
511E 	L6FCA           5121 	L6FCD           5138 	L6FE4           
513C 	L6FE8           513F 	L6FEB           5145I 	L6FF1           
519C 	L7048           51A1 	L704D           51B9 	L7065           
51C1 	L706D           51C4 	L7070           51CE 	L707A           
51E2 	L708E           51EF 	L709B           51FB 	L70A7           
5265 	L7124           528B 	L714A           52A2 	L7161           
52A7 	L7166           52AB 	L716A           52B6 	L7175           
52B9 	L7178           52BF 	L717E           52D0 	L718F           
52D2 	L7191           52E7 	L71A6           52E9 	L71A8           
5322 	L71E1           532B 	L71EA           5334 	L71F3           
533A 	L71F9           5346 	L7205           535B 	L721A           
5378 	L7237           5380 	L723F           5383 	L7242           
539E 	L725D           53A6 	L7265           53B2 	L7271           
53C3 	L7282           53C7 	L7286           53CE 	L728D           
53D9 	L7298           53DB 	L729A           53E2 	L72A1           
53EB 	L72AA           53EF 	L72C8           53F5 	L72D4           
53FB 	L72DA           53FF 	L72DE           5402I 	L72E1           
5404 	L72E3           542C 	L7308           5430 	L730C           
543D 	L731F           55F1 	L74D3           55F9 	L74DB           
5601 	L74E3           5609 	L74EB           5611 	L74F3           
5619 	L74FB           5629 	L750B           5631 	L7513           
5647 	L7529           564E 	L7530           5651 	L7533           
5658 	L753A           5660 	L7542           5666 	L7548           
566B 	L754D           566F 	L7551           5672 	L7554           
5678 	L755A           567E 	L7560           5680 	L7562           
5688 	L756A           568C 	L756E           5690 	L7572           
5692 	L7574           5697 	L7579           569A 	L757C           
569E 	L7580           56A0 	L7582           56A2 	L7584           
56B3 	L7595           56BD 	L759F           56C5 	L75A7           
56D9 	L75BB           56F8 	L75DA           5713 	L75F5           
571E 	L7600           5722 	L7604           5737 	L7619           
573B 	L761D           5743 	L7625           5752 	L7634           
5756 	L7638           58CF 	L77B1           5A18 	L78FA           
5A1E 	L7901           5A1F 	L7902           5A21 	L7904           
5A23 	L7906           5A25 	L7908           5A27 	L790A           
5A29 	L790C           5A2B 	L790E           5A2C 	L790F           
5A50 	L7933           5A74 	L7957           5AF4 	L79D7           
5B74 	L7A57           5BF4 	L7AD7           5C74 	L7B57           
5C75 	L7B58           5C76 	L7B59           5C77 	L7B5A           
5C79 	L7B5C           5C7A 	L7B5D           5C7B 	L7B5E           
5C7D 	L7B60           5C7F 	L7B62           5C81 	L7B64           
5C82 	L7B65           5C86 	L7B69           5C88 	L7B6B           
5C8A 	L7B6D           5C8C 	L7B6F           5C8E 	L7B71           
5C8F 	L7B72           5C90 	L7B73           5C91 	L7B74           
5C92 	L7B75           5C94 	L7B77           5C96 	L7B79           
5C98 	L7B7B           5C9A 	L7B7D           5C9C 	L7B7F           
5C9E 	L7B81           5CA0 	L7B83           5CA2 	L7B85           
5CA4 	L7B87           5CA5 	L7B88           5CA6 	L7B89           
5CA8 	L7B8B           5CAA 	L7B8D           5CAC 	L7B8F           
5CAD 	L7B90           5CAE 	L7B91           5CAF 	L7B92           
5CB0 	L7B93           5CB1 	L7B94           5CB2 	L7B95           
5CB3 	L7B96           5CB4 	L7B97           5CB5 	L7B98           
5CB6 	L7B99           5CB7 	L7B9A           5CB8 	L7B9B           
TURBO PASCAL Line Compiler for CP/M 80	MACRO-80 3.44	09-Dec-81	PAGE	S-13


5CB9 	L7B9C           5CBA 	L7B9D           5CBB 	L7B9E           
5CBC 	L7B9F           5CBD 	L7BA0           5CBE 	L7BA1           
5CBF 	L7BA2           5CC0 	L7BA3           5CC1 	L7BA4           
5CC3 	L7BA6           5CC4 	L7BA7           5CC6 	L7BA9           
5CC8 	L7BAB           5CCD 	L7BB0           5CCF 	L7BB2           
5CDA 	L7BBD           5CDB 	L7BBE           5CDD 	L7BC0           
5CDE 	L7BC1           5CDF 	L7BC2           5CE1 	L7BC4           
5CE3 	L7BC6           5CE4 	L7BC7           5CE5 	L7BC8           
5CE6 	L7BC9           5CE7 	L7BCA           5CE9 	L7BCC           
5CF2 	L7BD5           5CF4 	L7BD7           5CF6 	L7BD9           
5CF8 	L7BDB           5CF9 	L7BDC           5CFA 	L7BDD           
5CFC 	L7BDF           5CFE 	L7BE1           5D00 	L7BE3           
5D01 	L7BE4           5D03 	L7BE6           5D05 	L7BE8           
5D06 	L7BE9           5D08 	L7BEB           5D0A 	L7BED           
5D0C 	L7BEF           5D12 	L7BF5           01B4 	LENLAB          
000A 	LF              FFF3 	LFFF3           FFFC 	LFFFC           
FFFF 	LFFFF           000C 	LL000C          0018 	LL0018          
0010 	LL018B          000E 	LL0498          0006 	LN.LEN          
0067 	LN.MIN          000F 	LOMASK          0001 	LSB             
0028 	MANT.BITS       0005 	MANT.LEN        7FFF 	MAXINT          
001F 	MAXPARAMS       02C4 	MEMGAP          0038 	MINWID          
0080 	MSB             2114 	NOCCP           007F 	NOMSB           
0000 	NULL            005D 	NUMBER          21F2 	OPTERR          
0000 	OS              0006 	OUT.BIT         22F7 	PR.ERRIND       
22C2I 	PRSRCLINE       0006 	RAMDEVICE       0004 	RD.BIT          
000C 	REAL.ASCII      0018 	REAL.DIG        0007 	REAL.FIELD      
0006 	REAL.LEN        0002 	REC.NEW         0001 	REC.NEW.BIT     
0001 	REC.WR          0000 	REC.WR.BIT      0080 	RECLNG          
00FF 	RST             21B6 	SCANCCP         0020 	SET.LEN         
0007 	SGN.BIT         0080 	SIGN.BIT        006C 	SIN.MIN         
003E 	SKIP            0001 	SKIP.2          0011 	SKIP.3          
0014 	SQR.EXP         0004 	STD.ITM         0006 	STD.LEN         
005C 	STDFCB          0400 	STKSPC          0009 	TAB             
000F 	TERMLEN         0100 	TPA             0006 	TPATOP          
0015 	TPHEAD          0005 	TRG.LEN         0005 	WR.BIT          
0013 	XOFF            



No Fatal error(s)

 
   21B6 	SCANCCP         0020 