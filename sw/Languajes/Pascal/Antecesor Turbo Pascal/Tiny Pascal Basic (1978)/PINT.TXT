
G: go - Set prog ram counter to zero; initialize other counters; start execution.
S: single-step - Execute one p-code; display the mnemonics of the next p-code pointed
   by the updated program co unter.
R: run /restart - Start exec ution from current program counter until the program ends
   or a breakpoint is reached . This command is used to continue execution at a breakpoint.
B: set breakpoint - A p-code address is entered as a breakpoint after the interpreter
   prompts with a ? Up to five breakpoints may be set.
C: clear - All breakpoints previously set are cleared.
Y: display breakpoint - Display the breakpoints already set.
X: examine status - Display the values of: current program counter, base address, stack
   pointer, the top two elements of the stack.
K: stack content - A value is entered as the stack pointer after the interpreter prompts
   with a ? It will then display the values of six stack elements starting from this stack
   pointer.
T : trace - Display the address and mnemonics of the 16 p-codes last executed. This
   command is usually applied at a breakpoint. It is used for tracing the logic flow of
   the program.
E: examine program - A p-code address is entered as a display pointer (DP) after the
   interpreter prompts with a ? It will then display the mnemonics of the p-code at th is
   address. This command and the U and N commands are used for exam ining the
   p-codes anywhere in the program without alte ring the current program counter.
U: up - Decrement the display pointer by one and display the mnemonics of the p-code
   pointed by it.
N: next - In crement the display pointer by one and display the mnemonics of the
   p-code pointed by it.
Q: quit - Terminate the interpreter program and return to operating system

