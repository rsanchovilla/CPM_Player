; PASCAL support library	V.N.--may 25, '80
; COPYRIGHT 1978 BY Jeff Moskow
;	8/30/79
	NLIST
R:	SET	0FFFFH
C:	SET	00000H
M:	SET	00000H
S:	SET	0FFFFH
E:	SET	00000H
T:	SET	00000H
VALID:	SET	00000H
MAXOUT	EQU	3
CR	EQU	13
LF	EQU	10
OUTLST	EQU	4
TOPFRM	EQU	OUTLST+MAXOUT+MAXOUT
MARGIN	EQU	50
	ORG	100H
START:	LXI	H,80H
	XRA	A
	CMP	M
	JRZ	NOCOM
	MOV	B,M
	DCR	B
	INX	H
INITLP	INX	H
	MOV	C,M
	CALL	TOUT
	DJNZ	INITLP
	MVI	C,CR
	CALL	TOUT
NOCOM	MVI	C,25
	CALL	CPM
	ADI	'A'
	STA	DEFDRV
	LXI	B,0
	EXX
	LHLD	6
	LXI	D,0-TOPFRM-1
	DAD	D
	PUSH	H
	PUSH	H
	POP	X
	POP	Y
	SPHL
	MVI	B,MAXOUT*2+OUTLST
	XRA	A
START1:	MOV	M,A
	INX	H
	DJNZ	START1
	JMP	L9999
MAXDRV	EQU	4
TAB	EQU	9
FF	EQU	12
CTLO	EQU	15
CTLS	EQU	19
CTLZ	EQU	26
ESC	EQU	27
CPM	EQU	5
CONTR	EQU	12H
CONTX	EQU	18H
RUBOUT	EQU	7FH
POPHDB	POP	H
	POP	D
	POP	B
	RET
CRLF1	MVI	C,CR
	CALL	CO
	MVI	C,LF
	JMP	CO
CSTS	PUSH	B
	PUSH	D
	PUSH	H
	MVI	C,11
	CALL	CPM
	ORA	A
	JZ	POPHDB
	MVI	A,0FFH
	JMPR	POPHDB
CI	PUSH	B
	PUSH	D
	PUSH	H
	MVI	C,1
	CALL	CPM
	JMP	POPHDB
CO	PUSH	B
	PUSH	D
	PUSH	H
	MOV	E,C
	MVI	C,2
	CALL	CPM
	JMP	POPHDB
RESTRT	MVI	C,0
	CALL	CPM
FCB	EQU	0
DEVNUM	EQU	33
BYTPT	EQU	34
LSBYT	EQU	35
DATAB	EQU	36
SELDSK	PUSH	B
	PUSH	D
	PUSH	H
	PUSH	H
	LXI	D,80H
	MVI	C,26
	CALL	CPM
	POP	H
	LXI	D,DEVNUM
	DAD	D
	MOV	E,M
	MVI	C,14
	CALL	CPM
	JMP	POPHDB
DELETE	PUSH	B
	PUSH	D
	PUSH	H
	PUSH	PSW
	CALL	SELDSK
	XCHG
	MVI	C,19
	CALL	CPM
	POP	PSW
	JMP	POPHDB
OPNOT	PUSH	B
	PUSH	D
	PUSH	H
	PUSH	PSW
	CALL	SELDSK
	XCHG
	MVI	C,22
	CALL	CPM
	CPI	255
	JZ	DERR
	POP	PSW
	POP	H
	POP	D
	POP	B

OPNIN	PUSH	B
	PUSH	D
	PUSH	H
	PUSH	PSW
	PUSH	H
	LXI	D,BYTPT
	DAD	D
	MVI	M,0FFH
	INX	H
	MVI	M,0FFH
	POP	H
	CALL	SELDSK
	XCHG
	MVI	C,15
	CALL	CPM
	ADI	1
	POP	B
	MOV	A,B
	JMP	POPHDB
BYTIN	PUSH	B
	PUSH	D
	PUSH	H
	LXI	D,BYTPT
	DAD	D
	MOV	A,M
	INX	H
	CMP	M
	CMC
	JRNZ	NTEMPT
	PUSH	PSW
	PUSH	H
	MOV	A,M
	ADI	1
	JNC	BEOF
	LXI	D,FCB-LSBYT
	DAD	D
	CALL	SELDSK
	POP	D
	PUSH	D
	INX	D
	MVI	C,26
	CALL	CPM
	POP	H
	PUSH	H
	LXI	D,FCB-LSBYT
	DAD	D
	XCHG
	MVI	C,20
	CALL	CPM
	ORA	A
	JRNZ	EOF99
	POP	H
	PUSH	H
	LXI	D,128+DATAB-LSBYT
	DAD	D
	XCHG
	MVI	C,26
	CALL	CPM
	POP	H
	PUSH	H
	LXI	D,FCB-LSBYT
	DAD	D
	XCHG
	MVI	C,20
	CALL	CPM
	ORA	A
	JRNZ	EOF360
	POP	H
	POP	PSW
	ORA	A
	JMPR	NTEMPT
EOF99
BEOF	POP	H
	POP	PSW
	STC
	JMPR	NTEMPT
EOF360	POP	H
	MVI	M,7FH
	POP	PSW
	ORA	A
NTEMPT	PUSH	PSW
	INR	A
	DCX	H
	MOV	M,A
	MOV	E,A
	MVI	D,0
	INX	H
	INX	H
	DAD	D
	POP	PSW
	MOV	A,M
	JMP	POPHDB
BYTOT	PUSH	B
	PUSH	D
	PUSH	H
	MOV	A,C
	LXI	D,BYTPT
	DAD	D
	INR	M
	JRNZ	NTFULL
BLKOT	PUSH	PSW
	PUSH	H
	INX	H
	MOV	A,M
	MVI	M,0
	INR	A
	JRZ	FIRSTC
	LXI	D,FCB-LSBYT
	DAD	D
	CALL	SELDSK
	PUSH	H
	LXI	D,DATAB
	DAD	D
	XCHG
	MVI	C,26
	CALL	CPM
	POP	H
	PUSH	H
	XCHG
	MVI	C,21
	CALL	CPM
	ORA	A
	JRNZ	DERR
	POP	H
	PUSH	H
	LXI	D,128+DATAB
	DAD	D
	XCHG
	MVI	C,26
	CALL	CPM
	POP	H
	XCHG
	MVI	C,21
	CALL	CPM
	ORA	A
	JRNZ	DERR
FIRSTC	POP	H
	POP	PSW
NTFULL	MOV	E,M
	MVI	D,0
	DAD	D
	INX	H
	INX	H
	MOV	M,A
	JMP	POPHDB
DERR	LXI	H,UNKERR
	CPI	1
	JRNZ	NTEXTR
	LXI	H,EXTERR
NTEXTR	CPI	2
	JRNZ	NTDFUL
	LXI	H,FULERR
NTDFUL	CPI	255
	JRNZ	NTDIRF
	LXI	H,DIRERR
NTDIRF	JMP	PERROR
UNKERR	DB	'Disk erro','r'+80H
EXTERR	DB	'Error in extending fil','e'+80H
FULERR	DB	'Disk ful','l'+80H
DIRERR	DB	'Directory ful','l'+80H
FILCHR	EQU	0
CLSOT	PUSH	B
	PUSH	D
	PUSH	H
	PUSH	PSW
	PUSH	H
	LXI	D,BYTPT
	DAD	D
	XCHG
	POP	H
EOFILL	MVI	A,FILCHR
	CALL	BYTOT
	LDAX	D
	ORA	A
	JZ	FILLED
	JMP	EOFILL
FILLED	XCHG
	MVI	C,16
	CALL	CPM
	POP	PSW
	JMP	POPHDB
FILNAM	PUSH	B
	PUSH	D
	PUSH	H
	PUSH	PSW
	MVI	M,0
	INX	H
	PUSH	H
	MVI	B,11
DEFSP	MVI	M,' '
	INX	H
	DJNZ	DEFSP
	MVI	B,33-11-1
ZEROLP	MVI	M,0
	INX	H
	DJNZ	ZEROLP
SKIPSP	CALL	TIN
	JZ	SKIPSP
	PUSH	PSW
	CALL	TIN
	CPI	':'
	JZ	DRVSP
	PUSH	H
	LHLD	TXTPNT
	DCX	H
	DCX	H
	SHLD	TXTPNT
	POP	H
	POP	PSW
	LDA	DEFDRV
	PUSH	PSW
DRVSP	POP	PSW
	SUI	'A'
	CPI	MAXDRV
	JM	DRVOK
	POP	H
	POP	PSW
	STC
	JMP	POPHDB
DRVOK	MOV	M,A
	POP	H
	MVI	B,9
SKSP	CALL	TIN
	JM	NOMORE
	JZ	SKSP
	CPI	'.'
	JZ	NXTPT
	MOV	M,A
	INX	H
	DJNZ	SKSP
	POP	PSW
	STC
	JMP	POPHDB
NXTPT	MOV	C,B
	MVI	B,4
NOIMAG	DCR	C
	JZ	SKSP
	INX	H
	JMPR	NOIMAG
NOMORE	POP	PSW
	ORA	A
	JMP	POPHDB
TXTPTR	DW	TXTPNT
TIN:	PUSH	H
	LHLD	TXTPNT
	MOV	A,M
	CPI	' '
	JM	TIN1
	INX	H
	SHLD	TXTPNT
	POP	H
	RET
TIN1:	LXI	H,TXTBUF
	SHLD	TIFPNT
	POP	H
	RET
TXTIN:	PUSH	B
	PUSH	D
	PUSH	H
TXTA:	LXI	H,TXTBUF 
	SHLD	TIFPNT
TXTLP:	CALL	CI
	CPI	RUBOUT
	JZ	RUBONE
	CPI	CONTX
	JZ	RUBLIN
	CPI	CONTR
	JZ	RETYP
	MOV	C,A
	CALL	TOUT
	JC	EOTXT
	MOV	A,C
	CPI	CR
	JZ	EOTXT
	CPI	LF
	JNZ	TXTLP
EOTXT:	CALL	CRLF1
	LXI	H,TXTBUF
	SHLD	TXTPNT
	JMP	POPHDB
RUBONE:	LHLD	TIFPNT
	MVI	A,TXTBUF&0FFH 
	SUB	L
	JZ	TXTLP
	DCX	H
	SHLD	TIFPNT
	MOV	A,M
	ORI	80H
	MOV	C,A
	CALL	CO
	JMP	TXTLP
RUBLIN:	CALL	CRLF1
	JMP	TXTA
RETYP:	CALL	CRLF1
	LXI	H,TXTBUF 
RETY2:	LDA	TIFPNT
	SUB	L
	JZ	TXTLP
	MOV	C,M
	CALL	CO
	INX	H
	JMP	RETY2
TOUT:	PUSH	H
	LXI	H,TXTBUF
	SHLD	TXTPNT
	LHLD	TIFPNT
	MOV	M,C
	MVI	A,TXTBUF+TBFLNG-1&0FFH
	SUB	L
	JZ	TIFIX
	INX	H
	SHLD	TIFPNT
	ORA	A
	POP	H
	RET
TIFIX:	MVI	M,CR
	STC
	POP	H
	RET
TXTYP	MOV	A,M
	ORA	A
	RZ
	PUSH	PSW
	ANI	7FH
	MOV	C,A
	CALL	CO
	POP	PSW
	RM
	INX	H
	JMP	TXTYP
TBFLNG	EQU	80
TIFPNT	DW	TXTBUF
TXTPNT	DW	TXTBUF
TXTBUF	DB	CR,CR,CR,CR,CR,CR,CR,CR,CR,CR
	DS	TBFLNG-$+TXTBUF
DEFDRV	DS	1
ILOD:	MACRO	Q,SIZE,OFST
	IF	SIZE&8000H
	IF	OFST
	LXI	B,OFST-2
	CALL	ILVNZ
	ELSE
	CALL	ILOADV
	ENDIF
	ELSE
	IF	SIZE-1
	IF	OFST
	LXI	B,OFST
	CALL	IL2NZ
	ELSE
	CALL	ILOAD2
	ENDIF
	ELSE
	IF	OFST
	LXI	B,OFST
	CALL	IL1NZ
	ELSE
	CALL	ILOAD1
	ENDIF
	ENDIF
	ENDIF
	ENDMAC
ILOAD1:	LXI	B,0
IL1NZ:	PUSH	B
	PUSH	X
	POP	B
	DAD	B
	MOV	B,M
	DCX	H
	MOV	C,M
IL1V:	POP	H
	DAD	B
	MOV	L,M
	MOV	H,A
	RET
ILOAD2:	LXI	B,0
IL2NZ:	PUSH	B
	PUSH	X
	POP	B
	DAD	B
	MOV	B,M
	DCX	H
	MOV	C,M
IL2V:	POP	H
	DAD	B
	MOV	B,M
	DCX	H
	MOV	L,M
	MOV	H,B
	RET
ILOADV:	LXI	B,0
ILVNZ:	PUSH	B
	PUSH	X
	POP	B
	DAD	B
	MOV	B,M
	DCX	H
	MOV	C,M
	DCX	H
	MOV	A,M
	DCR	A
	JZ	IL1V
	XRA	A
	JMP	IL2V
ISTR:	MACRO	Q,SIZE,OFST
	IF	OFST
	LXI	B,OFST
	CALL	ISTRNZ
	ELSE
	CALL	ISTORE
	IF	R
	JC	REFERR
	ENDIF
	ENDIF
	ENDMAC
ISTORE:	LXI	B,0
ISTRNZ:	PUSH	B
	PUSH	X
	POP	B
	DAD	B
	MOV	B,M
	DCX	H
	MOV	C,M
	DCX	H
	MOV	A,M
	POP	H
	DAD	B
	DCR	A
	JZ	ISTR1
	XRA	A
	MOV	M,D
	MOV	D,A
	DCX	H
ISTR1:	MOV	M,E
	CMP	D
	RET
LPOP:	MACRO	REG,DISTANCE
	IF	DISTANCE
	PUSH	H
	LXI	H,DISTANCE+2
	DAD	S
	MOV	E,M
	INX	H
	MOV	D,M
	PUSH	D
	MOV	D,H
	MOV	E,L
	DCX	H
	DCX	H
	LXI	B,DISTANCE
	LDDR
	POP	D
	POP	H
	POP	B
	ELSE
	POP	D
	ENDIF
	ENDMAC
ADDR:	MACRO	Q
TEMP	SET	'Q'-'IY'
	IF	'Q'-'Y'*TEMP
	CALL	XADDR
	ELSE
	CALL	YADDR
	ENDIF
	ENDMAC
MIDL:	MACRO	REG,LEVEL
	PUSH	X
	MVI	A,LEVEL
MIDL1:	SET	$
	MOV	C,6(X)
	MOV	B,7(X)
	PUSH	B
	POP	X
	CMP	1(X)
	JRNZ	MIDL1
	XRA	A
	ENDMAC
DSUB:	MACRO	Q
	XRA	A
	DSBC	Q D
	ENDMAC
DADD	MACRO	Q
	DAD	Q D
	ENDMAC
XADDR:	DSUB
	PUSH	X
	POP	D
	DAD	D
	RET
YADDR:	DSUB
	PUSH	Y
	POP	D
	DAD	D
	RET
ENTR:	MACRO	Q,LVL,VSIZ
	IF	LVL-1
	MVI	B,LVL
	LXI	D,-VSIZ
	IF	S
	CALL	ENTRSC
	ELSE
	CALL	ENTER
	ENDIF
	ELSE
	LXI	H,1-VSIZ
	DAD	S
	SPHL
	LXI	D,LAST+MARGIN
	DSUB	D
	JC	STKERR
	ENDIF
	ENDMAC
ENTRSC:	INR	A
ENTER:	XTIX
	LXI	H,0
	PUSH	H
	PUSH	H
	PUSH	B
	DAD	S
	INX	S
	PUSH	H
	XTIX
	DAD	D
	POP	D
	SPHL
	PUSH	D
	ORA	A
	RZ
	XRA	A
	LXI	D,LAST+MARGIN
	DSUB	D
	JC	STKERR
	MOV	B,A
	MOV	C,A
	EXX
	RET
EXIT:	MACRO	Q,SSIZ
	LXI	H,SSIZ+6
	JMP	EXITF
	ENDMAC
EXITF:	SPIX
	POP	B
	POP	B
	DAD	S
	PUSH	Y
	LXI	B,OUTLST
	DADY	B
	MVI	B,MAXOUT
	XCHG
SFLT:	MOV	H,1(Y)
	MOV	L,0(Y)
	MOV	A,H
	ORA	L
	JRZ	FGT
	PUSH	H
	DSBC	D
	POP	H
	JRNC	FGT
	INX	H
	INX	H
	INX	H
	CALL	CLSOT
	XRA	A
	MOV	0(Y),A
	MOV	1(Y),A
FGT:	INX	Y
	INX	Y
	DJNZ	SFLT
	XRA	A
	POP	Y
	XCHG
	POP	D
	POP	X
	POP	B
	SPHL
	MOV	H,B
	MOV	L,C
	CMP	E
	EXX
	MOV	B,A
	MOV	C,A
	EXX
	PCHL
ERROR:	EXX
	MOV	A,B
	ORA	C
	CNZ	PSTAT
ERR1:	CALL	TIN
	JRNC	ERR1
L0:	LXI	B,OUTLST
	DADY	B
	MVI	B,MAXOUT
L0A:	MOV	H,1(Y)
	MOV	L,0(Y)
	INX	Y
	INX	Y
	MOV	A,H
	ORA	L
	INX	H
	INX	H
	INX	H
	CNZ	CLSOT
	DJNZ	L0A
	CALL	RESTRT
EQUL:	MACRO	Q,SIZE
	IF	SIZE
	LXI	B,SIZE
	CALL	SEQUL
	ELSE
	CALL	IEQUL
	ENDIF
	ENDMAC
NEQL:	MACRO	Q,SIZE
	IF	SIZE
	LXI	B,SIZE
	CALL	SNE
	ELSE
	CALL	INE
	ENDIF
	ENDMAC
LE:	MACRO	Q,SIZE
	IF	SIZE
	LXI	B,SIZE
	CALL	SLE
	ELSE
	CALL	ILE
	ENDIF
	ENDMAC
LESS:	MACRO	Q,SIZE
	IF	SIZE
	LXI	B,SIZE
	CALL	SLT
	ELSE
	CALL	ILT
	ENDIF
	ENDMAC
GE:	MACRO	Q,SIZE
	IF	SIZE
	LXI	B,SIZE
	CALL	SGE
	ELSE
	CALL	IGE
	ENDIF
	ENDMAC
GRET:	MACRO	Q,SIZE
	IF	SIZE
	LXI	B,SIZE
	CALL	SGT
	ELSE
	CALL	IGT
	ENDIF
	ENDMAC
MULT:	MACRO
	IF	M
	CALL	IMULT
	ELSE
	CALL	QMULT
	ENDIF
	ENDMAC
DIVD:	MACRO
	CALL	IDIVD
	IF	M
	JC	DIVERR
	ENDIF
	ENDMAC
MMOD:	MACRO
	CALL	IMOD
	IF	M
	JC	DIVERR
	ENDIF
	ENDMAC
NEGT:	MACRO	REG
	IF	'REG'-'H'
	MOV	A,E
	CMA
	MOV	E,A
	ELSE
	MOV	A,L
	CMA
	MOV	L,A
	ENDIF
	MOV	A,REG
	CMA
	MOV	REG,A
	INX	REG
	XRA	A
	ENDMAC
CTRL:	MACRO
	IF	C
	CALL	CSTS
	JRZ	$+16
	CALL	CI
	CPI	'C'&3FH
	JZ	ERROR
	MVI	C,7
	CALL	CO
	XRA	A
	ENDIF
	ENDMAC
RCHK:	MACRO	REG,LBND,HBND
	IF	R
	LXI	B,LBND
	IF	'REG'-'H'
	PUSH	H
	LXI	H,HBND
	CALL	CHKDE
	POP	H
	ELSE
	PUSH	D
	LXI	D,HBND
	CALL	CHKHL
	POP	D
	ENDIF
	ENDIF
	ENDMAC
CHKDE:	CALL	IGE
	JRNC	RNGERR
	MOV	H,B
	MOV	L,C
	CALL	ILE
	RC
	JR	RNGERR
CHKHL:	CALL	ILE
	JRNC	RNGERR
	MOV	D,B
	MOV	E,C
	CALL	IGE
	RC
	JR	RNGERR
STMT:	MACRO	Q,NUMBER
	IF	T+E
VALID	SET	0FFFFH
	EXX
	LXI	B,NUMBER
	IF	T
	IF	'M'-'Q'
	CALL	PSTAT
	ENDIF
	ENDIF
	EXX
	ELSE
	IF	VALID
	EXX
	MOV	B,A
	MOV	C,A
	EXX
VALID	SET	00000H
	ENDIF
	ENDIF
	ENDMAC
PSTAT:	LXI	H,STMTMSG
	PUSH	B
	CALL	TXTYP
	POP	H
	PUSH	H
	LXI	D,1000
	CALL	DIGIT
	LXI	D,100
	CALL	DIGIT
	LXI	D,10
	CALL	DIGIT
	LXI	D,1
	CALL	DIGIT
	LXI	H,CRLF
	CALL	TXTYP
	POP	B
	XRA	A
	RET
DIGIT:	MVI	C,'0'-1
	XRA	A
DIG1:	INR	C
	DSBC	D
	JRNC	DIG1
	DAD	D
	JMP	CO
REFERR:	LXI	H,REFMSG
	JR	PERROR
STKERR:	LXI	H,STKMSG
	JR	PERROR
RNGERR:	LXI	H,RNGMSG
	JR	PERROR
DIVERR:	LXI	H,OUMSG
	JR	PERROR
MLTERR	LXI	H,MLTMSG
PERROR:	CALL	TXTYP
	JMP	ERROR
REFMSG	DB	'Call by reference precision erro','r'+80H
RNGMSG	DB	'Index or value out of rang','e'+80H
OUMSG	DB	'Attempted divide by zer','o'+80H
MLTMSG	DB	'Multiply overflo','w'+80H
STKMSG	DB	'Stack overflo','w'+80H
STMTMSG	DB	' -- statement',' '+80H
CRLF	DB	CR,LF+80H
QMULT:	MVI	B,17
	CMP	D
	JRZ	OPT
	CMP	H
	JRNZ	NOOPT
	XCHG
OPT:	MVI	B,9
	MOV	D,E
NOOPT:	MOV	A,B
	MOV	B,H
	MOV	C,L
	LXI	H,0
MLOOP:	DCR	A
	RZ
	DAD	H
	XCHG
	DAD	H
	XCHG
	JRNC	MLOOP
	DAD	B
	JR	MLOOP
IMULT:	PUSH	D
	PUSH	H
	BIT	7,D
	JRZ	CANDP
	PUSH	H
	MOV	H,A
	MOV	L,A
	XRA	A
	DSBC	D
	XCHG
	POP	H
CANDP:	BIT	7,H
	JRZ	CAND0
	PUSH	D
	XCHG
	XRA	A
	MOV	H,A
	MOV	L,A
	DSBC	D
	POP	D
CAND0:	CMP	H
	JRNZ	SETUP
	CMP	L
	JRNZ	OP2ONE
	POP	H
	POP	D
	XRA	A
	RET
OP2ONE:	DCR	L
	INX	H
	JRNZ	SETUP
	XRA	A
	POP	D
	POP	H
	BIT	7,D
	RZ
	JR	CSIGN
SETUP:	MOV	B,D
	MOV	C,E
	XCHG
	MOV	H,A
	MOV	L,A
MCONT:	SRAR	B
	RRAR	C
	JRNC	MTEST
	DAD	D
	BIT	7,H
	JNZ	MLTERR
MTEST:	SLAR	E
	RLAR	D
	MOV	A,B
	ORA	C
	JRNZ	MCONT
	POP	B
	POP	D
	MOV	A,D
	XRA	B
	BIT	7,A
	JRZ	POS
CSIGN:	XCHG
	XRA	A   
	MOV	H,A
	MOV	L,A
	DSBC	D
POS:	XRA	A
	RET
ABS:	BIT	7,H
	RZ
	XCHG
	MOV	H,A
	MOV	L,A
	XRA	A
	DSBC	D
	RET
IDIVD:	PUSH	D
	PUSH	H
	XRA	A
	BIT	7,D
	JRZ	DIVSPO
	MOV	H,A
	MOV	L,A
	DSBC	D
	XCHG
	POP	H
	PUSH	H
DIVSPO:	BIT	7,H
	JRZ	DIVDPO
	PUSH	D
	XCHG
	XRA	A
	MOV	H,A
	MOV	L,A
	DSBC	D
	POP	D
DIVDPO:	CMP	D
	JRNZ	CKNM
	ORA	E
	JRZ	ZERO
	DCR	A
	JRNZ	NOTONE
	POP	H
	POP	D
	BIT	7,D
	JRZ	ONEDON
	XCHG
	XRA	A
	MOV	H,A
	MOV	L,A
	DSBC	D
ONEDON:	MOV	D,A
	MOV	E,A
	XRA	A
	RET
NOTONE:	DCR	A
	JRNZ	NOTTWO
	MOV	B,H
	MOV	C,L
	SRAR	B
	RRAR	C
	MOV	H,A
	MOV	L,A
	JRNC	SIGNS
	INR	L
	JR	SIGNS
ZERO:	POP	H
	POP	D
	STC
	RET
NOTTWO:	XRA	A
CKNM:	BIT	6,D
	JRNZ	NORM
	INR	A
	SLAR	E
	RLAR	D
	JMPR	CKNM
NORM:	LXI	B,0H
	INR	A
DIVLOP:	ORA	A
	DSBC	D
	JRC	FAIL
	STC
	RLAR	C
	RLAR	B
	JMPR	TEST
FAIL:	DAD	D
	SLAR	C
	RLAR	B
TEST:	SRAR	D
	RRAR	E
	DCR	A
	JRNZ	DIVLOP
SIGNS:	POP	PSW
	POP	D
	XCHG
	XRA	H
	LXI	H,0H
	JP	LIKE
	DSBC	B
	XRA	A
	RET
LIKE:	DAD	B
	XRA	A
	RET
IMOD:	BIT	7,H
	JRZ	POSRSLT
	CALL	IDIVD
	RC
	MOV	H,A
	MOV	L,A
	DSBC	D
	XRA	A
	RET
POSRSLT	CALL	IDIVD
	XCHG
	RET
RESET:	PUSH	B
	PUSH	Y
	CALL	SCAN
	JRNC	SKIP
	PUSH	H
	INX	H
	INX	H
	INX	H
	CALL	CLSOT
	XRA	A
	STAX	B
	DCX	B
	STAX	B
	POP	H
SKIP:	POP	Y
	POP	B
	POP	D
	INX	H
	INX	H
	INX	H
	CALL	MOVNAM
	JRC	YEOF
	CALL	OPNIN
	JRC	YEOF
	CALL	BYTIN
	MOV	C,A
	JRC	YEOF
	CPI	CR
	JRZ	YEOLN
	CPI	LF
	JRZ	YEOLN
	DCX	H
	XRA	A
	MOV	M,A
	DCX	H
	MOV	M,C
	DCX	H
	MOV	M,A
	XCHG
	PCHL
YEOF:	DCX 	H
	DCX	H
	DCX	H
	MVI	M,1
	JMPR	YCONT
YEOLN:	XRA	A
	DCX	H
	DCX	H
	DCX	H
	MOV	M,A
YCONT:	INX	H
	MOV	M,C
	INX	H
	MVI	M,1
	XCHG
	XRA	A
	PCHL
REWRITE:POP	D
	PUSH	B
	CALL	CHKLST
	POP	B
	INX	H
	INX	H
	INX	H
	CALL 	MOVNAM
	JRC	BADWRT
	CALL	DELETE
	CALL	OPNOT
	XRA	A
	DCX	H
	MVI	M,1
	DCX	H
	MOV	M,A
	DCX	H
	MVI	M,1
	XCHG
	PCHL
CHKLST:	PUSH	Y
	CALL	SCAN
	JRNC	NOTFND
	INX	H
	INX	H
	INX	H
	CALL	CLSOT
	DCX	H
	DCX	H
	DCX	H
	POP	Y
	RET
NOTFND:	POP	Y
	PUSH	Y
	PUSH	H
	MOV	H,A
	MOV	L,A
	CALL	SCAN
	JRNC	ERRTMF
	POP	H
	MOV	A,H
	STAX	B
	DCX	B
	MOV	A,L
	STAX	B
	POP	Y
	RET
ERRTMF:	LXI	H,ERRMES
	JMP	PERROR
ERRMES:	DB	'Too many open output file','s'+80H
BADWRT:	LXI	H,BNAM
	JMP	PERROR
BNAM:	DB	'Bad output file nam','e'+80H
SCAN:	LXI	B,OUTLST
	DADY	B
	MOV	A,L
	MVI	B,MAXOUT*2
CONTLK:	CMP	0(Y)
	JRZ	FNDLOW
	INX	Y
	INX	Y
	DCR	B
	DCR	B
	JRZ	NTFND
	JMPR	CONTLK
FNDLOW:	MOV	A,H
	INX	Y
	DCR	B
	CMP	0(Y)
	JRZ	FNDIT
	MOV	A,L
	INX	Y
	DCR	B
	JRZ	NTFND
	JMPR	CONTLK
FNDIT:	PUSH	Y
	POP	B
	XRA	A
	STC
	RET
NTFND:	XRA	A
	RET
STAKSP	EQU	3
MOVNAM:	CALL	TIN
	JRNC	MOVNAM
	PUSH	H
	LXI	H,STAKSP
	DAD	S
	XRA	A
	MOV	B,A
	DAD	B
	PUSH	H
	MOV	B,C
TOTI:	MOV	C,M
	CALL	TOUT
	DCX	H
	DJNZ	TOTI
	MVI	C,CR
	CALL	TOUT
	POP	B
	POP	H
	CALL	FILNAM
	EXAF
	PUSH	B
	MVI	B,50
EMPBUF:	CALL	TIN
	DJNZ	EMPBUF
	MVI	C,CR
	CALL	TOUT
	EXAF
	XTHL
	POP	B
	XTHL
	MOV	A,L
	XTHL
	MOV	M,D
	DCX	H
	MOV	M,E
	MOV	D,B
	MOV	E,C
	POP	B
	MOV	C,A
	SPHL
	XCHG
	POP	D
	PUSH	B
	MVI	A,0
	RET
SYSLOC	EQU	5
WRITEL:	PUSH	X
	CALL	PNTR
	PUSH	X
	MOV	B,0(X) 
	CMP	B
	JRNZ	CONSOL
	CALL	BUFADR
	MVI	M,1
	INX	H
	MVI	M,1
	INX	H
	MVI	M,1
	INX	H
	JMPR	TEXT
CONSOL:	MOV	H,A
	MOV	L,A
TEXT:	CALL	TXTFIL
ADDCR:	MVI	C,CR
	CALL	PRINT
	MVI	C,LF
	CALL	PRINT
CLEAN:	POP	H
	INX	H
	POP	X
	POP	D
	SPHL
	XCHG
	PCHL
WRITE:	PUSH	X
	CALL	PNTR
	PUSH	X
	MOV	B,0(X)
	CMP	B
	JRNZ	CONSO2
	CALL	BUFADR
	MVI	M,1
	INX	H
	MVI	M,1
	INX	H
	MOV	M,A
	INX	H
	CMP	B
	JNZ	NONTXT
	JMPR	TEXT2
CONSO2:	MOV	H,A
	MOV	L,A
TEXT2:	CALL	TXTFIL
	JR	CLEAN
PNTR:	LXI	X,SYSLOC
	DADX	S
	DADX	B
	MOV	D,B
	MOV	E,C
	RET
BUFADR:	DCX	D
	DCX	X
	MOV	B,0(X)
	DCX	D
	DCX	X
	MOV	H,0(X)
	DCX	D
	DCX	X
	MOV	L,0(X)
	DCX	X
	DCX	D
	RET
TXTFIL:	MOV	A,D
	ORA	E
	RZ
NXTPAR:	XRA	A
	MOV	B,0(X)
	DCX	X
	DCX	D
	DCR	B
	CZ	BOOL
	DCR	B
	CZ	INTEG
	DCR	B
	CZ	CHAR
	DCR	B
	CZ	SCALAR
	JMPR	TXTFIL
SCALAR:	LXI	B,-4
	DADX	B
	XCHG
	DAD	B
	PUSH	H
	PUSH	D
	MOV	B,4(X)
	MOV	L,3(X)
	MOV	H,A
	DAD	H
	DAD	H
	DAD	H
	MOV	D,2(X)
	MOV	E,1(X)
	DAD	D
	MVI	D,8
SCLR1:	MOV	C,M
	MOV	A,C
	CPI	' '
	JRZ	SCLR2
	INX	H
	XTHL
	CALL	PRINT
	XTHL
	DCR	D
	JRZ	SCLR2
	DJNZ	SCLR1
	INR	B
	JR	SCLR1
SCLR2:	POP	H
	POP	D
	MVI	C,' '
SCLR2A:	DCR	B
	RZ
	CALL	PRINT
	JR	SCLR2A
CHAR:	MOV	B,-2(X)
	MOV	A,0(X)
	SUB	B
	EXAF
	DCX	X
	DCX	X
	DCX	D
	DCX	D
CHAR1:	DCX	X
	DCX	D
	MOV	C,0(X)
	CALL	PRINT
	DJNZ	CHAR1
	EXAF
	DCX	X
	DCX	D
	RM
	RZ
	MOV	B,A
	MVI	C,' '
CHAR2:	CALL	PRINT
	DJNZ	CHAR2
	RET
	ENDIF
BOOL:	DCX	X
	DCX	X
	DCX	D
	DCX	D
	PUSH	D
	CMP	1(X)
	MOV	A,2(X)
	LXI	B,4
	LXI	D,TRUE
	JRC	ISTRUE
	XCHG
	DAD	B
	XCHG
	INR	C
ISTRUE:	SUB	C
	EXAF
	MOV	B,C
FIT1A:	LDAX	D
	MOV	C,A
	CALL	PRINT
	INX	D
	DJNZ	FIT1A
	POP	D
	EXAF
	RC
	RZ
	MOV	B,A
	MVI	C,' '
BLANKS:	CALL	PRINT
	DJNZ	BLANKS
	RET
TRUE:	DB	'TRUE'
	DB	'FALSE'
INTEG:	DCX	D
	DCX	D
	DCX	D
	PUSH	D
	MOV	D,-1(X)
	MOV	E,-2(X)
	PUSH	X
	POP	B
	LXI	X,-6
	DADX	S
	SPIX
	PUSH	H
	PUSH	B
	LXI	B,5
	DADX	B
	BIT	7,D
	JRZ	POSNUM
	MVI	0(X),'-'
	DCX	X
	XRA	A
	MOV	H,A
	MOV	L,A
	MOV	B,A
	DSBC	D
	JMPR	NUM
POSNUM:	XCHG
	MOV	0(X),A
	DCX	X
NUM:	MOV	C,A
	LXI	D,10000
	CALL	FIGURE
	LXI	D,1000
	CALL	FIGURE
	LXI	D,100
	CALL	FIGURE
	LXI	D,10
	CALL	FIGURE
	MOV	B,L
	CALL	ADIGIT
	MOV	B,A
	DADX	B
	INX	X
	MOV	A,0(X)
	CPI	'-'
	JRNZ	CHK0
	INR	C
	JMPR	NEGA
CHK0:	CMP	C
	JRNZ	POSN
	MVI	0(X),'0'
	INR	C
	JMPR	NEGA
POSN:	DCX	X
NEGA:	MOV	B,C
	POP	H
	MOV	A,M
	XTHL
	SUB	B
	JRC	PERFIT
	JRZ	PERFIT
	MOV	D,A
	MVI	C,' '
PAD:	CALL	PRINT
	DCR	D
	JRNZ	PAD
PERFIT:	MOV	C,0(X)
	CALL	PRINT
	DCX	X
	DJNZ	PERFIT
	POP	X
	DCX	X
	DCX	X
	DCX	X
	XCHG
	LXI	H,6
	DAD	S
	SPHL
	XCHG
	POP	D
	XRA	A
	RET
FIGURE:	XRA	A
	DCR	B
CONT:	INR	B
	DSBC	D
	JRNC	CONT
TOOFAR:	DAD	D
ADIGIT:	CMP	B
	JRNZ	NUDIG
	CMP	C
	RZ
NUDIG:	MVI	A,30H
	ADD	B
	MOV	0(X),A
	DCX	X
	INR	C
	XRA	A
	MOV	B,A
	RET
NONTXT:	PUSH	H
NONTX1:	LXI	B,-4
	DADX	B
	XCHG
	DAD	B
	XCHG
	MOV	H,2(X)
	MOV	L,1(X)
NTLP:	MOV	C,0(X)
	DCX	X
	DCX	H
	DCX	D
	XTHL
	CALL	DIS
	XTHL
	MOV	A,H
	ORA	L
	JRNZ	NTLP
	MOV	A,D
	ORA	E
	JRNZ	NONTX1
	POP	H
	JMP	CLEAN
PRINT:	XRA	A
	CMP	H
	JRNZ	DIS
	CMP	L
	JRNZ	DIS
	CALL	CO
	XRA	A
	RET
DIS:	CALL	BYTOT
	XRA	A
	RET
INE:	MOV	A,D
	CMP	H
	JRNZ	MTRUE
	MOV	A,E
	CMP	L
	JRZ	FALSE
	JMPR	MTRUE
IEQUL:	CALL	INE
	CMC
	RET
IGE:	BIT	7,H
	JRZ	HPOS
	BIT	7,D
	JRZ	FALSE
	JMPR	RLIKE
HPOS:	BIT	7,D
	JRNZ	MTRUE
RLIKE:	MOV	A,H
	CMP	D
	JRC	FALSE
	JRNZ	MTRUE
	MOV	A,L
	CMP	E
	JRC	FALSE
	JMPR	MTRUE
ILE:	BIT	7,H
	JRZ	HLPOS
	BIT	7,D
	JRZ	MTRUE
	JMPR	LKSIGN
HLPOS:	BIT	7,D
	JRNZ	FALSE
LKSIGN:	MOV	A,D
	CMP	H
	JRC	FALSE
	JRNZ	MTRUE
	MOV	A,E
	CMP	L
	JRC	FALSE
	JMPR	MTRUE
IGT:	CALL	ILE
	CMC
	RET
ILT:	CALL	IGE
	CMC
	RET
MTRUE:	XRA	A
	STC
	RET
FALSE:	XRA	A
	RET
EOLN:	XRA	A
	PUSH	H
	CMP	H
	JRNZ	FEOLN
	LHLD	TXTPTR
	PUSH	D
	MOV	E,M
	INX	H
	MOV	D,M
	LDAX	D
	POP	D
	POP	H
	CPI	CR
	JRZ	MTRUE
	JR	FALSE
FEOLN:	INX	H
	INX	H
	CMP	M
	POP	H
	JRZ	FALSE
	JMPR	MTRUE
EOF:	XRA	A
	CMP	H
	JRZ	FALSE
	CMP	M
	JRNZ	MTRUE
	JMPR	FALSE
FTXTIN	MOV	H,A
	MOV	L,C
	INX	H
	DAD	SP
	PUSH	H
	MOV	B,C
FTXT2	CALL	TIN
	CPI	CR
	JRNZ	FTXT2
FTXT3	MOV	C,M
	CALL	TOUT
	DCX	H
	DJNZ	FTXT3
	MVI	C,CR
	CALL	TOUT
	POP	H
	POP	D
	INX	H
	SPHL
	XRA	A
	XCHG
	PCHL
Z0012	EQU	 6
SEQUL:	CALL	Z0009
	RET
SNE:	CALL	Z0009
	CMC
	RET
SGT:	CALL	Z0010
	RET
SLE:	CALL	Z0010
	CMC
	RET
SLT:	CALL	Z0011
	RET
SGE:	CALL	Z0011
	CMC
	RET
Z0009:	PUSH	X
	LXI	X,Z0012
	DADX	S
	PUSH	X
	POP	H
	DADX	B
Z0001:	MOV	A,0(X)
	INX	X
	CCI 
	JRNZ	Z0008
	JV	Z0001
Z0014:	XTIX
	POP	H
	POP	D
	POP	B
	SPHL
	PUSH	B
	XCHG
	XRA	A
	STC
	PCHL
Z0008:	DADX	B
Z0013:	XTIX
	POP	H
	POP	D
	POP	B
	SPHL
	PUSH	B
	XCHG
	XRA	A
	PCHL
Z0010:	PUSH	X
	LXI	X,Z0012-1
	DADX	S
	DADX	B
	PUSH	X
	POP	H
	DADX	B
	PUSH	X
Z0002:	MOV	A,M
	CMP	0(X)
	DCX	X
	DCX	H
	JRC	Z0004
	JRNZ	Z0006
	DCX	B    
	XRA	A
	CMP	B
	JRNZ	Z0002
	CMP	C
	JRNZ	Z0002
Z0006:	POP	X
	INX	X
	JMPR	Z0013
Z0004:	POP	X
	INX	X
	JMPR	Z0014
Z0011:	PUSH	X
	LXI	X,Z0012-1
	DADX	S
	DADX	B
	PUSH	X
	POP	H
	DADX	B
	PUSH	X
Z0003:	MOV	A,M
	CMP	0(X)
	DCX	X
	DCX	H
	JRC	Z0006
	JRNZ	Z0004
	DCX	B    
	XRA	A
	CMP	B
	JRNZ	Z0003
	CMP	C
	JRNZ	Z0003
	JMPR	Z0006
READ:	CALL	LISPRO
	RET
READLN:	CALL	LISPRO
SKCR:	CALL	EOLN
	RC
	CALL	INPUT
	JR	SKCR
INPUT:	MOV	A,H
	ORA	A
	JRNZ	NCONS
	CALL	TIN
	JM	LSTCR
	MVI	L,0
	RET
LSTCR:	CPI	'C'&3FH
	JZ	ERROR
	DCR	L
	CZ	TXTIN
	CALL	TIN
	CPI	'C'&3FH
	JZ	ERROR
	CPI	LF
	RNZ
	MVI	A,CR
	RET
NCONS:	PUSH	B
	PUSH	D
	XRA	A
	CMP	M
	JRNZ	RBEOF
	MOV	D,H
	MOV	E,L
	INX	H
	INX	H
	INX	H
	CALL	BYTIN
	JRC	GEOF
	MOV	B,A
	CPI	CR
	JRZ	NCR
	CPI	LF
	JRZ	NLF
FIN:	XRA	A
	DCX	H
	MOV	M,A
FIN1:	DCX	H
	MOV	C,M
	MOV	M,B
	DCX	H
	MOV	M,A
	MOV	A,C
NTXIT:	CPI	CR
	JRZ	MAKBLK
	CPI	LF
	JRNZ	NOBLK
MAKBLK:	MVI	A,20H
NOBLK:	POP	D
	POP	B
	CPI	20H
	RET
NCR:	XCHG
	INX	H
	MOV	A,M
	CPI	CR
	JRZ	SKIPCH
	CPI	LF
	JRZ	SKIPCH
	XCHG
SETEL:	DCX	H
	MVI	M,1
	XRA	A
	JR	FIN1
SKIPCH:	XCHG
	CALL	BYTIN
	JRC	GEOF
	MOV	B,A
	CPI	CR
	JRZ	SETEL
	CPI	LF
	JRZ	SETEL
	JR	FIN
NLF:	XCHG
	INX	H
	MOV	A,M
	CPI	CR
	JRZ	SKIPCH
	XCHG
	CPI	LF
	JRZ	SETEL
	JMPR	FIN
GEOF:	DCX	H
	MVI	M,1
	DCX	H
	MOV	C,M
	MOV	M,A
	MOV	A,C
	DCX	H
	MVI	M,1
	JR	NTXIT
RBEOF:	LXI	H,EOFMES
	JMP	PERROR
EOFMES:	DB	'Read beyond EO','F'+80H
RSSLOC	EQU	5
LISPRO:	PUSH	X
	LXI	X,RSSLOC
	MOV	D,B
	MOV	E,C
	DADX	SP
	DADX	D
	DADX	D
	DADX	D
	DADX	D
	PUSH	X
	MOV	H,A
	MOV	L,A
	CMP	-2(X)
	JRNZ	BEGIN
	MOV	H,0(X)
	DCX	X
	DCX	D
	MOV	L,0(X)
	DCX	X
	DCX	X
	DCX	X
	CMP	1(X)
	JNZ	NTXT
BEGIN:	MOV	A,D
	ORA	E
	JRZ	THREW
NEWPAR:	XRA	A
	CMP	H
	JRNZ	NEWP1
	INR	L
NEWP1:	MOV	B,-2(X)
	DCR	B
	CZ	BOOLE
	DCR	B
	CZ	RINTEG
	DCR	B
	CZ	CHARA
	DCX	D
	LXI	B,-4
	DADX	B
	JMPR	BEGIN
THREW:	XCHG
	POP	H
	MOV	M,D
	DCX	H
	MOV	M,E
	POP	X
	POP	D
	POP	B
	SPHL
	POP	H
	PUSH	B
	PUSH	D
	RET
CHARA:	MOV	B,-3(X)
	PUSH	H
	MOV	H,0(X)
	MOV	L,-1(X)
	XTHL
	JR	CHST
STRIN:	XTHL
	CALL	EOF
	JRC	FILLIN
	CALL	EOLN
	JRC	FILLIN
CHST:	CALL	INPUT
	CPI	CR
	JRZ	FILLIN
	XTHL
	MOV	M,A
	DCX	H
	DJNZ	STRIN
	POP	H
	RET
FILLIN:	XTHL
FILLN1:	MVI	M,' '
	DCX	H
	DJNZ	FILLN1
	POP	H
	RET
BOOLE:	CALL	INPUT
	CPI	'T'
	JRZ	TRUIN
	CPI	'F'
	JRZ	FALIN
	CPI	' '
	JRZ	BOOLE
	JMP	ERRTYP
TRUIN:	MVI	B,3
	CALL	SKIM
	MVI	B,1
	JMPR	STOBOO
FALIN:	MVI	B,4
	CALL	SKIM
	MVI	B,0
STOBOO:	PUSH	H
	MOV	H,0(X)
	MOV	L,-1(X)
	MOV	M,B
	XRA	A
	MOV	B,A
	POP	H
	RET
SKIM:	CALL	INPUT
	CPI	'E'
	RZ
	CPI	' '
	RZ
	CPI	','
	RZ
	CALL	EOF
	RC
	DJNZ	SKIM
	RET
RINTEG:	MOV	B,-3(X)
	DCR	B
	JRNZ	INT2
INT1:	CALL	CONV
	CMP	B
	JRZ	SMPOS
	CMP	H
	JNZ	ERRTYP
	PUSH	H
	LXI	H,REPROM
	CALL	TXTYP
	POP	H
	JMPR	INT1
SMPOS:	PUSH	H
	MOV	H,0(X)
	MOV	L,-1(X)
	MOV	M,C
	POP	H
	XRA	A
	MOV	B,A
	RET
INT2:	CALL	CONV
	PUSH	H
	MOV	H,0(X)
	MOV	L,-1(X)
	MOV	M,B
	DCX	H
	MOV	M,C
	POP	H
	MOV	B,A
	RET
CONV:	PUSH	D
	PUSH	H
	LXI	H,0
	MOV	B,H
	XTHL
BLNK1:	CALL	INPUT
	CPI	' '
	JRZ	BLNK1
	CPI	'-'
	JRNZ	NMINUS
	INR	B
	JR	GETDIG
NMINUS:	CPI	'+'
	JRNZ	CHKDIG
GETDIG:	CALL	INPUT
CHKDIG:	CPI	'9'+1
	JRNC	OVFMSG
	SUI	'0'
	JRC	OVFMSG
VALDIG:	XTHL
	CALL	TIMES10
	XTHL
	JV	OVFMSG
	XRA	A
	CMP	H
	JRZ	FCONS
	INX	H
	MOV	A,M
	DCX	H
	JR	CHKCHR
FCONS:	LHLD	TXTPTR
	MOV	E,M
	INX	H
	MOV	D,M
	LDAX	D
	LXI	H,0
CHKCHR:	CPI	'9'+1
	JRNC	NOTDIG
	SUI	'0'
	JRNC	GETDIG
NOTDIG:	XRA	A
	CMP	B
	POP	B
	POP	D
	RZ
	MOV	A,B
	CMA
	MOV	B,A
	MOV	A,C
	CMA
	MOV	C,A
	INX	B
	XRA	A
	RET
OVFMSG:	XRA	A
	CMP	H
	JRNZ	ERRTYP
	POP	B
	POP	D
	LXI	H,REPROM
	CALL	TXTYP
OVF1	CALL	TIN
	CPI	CR
	JRNZ	OVF1
	LXI	H,1
	JR	CONV
TIMES10	MOV	D,H
	MOV	E,L
	ORA	A
	DADC	H
	RPE
	DADC	H
	RPE
	DADC	D
	RPE
	DADC	H
	RPE
	MOV	E,A
	MVI	D,0
	DADC	D
	RET
NTXT:	PUSH	D
	PUSH	H
	MOV	H,0(X)
	MOV	L,-1(X)
	MOV	D,-2(X)
	MOV	E,-3(X)
TXLP:	XTHL
	CALL	EOF
	JC	RBEOF
	INX	H
	INX	H
	INX	H
	CALL	BYTIN
	DCX	H
	DCX	H
	MOV	B,M
	MOV	M,A
	MOV	A,B
	DCX	H
	JRNC	NTCONT
	MVI	M,1
NTCONT:	XTHL
	MOV	M,A
	DCX	H
	DCX	D
	MOV	A,D
	ORA	E
	JRNZ	TXLP
	LXI	B,-4
	DADX	B
	POP	H
	POP	D
	DCX	D
	MOV	A,D
	ORA	E
	JRNZ	NTXT
	JMP	THREW
ERRTYP:	LXI	H,TYPMES
	JMP	PERROR
TYPMES:	DB	'Type error on inpu','t'+80H
REPROM:	DB	'Error in number, try again',CR,LF+80H
CSET:	MACRO	Q,OFF1,OFF2
	IF	OFF1
	LXI	H,OFF1
	CALL	CONSET
	ELSE
	LXI	H,-OFF2
	DAD	S
	SPHL
	MVI	B,OFF2
CSETCL	SET	$
	MOV	M,A
	INX	H
	DJNZ	CSETCL
	ENDMAC
CONSET:
	INR	C
	DCR	C
	JRZ	LEGRNG
	RC
LEGRNG	DAD	S
	PUSH	B
	PUSH	D
	SRLR	E
	SRLR	E
	SRLR	E
	DSUB	D
	POP	B
	MOV	A,C
	ANI	7
	MVI	E,1
	JRZ	SINIT
	MOV	B,A
SETBIT:	SLAR	E
	DJNZ	SETBIT
SINIT:	POP	B
	MOV	B,C
	INR	B

	MOV	A,M
RANGE:	ORA	E
	SLAR	E
	JRNC	NOOVER
	MOV	M,A
	MVI	E,1
	DCX	H
	MOV	A,M
NOOVER:	DJNZ	RANGE
	MOV	M,A
	XRA	A
	RET
UNIN:	MACRO	Q,OFFSET,OFF1
	LXI	H,OFF1
	LXI	D,OFFSET
	CALL	UNION
	ENDMAC
UNION:
	CALL	SAVREG



ORBIT:	MOV	A,M
	XCHG
	ORA	M
	MOV	M,A
	XCHG
	DCX	H
	DCX	D
	DJNZ	ORBIT
	POP	H
	POP	D
	DADD	S
	SPHL
	XCHG
	XRA	A
	PCHL
MEMB:	MACRO	Q,OFFSET,OFF2
	LXI	D,OFF2
	LXI	H,OFFSET
	CALL	INN
	ENDMAC
INN:
	DADD	S
	PUSH	H
	MOV	C,M
	MOV	A,C
	DCX	H
	DAD	D
	SRLR	C

	SRLR	C
	SRLR	C
	ORA	A
	DSBC	B
	ANI	7
	MOV	B,A
	MVI	A,1
	JRZ	SET2
SET1:	ADD	A
	DJNZ	SET1
SET2:	ANA	M
	POP	H
	POP	D
	SPHL
	XCHG
	INX	S
	INX	S
	JRZ	NOTIN
	STC
NOTIN:	MVI	A,0
	PCHL
INCL:	MACRO	Q,OFFSET,OFF1
	LXI	H,OFF1
	LXI	D,OFFSET
	CALL	LTEQ
	ENDMAC
LTEQ:
	CALL	SAVREG
	XCHG
	JR	LTGTEQ
SBST:	MACRO	Q,OFFSET,OFF1
	LXI	H,OFF1
	LXI	D,OFFSET
	CALL	GTEQ
	ENDMAC
GTEQ:
	CALL	SAVREG
LTGTEQ:
	MOV	A,M
	XCHG
	ORA	M
	XRA	M
	JRNZ	NO
	DCX	H
	DCX	D
	XCHG
	DJNZ	LTGTEQ
	POP	H
	POP	D
	DADD	S
	SPHL
	XCHG
	MVI	A,80H
	PCHL
NO:
	POP	H
	POP	D
	DADD	S
	SPHL
	XCHG
	XRA	A
	PCHL
INTR:	MACRO	Q,OFFSET,OFF1
	LXI	H,OFF1
	LXI	D,OFFSET
	CALL	INSECT
	ENDMAC
INSECT:
	CALL	SAVREG
ANDBIT:
	LDAX	D
	ANA	M
	STAX	D
	DCX	H
	DCX	D
	DJNZ	ANDBIT
	POP	H
	POP	D
	DADD	S
	SPHL
	XCHG
	XRA	A
	PCHL
DIFF:	MACRO	Q,OFFSET,OFF1
	LXI	H,OFF1
	LXI	D,OFFSET
	CALL	ORGAN
	ENDMAC
ORGAN:
	CALL	SAVREG
SETDIF:
	MOV	A,M
	XCHG
	ANA	M

	XRA	M

	MOV	M,A
	DCX	H
	DCX	D
	XCHG
	DJNZ	SETDIF
	POP	H
	POP	D
	DADD	S
	SPHL
	XCHG
	XRA	A
	PCHL
MTCH:	MACRO	Q,OFFSET,OFF1
	LXI	H,OFF1
	LXI	D,OFFSET
	CALL	COMP
	ENDMAC
COMP:
	CALL	SAVREG
	MVI	C,1
QUERY:
	LDAX	D
	XRA	M
	JRNZ	NOTEQ
	DCX	H
	DCX	D
	DJNZ	QUERY
	CMP	C
	JRZ	NEQTST
EQTST:	POP	H
	POP	D
	DADD	S
	SPHL
	XCHG
	MVI	A,80H
	PCHL
NOTEQ:
	XRA	A
	CMP	C
	JRZ	EQTST
NEQTST:	POP	H
	POP	D
	DADD	S
	SPHL
	XCHG
	PCHL
NOMT:	MACRO	Q,OFFSET,OFF1
	LXI	H,OFF1
	LXI	D,OFFSET
	CALL	FUSS
	ENDMAC
FUSS:
	CALL	SAVREG
	MOV	C,A
	JR	QUERY
SAVREG:
	POP	B
	PUSH	H
	PUSH	B
	MOV	B,L
	DADD	S
	INX	H
	INX	H
	INX	H
	INX	H
	INX	H
	XCHG
	DADD	D
	XCHG
	RET
L10008	EQU	WRITELN
L10009	EQU	READLN
L10010	EQU	WRITE
L10011	EQU	READ
L10014	EQU	ABS
L10018	EQU	EOLN
L10019	EQU	EOF
L10020	EQU	RESET
L10021	EQU	REWRITE
L10022	EQU	FTXTIN
	LIST
	NMLIST
;	START OF PASCAL PROGRAM
