.macro chttl = Compilation#Example
.ahd .chttl
.sav .rm 100 .asis
  This is the sole operator input for this example
  ------------------------------------------------------
B>job pascpcd typetext.pas con typetext.pcd typetext.pcd
JOB V1.2

B>; PcdCompile source listing pcd tic codelist options
B>; For unsegmented programs with no intrinsic/external calls.
B>; Use "NUL" for any unwanted files
B>; Tic may later be used to create assembly source with ASSMAP.
B>; Tic and pcd may be identical to save disk space
B>;   since assmpcd does not use pcd until tic has been read.
B>; Set options 128 for listing on assmpcd listing
B>;   (8 bit compiles for 16 bit machine(HP3000) with increasing stack)
B>;   (16 bit forces RBM format output on pcd)
B>RUNPCD pascalp (TYPETEXT.PAS,CON,TYPETEXT.PCD);[]


PascalP system Ver. 2.3.0 Copyright (C) 1982
CP/M installation rev. 2.3
PASCALP (pasctext, pasclist, prr, ef, output); V 3.1.0
83/09/07  9:57               PASCAL-P Universal Compiler Ver. 3.1.0

    1000     0:d   PROGRAM typetext(kbd, input, output);
    2000     0:d   (* Modification of "EXPAND" to paginate to crts    *)
    3000     0:d   (* and wrap over-long lines into multiple lines.   *)
    4000     0:d   (* Converts textfiles, replacing indention codes   *)
    5000     0:d   (* by spaces.       dle, ' '+i represents i spaces *)
    6000     0:d   (* Revised 14 July 83 to handle the sequences      *)
    7000     0:d   (*   dle eoln     and     dle code eoln            *)
    8000     0:d   (* both are mapped into simply eoln.  This avoids  *)
    9000     0:d   (* anomolies generated by a UCSD format editor.    *)
   10000     0:d   (* Assumes no non-printing characters in input     *)
   11000     0:d
   12000     0:d     LABEL 1;
   13000     0:d
   14000     0:d     CONST
   15000     0:d       dle      = 16;
   16000     0:d       pagesize = 24;   (* lines *)
   17000     0:d       linesize = 80;   (* columns *)
   18000     0:d
   19000     0:d     VAR
   20000     0:d       c        : char;
   21000     1:d       linenum,
   22000     1:d       column   : integer;
   23000     5:d       kbd      : text; (* for continue/terminate control only *)
   24000   191:d
   25000   191:d   (*$n-,d- No runtime checks or linenos for speed *)
   26000   191:d
   27000   191:d     (* 1--------------1 *)
   28000   191:d
   29000   191:d     PROCEDURE pause;
   30000     0:d
   31000     0:d       BEGIN (* pause *)
   32000     0: 2      IF eof(kbd) THEN terminate
   33000    11: 4      ELSE readln(kbd);
   34000    21: 2      linenum := 1;
   35000    25: 2      END; (* pause *)
   36000    27: 2
   37000    27: 2    (* 1--------------1 *)
   38000    27: 2
   39000    27: 2    PROCEDURE linewrap;
   40000    27: 2
   41000    27: 2      BEGIN (* linewrap *)
   42000     0: 2      IF column > linesize THEN BEGIN (* linewrap *)
   43000    11: 4        column := 1; linenum := succ(linenum);
   44000    22: 4        IF linenum > pagesize THEN pause;
   45000    32: 4        writeln; END;
   46000    37: 2      END; (* linewrap *)
   47000    39: 2
   48000    39: 2    (* 1--------------1 *)
   49000    39: 2
   50000    39: 2    BEGIN (* typetext *)
   51000     0: 1    reset(kbd); linenum := 1; column := 1;
   52000    41: 1    WHILE NOT eof DO BEGIN
   53000    50: 3      WHILE NOT eoln DO BEGIN
   54000    59: 5        read(c);
   55000    67: 5        WHILE c = chr(dle) DO BEGIN
   56000    75: 7          IF NOT eoln THEN read(c);
   57000    92: 7          IF eoln THEN GOTO 1 (* dle eoln & dle code eoln -> eoln *)
   58000   103: 9          ELSE BEGIN
   59000   106: 9            IF c > ' ' THEN BEGIN
   60000   114:11              write(' ' : ord(c)-ord(' '));
   61000   125:11              column := column + ord(c) - ord(' '); END;
   62000   137: 9            read(c); END;
   63000   145: 7          END;
   64000   147: 5        write(c); column := succ(column);
   65000   163: 5        IF (column > linesize) AND NOT eoln THEN linewrap; END;
   66000   182: 3  1:  readln; column := 1; linenum := succ(linenum);
   67000   198: 3      IF linenum > pagesize THEN pause;
   68000   208: 3      writeln; END;
   69000   215: 1    END. (* typetext *)

NO. ERRORS=0 WARNINGS=0 Program size(pcode bytes)=288

NO. ERRORS=0 WARNINGS=0 Program size(pcode bytes)=288

Exit Pascal system, Max heap use @9F0C
B>RUNPCD assmpcd (TYPETEXT.PCD,TYPETEXT.PCD,);[]


PascalP system Ver. 2.3.0 Copyright (C) 1982
CP/M installation rev. 2.3
EXECUTABLE Code size (bytes) is 301 = 012D (hex)

Exit Pascal system, Max heap use @6E7E
B>era temp0001.$$$
B>
!
.res
|4