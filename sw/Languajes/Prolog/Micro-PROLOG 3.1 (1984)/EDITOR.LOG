editor-moä (EDIT© (varó ô î ó â æ í ã å ï õ ö ÷ ë é á yeó "ù" no)
((COPYRIGHT 1983 LPA LTD V11-24))
((D-C () () ()))
((D-C (X|Y) (X) Y))
((Rev-list () X X))
((Rev-list (X|Y) Z x) (Rev-list Y (X|Z) x))
((DownC X (() Y Z)) (NOT VAR X) (D-C X Y Z))
((App-C () X X))
((App-C (X|Y) Z (X|x)) (App-C Y Z x))
((BackC ((X|Y) Z x) (Y (X) y)) (App-C Z x y))
((BackC (() (X) Y) (() () (X|Y))))
((NextC (X Y (Z|x)) (y (Z) x)) (App-C Y X y))
((NextC (X (Y) ()) ((Y|X) () ())))
((Delete-in-C (() X Y) (() () Y)))
((Delete-in-C ((X|Y) Z x) (Y (X) x)))
((Front-C 0 () X X))
((Front-C X (Y|Z) x (Y|y)) (LESS 0 X) (SUM 1 z X) (Front-C z Z x y))
((DisplayC (X () Y) "No term") /)
((DisplayC (X (Y) Z) Y))
((shift-l X 0 X)/)
((shift-l ((X|X1) (Y) Z) x (X2 Y2 Z2))
  (SUM x 1 x1)(shift-l (X1 (Y) (X|Z)) x1 (X2 Y2 Z2)))
((shift-l (() Y Z) x (() Y Z)))
((shift-r X 0 X)/)
((shift-r (X (Y) (Z|Z1)) x (X2 Y2 Z2))
  (SUM 1 x1 x)(shift-r ((Z|X) (Y) Z1) x1 (X2 Y2 Z2)))
((shift-r (X Y ()) x (X Y ())))
((Edit-in-C (X Y Z) i (X (x) y)) (R x) (App-C Y Z y))
((Edit-in-C (X Y Z) a (x (y) Z)) (R y) (App-C Y X x))
((Edit-in-C X k Y) (Delete-in-C X Y))
((Edit-in-C X m Y)
  (R x)
  (IF (LESS x 0) ((shift-l X x Y)) ((LESS 0 x)(shift-r X x Y))))
((Edit-in-C (X (Y) Z) s (X (x) Z)) (R y) (EQ y (Y x)))
((Edit-in-C (X (Y) Z) t (X (x) Z)) (RFILL (Y) x))
((Edit-in-C X n Y) (NextC X Y))
((Edit-in-C X b Y) (BackC X Y))
((Edit-in-C (X (Y) Z) e (X (x) Z)) (DownC Y y) (Edit-term y x))
((Edit-in-C (X Y Z) w (X (x) y)) (R z) (NUM z) (App-C Y Z X1) 
  (Front-C z x y X1))
((Edit-in-C (X (Y) Z) u (X (x) y)) (NOT VAR Y) (App-C Y Z (x|y)))
((UpC (X Y Z) x) (App-C Y Z y) (Rev-list X y x))
((EdC X Y o) (UpC X Y) /)
((EdC X Y Z) (Edit-in-C X Z x) / (Edit-term x Y))
((EdC X Y Z) (PP ?) (Edit-term X Y))
((Edit-term X Y) (DisplayC X x) (Prompt() (x) Z) (EdC X Y Z))
((Insert-in-P 0 1 X) (vartrans X X1)(ADDCL X1 0))
((Insert-in-P X X Y) (SUM 1 Z X) (vartrans Y Y1)(ADDCL Y1 Z))
((Append-in-P x 0 1 X) (vartrans X X1)(ADDCL X1 0))
((Append-in-P x X Y Z) (vartrans Z Z1)(ADDCL Z1 X)
  (IF (EQ x "No clause") ((EQ X Y)) ((SUM X 1 Y))))
((Goto-P X Y X1) (CL ((X|Z)|x) Y Y) / (vartrans X1 ((X|Z)|x)))
((Goto-P X Y "No clause") (LESS -1 Y))
((SHIFT-L X Y Z x1 x y)
  (SUM x2 1 x1)(SUM Y x2 x3)(SUM 1 Y Y1)
  (IF (LESS x3 0) ((EQ x4 0)) ((EQ x4 x3)))
  (ADDCL Z x4)(DELCL X Y1)(SUM x4 1 x)
  (Goto-P X x y))
((SHIFT-R X Y Z x1 x y)
  (SUM Y x1 x2)(ADDCL Z x2)(DELCL X Y)(SUM x2 1 x3)(FIND X x3  x y))
((FIND X x3  x y)
  (Goto-P X x3 y3)
  (IF (EQ y3 "No clause") ((SUM 1 x4 x3)(FIND X x4 x y)) ((EQ (x y)(x3 y3)))))
((E-in-P X Y Z i x y) (R y) (EQ y ((X|X1)|X2))(Insert-in-P Y x y))
((E-in-P X Y Z c x Z) (NOT EQ Z "No clause")(Append-in-P Z Y x Z))
((E-in-P X Y Z m x y)(R x1)
  (IF (LESS x1 0) ((SHIFT-L X Y Z x1 x y)) 
	((LESS 0 x1)(SHIFT-R X Y Z x1 x y))))
((E-in-P X Y Z a x y) (R y) (EQ y ((X|X1)|X2))(Append-in-P Z Y x y))
((E-in-P X Y Z k x y) (DELCL X Y) (SUM 1 x Y) (Goto-P X x y))
((E-in-P X Y Z n x y) (NOT ? ((EQ Z "No clause") (LESS 0 Y))) 
  (SUM 1 Y x) (Goto-P X x y))
((E-in-P X Y Z b x y) (SUM 1 x Y) (Goto-P X x y))
((E-in-P X Y Z f Y y) (R X1) (NOT CL ((X|x)(/* vars |x1)|x2) Y Y)
  (bind Z X1 X3 () X2) 
  (EQ Z ((X|x)|x2)) (EQ	 y1 ((X|x)(/* vars |X2)|x2))
  (ADDCL y1  Y)(DELCL X Y)
  (vartrans y y1))
((E-in-P X Y Z v Y ((X|x)|y)) (CL ((X|x)(/* vars |Y2) |y) Y Y)
                              (ADDCL ((X|x)|y) Y) (DELCL X Y) )
((E-in-P X Y (Z|x) e y Z1) (Edit-term (() (Z) x) ((X1|y1)|z)) 
	(Update-p X Y ((X1|y1)|z) Z1 y))
((E-in-P X Y (Z|x) t Y1 z) (RFILL ((Z|x)) y)
	(Update-p X Y y z Y1))
((bind X () () x x)/)
((bind  X (Z|Y) Y x ((X |Z)|x)) (VAR X)(NOT ON X x samevar)/(CON Z))
((bind  X Z Z x x)(NOT LST X)/)
((bind () Z Z x x)/)
((bind (x|y) X1 X3 x1 x3)
  (bind x X1 X2 x1 x2)(bind y X2 X3 x2 x3))
((samevar x (y |z))(NOT ? ((EQ x a)(EQ y b))))
((Update-p X Y ((X|X1)|X2) ((X|X1)|X2) Y)
	/(vartrans ((X|X1)|X2) Z) (ADDCL Z Y) (DELCL X Y))
((Update-p X Y Z z Y)
	(EQ Z ((Z1|Z2)|Z3))
	(Prompt (Put clause Z in relation Z1 "?(yes/no) ") ()X1)
	(OR ((EQ X1 yes)) ((EQ X1 "y")) )
	(Prompt ( Where?) ()Y1)
	(INT Y1)
	(ADDCL Z Y1)
	(DELCL X Y)
	(Goto-P X Y z))
((EdP X Y Z o) (PP EDIT of X finished) /)
((EdP X Y Z x) (E-in-P X Y Z x y z) / (Edit-P X y z))
((EdP X Y Z x) (PP ?) (Edit-P X Y Z))
((Edit-P X Y Z) (Prompt ([ Y ])( Z) x) (EdP X Y Z x))
((EDIT X) (NOT SYS X) (OR ((CL ((X|Y)|Z) 1 1)(vartrans X1 ((X|Y)|Z))
                          (Edit-P X 1 X1)) 
  ((Edit-P X 0 "No clause"))))
((vartrans x (X1 (/* vars |Z1)|Y1))
  (NOT VAR X1)/(shrink Z1 Z)(App-C (X1|Y1) ((vars |Z)) x))
((vartrans x (X1 (/* vars |Z1)|Y1))
  (App-C X ((vars |Z)) x)/(listvars Z Z1)
  ( sub  X Z1 (X1 |Y1)))
((vartrans x x))
((listvars ()())/)
((listvars (X|Y) ((x |X)|Y1))
  (CON X)(listvars Y Y1))
((sub X Z X1)(CON X)(ON (X1 |X ) Z EQ)/)
((sub  X Z X)(VAR X)/)
((sub X Z X)(NOT LST X)/)
((sub () Z ())/)
((sub (x|y) X (x1|y1))
  (sub x X x1)(sub y X y1))
((shrink ()())/)
((shrink ((X |x)|Y) (X|Y1))
  (EQ X x)(shrink Y Y1))
((ON X (Y|Z) x)(x X Y)/)
((ON X (Y|Z) x) (ON X Z x))
((Prompt x z y)
	(P| x)(PQ|z)
	(INTOK "CON:" y))
CLMOD
