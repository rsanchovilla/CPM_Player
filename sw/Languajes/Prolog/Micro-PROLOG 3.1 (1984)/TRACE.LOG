trace-mod (??) ("y" n e s q f)
((COPYRIGHT 1984 LPA LTD V3-6))
((ENTER z "y" (X|Y)) / (CL ((X|Y)|Z) 1 y)
  (PP z matches clause y)
  (??? (1|z) Z x)|x)
((ENTER Z / X)/
  (R Y)(R x)(CON Y)
  (Y x)(PQ Z X)(test Z X))
((ENTER Z n X) / X )
((ENTER Z f X) / FAIL)
((ENTER Z s X) /)
((ENTER Z e X)/(RFILL (X)Y)(test Z Y))
((ENTER Z q X) ABORT)
((ENTER z X Y) (P ENTER "y" n s(for succeed) f(for fail) q (to quit)or 
/ followed by a command) (INTOK "CON:" Z) 
  (ENTER z Z Y))
((??? z () ()))
((??? (z |z1)(X|Y) x) (PQ (z| z1) X) (test (z|z1) X)
            (PQ(z |z1) solved X) (PP) (SUM z 1 z2)(??? (z2| z1) Y x) )
((??? z ((/)|Y) (/ FAIL))/)
((??? z (/|Y) (/ FAIL))/)
((??? z (X|Y) x) (PP z failing X) FAIL)
((?? X)(??? (1) X x))
((response x) (P " trace?(y/n)")(INTOK "CON:" x))
((test z (NOT|X))/
  (response x)
  (IF (EQ x "y") ((nottrace z X))((NOT |X))))
((test x (FORALL X Y))/
  (response Z1)
  (IF (EQ Z1 "y") ((FORALL ((PP trying generator of x)(??? (1 gen|x) X z1)|z1)
		           ((PP trying test condition of x)
			     (IF (??? (1 test |x) Y z2)
				 ((PP test of x succeeds ... 
					retrying generator))
				 ((PP test of x fails)FAIL)
			     )	
		           )
		  ))
                 ((FORALL X Y))))
((test x (ISALL X Y |Z))/
  (response y)
  (IF (EQ y "y") ((PP æinding all Y such that Z)
	          (ISALL X Y (??? (1|x) Z z)(PP found answer Y to x)|z))
		 ((ISALL X Y|Z))))
((test z (IF X Y Z))/
  (response x)
  (IF (EQ x "y") ((iftrace z X Y Z)) ((IF X Y Z))))
((test z (OR X Y))/
  (response x)
  (IF (EQ x "y") ((ortrace z X Y)) ((OR X Y))))
((test z (? X))/
  (response x)
  (IF (EQ x "y") ((??? (1|z) X x1)|x1)  X))
((test z (!|X))/
  (P " trace?")(INTOK "CON:" x)(ENTER z x X)/) 
((test z X)
  (SYS X)/(PP)X)
((test z X)(DEF X)/
  (P " trace?")(INTOK "CON:" x)(ENTER z x X))
((test z X)
  (P " No definition for relation")(PÐ)
  (ENTER z e X))
((nottrace z X)
  (PP z unnegated)
  (IF (??? (1|z) (X) x) ((PP unnegated z solved so...)FAIL) 
                    ((PP unnegated z failed so...))))
((iftrace z X Y Z)
  (PP z test evaluation)
  (??? (1 test|z) (X) x)/
  (PP z test solved ... entering then branch)
  (??? (1 then|z) Y x)|x)
((iftrace z X Y Z)
  (PP z test failed ... entering else branch)
  (??? (1 else|z) Z x)|x)
((ortrace z X Y)
  (PP z either branch)
  (??? (1 either|z) X x)|x)
((ortrace z X Y)
  (PP z or branch)
  (??? (1 or|z) Y x)|x)
CLMOD
