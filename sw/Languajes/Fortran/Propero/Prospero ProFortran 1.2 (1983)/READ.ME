Pro Fortran Version zz 1.25  -  extra remarks
---------------------------------------------


Additional sample programs
--------------------------

This disc includes some source (.FOR) files containing sample  Fortran
programs not listed in the manual.


1. COPYTX.FOR

This is a simple program which shows the use of some of the options in
the input/output operations.   It also demonstrates how  an  array  of
INTEGER*1 can usefully hold character information, both when the names
of the files are taken from the console and when the lines of text are
being transferred.


2.  MAZE.FOR

This program will print out a different maze every time it is run (and
guarantees only one path through).   It  illustrates  use  of  several
Fortran features:  logical variables and arrays, statement  functions,
DATA statements  with  Hollerith  constants,  and  the  random  number
generator (RANDOM).  It is not a very  "typical"  example  of  Fortran
coding style, but indicates that Fortran can be used to solve  logical
as well as number-crunching problems.



Security of discs
_________________

The Pro Fortran  software  is  normally  supplied  on  write-protected
discs.  Do not write-permit the master copy or  execute  the  compiler
from it.  Copy the files from the supplied disc(s) onto  one  of  your
own discs.  You may then verify that the working copy is correct  (see
below), and go on to compile, link,  and  run  your  own  programs  as
described in Part III of the User Manual.


Checking validity of files
__________________________

The programs  PROFOR,  PROLINK  and  PROLIB  (files  PROFOR.COM  etc.)
incorporate sumchecks.   If  through  transcription  errors  or  other
causes the files are altered, the message "Bad  copy  of  program"  is
displayed when the program is invoked.

The program FCHECK is supplied to guard against copying errors in  the
other files.   It  tests  the  files  on  the  default  drive  against
information recorded within itself.  When the Pro Fortran software  is
accommodated on one disc, simply place the copy to be  tested  on  the
default drive and invoke FCHECK.  If the software is distributed  over
two discs, they are tested separately, by (for example):

         >a:
        A>fcheck              {tests the files on A}
            .
            .                 {output from fcheck program}
            .
        A>b:
        B>a:fcheck            {tests the files on B}
            .
            .                 {output from program}
            .
        B>

      {tests the files on B}
            .
            .                 {output from pro