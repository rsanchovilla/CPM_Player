100 'Program name = JETSET -IFR Flight Simulator (BOEING 747)
110 'Created 06/28/81 by Jean Szymanski
120 'Revised 02/25/82 - Instructions in November 1982 'Byte Magazine'
130 'Revised 11/83 for DEC VT180 by Norm Wise / slightly touched by B.E.
140 'Revised 01/84 to increase speed by David Weaver
150 'Revised 01/84 for Kaypro-w/o Rev video & graphics-rsellers
160 GOTO 13000
200 '
210 ' DATA statement storage
220 'next four lines are p$(n)
230 DATA FUEL,LBS,%,VHF,MHZ,THRUST,MAX,IDLE,REV
240 DATA PITCH," +"," -",DEG,FLAPS,UP,DWN,WHEELS,UP,MID,DOWN
250 DATA COMPASS,AIRSPEED,KTS," VERT",SPEED,FPM
260 DATA ALTITUDE,FEET,CLOCK,BRK,ON,**
270 '
280 DATA 1,0,"######":'FU
290 DATA 1,7,"###":'FP
300 DATA 1,39,"###":'CC
310 DATA 4,39,"###":'CC
320 DATA 4,46,"######":'RC
330 DATA 4,55,"##,###":'AL
340 DATA 5,0,"###":'MZ
350 DATA 10,6,"#####":'AL
360 DATA 5,20,"+###":'FA
370 DATA 4,69,"###":'DP(4)
380 DATA 4,73,"##.#":'DP(5)
390 DATA 5,69,"###":'DP(6)
400 DATA 5,73,"##.#":'DP(7)
410 DATA 11,38,"###.#":'VO(1)
420 DATA 13,39,"####":'VO(2)
430 DATA 18,39,"###":'VO(3)
440 DATA 22,38,"###.#":'VO(4)
450 '
460 DATA "F",1,"f",1,",",2,".",3,"B",4,"b",4,"U",5,"u",5,"D",6,"d",6
470 DATA "L",7,"l",7,"W",8,"w",8,"S",9,"s",9
475 DATA "4",2,"6",3,"8",5,"",0
480 '
490 DATA "F",1,"f",1,"S",2,"s",2,",",3,".",4,"U",5,"u",5,"D",6,"d",6
500 DATA "W",7,"w",7,"V",8,"v",8,"R",9,"r",9,"L",10,"l",10,"A",11,"a",11
510 DATA "Q",12,"q",12,"M",13,"m",13,"C",14,"c",14,"/",15
515 DATA "4",3,"6",4,"5",15,"0",14,"8",5,"2",6,"",0
520 '
530 DATA 37,35,32,30,27,25,22,20,17,15,12,10,7,5
540 DATA 6,11,16,21,26,31,36,41,46,51,56,61,66,71
1000 '
1010 ' Flying module
1020 '
1030 PRINT CL$:CLEAR:GOSUB 17000:RANDOMIZE 57.2958:'Begin CRUISE MODULE here
1040 DIM M$(20):WIDTH 255:T1=2:T2=2:T3=8:SEC=5:KR=57.2958:XQ=64
1050 FLDS=17
1060 DIM YP1(FLDS),XP1(FLDS),F1$(FLDS),VV1(FLDS),VW1(FLDS)
1070 RESTORE 280
1080 FOR I= 0 TO FLDS-1:READ YP1(I),XP1(I),F1$(I):VW1(I)=-1:NEXT I
1090 RS=1:IF RND(0)<.5 THEN RS=-1
1100 RW=(15-5)*RND(0)+5:RW=RS*RW
1110 DIM K2(127)
1130 RESTORE 490
1140 READ CM$:IF LEN(CM$)<>0 THEN READ K2(ASC(CM$)):GOTO 1140
1190 DIM WA(10,1):'Set up wind table
1200 FOR I=0 TO 7:WA(I,0)=RND*359:NEXT I
1210 FOR I=8 TO 10:WA(I,0)=90*RND(0)+225:NEXT I
1220 A=0:FOR I=1 TO 10:WA(I,1)=25*RND(0)+A:A=A+25:NEXT I
1230 RS$(0)=STRING$(31,"_"):RS$(1)=SPACE$(13)+".   ."+SPACE$(13):RS$(2)=SPACE$(11)+".       ."
1240 RS$(3)=SPACE$(9)+STRING$(13,"_")
1250 DIM VF(15):VF(0)=115.9:VF(1)=113.8:VF(2)=112.7:VF(3)=117.7:VF(4)=117.8:VF(5)=112.2
1260 VF(6)=117.4:VF(7)=115.5:VF(8)=116.4:VF(9)=113.6:VF(10)=116.9:VF(11)=117!
1270 VF(12)=112.3:VF(13)=117.9:VF(14)=115.7:VF(15)=112.8
1280 DIM VG(15,1):'ILS constants for airports
1290 VG(0,0)=238:VG(0,1)=28:VG(2,0)=240:VG(2,1)=30:VG(5,0)=90:VG(5,1)=217:VG(7,0)=299:VG(7,1)=164
1300 VG(8,0)=166:VG(8,1)=42:VG(15,0)=341:VG(15,1)=75
1310 DIM VP(15,1):'VOR station coordiates table
1320 VP(0,0)=40.633:VP(0,1)=73.773:VP(1,0)=40.202:VP(1,1)=74.495:VP(2,0)=42.358:VP(2,1)=70.993
1330 VP(3,0)=41.282:VP(3,1)=70.027:VP(4,0)=42.743:VP(4,1)=73.802:VP(5,0)=46.412:VP(5,1)=84.315
1340 VP(6,0)=38.35:VP(6,1)=81.77:VP(7,0)=40.917:VP(7,1)=77.993:VP(8,0)=42.928:VP(8,1)=78.674
1350 VP(9,0)=41.358:VP(9,1)=82.162:VP(10,0)=42.967:VP(10,1)=83.724:VP(11,0)=44.555:VP(11,1)=88.195
1360 VP(12,0)=41.547:VP(12,1)=88.318:VP(13,0)=39.495:VP(13,1)=76.978:VP(14,0)=42.048:VP(14,1)=83.458:VP(15,0)=39.637:VP(15,1)=75.303
1370 DIM P$(28)
1380 RESTORE 230
1390 FOR I=0 TO 28:READ P$(I):NEXT I
1400 DIM S$(25)
1410 FOR I=1 TO 25:S$(I)=SPACE$(I):NEXT I
1420 FOR I=0 TO 9:F(I)=0:NEXT I
1430 FU=195480!:FP=63:CC=75:ZS=380:RC=6704:AL=1900:'Init flight variables to state at liftoff
1440 MZ=122:TR=4:FL=1:FA=10:BR=10:WH=10:RA=0:ZS(1)=380:FA(1)=10:CC(1)=75:AL(1)=1900:RP=40
1450 DP(4)=39:DP(5)=52:DP(6)=75:DP(7)=15:L1=39.8667:G1=75.25:LL(1)=L1:GL(1)=G1:LS(1)=L1:GS(1)=G1
1460 VO(1)=0:VO$(1)="OUT ":VO(3)=0:VO(4)=999.9:GX(0)=0:GY(0)=0:XO=36481!:YO=0
1470 GOSUB 17100:TV$=TIME$:GOSUB 11930:TL=TD:TW(1)=TD:GOSUB 5000
1480 GOSUB 6000:K$=INKEY$:IF LEN(K$)=0 GOTO 8000
1490 GOSUB 7000:GOTO 8000
5000 '
5010 'Routine to display panel (headers only)
5020 '
5030 PRINT FNB$( 1,4);:PRINT P$(0);S$(4);P$(5);S$(3);P$(9);S$(3);S$(6);S$(3);P$(20)
5040 PRINT FNB$( 10,55);:PRINT P$(13);S$(3);P$(16):PRINT FNB$( 11,57);:PRINT P$(14);S$(6);P$(14)
5050 PRINT FNB$( 13,57);:PRINT P$(15);S$(5);P$(15):PRINT FNB$( 2,14);:PRINT P$(6);S$(6);P$(10);S$(6)
5060 PRINT FNB$( 2,69);:PRINT P$(28):PRINT FNB$( 3,2);:PRINT P$(1);S$(4);P$(2);S$(21);S$(3);S$(13);P$(23)
5070 PRINT FNB$( 4,23);:PRINT P$(11);S$(13);P$(21);S$(2);P$(24);S$(2);P$(26)
5080 PRINT FNB$( 5,1);:PRINT P$(3):PRINT FNB$( 6,40);:PRINT P$(22);S$(6);P$(25);S$(5);P$(27)
5090 PRINT FNB$( 7,1);:PRINT P$(4);S$(10);P$(7);S$(3);P$(12);S$(7):PRINT FNB$( 8,14);:PRINT P$(8)
5100 PRINT FNB$( 4,69);:PRINT"VLF OMEGA":PRINT FNB$( 5,66);:PRINT"LAT":PRINT FNB$( 6,65);:PRINT"LONG"
5110 PRINT FNB$( 7,33);:PRINT". . . . : . . . .":PRINT FNB$( 9,40);:PRINT"RUD"
5120 PRINT FNB$( 10,33);:PRINT STRING$(17,31)
5130 FOR X = 32 TO 48 STEP 16
5140 FOR Y = 10 TO 22
5150 PRINT FNB$( (Y+1),(X+1));:PRINT CHR$(31);:NEXT Y:NEXT X
5160 PRINT FNB$( 24,33);:PRINT STRING$(17,31);:'error above compass
5170 PRINT FNB$( 11,40);:PRINT"VOR":PRINT FNB$( 12,45);:PRINT"MHZ"
5180 PRINT FNB$( 15,39);:PRINT"RANGE":PRINT FNB$( 17,36);:PRINT".....:....."
5190 PRINT FNB$( 20,39);:PRINT"RADIAL":PRINT FNB$( 22,40);:PRINT"DME":PRINT FNB$( 23,45);:PRINT"NM";
5200 FOR Y = 1 TO 7:PRINT FNB$( (Y+1),13);:PRINT CHR$(31);:NEXT Y
5210 FOR Y = 1 TO 3:PRINT FNB$( (Y+1),22);:PRINT CHR$(31);:NEXT Y
5220 PRINT FNB$( 15,1);:PRINT STRING$(17,31)
5230 FOR X = 0 TO 16 STEP 16
5240 FOR Y = 15 TO 21
5250 PRINT FNB$( (Y+1),(X+1));:PRINT CHR$(31);:NEXT Y:NEXT X
5260 PRINT FNB$( 23,1);:PRINT STRING$(17,31);:PRINT FNB$(14,8);:PRINT"ILS"
5270 PRINT FNB$( 18,20);:PRINT"MARKER":PRINT FNB$( 19,21);:PRINT">  <":GX(1)=0:GY(1)=0:GOSUB 11240
5280 PRINT FNB$( 11,8);:PRINT STRING$(5,31):PRINT FNB$( 10,5);:PRINT"RADAR ALT";SPC(6);"STALL"
5290 PRINT FNB$( 11,19);:PRINT">"STRING$(5,31)" <":RETURN
6000 '
6010 'Display instrument readings
6020 '
6030 VV1(0)=FU:VV1(1)=FP:VV1(2)=CC:VV1(3)=ZS
6040 VV1(4)=RC:VV1(5)=AL:VV1(6)=MZ:VV1(7)=AL:VV1(8)=FA
6050 VV1(9)=DP(4):VV1(10)=DP(5):VV1(11)=DP(6):VV1(12)=DP(7)
6060 VV1(13)=VO(1):VV1(14)=VO(2):VV1(15)=VO(3):VV1(16)=VO(4)
6070 GOTO 6290
6080 '
6090 V1=0:GOSUB 17160:PRINT FNB$( 1,67);:PRINT TIME$;
6100 V1=1:GOSUB 17160:V1=2:GOSUB 17160:V1=3:GOSUB 17160
6110 V1=4:GOSUB 17160:V1=5:GOSUB 17160:V1=6:GOSUB 17160
6120 IF F(2)=1 THEN V1=7:GOSUB 17160
6130 FOR I = 1 TO 7:'Display thrust
6140 PRINT FNB$( (I+1),12);:PRINT" ";CHR$(31);:NEXT I
6150 PRINT FNB$( (TR+1),12);:PRINT">";
6160 FOR I = 1 TO 3:PRINT FNB$( (I+1),21);:PRINT" ";CHR$(31);:NEXT I:'Display flaps
6170 PRINT FNB$( (FL+1),21);:PRINT">":V1=8:GOSUB 17160
6180 IF F(6)=0 THEN SX=25:GOTO 6210
6190 IF SX=25 THEN SX=26:GOTO 6210
6200 SX=25
6210 IF F(7)=0 AND SX=26 THEN PRINT FNB$(11,20);:PRINT STRING$(5,31) ELSE PRINT FNB$( 11,20);:PRINT "     ";
6220 FOR I=10 TO 12:PRINT FNB$( (I+1),55);:PRINT" ";CHR$(31):NEXT I:'Display brakes
6230 PRINT FNB$( (BR+1),55);:PRINT">"
6240 FOR I=10 TO 12:PRINT FNB$( (I+1),63);:PRINT" ";CHR$(31);:NEXT I:'Wheels
6250 PRINT FNB$( (WH+1),63);:PRINT">":IF F(2)=1 GOTO 6310
6260 V1=9:GOSUB 17160:'Display LAT/LONGITUDE
6270 V1=10:GOSUB 17160:V1=11:GOSUB 17160
6280 V1=12:GOSUB 17160:PRINT FNB$( 5,79);:PRINT"N":PRINT FNB$( 6,79);:PRINT"W":GOTO 6310
6290 PRINT FNB$( 8,33);:PRINT S$(17):'Display rudder position
6300 PRINT FNB$( 8,(RP+1));:PRINT "|":GOTO 6080
6310 IF F(2)=1 THEN RETURN
6320 V1=13:GOSUB 17160:'Display VOR values
6325 PRINT FNB$(14,40);:PRINT VO$(1)
6330 V1=14:GOSUB 17160
6340 V1=15:GOSUB 17160:V1=16:GOSUB 17160
6350 PRINT FNB$( 18,35);:PRINT S$(13);:IF VO$(1)="OUT " GOTO 6370
6360 PRINT FNB$( 18,(VO(2)+1));:PRINT "^";
6370 RETURN
7000 '
7010 ' Routine to execute commands from keyboard
7020 '
7030 KK=K2(ASC(K$))
7040 ON KK GOSUB 7070,7070,7090,7090,7140,7140,7210,7230,7250,7270,7290,7300,7320,7340,7060
7050 RETURN
7060 RA=0:RETURN
7070 IF KK=1 THEN TR=TR-1 ELSE TR=TR+1:'Thrust key
7080 IF TR<1 THEN TR=1:RETURN
7090 IF KK=3 GOTO 7120 ELSE RA=RA+1:'Rudder keys
7100 IF RA>4 THEN RA=4
7110 RETURN
7120 RA=RA-1:IF RA<-4 THEN RA=-4
7130 RETURN
7140 J=5:IF BR=12 THEN J=1:'Elevator keys
7150 IF KK=5 THEN FA=FA+J ELSE FA=FA-J
7160 IF FA>40 THEN FA=40
7170 IF FA<-40 THEN FA=-40
7180 IF FA>0 THEN FL=1:RETURN
7190 IF FA=0 THEN FL=2:RETURN
7200 FL=3:RETURN
7210 IF WH=10 THEN WH=12:RETURN:'Wheels key
7220 IF WH=12 THEN WH=10:RETURN
7230 PRINT FNB$(15,56);:'Set VOR freq
7240 LINE INPUT"VOR FREQ ";VX$:VO(1)=VAL(VX$):PRINT FNB$( 15,56);:PRINT SPC(16):RETURN
7250 PRINT FNB$(15,56);:'Set VOR radial
7260 LINE INPUT"VOR RADIAL ";VX$:VO(3)=VAL(VX$):PRINT FNB$( 15,56);:PRINT SPC(14):RETURN
7270 IF BR=10 THEN BR=12:RETURN:'Flaps key
7280 IF BR=12 THEN BR=10:RETURN
7290 F(3)=1:RETURN:'Auto - OBS key
7300 IF F(7)=1 THEN TR=7:'Reverse thrust key
7310 RETURN
7320 IF F(2)=1 THEN F(5)=1:'Missed approach key
7330 RETURN
7340 IF F(2)=0 THEN FA=0:FL=2:RETURN:'Flare key
7350 FA=1:FL=1:RETURN
8000 '
8010 ' Main routine (continues)
8020 '
8030 GOSUB 17100:TV$=TIME$:GOSUB 11930:TJ=TD-TL:TL=TD:'Situation update routine
8040 GOSUB 8370:GOSUB 8490:GOSUB 8630:IF TR=7 THEN GOSUB 11000 ELSE GOSUB 8470
8050 GOSUB 8390:GOSUB 8430:IF F(2)=1 GOTO 10350
8060 GOSUB 9460:GOSUB 10000:IF AL<=0 THEN AF=1:GOTO 11360
8070 IF F(2)=0 GOTO 8360
8080 IF AL>0 GOTO 8210
8090 IF F(7)=1 GOTO 8320
8100 F(7)=1:TY=YN:TX=XN-750:IF FA>1 THEN AF=2:GOTO 11360
8110 IF FA<0 THEN AF=3:GOTO 11360
8120 IF F(6)=0 GOTO 8200
8130 IF AX>100 THEN AF=4:GOTO 11360
8140 IF AX>80 THEN AF=5:GOTO 11360
8150 IF WH=10 THEN AF=6:GOTO 11360
8160 IF TX>0 THEN AF=7:GOTO 11360
8170 IF TX<-10500 THEN AF=7:GOTO 11360
8180 IF ABS(TY)>100 THEN AF=7:GOTO 11360
8190 GOTO 8360
8200 AF=8:GOTO 11360
8210 IF F(5)=1 GOTO 8300
8220 IF FA>0 GOTO 8250
8230 IF FA<0 THEN F(6)=0
8240 GOTO 8360
8250 IF F(6)=0 THEN AX=AL:F(6)=1
8260 IF TR=6 GOTO 8290
8270 IF FA<2 THEN RC=-1800:GOTO 8360
8280 FA=2:FL=1:RC=-1800:GOTO 8360
8290 FA=1:FL=1:RC=-300:GOTO 8360
8300 IF AL<20 THEN AF=9:GOTO 11360
8310 TR=3:FA=0:FL=2:AF=10:GOTO 11360
8320 IF XN<-9750 OR ABS(YN)>100 GOTO 8350
8330 IF ZS>0 GOTO 8360
8340 AF=0:GOTO 11360
8350 AF=9:GOTO 11360
8360 GOTO 10620
8370 FU=FU-(14-TR)*TJ:IF FU<0 THEN FU=0:'Update fuel
8380 FP=FU/3120:RETURN
8390 IF F(7)=1 THEN RC=0:RETURN
8400 IF F(6)=1 THEN RETURN
8410 RC=ZS*SIN(ABS(FA/KR))*101.6:IF FA<0 THEN RC=-1*RC
8420 RETURN
8430 IF F(7)=1 THEN RETURN:'Update altitude
8440 AL=AL+TJ*RC/60:IF AL<0 THEN AL=0:RETURN
8450 IF AL>45000! THEN AL=45000!
8460 RETURN
8470 ZS=800-100*TR:ZS=ZS-2*FA:IF BR=10 THEN RETURN:'Update airspeed
8480 ZS=ZS/3+20:RETURN
8490 IF F(5)=1 GOTO 8510
8500 IF F(2)=1 GOTO 8600
8510 IF RA=0 THEN RT=0:RETURN
8520 IF RA<0 THEN J=-1 ELSE J=1
8530 RA=ABS(RA):IF RA=1 THEN RT=1:GOTO 8560
8540 IF RA=2 THEN RT=10:GOTO 8560
8550 IF RA=3 THEN RT=20 ELSE RT=30
8560 RT=J*RT:RA=J*RA:CC=CC+RT
8570 IF CC=>360 THEN CC=CC-360:RETURN
8580 IF CC<0 THEN CC=360+CC
8590 RETURN
8600 IF RA=0 THEN RETURN
8610 IF RA<0 THEN CC=CC-1 ELSE CC=CC+1
8620 RA=0:GOTO 8570
8630 RP=40+RA+RA:RETURN:'Update rudder position value
9000 '
9010 '
9020 '
9030 VL=ABS(LB-LC):BL(5)=-1:IF LB=>LC THEN BL(5)=1:'Computes dist & bearing to a known point location
9040 VG=ABS(GB-GC):BL(4)=1:IF GB=>GC THEN BL(4)=-1
9050 LA=LC:GOSUB 11310:M1=MP:LA=LB:GOSUB 11310:M2=MP:DM=ABS(M2-M1):IF DM=0 GOTO 9080
9060 QO=VG/(DM/60):IF QO>114.59 GOTO 9080
9070 CA=KR*ATN(QO):DR=VL*(1/COS(CA/KR)):GOTO 9090
9080 CA=90:DR=VG*COS(LC/KR)
9090 DR=DR*60:IF BL(5)=-1 GOTO 9120
9100 IF BL(4)=1 THEN CR=CA ELSE CR=360-CA
9110 RETURN
9120 IF BL(4)=1 THEN CR=180-CA ELSE CR=180+CA
9130 RETURN
9140 '
9150 '
9160 '
9170 I=FIX(AL/4000):IF I=>10 THEN I=10:'Get wind vector for current altitude
9180 WD=WA(I,0):WV=WA(I,1):RETURN
9190 A=CC:L=AJ:GOSUB 9250:MX=LX:MY=LY:GOSUB 9140
9200 '
9210 ' Routine to solve wind triangle
9220 '
9230 A=WD+180:IF A=>360 THEN A=A-360
9240 L=WV:GOSUB 9250:MX=MX+LX:MY=MY+LY:GOSUB 9360:TK=MA:GS=VZ:RETURN
9250 IF A<=90 THEN Q=1:B=90-A:GOTO 9290:'Resolves a vector into rect. coords
9260 IF A<=180 THEN Q=2:B=A-90:GOTO 9290
9270 IF A<=270 THEN Q=3:B=270-A:GOTO 9290
9280 Q=4:B=A-270
9290 LX=L*COS(B/KR):LY=L*SIN(B/KR):IF Q=1 THEN RETURN
9300 IF Q=2 THEN LY=-1*LY:RETURN
9310 '
9320 '
9330 '
9340 IF Q=3 THEN LX=-1*LX:LY=-1*LY:RETURN
9350 LX=-1*LX:RETURN
9360 VZ=SQR(MX^2+MY^2):IF MX<=0 GOTO 9390:'Composes X,Y components into a polar vector
9370 IF MY<=0 THEN Q=2 ELSE Q=1
9380 GOTO 9400
9390 IF MY<=0 THEN Q=3 ELSE Q=4
9400 IF MX=0 THEN MA=90:GOTO 9420
9410 MQ=ABS(MY/MX):MA=ATN(MQ)*KR
9420 IF Q=1 THEN MA=90-MA:RETURN
9430 IF Q=2 THEN MA=90+MA:RETURN
9440 IF Q=3 THEN MA=270-MA:RETURN
9450 MA=270+MA:RETURN
9460 '
9470 '
9480 '
9490 ZS(2)=ZS:FA(2)=FA:CC(2)=CC:AL(2)=AL:ZS=ZS(1):FA=FA(1):CC=CC(1):AL=AL(1):'Get position for OMEGA display
9500 IF ZS(2)<>ZS OR FA(2)<>FA GOTO 9570
9510 IF CC(2)<>CC OR AL(2)<>AL GOTO 9570
9520 F(0)=1:IF TD<TW(1)+60 GOTO 9580
9530 AJ=ZS*COS(ABS(FA)/KR):GOSUB 9190:DN=GS*(TD-TW(1))/3600:CN=TK:L1=LL(1):G1=GL(1)
9540 GOSUB 11070:F(0)=0:TW(1)=TD:LL(1)=L2:GL(1)=G2:LS(1)=L2:GS(1)=G2
9550 FOR J=4 TO 7:DP(J)=CP(J):NEXT J
9560 ZS(1)=ZS(2):FA(1)=FA(2):CC(1)=CC(2):AL(1)=AL(2):ZS=ZS(2):FA=FA(2):CC=CC(2):AL=AL(2):RETURN
9570 TW(1)=TD:F(0)=0
9580 AJ=ZS*COS(ABS(FA)/KR):GOSUB 9190:DN=GS*TJ/3600:CN=TK:L1=LS(1):G1=GS(1)
9590 GOSUB 11070:LS(1)=L2:GS(1)=G2:IF F(0)=1 GOTO 9610
9600 LL(1)=L2:GL(1)=G2
9610 GOTO 9550
10000 '
10010 '
10020 '
10030 IF VO(1)=0 GOTO 10220:'VOR routine
10040 FOR J=0 TO 15:IF VO(1)=VF(J) GOTO 10060
10050 NEXT J:GOTO 10220
10060 LC=VP(J,0):GC=VP(J,1):LB=L2:GB=G2:AR=VG(J,0):LL=VG(J,1):LO=360-LL:GOSUB 9000
10070 IF DR>300 GOTO 10220
10080 IF CR=>360 THEN CR=CR-360
10090 GOTO 10330
10100 VO$(1)="FROM"
10110 VO(5)=CR-VO(3):IF VO(5)<=180 GOTO 10130
10120 VO(5)=VO(5)-360:GOTO 10140
10130 IF VO(5)<-180 THEN VO(5)=VO(5)+360
10140 IF ABS(VO(5))>90 THEN I1=VO(3):GOTO 10200
10150 IF VO$(1)="FROM" THEN I=-1 ELSE I=1
10160 IF I=1 THEN VO(3)=I1
10170 VO(2)=40+I*INT(VO(5)):VO(4)=DR:IF VO(2)<35 THEN VO(2)=34
10180 IF VO(2)>45 THEN VO(2)=46
10190 GOTO 10280
10200 VO$(1)=" TO ":VO(3)=VO(3)+180:IF VO(3)=>360 THEN VO(3)=VO(3)-360
10210 GOTO 10110
10220 VO$(1)="OUT ":VO(4)=999.9:F(3)=0:RETURN
10230 IF DR>12 OR DR<10 THEN MK=0:GOTO 10100
10240 IF AL>4000 THEN MK=0:GOTO 10100
10250 IF F(1) =1 THEN J=9 ELSE J=2.5
10260 IF CR>AR+J OR CR<AR-J THEN MK=0:GOTO 10100
10270 F(1)=1:MK=1:GOTO 10100
10280 PRINT FNB$(19,22);:IF MK=1 THEN PRINT"XX" ELSE PRINT "  "
10290 IF MK=0 THEN F(1)=0:RETURN
10300 IF CC>LL+1 OR CC<LL-1 THEN RETURN
10310 IF RA<>0 THEN RETURN
10320 F(1)=0:F(2)=1:GOTO 10220
10330 IF F(3)=1 THEN VO(3)=CR:F(3)=0
10340 GOTO 10230
10350 ZN=AL:TH=2.82471:MK=1:DW=1.69*RW*TJ:IF F(7)=1 THEN DW=0:'ILS routine
10360 IF F(7)=1 THEN CC=LL:RA=0
10370 CJ=CC:IF CJ>180 THEN CJ=360-CJ:CJ=-1*CJ
10380 HA=LO+CJ:DC=360-HA:TS=1:IF HA<180 THEN DC=HA:TS=-1
10390 IF DC<0 THEN DC=-1*DC:TS=-1*TS
10400 TL$="W":IF TS=1 THEN TL$="E"
10410 DD=1.69*ZS*TJ:DY=DD*SIN(DC/KR):DX=DD*COS(DC/KR):XN=XO-DX:IF TL$="E" THEN DY=-1*DY
10420 YN=YO+DY+DW:LM=KR*ATN(AL/XN):BE=KR*ATN(ABS(YN)/ABS(XN)):IF BE>2.5 THEN MK=0
10430 J=(LM-TH)/.25:J=FIX(J):IF J>3 THEN J=3
10440 IF J<-3 THEN J=-3
10450 BE=BE/.25:BE=FIX(BE):IF BE<-7 THEN BE=-7
10460 IF BE>7 THEN BE=7
10470 IF YN>0 THEN BE=-1*BE
10480 IF MK=0 GOTO 10520
10490 IF XN>34960! AND XN<38000! GOTO 10520
10500 IF XN>2534 AND XN<5574 GOTO 10520
10510 MK=0
10520 GX(1)=BE:GY(1)=J:GOSUB 11240
10530 PRINT FNB$(19,22):IF MK=1 THEN PRINT"XX" ELSE PRINT "  "
10540 XO=XN:YO=YN:IF F8=1 GOTO 10570
10550 IF XN>12000 GOTO 10570
10560 F8=1:FOR I=0 TO 3:PRINT FNB$( (14+I),50);:PRINT RS$(I):NEXT I
10570 IF F8=0 GOTO 10610
10580 PRINT FNB$( 18,(XQ+1));:PRINT" ":YU=FIX(YN/16.7):XC=64+YU:IF XC<49 THEN XC=49
10590 IF XC>79 THEN XC=79
10600 PRINT FNB$( 18,(XC+1));:PRINT CHR$(31):XQ=XC
10610 GOTO 8070
10620 GOTO 10630
10630 GOTO 1480
11000 '
11010 '
11020 '
11030 IF F(4)=1 THEN 11050:' ****   REVERSE THRUST APPLIED
11040 VO=ZS*1.152*1.47:F(4)=1
11050 V=VO-(3.23626)*TJ:IF V<=0 THEN V=0
11060 VO=V:ZS=V/(1.152*1.47):RETURN
11070 '
11080 '
11090 '
11100 IF CN=0 THEN CA=0:LB(5)=1:LB(6)=1:GOTO 11150:'Computes new position
11110 IF CN>0 AND CN<=90 THEN CA=CN:LB(5)=1:LB(6)=1:GOTO 11150
11120 IF CN>90 AND CN<=180 THEN CA=180-CN:LB(5)=-1:LB(6)=1:GOTO 11150
11130 IF CN>180 AND CN<=270 THEN CA=CN-180:LB(5)=-1:LB(6)=-1:GOTO 11150
11140 CA=360-CN:LB(5)=1:LB(6)=-1
11150 IF CA>89.5 GOTO 11190
11160 DL=DN*COS(CA/KR):DL=DL/60:LB(3)=LB(5):IF LB(3)=1 THEN L2=L1+DL:GOTO 11180
11170 L2=ABS(L1-DL)
11180 LA=L1:GOSUB 11310:M1=MP:LA=L2:GOSUB 11310:M2=MP:DM=ABS(M1-M2):DG=DM*TAN(CA/KR):GOTO 11200
11190 L2=L1:DG=DN/COS(L1/KR)
11200 DG=DG/60:LB(4)=LB(6):IF LB(4)=-1 GOTO 11220
11210 G2=ABS(G1-DG):GOTO 11230
11220 G2=G1+DG
11230 CP(4)=FIX(L2):CP(5)=(L2-CP(4))*60:CP(6)=FIX(G2):CP(7)=(G2-CP(6))*60:RETURN
11240 IF XO<=750 THEN RETURN:'Plot glide slope crosshairs
11250 X0=8+GX(0):X1=8+GX(1):Y0=18+GY(0):Y1=18+GY(1)
11260 FOR Y=15 TO 21:PRINT FNB$( (Y+1),(X0+1));:PRINT" ":NEXT Y
11270 PRINT FNB$( (Y0+1),2);:PRINT STRING$(15,32)
11280 FOR Y=15 TO 21:PRINT FNB$( (Y+1),(X1+1));:PRINT CHR$(31):NEXT Y
11290 PRINT FNB$( (Y1+1),2);:PRINT STRING$(15,31):PRINT FNB$( (Y1+1),(X1+1));:PRINT CHR$(43)
11300 PRINT FNB$( 19,9);:PRINT"O":GX(0)=GX(1):GY(0)=GY(1):RETURN
11310 KM(0)=7915.704468#:KM(1)=23.268932#:KM(2)=.0525:KM(3)=.000213:'Computes meridional parts, MP
11320 IF LA=0 THEN LA=0+1/60
11330 IF LA>(89+59/60) THEN LA=89+59/60
11340 S1=SIN(LA/KR):S2=S1*S1:S3=S1*S2:TM(0)=TAN((45+LA/2)/KR):TM(0)=KM(0)*LOG(TM(0))/LOG(10)
11350 TM(1)=KM(1)*S1:TM(2)=KM(2)*S3:TM(3)=KM(3)*S2*S3:MP=TM(0)-TM(1)-TM(2)-TM(3):RETURN
11360 M$(1)="---------- A CRASH HAS OCCURED ----------":'Abort routines
11370 M$(2)="YOU ACCIDENTLY STALLED THE AIRCRAFT DURING FINAL APPROACH."
11380 M$(3)="THE STALL OCCURRED AT AN ALTITUDE OF"
11390 M$(4)="THE AIRCRAFT STRUCK THE GROUND IN A NOSE-HIGH ATTITUDE."
11400 M$(5)="THE IMPACT RUPTURED THE TAIL SECTION OF THE FUSELAGE."
11410 M$(6)="---- LOCATION OF CRASH ----":M$(7)="---- LANDING POSITION ----"
11420 M$(8)="    PITCH ANGLE=":M$(9)="    AIRSPEED="
11430 M$(10)="YOU FLARED AT TOO HIGH AN ALTITUDE DURING FINAL APPROACH."
11440 M$(11)="THE RESULTING STALL OCCURED AT AN ALTITUDE OF"
11450 M$(12)="THE IMPACT RUPTURED THE ":M$(13)="YOU FORGOT TO LOWER THE LANDING GEAR."
11460 M$(14)="YOU FAILED TO TOUCH DOWN INSIDE THE RUNWAY.":M$(15)="---------- AN IMPROPER LANDING WAS MADE ----------"
11470 M$(16)="NO DAMAGE OR INJURIES OCCURRED.:RL=0:IF TX>100 THEN RL=1
11480 RW=0:IF ABS(TY)>100 THEN RW=1
11490 N$(2)="FEET INSIDE OF RUNWAY":IF TX=>0 THEN N$(2)="FEET SHORT OF RUNWAY"
11500 N$(3)="FEET TO LEFT OF RUNWAY CENERLINE":IF TY=>0 THEN N$(3)="FEET TO RIGHT OF RUNWAY CENTERLINE"
11510 RX=FIX(TX):RX=ABS(RX):RY=FIX(TY):RY=ABS(RY):IF AF=0 GOTO 11830
11520 ZS=INT(AX):FA=INT(FA):ZS=INT(ZS)
11530 ON AF GOTO 11540,11570,11580,11610,11630,11700,11730,11740,11760,11810
11540 GOSUB 11870:YP=4:XP=55:F$="##,###":V1=AL:GOSUB 11950:PRINT FNB$( 16,1);:PRINT M$(1)
11550 PRINT"YOU FLEW INTO THE GROUND.":PRINT"THE INSTRUMENT READINGS AT TIME OF THE CRASH ARE SHOWN AS ABOVE."
11560 PRINT CHR$(27);"(B":END
11570 PRINT CL$:PRINT M$(1):PRINT M$(2):PRINT M$(3);AX;"FEET.":PRINT M$(4):PRINT M$(5):N$(1)=M$(6):GOSUB 11880:END
11580 PRINT CL$:PRINT M$(1):PRINT"YOU FLEW INTO THE GROUND DURING FINAL APPROACH."
11590 PRINT"AT THE TIME OF THE CRASH THE AIRCRAFT PROFILE WAS AS FOLLOWS :"
11600 PRINT M$(8);FA;"DEGREES":PRINT M$(9);ZS:N$(1)=M$(6):GOSUB 11880:END
11610 PRINT CL$:PRINT M$(1):PRINT M$(10):PRINT M$(11);AX;"FEET."
11620 PRINT M$(12)+"FUSELAGE.":N$(1)=M$(6):GOSUB 11880:END
11630 PRINT CL$:IF WH=10 THEN PRINT M$(1)
11640 IF WH=12 THEN PRINT"---------- A MINOR CRASH HAS OCCURRED ----------"
11650 PRINT M$(10):PRINT M$(11);AX;"FEET.":IF WH=10 THEN PRINT M$(13)
11660 IF WH=10 THEN PRINT M$(12)+"FUSELAGE."
11670 IF WH=12 THEN PRINT"THE IMPACT DAMAGED THE LANDING GEAR."
11680 IF WH=12 THEN PRINT"ALL THE PASSENGERS HAVE BEEN SAFELY EVACUATED."
11690 N$(1)=M$(6):GOSUB 11880:END
11700 PRINT CL$:PRINT M$(1):PRINT M$(13)
11710 PRINT"THE AIRCRAFT LANDED ON ITS BELLY, CAUSING MODERATE DAMAGE."
11720 PRINT"ALL THE PASSENGERS HAVE BEEN SAFELY EVACUATED.":N$(1)=M$(6):GOSUB 11880:END
11730 PRINT CL$:PRINT M$(15):PRINT M$(14):N$(1)=M$(7):GOSUB 11880:END
11740 PRINT CL$:PRINT M$(15):PRINT"YOU FAILED TO EXECUTE A FLARE PRIOR TO TOUCHING DOWN."
11750 PRINT"THIS IS A VIOLATION OF COMPANY PROCEDURES.":PRINT M$(16):N$(1)=M$(7):GOSUB 11880:END
11760 PRINT CL$:PRINT M$(15):PRINT"YOU ROLLED OFF THE RUNWAY AFTER TOUCHING DOWN."
11770 PRINT M$(16):N$(1)=M$(7):GOSUB 11880:PRINT
11780 IF XN>-9750 THEN PRINT"YOU ROLLED PAST FAR END OF RUNWAY"
11790 IF ABS(YN)>100 THEN PRINT"YOU ROLLED THROUGH RUNWAY SIDE BORDERS"
11800 END
11810 PRINT CL$:PRINT"----- YOUR MISSED APPROACH SIGNAL IS ACKNOWLEDGED -----"
11820 PRINT"YOU HAVE FOLLOWED PROPER PROCEDURES.":END
11830 PRINT CL$;:PRINT"----- YOU HAVE SUCCESSFULLY COMPLETED THE FLIGHT -----"
11840 PRINT"ALL PROCEDURES WERE PROPERLY EXECUTED.":N$(1)=M$(7):PRINT"CONGRATULATIONS ON A SUCCESSFUL FLIGHT.":GOSUB 11880
11850 PRINT:XN=ABS(XN):JN=FIX(XN+750):YN=ABS(YN):YN=FIX(YN):PRINT"YOUR AIRCRAFT CAME TO REST AT THE FOLLOWING POSITION:"
11860 PRINT"     ";JN;"FEET INSIDE THE RUNWAY":PRINT"     ";YN;"FEET FROM RUNWAY CENTERLINE":END
11870 FOR I=9 TO 23:PRINT FNB$( (I+1),1);:PRINT SPC(79);:NEXT I:RETURN:'Subroutine to clear lower part of display
11880 PRINT:PRINT SPACE$(26);N$(1):PRINT:IF RL=0 THEN PRINT RX;N$(2):'Landing statistics
11890 IF RL=1 THEN PRINT RX;N$(2);
11900 PRINT:IF RW=0 THEN PRINT RY;N$(3)
11910 IF RW=1 THEN PRINT RY;N$(3)
11920 PRINT:PRINT"--- SIZE OF RUNWAY IS 10,500 FEET  X  200 FEET ---":RETURN
11930 'CONVERT RTC TO TIME OF DAY IN SECONDS ABSOLUTE
11940 J=7:FOR I=0 TO 2:TC$(I)=MID$(TV$,J,2):J=J-3:TC(I)=VAL(TC$(I)):TD=(3600*TC(2))+(60*TC(1))+TC(0):NEXT I:RETURN
11950 'PLOTS VARIABLE
11960 PRINT FNB$( (YP+1),(XP+1));:PRINT USING F$;V1;:RETURN
13000 '
13010 'Begin takeoff module here
13020 '
13030 CLEAR :WIDTH 255:GOSUB 17000:PRINT CL$;:RANDOMIZE 57.2958
13040 T1=0:T2=59:T3=7:SEC=2:KR=57.2958
13050 DIM K1(127)
13060 FOR I=0 TO 127:K1(I)=0:NEXT I:'INITIALIZE COMMAND TABLES
13080 RESTORE 460
13090 READ CM$:IF LEN(CM$)<>0 THEN READ K1(ASC(CM$)):GOTO 13090
13110 DIM XM(13),WM(13),P$(31),XE(13),WE(13),XL(14),XR(14),S$(25)
13140 RESTORE 230
13150 FOR I=0 TO 28:READ P$(I):NEXT I
13160 RESTORE 530
13170 FOR I=0 TO 13:READ XM(I):NEXT I
13180 FOR I=0 TO 13:READ WM(I):NEXT I
13190 M$(1)="_":M$(2)="_":M$(3)="_":K1=29:K2=23
13200 FOR I=0 TO 13:XE(I)=K1:WE(I)=K2:K1=K1-2:K2=K2+4:NEXT I
13210 IO=40:RN=RND(0):RS=1:IF RN>.5 THEN RS=-1
13220 W1=75:IF RS=-1 THEN W1=255
13230 W2=RND*(20):W3=RS*W2:J=31:K=49
13240 FOR I=0 TO 14:XL(I)=J:XR(I)=K:J=J-2:K=K+2:NEXT I
13250 RESTORE 230
13260 FOR I=0 TO 31:READ P$(I):NEXT I
13270 FOR I=1 TO 25:S$(I)=SPACE$(I):NEXT I
13280 FOR I=0 TO 9:F(I)=0:NEXT I
13290 'INIT VARIABLES FOR TAKEOFF MODE
13300 FU=200000!:FP=0:CC=75:ZS=0:RC=0:AL=0:MZ=107:TR=6:FL=2:FA=0:WH=13:IX=40:HY=9:BR=11:BK=11:AB=0
13310 PRINT FNB$(9,18);:PRINT"AIR CANADA 312    CLEARED AS FILED";:PRINT:PRINT
13320 PRINT"          SURFACE WINDS VARIABLE, GUSTING TO 15.":PRINT"          MINIMUM CEILING CONDITIONS ARE IN EFFECT."
13330 PRINT"          SKY CONDITIONS AT 20,000 SCATTERED."
13340 PRINT"                         AT 30,000 BROKEN.":PRINT:PRINT
13350 PRINT"UPON TAKEOFF, MAINTAIN HEADING 075 TO 3000,THEN PROCEED AS FILED."
13360 PRINT:PRINT:PRINT"        STANDBY FOR TAKEOFF CLEARANCE":TQ=7000:GOSUB 16230
13370 PRINT CL$:PRINT FNB$(11,18);:PRINT"AIR CANADA 312";:PRINT:PRINT
13380 PRINT"YOU ARE CLEARED FOR TAKEOFF AT 0800 HOURS":TQ=3000:GOSUB 16230
13390 TIME$="07:59:00":PRINT CL$:TV$=TIME$:GOSUB 11930:TL=TD:GOSUB 13610:GOSUB 14100
13400 GOSUB 14230
13410 GOSUB 14440
13420 K$=INKEY$:IF LEN(K$)=0 GOTO 13440
13430 GOSUB 15000
13440 GOSUB 17100:TV$=TIME$:GOSUB 11930:TJ=TD-TL:TL=TD:IF F(9)=1 GOTO 16250:'Situation update routine
13450 IF F(0)=1 GOTO 13470
13460 GOSUB 15300:GOTO 13410
13470 IF F(4)=1 GOTO 13490
13480 F(4)=1:XX=0:YY=0:TD=TD:V0=0:N=1:OY=23:OX=5:WM=71
13490 A=(118-18*TR)*.04028:GOSUB 15350:IF AL>0 GOTO 13560
13500 IF YY>10500 OR ABS(XX)>100 GOTO 16040
13510 IF FA<=0 GOTO 13590
13520 IF ZS<150 GOTO 16000
13530 IF FA>10 GOTO 16000
13540 IF F(3)=0 GOTO 13590
13550 AL=25:GOSUB 15300:GOSUB 15310:GOSUB 15470:GOTO 13400
13560 F(9)=1:GOSUB 15300:GOSUB 15310:GOSUB 15330
13570 FOR I=10 TO 21:PRINT FNB$( (I+1),1);:PRINT SPACE$(80);:NEXT I
13580 HY=20:GOSUB 14100:GOTO 13600
13590 GOSUB 15300:GOSUB 15470:GOTO 13400
13600 GOTO 13410:'Now do departure procedures
13610 PRINT FNB$(1,4);:PRINT P$(0);S$(4);P$(5);S$(3);P$(9);S$(3);S$(6);S$(3);P$(20):'Display panel (headers only)
13620 PRINT FNB$(11,60);:PRINT P$(13);S$(3);P$(16);S$(2);P$(29)'LAST=BRK
13630 PRINT FNB$(12,62);:PRINT P$(14);S$(6);P$(14);S$(6);P$(30)
13640 PRINT FNB$(14,62);:PRINT P$(15);S$(5);P$(15);S$(5);P$(31)'LAST=**
13650 IF F(9)=1 THEN RETURN
14000 '
14010 '
14020 '
14030 PRINT FNB$(2,14);:PRINT P$(6);S$(6);P$(10);S$(6):PRINT FNB$(2,69);:PRINT P$(28)'LAST=CLOCK
14040 PRINT FNB$(3,2);:PRINT P$(1);S$(4);P$(2);S$(21);S$(3);S$(13);P$(23)
14050 PRINT FNB$(4,23);:PRINT P$(11);S$(13);P$(21);S$(2);P$(24);S$(2);P$(26)
14060 PRINT FNB$(5,1);:PRINT P$(3):PRINT FNB$(6,40);:PRINT P$(22);S$(6);P$(25);S$(5);P$(27)
14070 PRINT FNB$(7,1);:PRINT P$(4);S$(10);P$(7);S$(3);P$(12);S$(7):PRINT FNB$(8,14);:PRINT P$(8)'LAST=REV
14080 FOR Y=1 TO 7:PRINT FNB$( (Y+1),13);:PRINT CHR$(31):NEXT Y
14090 FOR Y=1 TO 3:PRINT FNB$( (Y+1),22);:PRINT CHR$(31);:NEXT Y:RETURN
14100 '
14110 '
14120 '
14130 IF F(9)=0 GOTO 14160:'Display horizontal line
14140 PRINT FNB$(10,1);:PRINT SPACE$(80);:IF HY=20 GOTO 14170
14150 STOP
14160 PRINT FNB$((HY+1),1);STRING$(80," "):RETURN
14170 '
14180 '
14190 'THIS SECTION DID GRAPHICS BETWEEN TAKEOFF AND FLYING DISPLAYS
14200 HY=12:PRINT FNB$(HY,15);:PRINT STRING$(30,31)
14210 '
14220 RETURN
14230 '
14240 '
14250 '
14260 IF F(4)=1 GOTO 14290:'Display runway
14270 S=10:X=29:FOR Y=10 TO 21:PRINT FNB$( (Y+1),(X+1));:PRINT ".";SPACE$(S);" ";SPACE$(S);".";
14280 X=X-2:S=S+2:PRINT:NEXT Y:S$=S$(13):RETURN
14290 IF N>3 GOTO 14390:'Prints runway graphics
14300 PRINT FNB$( (OY+1),(OX+1));:PRINT SPACE$(WM);:PRINT FNB$( (NY+1),(NX+1));:PRINT MK$;
14310 OY=NY:OX=NX:WM=FW:RETURN
14320 '
14330 '
14340 '
14350 PRINT FNB$( (OY+1),(OX+1));:PRINT SPACE$(WM):IF F(9)=1 THEN RETURN:'Entry when ship in final zone
14360 FOR I=10 TO NY-1:PRINT FNB$( (I+1),(XE(J)+1));:PRINT SPACE$(WE(J)):NEXT I
14370 IF N>4 THEN RETURN
14380 PRINT FNB$( (NY+1),(NX+1));:PRINT MK$;:RETURN
14390 '
14400 '
14410 '
14420 IF F(2)=1 GOTO 14320 ELSE F(2)=1
14430 FOR I=10 TO 13:PRINT FNB$((I+1),60);:PRINT SPACE$(21):NEXT I:GOTO 14320
14440 PRINT FNB$( 1,67);:PRINT TIME$;:'Display instrument readings
14450 YP=1:XP=0:F$="######":V1=FU:GOSUB 16240:YP=1:XP=7:F$="###"
14460 YP=1:XP=39:V1=CC:GOSUB 16240:YP=4:XP=39:V1=ZS:GOSUB 16240:YP=4:XP=46:F$="######":V1=RC:GOSUB 16240
14470 YP=4:XP=55:F$="##,###":V1=AL:GOSUB 16240:YP=5:XP=0:F$="###":V1=MZ:GOSUB 16240
14480 FOR I=1 TO 7:PRINT FNB$( (I+1),12);:PRINT" "CHR$(31);:NEXT I:'Display thrust
14490 PRINT FNB$( (TR+1),12);:PRINT">"
14500 FOR I=1 TO 3:PRINT FNB$( (I+1),21);:PRINT" "CHR$(31);:NEXT I:'Display pitch
14510 PRINT FNB$( (FL+1),21);:PRINT">":F$="+###":YP=5:XP=20:V1=FA:GOSUB 16240
14520 IF F(2)=1 GOTO 14560:'Display flaps
14530 FOR I=11 TO 13:PRINT FNB$( (I+1),60);:PRINT" "CHR$(31);:NEXT I:PRINT FNB$( (BR+1),60);:PRINT">"
14540 FOR I=11 TO 13:PRINT FNB$( (I+1),68);:PRINT" "CHR$(31);:NEXT I:PRINT FNB$( (WH+1),68);:PRINT">":'Wheels
14550 FOR I=11 TO 13:PRINT FNB$( (I+1),76);:PRINT" "CHR$(31);:NEXT I:PRINT FNB$( (BK+1),76);:PRINT">":'Brakes
14560 IF F(9)=1 THEN RETURN:'Display runway alignment index
14570 PRINT FNB$( 23,(IO+1));:PRINT" ";:PRINT FNB$( 23,(IX+1));:PRINT "^";
14580 IO=IX:RETURN
15000 '
15010 ' Routine to execute a keyboard command
15020 '
15025 KK=K1(ASC(K$))
15030 ON KK GOSUB 15070,15090,15090,15130,15150,15150,15240,15280,15050
15040 RETURN
15050 IF F(7)=1 AND BR=11 THEN TR=4:'Thrust key (decrease)
15060 RETURN
15070 IF F(7)=1 THEN RETURN:'Thrust key (increase)
15080 F(1)=1:TR=1:RETURN
15090 IF F(7)=1 THEN RETURN:'Rudder keys
15100 IF ZS<=50 THEN RETURN
15110 IF KK=2 THEN CC=CC-1 ELSE CC=CC+1
15120 RETURN
15130 IF F(0)=1 THEN RETURN:'Brakes
15140 F(0)=1:BK=13:RETURN
15150 IF F(7)=1 THEN RETURN:'Pitch
15160 IF ZS<=50 THEN RETURN
15170 FD=-10:IF KK=5 THEN FD=10
15180 FA=FA+FD
15190 IF FA>60 THEN FA=60
15200 IF FA<-60 THEN FA=-60
15210 IF FA>0 THEN FL=1:RETURN
15220 IF FA=0 THEN FL=2:RETURN
15230 FL=3:RETURN
15240 IF F(7)=1 AND WH=11 THEN BR=11:RETURN:'Flaps
15250 IF F(3)=1 THEN RETURN
15260 IF F(3)=0 THEN F(3)=1:BR=13:RETURN
15270 RETURN
15280 IF F(7)=1 THEN WH=11:'Wheels
15290 RETURN
15300 FU=FU-40*TJ:FP=FU/3120:RETURN:'Update fuel
15310 RC=ZS*SIN(ABS(FA/57.3))*1.693*60:IF FA<0 THEN RC=-1*RC:'Update rate of climb
15320 RETURN
15330 AL=AL+TJ*RC/60:IF AL<=0 THEN AL=0:'Update ALT
15340 RETURN
15350 '
15360 '
15370 '
15380 T=TJ:V=V0+A*T:VB=(V+V0)/2:V0=V:S=VB*T:IF TD<(TX+18) GOTO 15400:'Equations of motion
15390 TX=TD:WB=RS*RND*(2):CC=CC+WB
15400 DA=(CC-75)/57.3:DY=S*COS(ABS(DA)):DX=S*SIN(ABS(DA)):IF DA<0 THEN DX=-1*DX
15410 YY=YY+DY:XX=XX+DX:ZS=V/1.69278:IF ZS>20 THEN ZS=ZS+WS
15420 IX=40+FIX(XX*7/20):IF IX>79 THEN IX=79
15430 IF IX<0 THEN IX=0
15440 ZP=FIX(YY-2500*(N-1))
15450 IF ZP>2500 THEN N=N+1:GOTO 15440
15460 RETURN
15470 '
15480 '
15490 '
15500 MP=FIX(10+(13*ZP)/2500):IF N>3 GOTO 15520:'Variables for runway graphics
15510 NY=MP:J=NY-10:NX=XM(J):FW=WM(J):S$=SPACE$(J):MK$=M$(N)+S$(J)+"_"+S$(J)+"_"+S$(J)+"_"+S$(J)+"_"+S$(J)+"_":RETURN
15520 NY=MP:J=NY-10:NX=XE(J):IF N>4 THEN RETURN:'In zone 4-Marker is runway edge
15530 MK$=STRING$(WE(J),"_"):RETURN
16000 '
16010 ' More of main routine (thought you'd never find it!)
16020 '
16030 AB=1:GOTO 16060
16040 AB=2:IF YY<10500 GOTO 16060
16050 FOR I=10 TO 21:PRINT FNB$( (I+1),1);:PRINT SPACE$(80);:NEXT I:GOTO 16060
16060 FOR I=10 TO 21:PRINT FNB$( (I+1),1);:PRINT SPACE$(80);:NEXT I:'Abort
16070 PRINT FNB$(11,30);:PRINT"*** TAKEOFF FAILED ***":PRINT:PRINT
16080 ON AB GOSUB 16100,16140
16090 PRINT FNB$(20,35);:PRINT"END OF PROGRAM";:END
16100 PRINT"YOU PULLED BACK ON THE STICK AT TOO SLOW A SPEED, OR YOU"
16110 PRINT"PULLED BACK THE STICK TOO FAR WHEN AT PROPER SPEED."
16120 PRINT"AS A RESULT, THE TAIL OF THE FUSELAGE SCRAPED THE RUNWAY"
16130 PRINT"AND THE AIRCRAFT SPUN OUT OF CONTROL.":RETURN
16140 IF YY>10500 GOTO 16180
16150 PRINT"YOU FAILED TO STAY WITHIN THE RUNWAY BOUNDARIES."
16160 PRINT"AS A RESULT, YOU VEERED OFF THE RUNWAY AND COLLIDED WITH"
16170 PRINT" THE RUNWAY LIGHTS.":RETURN
16180 PRINT" YOU RAN OUT OF RUNWAY. AS A RESULT, YOU ROLLED INTO THE"
16190 PRINT" MARSHLANDS LOCATED";:PRINT FIX(YY)-10500;"FEET PAST THE END OF THE RUNWAY."
16200 IF F(3)=1 THEN RETURN
16210 PRINT:PRINT:PRINT" YOU FORGOT TO LOWER THE FLAPS."
16220 PRINT" AS A RESULT, THE AIRCRAFT COULD NOT DEVELOP SUFFICIENT LIFT.":RETURN
16230 FOR I=1 TO TQ:NEXT I:RETURN:'Time delay pad
16240 PRINT FNB$( (YP+1),(XP+2));:PRINT USING F$;V1;:RETURN:'Plots variable 
16250 IF F(7)=1 GOTO 16270 ELSE F(7)=1:'Departure routine
16260 GOSUB 13620:F(2)=0
16270 IF WH<>11 GOTO 16300 ELSE ZS=ZS+5
16280 IF BR<>11 GOTO 16300 ELSE ZS=ZS+5
16290 IF TR=4 AND AL>1800 GOTO 1000 ELSE GOTO 16360
16300 IF AL<1200 GOTO 16360
16310 PRINT FNB$( 13,1);:PRINT"******** FLIGHT ABORTED **********":PRINT:PRINT
16320 PRINT"YOU FAILED TO PERFORM CRUCIAL TRIM FUNCTIONS FOLLOWING LIFTOFF."
16330 PRINT" THE PROPER TRIM SEQUENCE, WHICH MUST BE COMPLETED BELOW 1200 FEET, IS :"
16340 PRINT"   1-RAISE LANDING GEAR":PRINT"   3-REDUCE THRUST":PRINT"   2-RETRACT FLAPS"
16350 PRINT:PRINT"--------------- END OF PROGRAM --------------":END
16360 GOSUB 15300:GOSUB 15310:GOSUB 15330:GOTO 13410
17000 DEF FNB$(X,Y)=CHR$(27)+"="+CHR$(32+X)+CHR$(32+Y):'CURSOR ADD
17010 CL$=CHR$(26):'CLEAR SCREEN
17090 RETURN
17100 T1=T1+SEC:IF T1<60 THEN 17140
17110 T1=0:T2=T2+1:IF T2<60 THEN 17140
17120 T2=0:T3=T3+1:IF T3<25 THEN 17140
17130 T3 = 0
17140 T1$="0"+MID$(STR$(T1),2):T1$=RIGHT$(T1$,2):T2$="0"+MID$(STR$(T2),2)
17150 T2$=RIGHT$(T2$,2):T3$="0"+MID$(STR$(T3),2):T3$=RIGHT$(T3$,2):TIME$=T3$+":"+T2$+":"+T1$:RETURN
17160 '
17170 ' Routine to plot variables on reverse background
17180 '
17190 IF VV1(V1)=VW1(V1) THEN GOTO 17240
17200 '
17210 PRINT FNB$((YP1(V1)+1),(XP1(V1)+1));:PRINT USING F1$(V1);VV1(V1);
17220 '
17230 VW1(V1)=VV1(V1)
17240 RETURN
